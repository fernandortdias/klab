package org.integratedmodelling.kim.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.IUnorderedGroupHelper.UnorderedGroupState;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.integratedmodelling.kim.services.KimGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalKimParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_UPPERCASE_ID", "RULE_LOWERCASE_ID", "RULE_STRING", "RULE_SEPARATOR", "RULE_EXPR", "RULE_CAMELCASE_ID", "RULE_LOWERCASE_DASHID", "RULE_ID", "RULE_INT", "RULE_UPPERCASE_PATH", "RULE_ANNOTATION_ID", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "';'", "'void'", "'private'", "'define'", "'as'", "'each'", "','", "'true'", "'false'", "'observing'", "'using'", "'classified'", "'discretized'", "'into'", "'according'", "'to'", "'lookup'", "'('", "'?'", "'*'", "')'", "'with'", "'metadata'", "'documentation'", "'otherwise'", "'if'", "'unless'", "'inclusive'", "'exclusive'", "'in'", "'unknown'", "'{{'", "'}}'", "'|'", "'#'", "'aggregated'", "'over'", "'on'", "'definition'", "'resolution'", "'instantiation'", "'termination'", "'initialization'", "'context'", "'related'", "'change'", "'set'", "'integrate'", "'do'", "'move'", "'away'", "'model'", "'learn'", "'number'", "'text'", "'boolean'", "'namespace'", "'scenario'", "'worldview'", "'imports'", "'covering'", "'domain'", "'root'", "'disjoint'", "'version'", "'resolve'", "'from'", "'outside'", "'parameters'", "'urn:klab:'", "':'", "'&'", "'='", "'/'", "'.'", "'observe'", "'extends'", "'any'", "'by'", "'down'", "'per'", "'optional'", "'required'", "'named'", "'of'", "'for'", "'caused'", "'adjacent'", "'contained'", "'containing'", "'causing'", "'during'", "'within'", "'${'", "'#{'", "'inherent'", "'compresent'", "'container'", "'purpose'", "'causant'", "'concomitant'", "'}'", "'not'", "'no'", "'identified'", "'presence'", "'count'", "'distance'", "'probability'", "'assessment'", "'uncertainty'", "'magnitude'", "'type'", "'observability'", "'proportion'", "'ratio'", "'value'", "'occurrence'", "'or'", "'and'", "'follows'", "'deliberative'", "'interactive'", "'reactive'", "'agent'", "'relationship'", "'abstract'", "'deniable'", "'subjective'", "'is'", "'core'", "'equals'", "'nothing'", "'exposes'", "'exposing'", "'defines'", "'authority'", "'requires'", "'describes'", "'increases'", "'decreases'", "'marks'", "'classifies'", "'discretizes'", "'inherits'", "'has'", "'role'", "'targeting'", "'confers'", "'part'", "'constituent'", "'consists'", "'creates'", "'applies'", "'links'", "'inverse'", "'affects'", "'children'", "'between'", "'identity'", "'attribute'", "'realm'", "'extent'", "'uses'", "'contains'", "'implies'", "'only'", "'exactly'", "'at'", "'least'", "'most'", "'inheriting'", "'{'", "'transition'", "'?='", "'quality'", "'class'", "'quantity'", "'configuration'", "'bond'", "'ordering'", "'amount'", "'length'", "'mass'", "'volume'", "'weight'", "'money'", "'duration'", "'area'", "'acceleration'", "'energy'", "'entropy'", "'priority'", "'electric-potential'", "'charge'", "'resistance'", "'resistivity'", "'pressure'", "'angle'", "'velocity'", "'temperature'", "'viscosity'", "'thing'", "'process'", "'event'", "'functional'", "'structural'", "'>'", "'<'", "'!='", "'<='", "'>='", "'@'", "'+'", "'-'", "'e'", "'E'", "'integer'", "'float'", "'date'", "'^'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_ID=11;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_INT=12;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__166=166;
    public static final int T__165=165;
    public static final int T__168=168;
    public static final int T__167=167;
    public static final int T__162=162;
    public static final int T__161=161;
    public static final int T__164=164;
    public static final int T__163=163;
    public static final int T__160=160;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__159=159;
    public static final int T__30=30;
    public static final int T__158=158;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__155=155;
    public static final int T__154=154;
    public static final int T__157=157;
    public static final int T__156=156;
    public static final int T__151=151;
    public static final int T__150=150;
    public static final int T__153=153;
    public static final int T__152=152;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int RULE_EXPR=8;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__100=100;
    public static final int T__221=221;
    public static final int T__220=220;
    public static final int T__102=102;
    public static final int T__223=223;
    public static final int T__101=101;
    public static final int T__222=222;
    public static final int T__19=19;
    public static final int T__218=218;
    public static final int T__217=217;
    public static final int T__219=219;
    public static final int T__214=214;
    public static final int T__213=213;
    public static final int T__216=216;
    public static final int T__215=215;
    public static final int T__210=210;
    public static final int T__212=212;
    public static final int T__211=211;
    public static final int RULE_CAMELCASE_ID=9;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__207=207;
    public static final int T__23=23;
    public static final int T__206=206;
    public static final int T__24=24;
    public static final int T__209=209;
    public static final int T__25=25;
    public static final int T__208=208;
    public static final int T__203=203;
    public static final int T__202=202;
    public static final int T__20=20;
    public static final int T__205=205;
    public static final int T__21=21;
    public static final int T__204=204;
    public static final int T__122=122;
    public static final int T__121=121;
    public static final int T__124=124;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_SEPARATOR=7;
    public static final int RULE_SL_COMMENT=16;
    public static final int T__119=119;
    public static final int T__118=118;
    public static final int T__239=239;
    public static final int T__115=115;
    public static final int T__236=236;
    public static final int EOF=-1;
    public static final int T__114=114;
    public static final int T__235=235;
    public static final int T__117=117;
    public static final int T__238=238;
    public static final int T__116=116;
    public static final int T__237=237;
    public static final int T__111=111;
    public static final int T__232=232;
    public static final int T__110=110;
    public static final int T__231=231;
    public static final int T__113=113;
    public static final int T__234=234;
    public static final int T__112=112;
    public static final int T__233=233;
    public static final int T__230=230;
    public static final int RULE_ANNOTATION_ID=14;
    public static final int T__108=108;
    public static final int T__229=229;
    public static final int T__107=107;
    public static final int T__228=228;
    public static final int T__109=109;
    public static final int T__104=104;
    public static final int T__225=225;
    public static final int T__103=103;
    public static final int T__224=224;
    public static final int T__106=106;
    public static final int T__227=227;
    public static final int T__105=105;
    public static final int T__226=226;
    public static final int RULE_UPPERCASE_ID=4;
    public static final int RULE_ML_COMMENT=15;
    public static final int T__201=201;
    public static final int T__200=200;
    public static final int RULE_UPPERCASE_PATH=13;
    public static final int T__91=91;
    public static final int T__188=188;
    public static final int T__92=92;
    public static final int T__187=187;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__189=189;
    public static final int T__184=184;
    public static final int T__183=183;
    public static final int T__186=186;
    public static final int T__90=90;
    public static final int T__185=185;
    public static final int T__180=180;
    public static final int T__182=182;
    public static final int T__181=181;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__177=177;
    public static final int T__176=176;
    public static final int T__179=179;
    public static final int T__178=178;
    public static final int T__173=173;
    public static final int T__172=172;
    public static final int RULE_LOWERCASE_DASHID=10;
    public static final int T__175=175;
    public static final int T__174=174;
    public static final int T__171=171;
    public static final int T__170=170;
    public static final int T__169=169;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=6;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__199=199;
    public static final int T__81=81;
    public static final int T__198=198;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int T__195=195;
    public static final int T__194=194;
    public static final int RULE_WS=17;
    public static final int T__197=197;
    public static final int T__196=196;
    public static final int T__191=191;
    public static final int T__190=190;
    public static final int T__193=193;
    public static final int T__192=192;
    public static final int RULE_ANY_OTHER=18;
    public static final int RULE_LOWERCASE_ID=5;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalKimParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalKimParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalKimParser.tokenNames; }
    public String getGrammarFileName() { return "InternalKim.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private KimGrammarAccess grammarAccess;

        public InternalKimParser(TokenStream input, KimGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected KimGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalKim.g:73:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalKim.g:73:46: (iv_ruleModel= ruleModel EOF )
            // InternalKim.g:74:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalKim.g:80:1: ruleModel returns [EObject current=null] : ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_observable_0_0 = null;

        EObject lv_namespace_1_0 = null;

        EObject lv_statements_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:86:2: ( ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) ) )
            // InternalKim.g:87:2: ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) )
            {
            // InternalKim.g:87:2: ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( ((LA3_0>=RULE_UPPERCASE_ID && LA3_0<=RULE_STRING)||(LA3_0>=RULE_EXPR && LA3_0<=RULE_INT)||(LA3_0>=25 && LA3_0<=27)||LA3_0==36||(LA3_0>=49 && LA3_0<=50)||LA3_0==96||(LA3_0>=112 && LA3_0<=113)||(LA3_0>=121 && LA3_0<=122)||(LA3_0>=124 && LA3_0<=136)||LA3_0==191||(LA3_0>=232 && LA3_0<=233)) ) {
                alt3=1;
            }
            else if ( (LA3_0==EOF||LA3_0==RULE_ANNOTATION_ID||(LA3_0>=20 && LA3_0<=22)||(LA3_0>=70 && LA3_0<=77)||LA3_0==80||LA3_0==94||(LA3_0>=140 && LA3_0<=147)||LA3_0==165||(LA3_0>=178 && LA3_0<=181)||(LA3_0>=194 && LA3_0<=225)) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalKim.g:88:3: ( (lv_observable_0_0= ruleObservableSemantics ) )
                    {
                    // InternalKim.g:88:3: ( (lv_observable_0_0= ruleObservableSemantics ) )
                    // InternalKim.g:89:4: (lv_observable_0_0= ruleObservableSemantics )
                    {
                    // InternalKim.g:89:4: (lv_observable_0_0= ruleObservableSemantics )
                    // InternalKim.g:90:5: lv_observable_0_0= ruleObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getModelAccess().getObservableObservableSemanticsParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_observable_0_0=ruleObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getModelRule());
                      					}
                      					set(
                      						current,
                      						"observable",
                      						lv_observable_0_0,
                      						"org.integratedmodelling.kim.Kim.ObservableSemantics");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:108:3: ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* )
                    {
                    // InternalKim.g:108:3: ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* )
                    // InternalKim.g:109:4: ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )*
                    {
                    // InternalKim.g:109:4: ( (lv_namespace_1_0= ruleNamespace ) )?
                    int alt1=2;
                    alt1 = dfa1.predict(input);
                    switch (alt1) {
                        case 1 :
                            // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
                            {
                            // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
                            // InternalKim.g:111:6: lv_namespace_1_0= ruleNamespace
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getModelAccess().getNamespaceNamespaceParserRuleCall_1_0_0());
                              					
                            }
                            pushFollow(FOLLOW_3);
                            lv_namespace_1_0=ruleNamespace();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getModelRule());
                              						}
                              						set(
                              							current,
                              							"namespace",
                              							lv_namespace_1_0,
                              							"org.integratedmodelling.kim.Kim.Namespace");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:128:4: ( (lv_statements_2_0= ruleStatement ) )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( (LA2_0==RULE_ANNOTATION_ID||(LA2_0>=20 && LA2_0<=22)||(LA2_0>=70 && LA2_0<=74)||LA2_0==80||LA2_0==94||(LA2_0>=140 && LA2_0<=147)||LA2_0==165||(LA2_0>=178 && LA2_0<=181)||(LA2_0>=194 && LA2_0<=225)) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // InternalKim.g:129:5: (lv_statements_2_0= ruleStatement )
                    	    {
                    	    // InternalKim.g:129:5: (lv_statements_2_0= ruleStatement )
                    	    // InternalKim.g:130:6: lv_statements_2_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_1_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_3);
                    	    lv_statements_2_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getModelRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_2_0,
                    	      							"org.integratedmodelling.kim.Kim.Statement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleStatement"
    // InternalKim.g:152:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // InternalKim.g:152:50: (iv_ruleStatement= ruleStatement EOF )
            // InternalKim.g:153:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalKim.g:159:1: ruleStatement returns [EObject current=null] : ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_conceptStatement_0_0 = null;

        EObject lv_modelStatement_2_0 = null;

        EObject lv_upperOntologyStatement_4_0 = null;

        EObject lv_defineStatement_6_0 = null;

        EObject lv_observeStatement_8_0 = null;



        	enterRule();

        try {
            // InternalKim.g:165:2: ( ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) ) )
            // InternalKim.g:166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) )
            {
            // InternalKim.g:166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) )
            int alt4=5;
            alt4 = dfa4.predict(input);
            switch (alt4) {
                case 1 :
                    // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
                    {
                    // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
                    // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';'
                    {
                    // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) )
                    // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
                    {
                    // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
                    // InternalKim.g:170:6: lv_conceptStatement_0_0= ruleConceptStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getConceptStatementConceptStatementParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_conceptStatement_0_0=ruleConceptStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"conceptStatement",
                      							lv_conceptStatement_0_0,
                      							"org.integratedmodelling.kim.Kim.ConceptStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getStatementAccess().getSemicolonKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
                    {
                    // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
                    // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';'
                    {
                    // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) )
                    // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
                    {
                    // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
                    // InternalKim.g:196:6: lv_modelStatement_2_0= ruleModelStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getModelStatementModelStatementParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_modelStatement_2_0=ruleModelStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"modelStatement",
                      							lv_modelStatement_2_0,
                      							"org.integratedmodelling.kim.Kim.ModelStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getStatementAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
                    {
                    // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
                    // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';'
                    {
                    // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) )
                    // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
                    {
                    // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
                    // InternalKim.g:222:6: lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getUpperOntologyStatementUpperOntologyDefinitionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_upperOntologyStatement_4_0=ruleUpperOntologyDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"upperOntologyStatement",
                      							lv_upperOntologyStatement_4_0,
                      							"org.integratedmodelling.kim.Kim.UpperOntologyDefinition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getStatementAccess().getSemicolonKeyword_2_1());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
                    {
                    // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
                    // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';'
                    {
                    // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) )
                    // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
                    {
                    // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
                    // InternalKim.g:248:6: lv_defineStatement_6_0= ruleDefineStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getDefineStatementDefineStatementParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_defineStatement_6_0=ruleDefineStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"defineStatement",
                      							lv_defineStatement_6_0,
                      							"org.integratedmodelling.kim.Kim.DefineStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getStatementAccess().getSemicolonKeyword_3_1());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:271:3: ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' )
                    {
                    // InternalKim.g:271:3: ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' )
                    // InternalKim.g:272:4: ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';'
                    {
                    // InternalKim.g:272:4: ( (lv_observeStatement_8_0= ruleObserveStatement ) )
                    // InternalKim.g:273:5: (lv_observeStatement_8_0= ruleObserveStatement )
                    {
                    // InternalKim.g:273:5: (lv_observeStatement_8_0= ruleObserveStatement )
                    // InternalKim.g:274:6: lv_observeStatement_8_0= ruleObserveStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getObserveStatementObserveStatementParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_observeStatement_8_0=ruleObserveStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"observeStatement",
                      							lv_observeStatement_8_0,
                      							"org.integratedmodelling.kim.Kim.ObserveStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getStatementAccess().getSemicolonKeyword_4_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleModelStatement"
    // InternalKim.g:300:1: entryRuleModelStatement returns [EObject current=null] : iv_ruleModelStatement= ruleModelStatement EOF ;
    public final EObject entryRuleModelStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelStatement = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getModelStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:304:2: (iv_ruleModelStatement= ruleModelStatement EOF )
            // InternalKim.g:305:2: iv_ruleModelStatement= ruleModelStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModelStatement=ruleModelStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleModelStatement"


    // $ANTLR start "ruleModelStatement"
    // InternalKim.g:314:1: ruleModelStatement returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) ) )* ) ) )? ( (lv_model_5_0= ruleMODEL_TYPE ) ) ( (lv_body_6_0= ruleModelBodyStatement ) ) ) ;
    public final EObject ruleModelStatement() throws RecognitionException {
        EObject current = null;

        Token lv_inactive_3_0=null;
        Token lv_private_4_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_model_5_0 = null;

        EObject lv_body_6_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getModelStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:323:2: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) ) )* ) ) )? ( (lv_model_5_0= ruleMODEL_TYPE ) ) ( (lv_body_6_0= ruleModelBodyStatement ) ) ) )
            // InternalKim.g:324:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) ) )* ) ) )? ( (lv_model_5_0= ruleMODEL_TYPE ) ) ( (lv_body_6_0= ruleModelBodyStatement ) ) )
            {
            // InternalKim.g:324:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) ) )* ) ) )? ( (lv_model_5_0= ruleMODEL_TYPE ) ) ( (lv_body_6_0= ruleModelBodyStatement ) ) )
            // InternalKim.g:325:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) ) )* ) ) )? ( (lv_model_5_0= ruleMODEL_TYPE ) ) ( (lv_body_6_0= ruleModelBodyStatement ) )
            {
            // InternalKim.g:325:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==RULE_ANNOTATION_ID) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalKim.g:326:4: ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )*
                    {
                    // InternalKim.g:326:4: ( (lv_annotations_0_0= ruleAnnotation ) )
                    // InternalKim.g:327:5: (lv_annotations_0_0= ruleAnnotation )
                    {
                    // InternalKim.g:327:5: (lv_annotations_0_0= ruleAnnotation )
                    // InternalKim.g:328:6: lv_annotations_0_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_annotations_0_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelStatementRule());
                      						}
                      						add(
                      							current,
                      							"annotations",
                      							lv_annotations_0_0,
                      							"org.integratedmodelling.kim.Kim.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:345:4: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==RULE_ANNOTATION_ID) ) {
                            alt5=1;
                        }


                        switch (alt5) {
                    	case 1 :
                    	    // InternalKim.g:346:5: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalKim.g:346:5: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalKim.g:347:6: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getModelStatementAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_5);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getModelStatementRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_1_0,
                    	      							"org.integratedmodelling.kim.Kim.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:365:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) ) )* ) ) )?
            int alt8=2;
            switch ( input.LA(1) ) {
                case 20:
                case 21:
                    {
                    alt8=1;
                    }
                    break;
                case 70:
                    {
                    int LA8_2 = input.LA(2);

                    if ( (synpred12_InternalKim()) ) {
                        alt8=1;
                    }
                    }
                    break;
                case 71:
                    {
                    int LA8_3 = input.LA(2);

                    if ( (synpred12_InternalKim()) ) {
                        alt8=1;
                    }
                    }
                    break;
                case 72:
                    {
                    int LA8_4 = input.LA(2);

                    if ( (synpred12_InternalKim()) ) {
                        alt8=1;
                    }
                    }
                    break;
                case 73:
                    {
                    int LA8_5 = input.LA(2);

                    if ( (synpred12_InternalKim()) ) {
                        alt8=1;
                    }
                    }
                    break;
                case 74:
                    {
                    int LA8_6 = input.LA(2);

                    if ( (synpred12_InternalKim()) ) {
                        alt8=1;
                    }
                    }
                    break;
            }

            switch (alt8) {
                case 1 :
                    // InternalKim.g:366:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) ) )* ) )
                    {
                    // InternalKim.g:366:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) ) )* ) )
                    // InternalKim.g:367:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) ) )* )
                    {
                    getUnorderedGroupHelper().enter(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());
                    // InternalKim.g:370:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) ) )* )
                    // InternalKim.g:371:6: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) ) )*
                    {
                    // InternalKim.g:371:6: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) ) )*
                    loop7:
                    do {
                        int alt7=3;
                        int LA7_0 = input.LA(1);

                        if ( LA7_0 == 20 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
                            alt7=1;
                        }
                        else if ( LA7_0 == 21 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                            alt7=2;
                        }


                        switch (alt7) {
                    	case 1 :
                    	    // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
                    	    {
                    	    // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
                    	    // InternalKim.g:373:5: {...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleModelStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalKim.g:373:111: ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
                    	    // InternalKim.g:374:6: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
                    	    // InternalKim.g:377:9: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
                    	    // InternalKim.g:377:10: {...}? => ( (lv_inactive_3_0= 'void' ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleModelStatement", "true");
                    	    }
                    	    // InternalKim.g:377:19: ( (lv_inactive_3_0= 'void' ) )
                    	    // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
                    	    {
                    	    // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
                    	    // InternalKim.g:378:10: lv_inactive_3_0= 'void'
                    	    {
                    	    lv_inactive_3_0=(Token)match(input,20,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(lv_inactive_3_0, grammarAccess.getModelStatementAccess().getInactiveVoidKeyword_1_0_0());
                    	      									
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      										if (current==null) {
                    	      											current = createModelElement(grammarAccess.getModelStatementRule());
                    	      										}
                    	      										setWithLastConsumed(current, "inactive", true, "void");
                    	      									
                    	    }

                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKim.g:395:4: ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) )
                    	    {
                    	    // InternalKim.g:395:4: ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) )
                    	    // InternalKim.g:396:5: {...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleModelStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalKim.g:396:111: ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) )
                    	    // InternalKim.g:397:6: ({...}? => ( (lv_private_4_0= 'private' ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
                    	    // InternalKim.g:400:9: ({...}? => ( (lv_private_4_0= 'private' ) ) )
                    	    // InternalKim.g:400:10: {...}? => ( (lv_private_4_0= 'private' ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleModelStatement", "true");
                    	    }
                    	    // InternalKim.g:400:19: ( (lv_private_4_0= 'private' ) )
                    	    // InternalKim.g:400:20: (lv_private_4_0= 'private' )
                    	    {
                    	    // InternalKim.g:400:20: (lv_private_4_0= 'private' )
                    	    // InternalKim.g:401:10: lv_private_4_0= 'private'
                    	    {
                    	    lv_private_4_0=(Token)match(input,21,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(lv_private_4_0, grammarAccess.getModelStatementAccess().getPrivatePrivateKeyword_1_1_0());
                    	      									
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      										if (current==null) {
                    	      											current = createModelElement(grammarAccess.getModelStatementRule());
                    	      										}
                    	      										setWithLastConsumed(current, "private", true, "private");
                    	      									
                    	    }

                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop7;
                        }
                    } while (true);


                    }


                    }

                    getUnorderedGroupHelper().leave(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

                    }
                    break;

            }

            // InternalKim.g:425:3: ( (lv_model_5_0= ruleMODEL_TYPE ) )
            // InternalKim.g:426:4: (lv_model_5_0= ruleMODEL_TYPE )
            {
            // InternalKim.g:426:4: (lv_model_5_0= ruleMODEL_TYPE )
            // InternalKim.g:427:5: lv_model_5_0= ruleMODEL_TYPE
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getModelStatementAccess().getModelMODEL_TYPEParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_7);
            lv_model_5_0=ruleMODEL_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getModelStatementRule());
              					}
              					set(
              						current,
              						"model",
              						lv_model_5_0,
              						"org.integratedmodelling.kim.Kim.MODEL_TYPE");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:444:3: ( (lv_body_6_0= ruleModelBodyStatement ) )
            // InternalKim.g:445:4: (lv_body_6_0= ruleModelBodyStatement )
            {
            // InternalKim.g:445:4: (lv_body_6_0= ruleModelBodyStatement )
            // InternalKim.g:446:5: lv_body_6_0= ruleModelBodyStatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getModelStatementAccess().getBodyModelBodyStatementParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_6_0=ruleModelBodyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getModelStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_6_0,
              						"org.integratedmodelling.kim.Kim.ModelBodyStatement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleModelStatement"


    // $ANTLR start "entryRuleDefineStatement"
    // InternalKim.g:470:1: entryRuleDefineStatement returns [EObject current=null] : iv_ruleDefineStatement= ruleDefineStatement EOF ;
    public final EObject entryRuleDefineStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefineStatement = null;


        try {
            // InternalKim.g:470:56: (iv_ruleDefineStatement= ruleDefineStatement EOF )
            // InternalKim.g:471:2: iv_ruleDefineStatement= ruleDefineStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefineStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefineStatement=ruleDefineStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefineStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDefineStatement"


    // $ANTLR start "ruleDefineStatement"
    // InternalKim.g:477:1: ruleDefineStatement returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) ) ) ;
    public final EObject ruleDefineStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_1_0 = null;

        EObject lv_defineBody_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:483:2: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) ) ) )
            // InternalKim.g:484:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) ) )
            {
            // InternalKim.g:484:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) ) )
            // InternalKim.g:485:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) )
            {
            // InternalKim.g:485:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==RULE_ANNOTATION_ID) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // InternalKim.g:486:4: ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )*
                    {
                    // InternalKim.g:486:4: ( (lv_annotations_0_0= ruleAnnotation ) )
                    // InternalKim.g:487:5: (lv_annotations_0_0= ruleAnnotation )
                    {
                    // InternalKim.g:487:5: (lv_annotations_0_0= ruleAnnotation )
                    // InternalKim.g:488:6: lv_annotations_0_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDefineStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_8);
                    lv_annotations_0_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDefineStatementRule());
                      						}
                      						add(
                      							current,
                      							"annotations",
                      							lv_annotations_0_0,
                      							"org.integratedmodelling.kim.Kim.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:505:4: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop9:
                    do {
                        int alt9=2;
                        int LA9_0 = input.LA(1);

                        if ( (LA9_0==RULE_ANNOTATION_ID) ) {
                            alt9=1;
                        }


                        switch (alt9) {
                    	case 1 :
                    	    // InternalKim.g:506:5: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalKim.g:506:5: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalKim.g:507:6: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getDefineStatementAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_8);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getDefineStatementRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_1_0,
                    	      							"org.integratedmodelling.kim.Kim.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop9;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_2=(Token)match(input,22,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDefineStatementAccess().getDefineKeyword_1());
              		
            }
            // InternalKim.g:529:3: ( (lv_defineBody_3_0= ruleDefinitionBody ) )
            // InternalKim.g:530:4: (lv_defineBody_3_0= ruleDefinitionBody )
            {
            // InternalKim.g:530:4: (lv_defineBody_3_0= ruleDefinitionBody )
            // InternalKim.g:531:5: lv_defineBody_3_0= ruleDefinitionBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefineStatementAccess().getDefineBodyDefinitionBodyParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_defineBody_3_0=ruleDefinitionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefineStatementRule());
              					}
              					set(
              						current,
              						"defineBody",
              						lv_defineBody_3_0,
              						"org.integratedmodelling.kim.Kim.DefinitionBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDefineStatement"


    // $ANTLR start "entryRuleDefinitionBody"
    // InternalKim.g:552:1: entryRuleDefinitionBody returns [EObject current=null] : iv_ruleDefinitionBody= ruleDefinitionBody EOF ;
    public final EObject entryRuleDefinitionBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefinitionBody = null;


        try {
            // InternalKim.g:552:55: (iv_ruleDefinitionBody= ruleDefinitionBody EOF )
            // InternalKim.g:553:2: iv_ruleDefinitionBody= ruleDefinitionBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefinitionBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefinitionBody=ruleDefinitionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefinitionBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDefinitionBody"


    // $ANTLR start "ruleDefinitionBody"
    // InternalKim.g:559:1: ruleDefinitionBody returns [EObject current=null] : ( ( (lv_name_0_0= RULE_UPPERCASE_ID ) ) otherlv_1= 'as' ( (lv_value_2_0= ruleValue ) ) ) ;
    public final EObject ruleDefinitionBody() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:565:2: ( ( ( (lv_name_0_0= RULE_UPPERCASE_ID ) ) otherlv_1= 'as' ( (lv_value_2_0= ruleValue ) ) ) )
            // InternalKim.g:566:2: ( ( (lv_name_0_0= RULE_UPPERCASE_ID ) ) otherlv_1= 'as' ( (lv_value_2_0= ruleValue ) ) )
            {
            // InternalKim.g:566:2: ( ( (lv_name_0_0= RULE_UPPERCASE_ID ) ) otherlv_1= 'as' ( (lv_value_2_0= ruleValue ) ) )
            // InternalKim.g:567:3: ( (lv_name_0_0= RULE_UPPERCASE_ID ) ) otherlv_1= 'as' ( (lv_value_2_0= ruleValue ) )
            {
            // InternalKim.g:567:3: ( (lv_name_0_0= RULE_UPPERCASE_ID ) )
            // InternalKim.g:568:4: (lv_name_0_0= RULE_UPPERCASE_ID )
            {
            // InternalKim.g:568:4: (lv_name_0_0= RULE_UPPERCASE_ID )
            // InternalKim.g:569:5: lv_name_0_0= RULE_UPPERCASE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getDefinitionBodyAccess().getNameUPPERCASE_IDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDefinitionBodyRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,23,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDefinitionBodyAccess().getAsKeyword_1());
              		
            }
            // InternalKim.g:589:3: ( (lv_value_2_0= ruleValue ) )
            // InternalKim.g:590:4: (lv_value_2_0= ruleValue )
            {
            // InternalKim.g:590:4: (lv_value_2_0= ruleValue )
            // InternalKim.g:591:5: lv_value_2_0= ruleValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionBodyAccess().getValueValueParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionBodyRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"org.integratedmodelling.kim.Kim.Value");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDefinitionBody"


    // $ANTLR start "entryRuleModelBodyStatement"
    // InternalKim.g:612:1: entryRuleModelBodyStatement returns [EObject current=null] : iv_ruleModelBodyStatement= ruleModelBodyStatement EOF ;
    public final EObject entryRuleModelBodyStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelBodyStatement = null;


        try {
            // InternalKim.g:612:59: (iv_ruleModelBodyStatement= ruleModelBodyStatement EOF )
            // InternalKim.g:613:2: iv_ruleModelBodyStatement= ruleModelBodyStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelBodyStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModelBodyStatement=ruleModelBodyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelBodyStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModelBodyStatement"


    // $ANTLR start "ruleModelBodyStatement"
    // InternalKim.g:619:1: ruleModelBodyStatement returns [EObject current=null] : ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )? ( ( (lv_name_9_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )* ) ) ( (lv_docstring_13_0= RULE_STRING ) )? (otherlv_14= 'observing' ( (lv_dependencies_15_0= ruleDependency ) ) (otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) ) )* )? (otherlv_18= 'using' ( (lv_contextualizers_19_0= ruleValueExecution ) ) (otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) ) )* )? ( (otherlv_22= 'classified' | ( (lv_discretization_23_0= 'discretized' ) ) ) ( (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) ) | (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) ) ) )? (otherlv_29= 'lookup' (otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')' )? otherlv_35= 'into' ( ( (lv_lookupTable_36_0= ruleTable ) ) | ( (lv_lookupTableId_37_0= RULE_LOWERCASE_ID ) ) ) )? ( (lv_actions_38_0= ruleActionSpecification ) )* (otherlv_39= 'with' otherlv_40= 'metadata' ( (lv_metadata_41_0= ruleMetadata ) ) )? (otherlv_42= 'with' otherlv_43= 'documentation' ( (lv_documentation_44_0= ruleDocumentation ) ) )? ) ;
    public final EObject ruleModelBodyStatement() throws RecognitionException {
        EObject current = null;

        Token lv_instantiator_0_0=null;
        Token otherlv_2=null;
        Token lv_boolean_6_1=null;
        Token lv_boolean_6_2=null;
        Token otherlv_8=null;
        Token lv_name_9_0=null;
        Token otherlv_11=null;
        Token lv_docstring_13_0=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token lv_discretization_23_0=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token lv_lookupTableArgs_31_1=null;
        Token lv_lookupTableArgs_31_2=null;
        Token lv_lookupTableArgs_31_3=null;
        Token otherlv_32=null;
        Token lv_lookupTableArgs_33_1=null;
        Token lv_lookupTableArgs_33_2=null;
        Token lv_lookupTableArgs_33_3=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token lv_lookupTableId_37_0=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        EObject lv_urns_1_0 = null;

        EObject lv_urns_3_0 = null;

        EObject lv_function_4_0 = null;

        EObject lv_number_5_0 = null;

        EObject lv_concept_7_0 = null;

        EObject lv_observables_10_0 = null;

        EObject lv_observables_12_0 = null;

        EObject lv_dependencies_15_0 = null;

        EObject lv_dependencies_17_0 = null;

        EObject lv_contextualizers_19_0 = null;

        EObject lv_contextualizers_21_0 = null;

        EObject lv_classification_25_0 = null;

        AntlrDatatypeRuleToken lv_classificationProperty_28_0 = null;

        EObject lv_lookupTable_36_0 = null;

        EObject lv_actions_38_0 = null;

        EObject lv_metadata_41_0 = null;

        EObject lv_documentation_44_0 = null;



        	enterRule();

        try {
            // InternalKim.g:625:2: ( ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )? ( ( (lv_name_9_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )* ) ) ( (lv_docstring_13_0= RULE_STRING ) )? (otherlv_14= 'observing' ( (lv_dependencies_15_0= ruleDependency ) ) (otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) ) )* )? (otherlv_18= 'using' ( (lv_contextualizers_19_0= ruleValueExecution ) ) (otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) ) )* )? ( (otherlv_22= 'classified' | ( (lv_discretization_23_0= 'discretized' ) ) ) ( (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) ) | (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) ) ) )? (otherlv_29= 'lookup' (otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')' )? otherlv_35= 'into' ( ( (lv_lookupTable_36_0= ruleTable ) ) | ( (lv_lookupTableId_37_0= RULE_LOWERCASE_ID ) ) ) )? ( (lv_actions_38_0= ruleActionSpecification ) )* (otherlv_39= 'with' otherlv_40= 'metadata' ( (lv_metadata_41_0= ruleMetadata ) ) )? (otherlv_42= 'with' otherlv_43= 'documentation' ( (lv_documentation_44_0= ruleDocumentation ) ) )? ) )
            // InternalKim.g:626:2: ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )? ( ( (lv_name_9_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )* ) ) ( (lv_docstring_13_0= RULE_STRING ) )? (otherlv_14= 'observing' ( (lv_dependencies_15_0= ruleDependency ) ) (otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) ) )* )? (otherlv_18= 'using' ( (lv_contextualizers_19_0= ruleValueExecution ) ) (otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) ) )* )? ( (otherlv_22= 'classified' | ( (lv_discretization_23_0= 'discretized' ) ) ) ( (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) ) | (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) ) ) )? (otherlv_29= 'lookup' (otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')' )? otherlv_35= 'into' ( ( (lv_lookupTable_36_0= ruleTable ) ) | ( (lv_lookupTableId_37_0= RULE_LOWERCASE_ID ) ) ) )? ( (lv_actions_38_0= ruleActionSpecification ) )* (otherlv_39= 'with' otherlv_40= 'metadata' ( (lv_metadata_41_0= ruleMetadata ) ) )? (otherlv_42= 'with' otherlv_43= 'documentation' ( (lv_documentation_44_0= ruleDocumentation ) ) )? )
            {
            // InternalKim.g:626:2: ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )? ( ( (lv_name_9_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )* ) ) ( (lv_docstring_13_0= RULE_STRING ) )? (otherlv_14= 'observing' ( (lv_dependencies_15_0= ruleDependency ) ) (otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) ) )* )? (otherlv_18= 'using' ( (lv_contextualizers_19_0= ruleValueExecution ) ) (otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) ) )* )? ( (otherlv_22= 'classified' | ( (lv_discretization_23_0= 'discretized' ) ) ) ( (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) ) | (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) ) ) )? (otherlv_29= 'lookup' (otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')' )? otherlv_35= 'into' ( ( (lv_lookupTable_36_0= ruleTable ) ) | ( (lv_lookupTableId_37_0= RULE_LOWERCASE_ID ) ) ) )? ( (lv_actions_38_0= ruleActionSpecification ) )* (otherlv_39= 'with' otherlv_40= 'metadata' ( (lv_metadata_41_0= ruleMetadata ) ) )? (otherlv_42= 'with' otherlv_43= 'documentation' ( (lv_documentation_44_0= ruleDocumentation ) ) )? )
            // InternalKim.g:627:3: ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )? ( ( (lv_name_9_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )* ) ) ( (lv_docstring_13_0= RULE_STRING ) )? (otherlv_14= 'observing' ( (lv_dependencies_15_0= ruleDependency ) ) (otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) ) )* )? (otherlv_18= 'using' ( (lv_contextualizers_19_0= ruleValueExecution ) ) (otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) ) )* )? ( (otherlv_22= 'classified' | ( (lv_discretization_23_0= 'discretized' ) ) ) ( (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) ) | (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) ) ) )? (otherlv_29= 'lookup' (otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')' )? otherlv_35= 'into' ( ( (lv_lookupTable_36_0= ruleTable ) ) | ( (lv_lookupTableId_37_0= RULE_LOWERCASE_ID ) ) ) )? ( (lv_actions_38_0= ruleActionSpecification ) )* (otherlv_39= 'with' otherlv_40= 'metadata' ( (lv_metadata_41_0= ruleMetadata ) ) )? (otherlv_42= 'with' otherlv_43= 'documentation' ( (lv_documentation_44_0= ruleDocumentation ) ) )?
            {
            // InternalKim.g:627:3: ( (lv_instantiator_0_0= 'each' ) )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==24) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalKim.g:628:4: (lv_instantiator_0_0= 'each' )
                    {
                    // InternalKim.g:628:4: (lv_instantiator_0_0= 'each' )
                    // InternalKim.g:629:5: lv_instantiator_0_0= 'each'
                    {
                    lv_instantiator_0_0=(Token)match(input,24,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_instantiator_0_0, grammarAccess.getModelBodyStatementAccess().getInstantiatorEachKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      					}
                      					setWithLastConsumed(current, "instantiator", true, "each");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:641:3: ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )?
            int alt15=2;
            alt15 = dfa15.predict(input);
            switch (alt15) {
                case 1 :
                    // InternalKim.g:642:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as'
                    {
                    // InternalKim.g:642:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) )
                    int alt14=5;
                    alt14 = dfa14.predict(input);
                    switch (alt14) {
                        case 1 :
                            // InternalKim.g:643:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                            {
                            // InternalKim.g:643:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                            // InternalKim.g:644:6: ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                            {
                            // InternalKim.g:644:6: ( (lv_urns_1_0= ruleUrn ) )
                            // InternalKim.g:645:7: (lv_urns_1_0= ruleUrn )
                            {
                            // InternalKim.g:645:7: (lv_urns_1_0= ruleUrn )
                            // InternalKim.g:646:8: lv_urns_1_0= ruleUrn
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_12);
                            lv_urns_1_0=ruleUrn();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								add(
                              									current,
                              									"urns",
                              									lv_urns_1_0,
                              									"org.integratedmodelling.kim.Kim.Urn");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalKim.g:663:6: (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                            loop12:
                            do {
                                int alt12=2;
                                int LA12_0 = input.LA(1);

                                if ( (LA12_0==25) ) {
                                    alt12=1;
                                }


                                switch (alt12) {
                            	case 1 :
                            	    // InternalKim.g:664:7: otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) )
                            	    {
                            	    otherlv_2=(Token)match(input,25,FOLLOW_13); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_2, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_1_0_0_1_0());
                            	      						
                            	    }
                            	    // InternalKim.g:668:7: ( (lv_urns_3_0= ruleUrn ) )
                            	    // InternalKim.g:669:8: (lv_urns_3_0= ruleUrn )
                            	    {
                            	    // InternalKim.g:669:8: (lv_urns_3_0= ruleUrn )
                            	    // InternalKim.g:670:9: lv_urns_3_0= ruleUrn
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_12);
                            	    lv_urns_3_0=ruleUrn();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"urns",
                            	      										lv_urns_3_0,
                            	      										"org.integratedmodelling.kim.Kim.Urn");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop12;
                                }
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:690:5: ( (lv_function_4_0= ruleFunction ) )
                            {
                            // InternalKim.g:690:5: ( (lv_function_4_0= ruleFunction ) )
                            // InternalKim.g:691:6: (lv_function_4_0= ruleFunction )
                            {
                            // InternalKim.g:691:6: (lv_function_4_0= ruleFunction )
                            // InternalKim.g:692:7: lv_function_4_0= ruleFunction
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getFunctionFunctionParserRuleCall_1_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_10);
                            lv_function_4_0=ruleFunction();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"function",
                              								lv_function_4_0,
                              								"org.integratedmodelling.kim.Kim.Function");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:710:5: ( (lv_number_5_0= ruleNumber ) )
                            {
                            // InternalKim.g:710:5: ( (lv_number_5_0= ruleNumber ) )
                            // InternalKim.g:711:6: (lv_number_5_0= ruleNumber )
                            {
                            // InternalKim.g:711:6: (lv_number_5_0= ruleNumber )
                            // InternalKim.g:712:7: lv_number_5_0= ruleNumber
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getNumberNumberParserRuleCall_1_0_2_0());
                              						
                            }
                            pushFollow(FOLLOW_10);
                            lv_number_5_0=ruleNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"number",
                              								lv_number_5_0,
                              								"org.integratedmodelling.kim.Kim.Number");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:730:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                            {
                            // InternalKim.g:730:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                            // InternalKim.g:731:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                            {
                            // InternalKim.g:731:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                            // InternalKim.g:732:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                            {
                            // InternalKim.g:732:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                            int alt13=2;
                            int LA13_0 = input.LA(1);

                            if ( (LA13_0==26) ) {
                                alt13=1;
                            }
                            else if ( (LA13_0==27) ) {
                                alt13=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 13, 0, input);

                                throw nvae;
                            }
                            switch (alt13) {
                                case 1 :
                                    // InternalKim.g:733:8: lv_boolean_6_1= 'true'
                                    {
                                    lv_boolean_6_1=(Token)match(input,26,FOLLOW_10); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_boolean_6_1, grammarAccess.getModelBodyStatementAccess().getBooleanTrueKeyword_1_0_3_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								setWithLastConsumed(current, "boolean", lv_boolean_6_1, null);
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:744:8: lv_boolean_6_2= 'false'
                                    {
                                    lv_boolean_6_2=(Token)match(input,27,FOLLOW_10); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_boolean_6_2, grammarAccess.getModelBodyStatementAccess().getBooleanFalseKeyword_1_0_3_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								setWithLastConsumed(current, "boolean", lv_boolean_6_2, null);
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;
                        case 5 :
                            // InternalKim.g:758:5: ( (lv_concept_7_0= ruleSimpleObservableSemantics ) )
                            {
                            // InternalKim.g:758:5: ( (lv_concept_7_0= ruleSimpleObservableSemantics ) )
                            // InternalKim.g:759:6: (lv_concept_7_0= ruleSimpleObservableSemantics )
                            {
                            // InternalKim.g:759:6: (lv_concept_7_0= ruleSimpleObservableSemantics )
                            // InternalKim.g:760:7: lv_concept_7_0= ruleSimpleObservableSemantics
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getConceptSimpleObservableSemanticsParserRuleCall_1_0_4_0());
                              						
                            }
                            pushFollow(FOLLOW_10);
                            lv_concept_7_0=ruleSimpleObservableSemantics();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"concept",
                              								lv_concept_7_0,
                              								"org.integratedmodelling.kim.Kim.SimpleObservableSemantics");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_8=(Token)match(input,23,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getModelBodyStatementAccess().getAsKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:783:3: ( ( (lv_name_9_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )* ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_LOWERCASE_ID) ) {
                int LA17_1 = input.LA(2);

                if ( (LA17_1==23||LA17_1==36||LA17_1==89||LA17_1==93) ) {
                    alt17=2;
                }
                else if ( (LA17_1==EOF||LA17_1==RULE_STRING||LA17_1==19||(LA17_1>=28 && LA17_1<=31)||LA17_1==35||LA17_1==40||(LA17_1>=54 && LA17_1<=56)) ) {
                    alt17=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 17, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA17_0==RULE_UPPERCASE_ID||LA17_0==RULE_STRING||(LA17_0>=RULE_EXPR && LA17_0<=RULE_INT)||(LA17_0>=25 && LA17_0<=27)||LA17_0==36||(LA17_0>=49 && LA17_0<=50)||LA17_0==96||(LA17_0>=112 && LA17_0<=113)||(LA17_0>=121 && LA17_0<=122)||(LA17_0>=124 && LA17_0<=136)||LA17_0==191||(LA17_0>=232 && LA17_0<=233)) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalKim.g:784:4: ( (lv_name_9_0= RULE_LOWERCASE_ID ) )
                    {
                    // InternalKim.g:784:4: ( (lv_name_9_0= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:785:5: (lv_name_9_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:785:5: (lv_name_9_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:786:6: lv_name_9_0= RULE_LOWERCASE_ID
                    {
                    lv_name_9_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_9_0, grammarAccess.getModelBodyStatementAccess().getNameLOWERCASE_IDTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_9_0,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:803:4: ( ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )* )
                    {
                    // InternalKim.g:803:4: ( ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )* )
                    // InternalKim.g:804:5: ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )*
                    {
                    // InternalKim.g:804:5: ( (lv_observables_10_0= ruleObservableSemantics ) )
                    // InternalKim.g:805:6: (lv_observables_10_0= ruleObservableSemantics )
                    {
                    // InternalKim.g:805:6: (lv_observables_10_0= ruleObservableSemantics )
                    // InternalKim.g:806:7: lv_observables_10_0= ruleObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getObservablesObservableSemanticsParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_15);
                    lv_observables_10_0=ruleObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      							}
                      							add(
                      								current,
                      								"observables",
                      								lv_observables_10_0,
                      								"org.integratedmodelling.kim.Kim.ObservableSemantics");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalKim.g:823:5: (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )*
                    loop16:
                    do {
                        int alt16=2;
                        int LA16_0 = input.LA(1);

                        if ( (LA16_0==25) ) {
                            alt16=1;
                        }


                        switch (alt16) {
                    	case 1 :
                    	    // InternalKim.g:824:6: otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) )
                    	    {
                    	    otherlv_11=(Token)match(input,25,FOLLOW_7); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_11, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_2_1_1_0());
                    	      					
                    	    }
                    	    // InternalKim.g:828:6: ( (lv_observables_12_0= ruleObservableSemantics ) )
                    	    // InternalKim.g:829:7: (lv_observables_12_0= ruleObservableSemantics )
                    	    {
                    	    // InternalKim.g:829:7: (lv_observables_12_0= ruleObservableSemantics )
                    	    // InternalKim.g:830:8: lv_observables_12_0= ruleObservableSemantics
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getObservablesObservableSemanticsParserRuleCall_2_1_1_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    lv_observables_12_0=ruleObservableSemantics();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"observables",
                    	      									lv_observables_12_0,
                    	      									"org.integratedmodelling.kim.Kim.ObservableSemantics");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop16;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            // InternalKim.g:850:3: ( (lv_docstring_13_0= RULE_STRING ) )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_STRING) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // InternalKim.g:851:4: (lv_docstring_13_0= RULE_STRING )
                    {
                    // InternalKim.g:851:4: (lv_docstring_13_0= RULE_STRING )
                    // InternalKim.g:852:5: lv_docstring_13_0= RULE_STRING
                    {
                    lv_docstring_13_0=(Token)match(input,RULE_STRING,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_docstring_13_0, grammarAccess.getModelBodyStatementAccess().getDocstringSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"docstring",
                      						lv_docstring_13_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:868:3: (otherlv_14= 'observing' ( (lv_dependencies_15_0= ruleDependency ) ) (otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) ) )* )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==28) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // InternalKim.g:869:4: otherlv_14= 'observing' ( (lv_dependencies_15_0= ruleDependency ) ) (otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) ) )*
                    {
                    otherlv_14=(Token)match(input,28,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getModelBodyStatementAccess().getObservingKeyword_4_0());
                      			
                    }
                    // InternalKim.g:873:4: ( (lv_dependencies_15_0= ruleDependency ) )
                    // InternalKim.g:874:5: (lv_dependencies_15_0= ruleDependency )
                    {
                    // InternalKim.g:874:5: (lv_dependencies_15_0= ruleDependency )
                    // InternalKim.g:875:6: lv_dependencies_15_0= ruleDependency
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getDependenciesDependencyParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    lv_dependencies_15_0=ruleDependency();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						add(
                      							current,
                      							"dependencies",
                      							lv_dependencies_15_0,
                      							"org.integratedmodelling.kim.Kim.Dependency");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:892:4: (otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) ) )*
                    loop19:
                    do {
                        int alt19=2;
                        int LA19_0 = input.LA(1);

                        if ( (LA19_0==25) ) {
                            alt19=1;
                        }


                        switch (alt19) {
                    	case 1 :
                    	    // InternalKim.g:893:5: otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) )
                    	    {
                    	    otherlv_16=(Token)match(input,25,FOLLOW_7); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_16, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_4_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:897:5: ( (lv_dependencies_17_0= ruleDependency ) )
                    	    // InternalKim.g:898:6: (lv_dependencies_17_0= ruleDependency )
                    	    {
                    	    // InternalKim.g:898:6: (lv_dependencies_17_0= ruleDependency )
                    	    // InternalKim.g:899:7: lv_dependencies_17_0= ruleDependency
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getDependenciesDependencyParserRuleCall_4_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    lv_dependencies_17_0=ruleDependency();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"dependencies",
                    	      								lv_dependencies_17_0,
                    	      								"org.integratedmodelling.kim.Kim.Dependency");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop19;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:918:3: (otherlv_18= 'using' ( (lv_contextualizers_19_0= ruleValueExecution ) ) (otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) ) )* )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==29) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // InternalKim.g:919:4: otherlv_18= 'using' ( (lv_contextualizers_19_0= ruleValueExecution ) ) (otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) ) )*
                    {
                    otherlv_18=(Token)match(input,29,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getModelBodyStatementAccess().getUsingKeyword_5_0());
                      			
                    }
                    // InternalKim.g:923:4: ( (lv_contextualizers_19_0= ruleValueExecution ) )
                    // InternalKim.g:924:5: (lv_contextualizers_19_0= ruleValueExecution )
                    {
                    // InternalKim.g:924:5: (lv_contextualizers_19_0= ruleValueExecution )
                    // InternalKim.g:925:6: lv_contextualizers_19_0= ruleValueExecution
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getContextualizersValueExecutionParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_contextualizers_19_0=ruleValueExecution();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						add(
                      							current,
                      							"contextualizers",
                      							lv_contextualizers_19_0,
                      							"org.integratedmodelling.kim.Kim.ValueExecution");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:942:4: (otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) ) )*
                    loop21:
                    do {
                        int alt21=2;
                        int LA21_0 = input.LA(1);

                        if ( (LA21_0==25) ) {
                            alt21=1;
                        }


                        switch (alt21) {
                    	case 1 :
                    	    // InternalKim.g:943:5: otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) )
                    	    {
                    	    otherlv_20=(Token)match(input,25,FOLLOW_18); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_20, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:947:5: ( (lv_contextualizers_21_0= ruleValueExecution ) )
                    	    // InternalKim.g:948:6: (lv_contextualizers_21_0= ruleValueExecution )
                    	    {
                    	    // InternalKim.g:948:6: (lv_contextualizers_21_0= ruleValueExecution )
                    	    // InternalKim.g:949:7: lv_contextualizers_21_0= ruleValueExecution
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getContextualizersValueExecutionParserRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_19);
                    	    lv_contextualizers_21_0=ruleValueExecution();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"contextualizers",
                    	      								lv_contextualizers_21_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueExecution");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop21;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:968:3: ( (otherlv_22= 'classified' | ( (lv_discretization_23_0= 'discretized' ) ) ) ( (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) ) | (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) ) ) )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( ((LA25_0>=30 && LA25_0<=31)) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // InternalKim.g:969:4: (otherlv_22= 'classified' | ( (lv_discretization_23_0= 'discretized' ) ) ) ( (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) ) | (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) ) )
                    {
                    // InternalKim.g:969:4: (otherlv_22= 'classified' | ( (lv_discretization_23_0= 'discretized' ) ) )
                    int alt23=2;
                    int LA23_0 = input.LA(1);

                    if ( (LA23_0==30) ) {
                        alt23=1;
                    }
                    else if ( (LA23_0==31) ) {
                        alt23=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 23, 0, input);

                        throw nvae;
                    }
                    switch (alt23) {
                        case 1 :
                            // InternalKim.g:970:5: otherlv_22= 'classified'
                            {
                            otherlv_22=(Token)match(input,30,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_22, grammarAccess.getModelBodyStatementAccess().getClassifiedKeyword_6_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:975:5: ( (lv_discretization_23_0= 'discretized' ) )
                            {
                            // InternalKim.g:975:5: ( (lv_discretization_23_0= 'discretized' ) )
                            // InternalKim.g:976:6: (lv_discretization_23_0= 'discretized' )
                            {
                            // InternalKim.g:976:6: (lv_discretization_23_0= 'discretized' )
                            // InternalKim.g:977:7: lv_discretization_23_0= 'discretized'
                            {
                            lv_discretization_23_0=(Token)match(input,31,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_discretization_23_0, grammarAccess.getModelBodyStatementAccess().getDiscretizationDiscretizedKeyword_6_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getModelBodyStatementRule());
                              							}
                              							setWithLastConsumed(current, "discretization", true, "discretized");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:990:4: ( (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) ) | (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) ) )
                    int alt24=2;
                    int LA24_0 = input.LA(1);

                    if ( (LA24_0==32) ) {
                        alt24=1;
                    }
                    else if ( (LA24_0==33) ) {
                        alt24=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 24, 0, input);

                        throw nvae;
                    }
                    switch (alt24) {
                        case 1 :
                            // InternalKim.g:991:5: (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) )
                            {
                            // InternalKim.g:991:5: (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) )
                            // InternalKim.g:992:6: otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) )
                            {
                            otherlv_24=(Token)match(input,32,FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_24, grammarAccess.getModelBodyStatementAccess().getIntoKeyword_6_1_0_0());
                              					
                            }
                            // InternalKim.g:996:6: ( (lv_classification_25_0= ruleClassification ) )
                            // InternalKim.g:997:7: (lv_classification_25_0= ruleClassification )
                            {
                            // InternalKim.g:997:7: (lv_classification_25_0= ruleClassification )
                            // InternalKim.g:998:8: lv_classification_25_0= ruleClassification
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getClassificationClassificationParserRuleCall_6_1_0_1_0());
                              							
                            }
                            pushFollow(FOLLOW_22);
                            lv_classification_25_0=ruleClassification();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								set(
                              									current,
                              									"classification",
                              									lv_classification_25_0,
                              									"org.integratedmodelling.kim.Kim.Classification");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1017:5: (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) )
                            {
                            // InternalKim.g:1017:5: (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) )
                            // InternalKim.g:1018:6: otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) )
                            {
                            otherlv_26=(Token)match(input,33,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_26, grammarAccess.getModelBodyStatementAccess().getAccordingKeyword_6_1_1_0());
                              					
                            }
                            otherlv_27=(Token)match(input,34,FOLLOW_24); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_27, grammarAccess.getModelBodyStatementAccess().getToKeyword_6_1_1_1());
                              					
                            }
                            // InternalKim.g:1026:6: ( (lv_classificationProperty_28_0= rulePropertyId ) )
                            // InternalKim.g:1027:7: (lv_classificationProperty_28_0= rulePropertyId )
                            {
                            // InternalKim.g:1027:7: (lv_classificationProperty_28_0= rulePropertyId )
                            // InternalKim.g:1028:8: lv_classificationProperty_28_0= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getClassificationPropertyPropertyIdParserRuleCall_6_1_1_2_0());
                              							
                            }
                            pushFollow(FOLLOW_22);
                            lv_classificationProperty_28_0=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								set(
                              									current,
                              									"classificationProperty",
                              									lv_classificationProperty_28_0,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKim.g:1048:3: (otherlv_29= 'lookup' (otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')' )? otherlv_35= 'into' ( ( (lv_lookupTable_36_0= ruleTable ) ) | ( (lv_lookupTableId_37_0= RULE_LOWERCASE_ID ) ) ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==35) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalKim.g:1049:4: otherlv_29= 'lookup' (otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')' )? otherlv_35= 'into' ( ( (lv_lookupTable_36_0= ruleTable ) ) | ( (lv_lookupTableId_37_0= RULE_LOWERCASE_ID ) ) )
                    {
                    otherlv_29=(Token)match(input,35,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_29, grammarAccess.getModelBodyStatementAccess().getLookupKeyword_7_0());
                      			
                    }
                    // InternalKim.g:1053:4: (otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')' )?
                    int alt29=2;
                    int LA29_0 = input.LA(1);

                    if ( (LA29_0==36) ) {
                        alt29=1;
                    }
                    switch (alt29) {
                        case 1 :
                            // InternalKim.g:1054:5: otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')'
                            {
                            otherlv_30=(Token)match(input,36,FOLLOW_26); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_30, grammarAccess.getModelBodyStatementAccess().getLeftParenthesisKeyword_7_1_0());
                              				
                            }
                            // InternalKim.g:1058:5: ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) )
                            // InternalKim.g:1059:6: ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) )
                            {
                            // InternalKim.g:1059:6: ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) )
                            // InternalKim.g:1060:7: (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' )
                            {
                            // InternalKim.g:1060:7: (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' )
                            int alt26=3;
                            switch ( input.LA(1) ) {
                            case RULE_LOWERCASE_ID:
                                {
                                alt26=1;
                                }
                                break;
                            case 37:
                                {
                                alt26=2;
                                }
                                break;
                            case 38:
                                {
                                alt26=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 26, 0, input);

                                throw nvae;
                            }

                            switch (alt26) {
                                case 1 :
                                    // InternalKim.g:1061:8: lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID
                                    {
                                    lv_lookupTableArgs_31_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_27); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_lookupTableArgs_31_1, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsLOWERCASE_IDTerminalRuleCall_7_1_1_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								addWithLastConsumed(
                                      									current,
                                      									"lookupTableArgs",
                                      									lv_lookupTableArgs_31_1,
                                      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:1076:8: lv_lookupTableArgs_31_2= '?'
                                    {
                                    lv_lookupTableArgs_31_2=(Token)match(input,37,FOLLOW_27); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_lookupTableArgs_31_2, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsQuestionMarkKeyword_7_1_1_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								addWithLastConsumed(current, "lookupTableArgs", lv_lookupTableArgs_31_2, null);
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:1087:8: lv_lookupTableArgs_31_3= '*'
                                    {
                                    lv_lookupTableArgs_31_3=(Token)match(input,38,FOLLOW_27); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_lookupTableArgs_31_3, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsAsteriskKeyword_7_1_1_0_2());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								addWithLastConsumed(current, "lookupTableArgs", lv_lookupTableArgs_31_3, null);
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalKim.g:1100:5: (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )*
                            loop28:
                            do {
                                int alt28=2;
                                int LA28_0 = input.LA(1);

                                if ( (LA28_0==25) ) {
                                    alt28=1;
                                }


                                switch (alt28) {
                            	case 1 :
                            	    // InternalKim.g:1101:6: otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) )
                            	    {
                            	    otherlv_32=(Token)match(input,25,FOLLOW_26); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_32, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_7_1_2_0());
                            	      					
                            	    }
                            	    // InternalKim.g:1105:6: ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) )
                            	    // InternalKim.g:1106:7: ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) )
                            	    {
                            	    // InternalKim.g:1106:7: ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) )
                            	    // InternalKim.g:1107:8: (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' )
                            	    {
                            	    // InternalKim.g:1107:8: (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' )
                            	    int alt27=3;
                            	    switch ( input.LA(1) ) {
                            	    case RULE_LOWERCASE_ID:
                            	        {
                            	        alt27=1;
                            	        }
                            	        break;
                            	    case 37:
                            	        {
                            	        alt27=2;
                            	        }
                            	        break;
                            	    case 38:
                            	        {
                            	        alt27=3;
                            	        }
                            	        break;
                            	    default:
                            	        if (state.backtracking>0) {state.failed=true; return current;}
                            	        NoViableAltException nvae =
                            	            new NoViableAltException("", 27, 0, input);

                            	        throw nvae;
                            	    }

                            	    switch (alt27) {
                            	        case 1 :
                            	            // InternalKim.g:1108:9: lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID
                            	            {
                            	            lv_lookupTableArgs_33_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_27); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_lookupTableArgs_33_1, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsLOWERCASE_IDTerminalRuleCall_7_1_2_1_0_0());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getModelBodyStatementRule());
                            	              									}
                            	              									addWithLastConsumed(
                            	              										current,
                            	              										"lookupTableArgs",
                            	              										lv_lookupTableArgs_33_1,
                            	              										"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                            	              								
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // InternalKim.g:1123:9: lv_lookupTableArgs_33_2= '?'
                            	            {
                            	            lv_lookupTableArgs_33_2=(Token)match(input,37,FOLLOW_27); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_lookupTableArgs_33_2, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsQuestionMarkKeyword_7_1_2_1_0_1());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getModelBodyStatementRule());
                            	              									}
                            	              									addWithLastConsumed(current, "lookupTableArgs", lv_lookupTableArgs_33_2, null);
                            	              								
                            	            }

                            	            }
                            	            break;
                            	        case 3 :
                            	            // InternalKim.g:1134:9: lv_lookupTableArgs_33_3= '*'
                            	            {
                            	            lv_lookupTableArgs_33_3=(Token)match(input,38,FOLLOW_27); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_lookupTableArgs_33_3, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsAsteriskKeyword_7_1_2_1_0_2());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getModelBodyStatementRule());
                            	              									}
                            	              									addWithLastConsumed(current, "lookupTableArgs", lv_lookupTableArgs_33_3, null);
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop28;
                                }
                            } while (true);

                            otherlv_34=(Token)match(input,39,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_34, grammarAccess.getModelBodyStatementAccess().getRightParenthesisKeyword_7_1_3());
                              				
                            }

                            }
                            break;

                    }

                    otherlv_35=(Token)match(input,32,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_35, grammarAccess.getModelBodyStatementAccess().getIntoKeyword_7_2());
                      			
                    }
                    // InternalKim.g:1157:4: ( ( (lv_lookupTable_36_0= ruleTable ) ) | ( (lv_lookupTableId_37_0= RULE_LOWERCASE_ID ) ) )
                    int alt30=2;
                    int LA30_0 = input.LA(1);

                    if ( (LA30_0==RULE_LOWERCASE_ID) ) {
                        int LA30_1 = input.LA(2);

                        if ( (LA30_1==EOF||LA30_1==19||LA30_1==40||(LA30_1>=54 && LA30_1<=56)) ) {
                            alt30=2;
                        }
                        else if ( (LA30_1==RULE_SEPARATOR||LA30_1==52||LA30_1==89||LA30_1==93) ) {
                            alt30=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 30, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA30_0==RULE_STRING||(LA30_0>=RULE_EXPR && LA30_0<=RULE_LOWERCASE_DASHID)||LA30_0==RULE_INT||(LA30_0>=26 && LA30_0<=27)||LA30_0==36||LA30_0==38||(LA30_0>=48 && LA30_0<=49)||LA30_0==53||LA30_0==91||(LA30_0>=112 && LA30_0<=113)||(LA30_0>=121 && LA30_0<=122)||(LA30_0>=124 && LA30_0<=136)||(LA30_0>=226 && LA30_0<=230)||(LA30_0>=232 && LA30_0<=233)) ) {
                        alt30=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 30, 0, input);

                        throw nvae;
                    }
                    switch (alt30) {
                        case 1 :
                            // InternalKim.g:1158:5: ( (lv_lookupTable_36_0= ruleTable ) )
                            {
                            // InternalKim.g:1158:5: ( (lv_lookupTable_36_0= ruleTable ) )
                            // InternalKim.g:1159:6: (lv_lookupTable_36_0= ruleTable )
                            {
                            // InternalKim.g:1159:6: (lv_lookupTable_36_0= ruleTable )
                            // InternalKim.g:1160:7: lv_lookupTable_36_0= ruleTable
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getLookupTableTableParserRuleCall_7_3_0_0());
                              						
                            }
                            pushFollow(FOLLOW_30);
                            lv_lookupTable_36_0=ruleTable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"lookupTable",
                              								lv_lookupTable_36_0,
                              								"org.integratedmodelling.kim.Kim.Table");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1178:5: ( (lv_lookupTableId_37_0= RULE_LOWERCASE_ID ) )
                            {
                            // InternalKim.g:1178:5: ( (lv_lookupTableId_37_0= RULE_LOWERCASE_ID ) )
                            // InternalKim.g:1179:6: (lv_lookupTableId_37_0= RULE_LOWERCASE_ID )
                            {
                            // InternalKim.g:1179:6: (lv_lookupTableId_37_0= RULE_LOWERCASE_ID )
                            // InternalKim.g:1180:7: lv_lookupTableId_37_0= RULE_LOWERCASE_ID
                            {
                            lv_lookupTableId_37_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_30); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_lookupTableId_37_0, grammarAccess.getModelBodyStatementAccess().getLookupTableIdLOWERCASE_IDTerminalRuleCall_7_3_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getModelBodyStatementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"lookupTableId",
                              								lv_lookupTableId_37_0,
                              								"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKim.g:1198:3: ( (lv_actions_38_0= ruleActionSpecification ) )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( ((LA32_0>=54 && LA32_0<=56)) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // InternalKim.g:1199:4: (lv_actions_38_0= ruleActionSpecification )
            	    {
            	    // InternalKim.g:1199:4: (lv_actions_38_0= ruleActionSpecification )
            	    // InternalKim.g:1200:5: lv_actions_38_0= ruleActionSpecification
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModelBodyStatementAccess().getActionsActionSpecificationParserRuleCall_8_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_actions_38_0=ruleActionSpecification();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"actions",
            	      						lv_actions_38_0,
            	      						"org.integratedmodelling.kim.Kim.ActionSpecification");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

            // InternalKim.g:1217:3: (otherlv_39= 'with' otherlv_40= 'metadata' ( (lv_metadata_41_0= ruleMetadata ) ) )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==40) ) {
                int LA33_1 = input.LA(2);

                if ( (LA33_1==41) ) {
                    alt33=1;
                }
            }
            switch (alt33) {
                case 1 :
                    // InternalKim.g:1218:4: otherlv_39= 'with' otherlv_40= 'metadata' ( (lv_metadata_41_0= ruleMetadata ) )
                    {
                    otherlv_39=(Token)match(input,40,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_39, grammarAccess.getModelBodyStatementAccess().getWithKeyword_9_0());
                      			
                    }
                    otherlv_40=(Token)match(input,41,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_40, grammarAccess.getModelBodyStatementAccess().getMetadataKeyword_9_1());
                      			
                    }
                    // InternalKim.g:1226:4: ( (lv_metadata_41_0= ruleMetadata ) )
                    // InternalKim.g:1227:5: (lv_metadata_41_0= ruleMetadata )
                    {
                    // InternalKim.g:1227:5: (lv_metadata_41_0= ruleMetadata )
                    // InternalKim.g:1228:6: lv_metadata_41_0= ruleMetadata
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getMetadataMetadataParserRuleCall_9_2_0());
                      					
                    }
                    pushFollow(FOLLOW_33);
                    lv_metadata_41_0=ruleMetadata();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						set(
                      							current,
                      							"metadata",
                      							lv_metadata_41_0,
                      							"org.integratedmodelling.kim.Kim.Metadata");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:1246:3: (otherlv_42= 'with' otherlv_43= 'documentation' ( (lv_documentation_44_0= ruleDocumentation ) ) )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==40) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalKim.g:1247:4: otherlv_42= 'with' otherlv_43= 'documentation' ( (lv_documentation_44_0= ruleDocumentation ) )
                    {
                    otherlv_42=(Token)match(input,40,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getModelBodyStatementAccess().getWithKeyword_10_0());
                      			
                    }
                    otherlv_43=(Token)match(input,42,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_43, grammarAccess.getModelBodyStatementAccess().getDocumentationKeyword_10_1());
                      			
                    }
                    // InternalKim.g:1255:4: ( (lv_documentation_44_0= ruleDocumentation ) )
                    // InternalKim.g:1256:5: (lv_documentation_44_0= ruleDocumentation )
                    {
                    // InternalKim.g:1256:5: (lv_documentation_44_0= ruleDocumentation )
                    // InternalKim.g:1257:6: lv_documentation_44_0= ruleDocumentation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getDocumentationDocumentationParserRuleCall_10_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_documentation_44_0=ruleDocumentation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						set(
                      							current,
                      							"documentation",
                      							lv_documentation_44_0,
                      							"org.integratedmodelling.kim.Kim.Documentation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModelBodyStatement"


    // $ANTLR start "entryRuleClassification"
    // InternalKim.g:1279:1: entryRuleClassification returns [EObject current=null] : iv_ruleClassification= ruleClassification EOF ;
    public final EObject entryRuleClassification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassification = null;


        try {
            // InternalKim.g:1279:55: (iv_ruleClassification= ruleClassification EOF )
            // InternalKim.g:1280:2: iv_ruleClassification= ruleClassification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassification=ruleClassification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassification"


    // $ANTLR start "ruleClassification"
    // InternalKim.g:1286:1: ruleClassification returns [EObject current=null] : ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* ) ;
    public final EObject ruleClassification() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_classifiers_0_0 = null;

        EObject lv_classifiers_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1292:2: ( ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* ) )
            // InternalKim.g:1293:2: ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* )
            {
            // InternalKim.g:1293:2: ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* )
            // InternalKim.g:1294:3: ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )*
            {
            // InternalKim.g:1294:3: ( (lv_classifiers_0_0= ruleClassifier ) )
            // InternalKim.g:1295:4: (lv_classifiers_0_0= ruleClassifier )
            {
            // InternalKim.g:1295:4: (lv_classifiers_0_0= ruleClassifier )
            // InternalKim.g:1296:5: lv_classifiers_0_0= ruleClassifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassificationAccess().getClassifiersClassifierParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_35);
            lv_classifiers_0_0=ruleClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassificationRule());
              					}
              					add(
              						current,
              						"classifiers",
              						lv_classifiers_0_0,
              						"org.integratedmodelling.kim.Kim.Classifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:1313:3: ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==25) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // InternalKim.g:1314:4: ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) )
            	    {
            	    // InternalKim.g:1314:4: ( ( ',' )=>otherlv_1= ',' )
            	    // InternalKim.g:1315:5: ( ',' )=>otherlv_1= ','
            	    {
            	    otherlv_1=(Token)match(input,25,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_1, grammarAccess.getClassificationAccess().getCommaKeyword_1_0());
            	      				
            	    }

            	    }

            	    // InternalKim.g:1321:4: ( (lv_classifiers_2_0= ruleClassifier ) )
            	    // InternalKim.g:1322:5: (lv_classifiers_2_0= ruleClassifier )
            	    {
            	    // InternalKim.g:1322:5: (lv_classifiers_2_0= ruleClassifier )
            	    // InternalKim.g:1323:6: lv_classifiers_2_0= ruleClassifier
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getClassificationAccess().getClassifiersClassifierParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_classifiers_2_0=ruleClassifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getClassificationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"classifiers",
            	      							lv_classifiers_2_0,
            	      							"org.integratedmodelling.kim.Kim.Classifier");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassification"


    // $ANTLR start "entryRuleClassifier"
    // InternalKim.g:1345:1: entryRuleClassifier returns [EObject current=null] : iv_ruleClassifier= ruleClassifier EOF ;
    public final EObject entryRuleClassifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifier = null;


        try {
            // InternalKim.g:1345:51: (iv_ruleClassifier= ruleClassifier EOF )
            // InternalKim.g:1346:2: iv_ruleClassifier= ruleClassifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifier=ruleClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifier"


    // $ANTLR start "ruleClassifier"
    // InternalKim.g:1352:1: ruleClassifier returns [EObject current=null] : ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? ) ;
    public final EObject ruleClassifier() throws RecognitionException {
        EObject current = null;

        Token lv_otherwise_1_0=null;
        Token otherlv_2=null;
        Token lv_negated_3_0=null;
        EObject lv_declaration_0_0 = null;

        EObject lv_classifier_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1358:2: ( ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? ) )
            // InternalKim.g:1359:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? )
            {
            // InternalKim.g:1359:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? )
            // InternalKim.g:1360:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )?
            {
            // InternalKim.g:1360:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:1361:4: (lv_declaration_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:1361:4: (lv_declaration_0_0= ruleConceptDeclaration )
            // InternalKim.g:1362:5: lv_declaration_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassifierAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_36);
            lv_declaration_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassifierRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:1379:3: ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )?
            int alt37=3;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==43) ) {
                alt37=1;
            }
            else if ( ((LA37_0>=44 && LA37_0<=45)) ) {
                alt37=2;
            }
            switch (alt37) {
                case 1 :
                    // InternalKim.g:1380:4: ( (lv_otherwise_1_0= 'otherwise' ) )
                    {
                    // InternalKim.g:1380:4: ( (lv_otherwise_1_0= 'otherwise' ) )
                    // InternalKim.g:1381:5: (lv_otherwise_1_0= 'otherwise' )
                    {
                    // InternalKim.g:1381:5: (lv_otherwise_1_0= 'otherwise' )
                    // InternalKim.g:1382:6: lv_otherwise_1_0= 'otherwise'
                    {
                    lv_otherwise_1_0=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_otherwise_1_0, grammarAccess.getClassifierAccess().getOtherwiseOtherwiseKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getClassifierRule());
                      						}
                      						setWithLastConsumed(current, "otherwise", true, "otherwise");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1395:4: ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) )
                    {
                    // InternalKim.g:1395:4: ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) )
                    // InternalKim.g:1396:5: (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) )
                    {
                    // InternalKim.g:1396:5: (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) )
                    int alt36=2;
                    int LA36_0 = input.LA(1);

                    if ( (LA36_0==44) ) {
                        alt36=1;
                    }
                    else if ( (LA36_0==45) ) {
                        alt36=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 36, 0, input);

                        throw nvae;
                    }
                    switch (alt36) {
                        case 1 :
                            // InternalKim.g:1397:6: otherlv_2= 'if'
                            {
                            otherlv_2=(Token)match(input,44,FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getClassifierAccess().getIfKeyword_1_1_0_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:1402:6: ( (lv_negated_3_0= 'unless' ) )
                            {
                            // InternalKim.g:1402:6: ( (lv_negated_3_0= 'unless' ) )
                            // InternalKim.g:1403:7: (lv_negated_3_0= 'unless' )
                            {
                            // InternalKim.g:1403:7: (lv_negated_3_0= 'unless' )
                            // InternalKim.g:1404:8: lv_negated_3_0= 'unless'
                            {
                            lv_negated_3_0=(Token)match(input,45,FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_negated_3_0, grammarAccess.getClassifierAccess().getNegatedUnlessKeyword_1_1_0_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getClassifierRule());
                              								}
                              								setWithLastConsumed(current, "negated", true, "unless");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:1417:5: ( (lv_classifier_4_0= ruleClassifierRHS ) )
                    // InternalKim.g:1418:6: (lv_classifier_4_0= ruleClassifierRHS )
                    {
                    // InternalKim.g:1418:6: (lv_classifier_4_0= ruleClassifierRHS )
                    // InternalKim.g:1419:7: lv_classifier_4_0= ruleClassifierRHS
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassifierAccess().getClassifierClassifierRHSParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_classifier_4_0=ruleClassifierRHS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassifierRule());
                      							}
                      							set(
                      								current,
                      								"classifier",
                      								lv_classifier_4_0,
                      								"org.integratedmodelling.kim.Kim.ClassifierRHS");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifier"


    // $ANTLR start "entryRuleClassifierRHS"
    // InternalKim.g:1442:1: entryRuleClassifierRHS returns [EObject current=null] : iv_ruleClassifierRHS= ruleClassifierRHS EOF ;
    public final EObject entryRuleClassifierRHS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifierRHS = null;


        try {
            // InternalKim.g:1442:54: (iv_ruleClassifierRHS= ruleClassifierRHS EOF )
            // InternalKim.g:1443:2: iv_ruleClassifierRHS= ruleClassifierRHS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRHSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifierRHS=ruleClassifierRHS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifierRHS; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifierRHS"


    // $ANTLR start "ruleClassifierRHS"
    // InternalKim.g:1449:1: ruleClassifierRHS returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) ) ;
    public final EObject ruleClassifierRHS() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_string_12_0=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token lv_nodata_21_0=null;
        Token lv_star_22_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_set_11_0 = null;

        EObject lv_concept_13_0 = null;

        EObject lv_toResolve_15_0 = null;

        EObject lv_toResolve_17_0 = null;

        EObject lv_op_19_0 = null;

        EObject lv_expression_20_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1455:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) ) )
            // InternalKim.g:1456:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )
            {
            // InternalKim.g:1456:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )
            int alt42=10;
            alt42 = dfa42.predict(input);
            switch (alt42) {
                case 1 :
                    // InternalKim.g:1457:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:1457:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt38=2;
                    int LA38_0 = input.LA(1);

                    if ( (LA38_0==26) ) {
                        alt38=1;
                    }
                    else if ( (LA38_0==27) ) {
                        alt38=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 38, 0, input);

                        throw nvae;
                    }
                    switch (alt38) {
                        case 1 :
                            // InternalKim.g:1458:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:1458:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:1459:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:1459:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:1460:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getClassifierRHSAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1473:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:1473:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:1474:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:1474:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:1475:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getClassifierRHSAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1489:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:1489:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:1490:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:1490:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:1491:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:1491:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:1492:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1509:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt39=3;
                    int LA39_0 = input.LA(1);

                    if ( (LA39_0==46) ) {
                        alt39=1;
                    }
                    else if ( (LA39_0==47) ) {
                        alt39=2;
                    }
                    switch (alt39) {
                        case 1 :
                            // InternalKim.g:1510:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1510:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:1511:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:1511:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:1512:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,46,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getClassifierRHSAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1525:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,47,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getClassifierRHSAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:1530:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:1531:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,34,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getClassifierRHSAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:1537:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:1538:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:1542:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:1543:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_40);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1560:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt40=3;
                    int LA40_0 = input.LA(1);

                    if ( (LA40_0==46) ) {
                        alt40=1;
                    }
                    else if ( (LA40_0==47) ) {
                        alt40=2;
                    }
                    switch (alt40) {
                        case 1 :
                            // InternalKim.g:1561:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1561:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:1562:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:1562:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:1563:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getClassifierRHSAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1576:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getClassifierRHSAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:1583:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:1583:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:1584:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:1584:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:1585:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:1603:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    {
                    // InternalKim.g:1603:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    // InternalKim.g:1604:4: otherlv_10= 'in' ( (lv_set_11_0= ruleList ) )
                    {
                    otherlv_10=(Token)match(input,48,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getClassifierRHSAccess().getInKeyword_3_0());
                      			
                    }
                    // InternalKim.g:1608:4: ( (lv_set_11_0= ruleList ) )
                    // InternalKim.g:1609:5: (lv_set_11_0= ruleList )
                    {
                    // InternalKim.g:1609:5: (lv_set_11_0= ruleList )
                    // InternalKim.g:1610:6: lv_set_11_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getSetListParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_set_11_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"set",
                      							lv_set_11_0,
                      							"org.integratedmodelling.kim.Kim.List");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:1629:3: ( (lv_string_12_0= RULE_STRING ) )
                    {
                    // InternalKim.g:1629:3: ( (lv_string_12_0= RULE_STRING ) )
                    // InternalKim.g:1630:4: (lv_string_12_0= RULE_STRING )
                    {
                    // InternalKim.g:1630:4: (lv_string_12_0= RULE_STRING )
                    // InternalKim.g:1631:5: lv_string_12_0= RULE_STRING
                    {
                    lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_12_0, grammarAccess.getClassifierRHSAccess().getStringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_12_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:1648:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:1648:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1649:4: (lv_concept_13_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1649:4: (lv_concept_13_0= ruleConceptDeclaration )
                    // InternalKim.g:1650:5: lv_concept_13_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSAccess().getConceptConceptDeclarationParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_13_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:1668:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
                    {
                    // InternalKim.g:1668:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
                    // InternalKim.g:1669:4: otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')'
                    {
                    otherlv_14=(Token)match(input,36,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getClassifierRHSAccess().getLeftParenthesisKeyword_6_0());
                      			
                    }
                    // InternalKim.g:1673:4: ( (lv_toResolve_15_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1674:5: (lv_toResolve_15_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1674:5: (lv_toResolve_15_0= ruleConceptDeclaration )
                    // InternalKim.g:1675:6: lv_toResolve_15_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_27);
                    lv_toResolve_15_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						add(
                      							current,
                      							"toResolve",
                      							lv_toResolve_15_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1692:4: ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )*
                    loop41:
                    do {
                        int alt41=2;
                        int LA41_0 = input.LA(1);

                        if ( (LA41_0==25) ) {
                            alt41=1;
                        }


                        switch (alt41) {
                    	case 1 :
                    	    // InternalKim.g:1693:5: ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:1693:5: ( ( ',' )=>otherlv_16= ',' )
                    	    // InternalKim.g:1694:6: ( ',' )=>otherlv_16= ','
                    	    {
                    	    otherlv_16=(Token)match(input,25,FOLLOW_21); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_16, grammarAccess.getClassifierRHSAccess().getCommaKeyword_6_2_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:1700:5: ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
                    	    // InternalKim.g:1701:6: (lv_toResolve_17_0= ruleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:1701:6: (lv_toResolve_17_0= ruleConceptDeclaration )
                    	    // InternalKim.g:1702:7: lv_toResolve_17_0= ruleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_27);
                    	    lv_toResolve_17_0=ruleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"toResolve",
                    	      								lv_toResolve_17_0,
                    	      								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop41;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getClassifierRHSAccess().getRightParenthesisKeyword_6_3());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:1726:3: ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:1726:3: ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) )
                    // InternalKim.g:1727:4: ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) )
                    {
                    // InternalKim.g:1727:4: ( (lv_op_19_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:1728:5: (lv_op_19_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:1728:5: (lv_op_19_0= ruleREL_OPERATOR )
                    // InternalKim.g:1729:6: lv_op_19_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getOpREL_OPERATORParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_39);
                    lv_op_19_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_19_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1746:4: ( (lv_expression_20_0= ruleNumber ) )
                    // InternalKim.g:1747:5: (lv_expression_20_0= ruleNumber )
                    {
                    // InternalKim.g:1747:5: (lv_expression_20_0= ruleNumber )
                    // InternalKim.g:1748:6: lv_expression_20_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getExpressionNumberParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_20_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_20_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:1767:3: ( (lv_nodata_21_0= 'unknown' ) )
                    {
                    // InternalKim.g:1767:3: ( (lv_nodata_21_0= 'unknown' ) )
                    // InternalKim.g:1768:4: (lv_nodata_21_0= 'unknown' )
                    {
                    // InternalKim.g:1768:4: (lv_nodata_21_0= 'unknown' )
                    // InternalKim.g:1769:5: lv_nodata_21_0= 'unknown'
                    {
                    lv_nodata_21_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_21_0, grammarAccess.getClassifierRHSAccess().getNodataUnknownKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_21_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:1782:3: ( (lv_star_22_0= '*' ) )
                    {
                    // InternalKim.g:1782:3: ( (lv_star_22_0= '*' ) )
                    // InternalKim.g:1783:4: (lv_star_22_0= '*' )
                    {
                    // InternalKim.g:1783:4: (lv_star_22_0= '*' )
                    // InternalKim.g:1784:5: lv_star_22_0= '*'
                    {
                    lv_star_22_0=(Token)match(input,38,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_22_0, grammarAccess.getClassifierRHSAccess().getStarAsteriskKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(current, "star", true, "*");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierRHS"


    // $ANTLR start "entryRuleClassifierRHSWithId"
    // InternalKim.g:1800:1: entryRuleClassifierRHSWithId returns [EObject current=null] : iv_ruleClassifierRHSWithId= ruleClassifierRHSWithId EOF ;
    public final EObject entryRuleClassifierRHSWithId() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifierRHSWithId = null;


        try {
            // InternalKim.g:1800:60: (iv_ruleClassifierRHSWithId= ruleClassifierRHSWithId EOF )
            // InternalKim.g:1801:2: iv_ruleClassifierRHSWithId= ruleClassifierRHSWithId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRHSWithIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifierRHSWithId=ruleClassifierRHSWithId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifierRHSWithId; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifierRHSWithId"


    // $ANTLR start "ruleClassifierRHSWithId"
    // InternalKim.g:1807:1: ruleClassifierRHSWithId returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) ) ;
    public final EObject ruleClassifierRHSWithId() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_string_12_0=null;
        Token lv_id_14_1=null;
        Token lv_nodata_17_0=null;
        Token lv_star_18_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_set_11_0 = null;

        EObject lv_concept_13_0 = null;

        AntlrDatatypeRuleToken lv_id_14_2 = null;

        EObject lv_op_15_0 = null;

        EObject lv_expression_16_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1813:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) ) )
            // InternalKim.g:1814:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) )
            {
            // InternalKim.g:1814:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) )
            int alt47=10;
            alt47 = dfa47.predict(input);
            switch (alt47) {
                case 1 :
                    // InternalKim.g:1815:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:1815:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt43=2;
                    int LA43_0 = input.LA(1);

                    if ( (LA43_0==26) ) {
                        alt43=1;
                    }
                    else if ( (LA43_0==27) ) {
                        alt43=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 43, 0, input);

                        throw nvae;
                    }
                    switch (alt43) {
                        case 1 :
                            // InternalKim.g:1816:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:1816:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:1817:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:1817:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:1818:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getClassifierRHSWithIdAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1831:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:1831:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:1832:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:1832:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:1833:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getClassifierRHSWithIdAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1847:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:1847:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:1848:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:1848:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:1849:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:1849:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:1850:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1867:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt44=3;
                    int LA44_0 = input.LA(1);

                    if ( (LA44_0==46) ) {
                        alt44=1;
                    }
                    else if ( (LA44_0==47) ) {
                        alt44=2;
                    }
                    switch (alt44) {
                        case 1 :
                            // InternalKim.g:1868:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1868:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:1869:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:1869:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:1870:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,46,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getClassifierRHSWithIdAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1883:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,47,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getClassifierRHSWithIdAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:1888:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:1889:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,34,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getClassifierRHSWithIdAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:1895:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:1896:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:1900:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:1901:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_40);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1918:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt45=3;
                    int LA45_0 = input.LA(1);

                    if ( (LA45_0==46) ) {
                        alt45=1;
                    }
                    else if ( (LA45_0==47) ) {
                        alt45=2;
                    }
                    switch (alt45) {
                        case 1 :
                            // InternalKim.g:1919:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1919:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:1920:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:1920:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:1921:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getClassifierRHSWithIdAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1934:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getClassifierRHSWithIdAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:1941:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:1941:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:1942:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:1942:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:1943:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:1961:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    {
                    // InternalKim.g:1961:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    // InternalKim.g:1962:4: otherlv_10= 'in' ( (lv_set_11_0= ruleList ) )
                    {
                    otherlv_10=(Token)match(input,48,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getClassifierRHSWithIdAccess().getInKeyword_3_0());
                      			
                    }
                    // InternalKim.g:1966:4: ( (lv_set_11_0= ruleList ) )
                    // InternalKim.g:1967:5: (lv_set_11_0= ruleList )
                    {
                    // InternalKim.g:1967:5: (lv_set_11_0= ruleList )
                    // InternalKim.g:1968:6: lv_set_11_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getSetListParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_set_11_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"set",
                      							lv_set_11_0,
                      							"org.integratedmodelling.kim.Kim.List");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:1987:3: ( (lv_string_12_0= RULE_STRING ) )
                    {
                    // InternalKim.g:1987:3: ( (lv_string_12_0= RULE_STRING ) )
                    // InternalKim.g:1988:4: (lv_string_12_0= RULE_STRING )
                    {
                    // InternalKim.g:1988:4: (lv_string_12_0= RULE_STRING )
                    // InternalKim.g:1989:5: lv_string_12_0= RULE_STRING
                    {
                    lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_12_0, grammarAccess.getClassifierRHSWithIdAccess().getStringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_12_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:2006:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:2006:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    // InternalKim.g:2007:4: (lv_concept_13_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:2007:4: (lv_concept_13_0= ruleConceptDeclaration )
                    // InternalKim.g:2008:5: lv_concept_13_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getConceptConceptDeclarationParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_13_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:2026:3: ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) )
                    {
                    // InternalKim.g:2026:3: ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) )
                    // InternalKim.g:2027:4: ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) )
                    {
                    // InternalKim.g:2027:4: ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) )
                    // InternalKim.g:2028:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )
                    {
                    // InternalKim.g:2028:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )
                    int alt46=2;
                    alt46 = dfa46.predict(input);
                    switch (alt46) {
                        case 1 :
                            // InternalKim.g:2029:6: lv_id_14_1= RULE_LOWERCASE_ID
                            {
                            lv_id_14_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_14_1, grammarAccess.getClassifierRHSWithIdAccess().getIdLOWERCASE_IDTerminalRuleCall_6_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_14_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:2044:6: lv_id_14_2= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getIdPropertyIdParserRuleCall_6_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_id_14_2=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                              						}
                              						set(
                              							current,
                              							"id",
                              							lv_id_14_2,
                              							"org.integratedmodelling.kim.Kim.PropertyId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:2063:3: ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:2063:3: ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) )
                    // InternalKim.g:2064:4: ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) )
                    {
                    // InternalKim.g:2064:4: ( (lv_op_15_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:2065:5: (lv_op_15_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:2065:5: (lv_op_15_0= ruleREL_OPERATOR )
                    // InternalKim.g:2066:6: lv_op_15_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getOpREL_OPERATORParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_39);
                    lv_op_15_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_15_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2083:4: ( (lv_expression_16_0= ruleNumber ) )
                    // InternalKim.g:2084:5: (lv_expression_16_0= ruleNumber )
                    {
                    // InternalKim.g:2084:5: (lv_expression_16_0= ruleNumber )
                    // InternalKim.g:2085:6: lv_expression_16_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getExpressionNumberParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_16_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_16_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:2104:3: ( (lv_nodata_17_0= 'unknown' ) )
                    {
                    // InternalKim.g:2104:3: ( (lv_nodata_17_0= 'unknown' ) )
                    // InternalKim.g:2105:4: (lv_nodata_17_0= 'unknown' )
                    {
                    // InternalKim.g:2105:4: (lv_nodata_17_0= 'unknown' )
                    // InternalKim.g:2106:5: lv_nodata_17_0= 'unknown'
                    {
                    lv_nodata_17_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_17_0, grammarAccess.getClassifierRHSWithIdAccess().getNodataUnknownKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_17_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:2119:3: ( (lv_star_18_0= '*' ) )
                    {
                    // InternalKim.g:2119:3: ( (lv_star_18_0= '*' ) )
                    // InternalKim.g:2120:4: (lv_star_18_0= '*' )
                    {
                    // InternalKim.g:2120:4: (lv_star_18_0= '*' )
                    // InternalKim.g:2121:5: lv_star_18_0= '*'
                    {
                    lv_star_18_0=(Token)match(input,38,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_18_0, grammarAccess.getClassifierRHSWithIdAccess().getStarAsteriskKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					setWithLastConsumed(current, "star", true, "*");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierRHSWithId"


    // $ANTLR start "entryRuleUrn"
    // InternalKim.g:2137:1: entryRuleUrn returns [EObject current=null] : iv_ruleUrn= ruleUrn EOF ;
    public final EObject entryRuleUrn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUrn = null;


        try {
            // InternalKim.g:2137:44: (iv_ruleUrn= ruleUrn EOF )
            // InternalKim.g:2138:2: iv_ruleUrn= ruleUrn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUrnRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUrn=ruleUrn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUrn; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUrn"


    // $ANTLR start "ruleUrn"
    // InternalKim.g:2144:1: ruleUrn returns [EObject current=null] : ( ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) ) ) ;
    public final EObject ruleUrn() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_2=null;
        AntlrDatatypeRuleToken lv_name_0_1 = null;

        AntlrDatatypeRuleToken lv_name_0_3 = null;



        	enterRule();

        try {
            // InternalKim.g:2150:2: ( ( ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) ) ) )
            // InternalKim.g:2151:2: ( ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) ) )
            {
            // InternalKim.g:2151:2: ( ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) ) )
            // InternalKim.g:2152:3: ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) )
            {
            // InternalKim.g:2152:3: ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) )
            // InternalKim.g:2153:4: (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath )
            {
            // InternalKim.g:2153:4: (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath )
            int alt48=3;
            switch ( input.LA(1) ) {
            case 88:
                {
                alt48=1;
                }
                break;
            case RULE_LOWERCASE_ID:
                {
                switch ( input.LA(2) ) {
                case 93:
                    {
                    int LA48_6 = input.LA(3);

                    if ( (LA48_6==RULE_LOWERCASE_ID) ) {
                        int LA48_7 = input.LA(4);

                        if ( (LA48_7==89||LA48_7==93) ) {
                            alt48=1;
                        }
                        else if ( (LA48_7==EOF||LA48_7==23||LA48_7==25||LA48_7==53) ) {
                            alt48=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 48, 7, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA48_6==RULE_LOWERCASE_DASHID) ) {
                        alt48=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 48, 6, input);

                        throw nvae;
                    }
                    }
                    break;
                case 89:
                    {
                    alt48=1;
                    }
                    break;
                case EOF:
                case 23:
                case 25:
                case 53:
                case 92:
                    {
                    alt48=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 2, input);

                    throw nvae;
                }

                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                switch ( input.LA(2) ) {
                case 93:
                    {
                    int LA48_6 = input.LA(3);

                    if ( (LA48_6==RULE_LOWERCASE_ID) ) {
                        int LA48_7 = input.LA(4);

                        if ( (LA48_7==89||LA48_7==93) ) {
                            alt48=1;
                        }
                        else if ( (LA48_7==EOF||LA48_7==23||LA48_7==25||LA48_7==53) ) {
                            alt48=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 48, 7, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA48_6==RULE_LOWERCASE_DASHID) ) {
                        alt48=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 48, 6, input);

                        throw nvae;
                    }
                    }
                    break;
                case 89:
                    {
                    alt48=1;
                    }
                    break;
                case EOF:
                case 23:
                case 25:
                case 53:
                case 92:
                    {
                    alt48=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 3, input);

                    throw nvae;
                }

                }
                break;
            case RULE_STRING:
                {
                alt48=2;
                }
                break;
            case RULE_CAMELCASE_ID:
                {
                alt48=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }

            switch (alt48) {
                case 1 :
                    // InternalKim.g:2154:5: lv_name_0_1= ruleUrnId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUrnAccess().getNameUrnIdParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_0_1=ruleUrnId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUrnRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_0_1,
                      						"org.integratedmodelling.kim.Kim.UrnId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:2170:5: lv_name_0_2= RULE_STRING
                    {
                    lv_name_0_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_2, grammarAccess.getUrnAccess().getNameSTRINGTerminalRuleCall_0_1());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getUrnRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_2,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:2185:5: lv_name_0_3= ruleLocalFilePath
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUrnAccess().getNameLocalFilePathParserRuleCall_0_2());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_0_3=ruleLocalFilePath();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUrnRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_0_3,
                      						"org.integratedmodelling.kim.Kim.LocalFilePath");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUrn"


    // $ANTLR start "entryRuleLookupTable"
    // InternalKim.g:2206:1: entryRuleLookupTable returns [EObject current=null] : iv_ruleLookupTable= ruleLookupTable EOF ;
    public final EObject entryRuleLookupTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLookupTable = null;


        try {
            // InternalKim.g:2206:52: (iv_ruleLookupTable= ruleLookupTable EOF )
            // InternalKim.g:2207:2: iv_ruleLookupTable= ruleLookupTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLookupTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLookupTable=ruleLookupTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLookupTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLookupTable"


    // $ANTLR start "ruleLookupTable"
    // InternalKim.g:2213:1: ruleLookupTable returns [EObject current=null] : ( () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}' ) ;
    public final EObject ruleLookupTable() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_table_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2219:2: ( ( () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}' ) )
            // InternalKim.g:2220:2: ( () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}' )
            {
            // InternalKim.g:2220:2: ( () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}' )
            // InternalKim.g:2221:3: () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}'
            {
            // InternalKim.g:2221:3: ()
            // InternalKim.g:2222:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLookupTableAccess().getLookupTableAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,50,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLookupTableAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:2235:3: ( (lv_table_2_0= ruleTable ) )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( ((LA49_0>=RULE_LOWERCASE_ID && LA49_0<=RULE_STRING)||(LA49_0>=RULE_EXPR && LA49_0<=RULE_LOWERCASE_DASHID)||LA49_0==RULE_INT||(LA49_0>=26 && LA49_0<=27)||LA49_0==36||LA49_0==38||(LA49_0>=48 && LA49_0<=49)||LA49_0==53||LA49_0==91||(LA49_0>=112 && LA49_0<=113)||(LA49_0>=121 && LA49_0<=122)||(LA49_0>=124 && LA49_0<=136)||(LA49_0>=226 && LA49_0<=230)||(LA49_0>=232 && LA49_0<=233)) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalKim.g:2236:4: (lv_table_2_0= ruleTable )
                    {
                    // InternalKim.g:2236:4: (lv_table_2_0= ruleTable )
                    // InternalKim.g:2237:5: lv_table_2_0= ruleTable
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLookupTableAccess().getTableTableParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_43);
                    lv_table_2_0=ruleTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLookupTableRule());
                      					}
                      					set(
                      						current,
                      						"table",
                      						lv_table_2_0,
                      						"org.integratedmodelling.kim.Kim.Table");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getLookupTableAccess().getRightCurlyBracketRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLookupTable"


    // $ANTLR start "entryRuleTable"
    // InternalKim.g:2262:1: entryRuleTable returns [EObject current=null] : iv_ruleTable= ruleTable EOF ;
    public final EObject entryRuleTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTable = null;


        try {
            // InternalKim.g:2262:46: (iv_ruleTable= ruleTable EOF )
            // InternalKim.g:2263:2: iv_ruleTable= ruleTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTable=ruleTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTable"


    // $ANTLR start "ruleTable"
    // InternalKim.g:2269:1: ruleTable returns [EObject current=null] : ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* ) ;
    public final EObject ruleTable() throws RecognitionException {
        EObject current = null;

        Token this_SEPARATOR_1=null;
        Token otherlv_3=null;
        EObject lv_headers_0_0 = null;

        EObject lv_rows_2_0 = null;

        EObject lv_rows_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2275:2: ( ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* ) )
            // InternalKim.g:2276:2: ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* )
            {
            // InternalKim.g:2276:2: ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* )
            // InternalKim.g:2277:3: ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )*
            {
            // InternalKim.g:2277:3: ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )?
            int alt50=2;
            alt50 = dfa50.predict(input);
            switch (alt50) {
                case 1 :
                    // InternalKim.g:2278:4: ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR
                    {
                    // InternalKim.g:2278:4: ( (lv_headers_0_0= ruleHeaderRow ) )
                    // InternalKim.g:2279:5: (lv_headers_0_0= ruleHeaderRow )
                    {
                    // InternalKim.g:2279:5: (lv_headers_0_0= ruleHeaderRow )
                    // InternalKim.g:2280:6: lv_headers_0_0= ruleHeaderRow
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableAccess().getHeadersHeaderRowParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_44);
                    lv_headers_0_0=ruleHeaderRow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableRule());
                      						}
                      						set(
                      							current,
                      							"headers",
                      							lv_headers_0_0,
                      							"org.integratedmodelling.kim.Kim.HeaderRow");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    this_SEPARATOR_1=(Token)match(input,RULE_SEPARATOR,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_SEPARATOR_1, grammarAccess.getTableAccess().getSEPARATORTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:2302:3: ( (lv_rows_2_0= ruleTableRow ) )
            // InternalKim.g:2303:4: (lv_rows_2_0= ruleTableRow )
            {
            // InternalKim.g:2303:4: (lv_rows_2_0= ruleTableRow )
            // InternalKim.g:2304:5: lv_rows_2_0= ruleTableRow
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_35);
            lv_rows_2_0=ruleTableRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTableRule());
              					}
              					add(
              						current,
              						"rows",
              						lv_rows_2_0,
              						"org.integratedmodelling.kim.Kim.TableRow");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:2321:3: (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==25) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalKim.g:2322:4: otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) )
            	    {
            	    otherlv_3=(Token)match(input,25,FOLLOW_29); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getTableAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalKim.g:2326:4: ( (lv_rows_4_0= ruleTableRow ) )
            	    // InternalKim.g:2327:5: (lv_rows_4_0= ruleTableRow )
            	    {
            	    // InternalKim.g:2327:5: (lv_rows_4_0= ruleTableRow )
            	    // InternalKim.g:2328:6: lv_rows_4_0= ruleTableRow
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_rows_4_0=ruleTableRow();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTableRule());
            	      						}
            	      						add(
            	      							current,
            	      							"rows",
            	      							lv_rows_4_0,
            	      							"org.integratedmodelling.kim.Kim.TableRow");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTable"


    // $ANTLR start "entryRuleHeaderRow"
    // InternalKim.g:2350:1: entryRuleHeaderRow returns [EObject current=null] : iv_ruleHeaderRow= ruleHeaderRow EOF ;
    public final EObject entryRuleHeaderRow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHeaderRow = null;


        try {
            // InternalKim.g:2350:50: (iv_ruleHeaderRow= ruleHeaderRow EOF )
            // InternalKim.g:2351:2: iv_ruleHeaderRow= ruleHeaderRow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHeaderRowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHeaderRow=ruleHeaderRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHeaderRow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHeaderRow"


    // $ANTLR start "ruleHeaderRow"
    // InternalKim.g:2357:1: ruleHeaderRow returns [EObject current=null] : ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* ) ;
    public final EObject ruleHeaderRow() throws RecognitionException {
        EObject current = null;

        Token lv_elements_0_1=null;
        Token lv_elements_0_2=null;
        Token otherlv_1=null;
        Token lv_elements_2_1=null;
        Token lv_elements_2_2=null;


        	enterRule();

        try {
            // InternalKim.g:2363:2: ( ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* ) )
            // InternalKim.g:2364:2: ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* )
            {
            // InternalKim.g:2364:2: ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* )
            // InternalKim.g:2365:3: ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )*
            {
            // InternalKim.g:2365:3: ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) )
            // InternalKim.g:2366:4: ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) )
            {
            // InternalKim.g:2366:4: ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) )
            // InternalKim.g:2367:5: (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING )
            {
            // InternalKim.g:2367:5: (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING )
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==RULE_LOWERCASE_ID) ) {
                alt52=1;
            }
            else if ( (LA52_0==RULE_STRING) ) {
                alt52=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }
            switch (alt52) {
                case 1 :
                    // InternalKim.g:2368:6: lv_elements_0_1= RULE_LOWERCASE_ID
                    {
                    lv_elements_0_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_elements_0_1, grammarAccess.getHeaderRowAccess().getElementsLOWERCASE_IDTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHeaderRowRule());
                      						}
                      						addWithLastConsumed(
                      							current,
                      							"elements",
                      							lv_elements_0_1,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:2383:6: lv_elements_0_2= RULE_STRING
                    {
                    lv_elements_0_2=(Token)match(input,RULE_STRING,FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_elements_0_2, grammarAccess.getHeaderRowAccess().getElementsSTRINGTerminalRuleCall_0_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHeaderRowRule());
                      						}
                      						addWithLastConsumed(
                      							current,
                      							"elements",
                      							lv_elements_0_2,
                      							"org.eclipse.xtext.common.Terminals.STRING");
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalKim.g:2400:3: (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==52) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalKim.g:2401:4: otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) )
            	    {
            	    otherlv_1=(Token)match(input,52,FOLLOW_46); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getHeaderRowAccess().getVerticalLineKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:2405:4: ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) )
            	    // InternalKim.g:2406:5: ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) )
            	    {
            	    // InternalKim.g:2406:5: ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) )
            	    // InternalKim.g:2407:6: (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING )
            	    {
            	    // InternalKim.g:2407:6: (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING )
            	    int alt53=2;
            	    int LA53_0 = input.LA(1);

            	    if ( (LA53_0==RULE_LOWERCASE_ID) ) {
            	        alt53=1;
            	    }
            	    else if ( (LA53_0==RULE_STRING) ) {
            	        alt53=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 53, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt53) {
            	        case 1 :
            	            // InternalKim.g:2408:7: lv_elements_2_1= RULE_LOWERCASE_ID
            	            {
            	            lv_elements_2_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_45); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_elements_2_1, grammarAccess.getHeaderRowAccess().getElementsLOWERCASE_IDTerminalRuleCall_1_1_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getHeaderRowRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"elements",
            	              								lv_elements_2_1,
            	              								"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:2423:7: lv_elements_2_2= RULE_STRING
            	            {
            	            lv_elements_2_2=(Token)match(input,RULE_STRING,FOLLOW_45); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_elements_2_2, grammarAccess.getHeaderRowAccess().getElementsSTRINGTerminalRuleCall_1_1_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getHeaderRowRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"elements",
            	              								lv_elements_2_2,
            	              								"org.eclipse.xtext.common.Terminals.STRING");
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHeaderRow"


    // $ANTLR start "entryRuleTableRow"
    // InternalKim.g:2445:1: entryRuleTableRow returns [EObject current=null] : iv_ruleTableRow= ruleTableRow EOF ;
    public final EObject entryRuleTableRow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTableRow = null;


        try {
            // InternalKim.g:2445:49: (iv_ruleTableRow= ruleTableRow EOF )
            // InternalKim.g:2446:2: iv_ruleTableRow= ruleTableRow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableRowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTableRow=ruleTableRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTableRow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTableRow"


    // $ANTLR start "ruleTableRow"
    // InternalKim.g:2452:1: ruleTableRow returns [EObject current=null] : ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* ) ;
    public final EObject ruleTableRow() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_elements_0_0 = null;

        EObject lv_elements_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2458:2: ( ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* ) )
            // InternalKim.g:2459:2: ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* )
            {
            // InternalKim.g:2459:2: ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* )
            // InternalKim.g:2460:3: ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )*
            {
            // InternalKim.g:2460:3: ( (lv_elements_0_0= ruleTableClassifier ) )
            // InternalKim.g:2461:4: (lv_elements_0_0= ruleTableClassifier )
            {
            // InternalKim.g:2461:4: (lv_elements_0_0= ruleTableClassifier )
            // InternalKim.g:2462:5: lv_elements_0_0= ruleTableClassifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTableRowAccess().getElementsTableClassifierParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_45);
            lv_elements_0_0=ruleTableClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTableRowRule());
              					}
              					add(
              						current,
              						"elements",
              						lv_elements_0_0,
              						"org.integratedmodelling.kim.Kim.TableClassifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:2479:3: (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==52) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalKim.g:2480:4: otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) )
            	    {
            	    otherlv_1=(Token)match(input,52,FOLLOW_29); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getTableRowAccess().getVerticalLineKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:2484:4: ( (lv_elements_2_0= ruleTableClassifier ) )
            	    // InternalKim.g:2485:5: (lv_elements_2_0= ruleTableClassifier )
            	    {
            	    // InternalKim.g:2485:5: (lv_elements_2_0= ruleTableClassifier )
            	    // InternalKim.g:2486:6: lv_elements_2_0= ruleTableClassifier
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTableRowAccess().getElementsTableClassifierParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_45);
            	    lv_elements_2_0=ruleTableClassifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTableRowRule());
            	      						}
            	      						add(
            	      							current,
            	      							"elements",
            	      							lv_elements_2_0,
            	      							"org.integratedmodelling.kim.Kim.TableClassifier");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTableRow"


    // $ANTLR start "entryRuleTableClassifier"
    // InternalKim.g:2508:1: entryRuleTableClassifier returns [EObject current=null] : iv_ruleTableClassifier= ruleTableClassifier EOF ;
    public final EObject entryRuleTableClassifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTableClassifier = null;


        try {
            // InternalKim.g:2508:56: (iv_ruleTableClassifier= ruleTableClassifier EOF )
            // InternalKim.g:2509:2: iv_ruleTableClassifier= ruleTableClassifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableClassifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTableClassifier=ruleTableClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTableClassifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTableClassifier"


    // $ANTLR start "ruleTableClassifier"
    // InternalKim.g:2515:1: ruleTableClassifier returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_expr_16_0= RULE_EXPR ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) | ( (lv_anything_19_0= '#' ) ) ) ;
    public final EObject ruleTableClassifier() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_string_12_0=null;
        Token lv_expr_16_0=null;
        Token lv_nodata_17_0=null;
        Token lv_star_18_0=null;
        Token lv_anything_19_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_set_11_0 = null;

        EObject lv_concept_13_0 = null;

        EObject lv_op_14_0 = null;

        EObject lv_expression_15_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2521:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_expr_16_0= RULE_EXPR ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) | ( (lv_anything_19_0= '#' ) ) ) )
            // InternalKim.g:2522:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_expr_16_0= RULE_EXPR ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) | ( (lv_anything_19_0= '#' ) ) )
            {
            // InternalKim.g:2522:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_expr_16_0= RULE_EXPR ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) | ( (lv_anything_19_0= '#' ) ) )
            int alt59=11;
            alt59 = dfa59.predict(input);
            switch (alt59) {
                case 1 :
                    // InternalKim.g:2523:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:2523:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt56=2;
                    int LA56_0 = input.LA(1);

                    if ( (LA56_0==26) ) {
                        alt56=1;
                    }
                    else if ( (LA56_0==27) ) {
                        alt56=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 56, 0, input);

                        throw nvae;
                    }
                    switch (alt56) {
                        case 1 :
                            // InternalKim.g:2524:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:2524:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:2525:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:2525:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:2526:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getTableClassifierAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTableClassifierRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2539:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:2539:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:2540:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:2540:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:2541:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getTableClassifierAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTableClassifierRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:2555:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:2555:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:2556:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:2556:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:2557:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:2557:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:2558:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2575:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt57=3;
                    int LA57_0 = input.LA(1);

                    if ( (LA57_0==46) ) {
                        alt57=1;
                    }
                    else if ( (LA57_0==47) ) {
                        alt57=2;
                    }
                    switch (alt57) {
                        case 1 :
                            // InternalKim.g:2576:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:2576:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:2577:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:2577:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:2578:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,46,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getTableClassifierAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getTableClassifierRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2591:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,47,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getTableClassifierAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:2596:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:2597:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,34,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getTableClassifierAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:2603:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:2604:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:2608:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:2609:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_40);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2626:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt58=3;
                    int LA58_0 = input.LA(1);

                    if ( (LA58_0==46) ) {
                        alt58=1;
                    }
                    else if ( (LA58_0==47) ) {
                        alt58=2;
                    }
                    switch (alt58) {
                        case 1 :
                            // InternalKim.g:2627:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:2627:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:2628:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:2628:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:2629:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getTableClassifierAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getTableClassifierRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2642:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getTableClassifierAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:2649:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:2649:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:2650:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:2650:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:2651:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:2669:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    {
                    // InternalKim.g:2669:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    // InternalKim.g:2670:4: otherlv_10= 'in' ( (lv_set_11_0= ruleList ) )
                    {
                    otherlv_10=(Token)match(input,48,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getTableClassifierAccess().getInKeyword_3_0());
                      			
                    }
                    // InternalKim.g:2674:4: ( (lv_set_11_0= ruleList ) )
                    // InternalKim.g:2675:5: (lv_set_11_0= ruleList )
                    {
                    // InternalKim.g:2675:5: (lv_set_11_0= ruleList )
                    // InternalKim.g:2676:6: lv_set_11_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getSetListParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_set_11_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"set",
                      							lv_set_11_0,
                      							"org.integratedmodelling.kim.Kim.List");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:2695:3: ( (lv_string_12_0= RULE_STRING ) )
                    {
                    // InternalKim.g:2695:3: ( (lv_string_12_0= RULE_STRING ) )
                    // InternalKim.g:2696:4: (lv_string_12_0= RULE_STRING )
                    {
                    // InternalKim.g:2696:4: (lv_string_12_0= RULE_STRING )
                    // InternalKim.g:2697:5: lv_string_12_0= RULE_STRING
                    {
                    lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_12_0, grammarAccess.getTableClassifierAccess().getStringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_12_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:2714:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:2714:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    // InternalKim.g:2715:4: (lv_concept_13_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:2715:4: (lv_concept_13_0= ruleConceptDeclaration )
                    // InternalKim.g:2716:5: lv_concept_13_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getConceptConceptDeclarationParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_13_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:2734:3: ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:2734:3: ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) )
                    // InternalKim.g:2735:4: ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) )
                    {
                    // InternalKim.g:2735:4: ( (lv_op_14_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:2736:5: (lv_op_14_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:2736:5: (lv_op_14_0= ruleREL_OPERATOR )
                    // InternalKim.g:2737:6: lv_op_14_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getOpREL_OPERATORParserRuleCall_6_0_0());
                      					
                    }
                    pushFollow(FOLLOW_39);
                    lv_op_14_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_14_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2754:4: ( (lv_expression_15_0= ruleNumber ) )
                    // InternalKim.g:2755:5: (lv_expression_15_0= ruleNumber )
                    {
                    // InternalKim.g:2755:5: (lv_expression_15_0= ruleNumber )
                    // InternalKim.g:2756:6: lv_expression_15_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getExpressionNumberParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_15_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_15_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:2775:3: ( (lv_expr_16_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:2775:3: ( (lv_expr_16_0= RULE_EXPR ) )
                    // InternalKim.g:2776:4: (lv_expr_16_0= RULE_EXPR )
                    {
                    // InternalKim.g:2776:4: (lv_expr_16_0= RULE_EXPR )
                    // InternalKim.g:2777:5: lv_expr_16_0= RULE_EXPR
                    {
                    lv_expr_16_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_16_0, grammarAccess.getTableClassifierAccess().getExprEXPRTerminalRuleCall_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_16_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:2794:3: ( (lv_nodata_17_0= 'unknown' ) )
                    {
                    // InternalKim.g:2794:3: ( (lv_nodata_17_0= 'unknown' ) )
                    // InternalKim.g:2795:4: (lv_nodata_17_0= 'unknown' )
                    {
                    // InternalKim.g:2795:4: (lv_nodata_17_0= 'unknown' )
                    // InternalKim.g:2796:5: lv_nodata_17_0= 'unknown'
                    {
                    lv_nodata_17_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_17_0, grammarAccess.getTableClassifierAccess().getNodataUnknownKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_17_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:2809:3: ( (lv_star_18_0= '*' ) )
                    {
                    // InternalKim.g:2809:3: ( (lv_star_18_0= '*' ) )
                    // InternalKim.g:2810:4: (lv_star_18_0= '*' )
                    {
                    // InternalKim.g:2810:4: (lv_star_18_0= '*' )
                    // InternalKim.g:2811:5: lv_star_18_0= '*'
                    {
                    lv_star_18_0=(Token)match(input,38,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_18_0, grammarAccess.getTableClassifierAccess().getStarAsteriskKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "star", true, "*");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalKim.g:2824:3: ( (lv_anything_19_0= '#' ) )
                    {
                    // InternalKim.g:2824:3: ( (lv_anything_19_0= '#' ) )
                    // InternalKim.g:2825:4: (lv_anything_19_0= '#' )
                    {
                    // InternalKim.g:2825:4: (lv_anything_19_0= '#' )
                    // InternalKim.g:2826:5: lv_anything_19_0= '#'
                    {
                    lv_anything_19_0=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_anything_19_0, grammarAccess.getTableClassifierAccess().getAnythingNumberSignKeyword_10_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "anything", true, "#");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTableClassifier"


    // $ANTLR start "entryRuleActionSpecification"
    // InternalKim.g:2842:1: entryRuleActionSpecification returns [EObject current=null] : iv_ruleActionSpecification= ruleActionSpecification EOF ;
    public final EObject entryRuleActionSpecification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleActionSpecification = null;


        try {
            // InternalKim.g:2842:60: (iv_ruleActionSpecification= ruleActionSpecification EOF )
            // InternalKim.g:2843:2: iv_ruleActionSpecification= ruleActionSpecification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionSpecificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleActionSpecification=ruleActionSpecification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleActionSpecification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleActionSpecification"


    // $ANTLR start "ruleActionSpecification"
    // InternalKim.g:2849:1: ruleActionSpecification returns [EObject current=null] : ( ( ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )? ) ) ;
    public final EObject ruleActionSpecification() throws RecognitionException {
        EObject current = null;

        Token lv_integrated_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token lv_trigger_8_0=null;
        Token lv_initialization_9_0=null;
        Token lv_resolution_10_0=null;
        Token lv_instantiation_11_0=null;
        Token lv_termination_12_0=null;
        Token lv_stateInitialization_13_0=null;
        Token otherlv_15=null;
        Token lv_anyContextEvent_16_0=null;
        Token lv_relatedEventContext_17_0=null;
        Token otherlv_21=null;
        EObject lv_domain_2_0 = null;

        EObject lv_domain_4_0 = null;

        EObject lv_actions_5_0 = null;

        EObject lv_actions_7_0 = null;

        EObject lv_event_14_0 = null;

        EObject lv_eventContext_18_0 = null;

        EObject lv_parameters_19_0 = null;

        EObject lv_actions_20_0 = null;

        EObject lv_actions_22_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2855:2: ( ( ( ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )? ) ) )
            // InternalKim.g:2856:2: ( ( ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )? ) )
            {
            // InternalKim.g:2856:2: ( ( ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )? ) )
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( ((LA70_0>=54 && LA70_0<=55)) ) {
                alt70=1;
            }
            else if ( (LA70_0==56) ) {
                alt70=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }
            switch (alt70) {
                case 1 :
                    // InternalKim.g:2857:3: ( ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? )
                    {
                    // InternalKim.g:2857:3: ( ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? )
                    // InternalKim.g:2858:4: ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )?
                    {
                    // InternalKim.g:2858:4: ( (lv_integrated_0_0= 'aggregated' ) )?
                    int alt60=2;
                    int LA60_0 = input.LA(1);

                    if ( (LA60_0==54) ) {
                        alt60=1;
                    }
                    switch (alt60) {
                        case 1 :
                            // InternalKim.g:2859:5: (lv_integrated_0_0= 'aggregated' )
                            {
                            // InternalKim.g:2859:5: (lv_integrated_0_0= 'aggregated' )
                            // InternalKim.g:2860:6: lv_integrated_0_0= 'aggregated'
                            {
                            lv_integrated_0_0=(Token)match(input,54,FOLLOW_47); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_integrated_0_0, grammarAccess.getActionSpecificationAccess().getIntegratedAggregatedKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getActionSpecificationRule());
                              						}
                              						setWithLastConsumed(current, "integrated", true, "aggregated");
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_1=(Token)match(input,55,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getActionSpecificationAccess().getOverKeyword_0_1());
                      			
                    }
                    // InternalKim.g:2876:4: ( (lv_domain_2_0= ruleFunctionOrID ) )
                    // InternalKim.g:2877:5: (lv_domain_2_0= ruleFunctionOrID )
                    {
                    // InternalKim.g:2877:5: (lv_domain_2_0= ruleFunctionOrID )
                    // InternalKim.g:2878:6: lv_domain_2_0= ruleFunctionOrID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionSpecificationAccess().getDomainFunctionOrIDParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_48);
                    lv_domain_2_0=ruleFunctionOrID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                      						}
                      						add(
                      							current,
                      							"domain",
                      							lv_domain_2_0,
                      							"org.integratedmodelling.kim.Kim.FunctionOrID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2895:4: ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )*
                    loop61:
                    do {
                        int alt61=2;
                        int LA61_0 = input.LA(1);

                        if ( (LA61_0==25) ) {
                            alt61=1;
                        }


                        switch (alt61) {
                    	case 1 :
                    	    // InternalKim.g:2896:5: ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) )
                    	    {
                    	    // InternalKim.g:2896:5: ( ( ',' )=>otherlv_3= ',' )
                    	    // InternalKim.g:2897:6: ( ',' )=>otherlv_3= ','
                    	    {
                    	    otherlv_3=(Token)match(input,25,FOLLOW_24); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_3, grammarAccess.getActionSpecificationAccess().getCommaKeyword_0_3_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:2903:5: ( (lv_domain_4_0= ruleFunctionOrID ) )
                    	    // InternalKim.g:2904:6: (lv_domain_4_0= ruleFunctionOrID )
                    	    {
                    	    // InternalKim.g:2904:6: (lv_domain_4_0= ruleFunctionOrID )
                    	    // InternalKim.g:2905:7: lv_domain_4_0= ruleFunctionOrID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionSpecificationAccess().getDomainFunctionOrIDParserRuleCall_0_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_48);
                    	    lv_domain_4_0=ruleFunctionOrID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"domain",
                    	      								lv_domain_4_0,
                    	      								"org.integratedmodelling.kim.Kim.FunctionOrID");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop61;
                        }
                    } while (true);

                    // InternalKim.g:2923:4: ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )?
                    int alt63=2;
                    int LA63_0 = input.LA(1);

                    if ( ((LA63_0>=64 && LA63_0<=68)) ) {
                        alt63=1;
                    }
                    switch (alt63) {
                        case 1 :
                            // InternalKim.g:2924:5: ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
                            {
                            // InternalKim.g:2924:5: ( (lv_actions_5_0= ruleAction ) )
                            // InternalKim.g:2925:6: (lv_actions_5_0= ruleAction )
                            {
                            // InternalKim.g:2925:6: (lv_actions_5_0= ruleAction )
                            // InternalKim.g:2926:7: lv_actions_5_0= ruleAction
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_0_0());
                              						
                            }
                            pushFollow(FOLLOW_35);
                            lv_actions_5_0=ruleAction();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                              							}
                              							add(
                              								current,
                              								"actions",
                              								lv_actions_5_0,
                              								"org.integratedmodelling.kim.Kim.Action");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalKim.g:2943:5: ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
                            loop62:
                            do {
                                int alt62=2;
                                int LA62_0 = input.LA(1);

                                if ( (LA62_0==25) ) {
                                    alt62=1;
                                }


                                switch (alt62) {
                            	case 1 :
                            	    // InternalKim.g:2944:6: ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) )
                            	    {
                            	    // InternalKim.g:2944:6: ( ( ',' )=>otherlv_6= ',' )
                            	    // InternalKim.g:2945:7: ( ',' )=>otherlv_6= ','
                            	    {
                            	    otherlv_6=(Token)match(input,25,FOLLOW_49); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_6, grammarAccess.getActionSpecificationAccess().getCommaKeyword_0_4_1_0());
                            	      						
                            	    }

                            	    }

                            	    // InternalKim.g:2951:6: ( (lv_actions_7_0= ruleAction ) )
                            	    // InternalKim.g:2952:7: (lv_actions_7_0= ruleAction )
                            	    {
                            	    // InternalKim.g:2952:7: (lv_actions_7_0= ruleAction )
                            	    // InternalKim.g:2953:8: lv_actions_7_0= ruleAction
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_35);
                            	    lv_actions_7_0=ruleAction();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"actions",
                            	      									lv_actions_7_0,
                            	      									"org.integratedmodelling.kim.Kim.Action");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop62;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:2974:3: ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )? )
                    {
                    // InternalKim.g:2974:3: ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )? )
                    // InternalKim.g:2975:4: ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )?
                    {
                    // InternalKim.g:2975:4: ( (lv_trigger_8_0= 'on' ) )
                    // InternalKim.g:2976:5: (lv_trigger_8_0= 'on' )
                    {
                    // InternalKim.g:2976:5: (lv_trigger_8_0= 'on' )
                    // InternalKim.g:2977:6: lv_trigger_8_0= 'on'
                    {
                    lv_trigger_8_0=(Token)match(input,56,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_trigger_8_0, grammarAccess.getActionSpecificationAccess().getTriggerOnKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionSpecificationRule());
                      						}
                      						setWithLastConsumed(current, "trigger", true, "on");
                      					
                    }

                    }


                    }

                    // InternalKim.g:2989:4: ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) )
                    int alt66=6;
                    switch ( input.LA(1) ) {
                    case 57:
                        {
                        alt66=1;
                        }
                        break;
                    case 58:
                        {
                        alt66=2;
                        }
                        break;
                    case 59:
                        {
                        alt66=3;
                        }
                        break;
                    case 60:
                        {
                        alt66=4;
                        }
                        break;
                    case 61:
                        {
                        alt66=5;
                        }
                        break;
                    case RULE_LOWERCASE_ID:
                    case RULE_CAMELCASE_ID:
                    case RULE_LOWERCASE_DASHID:
                    case 36:
                    case 112:
                    case 113:
                    case 121:
                    case 122:
                    case 124:
                    case 125:
                    case 126:
                    case 127:
                    case 128:
                    case 129:
                    case 130:
                    case 131:
                    case 132:
                    case 133:
                    case 134:
                    case 135:
                    case 136:
                        {
                        alt66=6;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 66, 0, input);

                        throw nvae;
                    }

                    switch (alt66) {
                        case 1 :
                            // InternalKim.g:2990:5: ( (lv_initialization_9_0= 'definition' ) )
                            {
                            // InternalKim.g:2990:5: ( (lv_initialization_9_0= 'definition' ) )
                            // InternalKim.g:2991:6: (lv_initialization_9_0= 'definition' )
                            {
                            // InternalKim.g:2991:6: (lv_initialization_9_0= 'definition' )
                            // InternalKim.g:2992:7: lv_initialization_9_0= 'definition'
                            {
                            lv_initialization_9_0=(Token)match(input,57,FOLLOW_51); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_initialization_9_0, grammarAccess.getActionSpecificationAccess().getInitializationDefinitionKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "initialization", true, "definition");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:3005:5: ( (lv_resolution_10_0= 'resolution' ) )
                            {
                            // InternalKim.g:3005:5: ( (lv_resolution_10_0= 'resolution' ) )
                            // InternalKim.g:3006:6: (lv_resolution_10_0= 'resolution' )
                            {
                            // InternalKim.g:3006:6: (lv_resolution_10_0= 'resolution' )
                            // InternalKim.g:3007:7: lv_resolution_10_0= 'resolution'
                            {
                            lv_resolution_10_0=(Token)match(input,58,FOLLOW_51); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_resolution_10_0, grammarAccess.getActionSpecificationAccess().getResolutionResolutionKeyword_1_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "resolution", true, "resolution");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:3020:5: ( (lv_instantiation_11_0= 'instantiation' ) )
                            {
                            // InternalKim.g:3020:5: ( (lv_instantiation_11_0= 'instantiation' ) )
                            // InternalKim.g:3021:6: (lv_instantiation_11_0= 'instantiation' )
                            {
                            // InternalKim.g:3021:6: (lv_instantiation_11_0= 'instantiation' )
                            // InternalKim.g:3022:7: lv_instantiation_11_0= 'instantiation'
                            {
                            lv_instantiation_11_0=(Token)match(input,59,FOLLOW_51); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_instantiation_11_0, grammarAccess.getActionSpecificationAccess().getInstantiationInstantiationKeyword_1_1_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "instantiation", true, "instantiation");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:3035:5: ( (lv_termination_12_0= 'termination' ) )
                            {
                            // InternalKim.g:3035:5: ( (lv_termination_12_0= 'termination' ) )
                            // InternalKim.g:3036:6: (lv_termination_12_0= 'termination' )
                            {
                            // InternalKim.g:3036:6: (lv_termination_12_0= 'termination' )
                            // InternalKim.g:3037:7: lv_termination_12_0= 'termination'
                            {
                            lv_termination_12_0=(Token)match(input,60,FOLLOW_51); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_termination_12_0, grammarAccess.getActionSpecificationAccess().getTerminationTerminationKeyword_1_1_3_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "termination", true, "termination");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 5 :
                            // InternalKim.g:3050:5: ( (lv_stateInitialization_13_0= 'initialization' ) )
                            {
                            // InternalKim.g:3050:5: ( (lv_stateInitialization_13_0= 'initialization' ) )
                            // InternalKim.g:3051:6: (lv_stateInitialization_13_0= 'initialization' )
                            {
                            // InternalKim.g:3051:6: (lv_stateInitialization_13_0= 'initialization' )
                            // InternalKim.g:3052:7: lv_stateInitialization_13_0= 'initialization'
                            {
                            lv_stateInitialization_13_0=(Token)match(input,61,FOLLOW_51); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_stateInitialization_13_0, grammarAccess.getActionSpecificationAccess().getStateInitializationInitializationKeyword_1_1_4_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "stateInitialization", true, "initialization");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 6 :
                            // InternalKim.g:3065:5: ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? )
                            {
                            // InternalKim.g:3065:5: ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? )
                            // InternalKim.g:3066:6: ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )?
                            {
                            // InternalKim.g:3066:6: ( (lv_event_14_0= ruleConceptDeclaration ) )
                            // InternalKim.g:3067:7: (lv_event_14_0= ruleConceptDeclaration )
                            {
                            // InternalKim.g:3067:7: (lv_event_14_0= ruleConceptDeclaration )
                            // InternalKim.g:3068:8: lv_event_14_0= ruleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getActionSpecificationAccess().getEventConceptDeclarationParserRuleCall_1_1_5_0_0());
                              							
                            }
                            pushFollow(FOLLOW_52);
                            lv_event_14_0=ruleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                              								}
                              								set(
                              									current,
                              									"event",
                              									lv_event_14_0,
                              									"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalKim.g:3085:6: (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )?
                            int alt65=2;
                            int LA65_0 = input.LA(1);

                            if ( (LA65_0==48) ) {
                                alt65=1;
                            }
                            switch (alt65) {
                                case 1 :
                                    // InternalKim.g:3086:7: otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) )
                                    {
                                    otherlv_15=(Token)match(input,48,FOLLOW_53); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_15, grammarAccess.getActionSpecificationAccess().getInKeyword_1_1_5_1_0());
                                      						
                                    }
                                    // InternalKim.g:3090:7: ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) )
                                    int alt64=2;
                                    int LA64_0 = input.LA(1);

                                    if ( (LA64_0==62) ) {
                                        alt64=1;
                                    }
                                    else if ( (LA64_0==63) ) {
                                        alt64=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 64, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt64) {
                                        case 1 :
                                            // InternalKim.g:3091:8: ( (lv_anyContextEvent_16_0= 'context' ) )
                                            {
                                            // InternalKim.g:3091:8: ( (lv_anyContextEvent_16_0= 'context' ) )
                                            // InternalKim.g:3092:9: (lv_anyContextEvent_16_0= 'context' )
                                            {
                                            // InternalKim.g:3092:9: (lv_anyContextEvent_16_0= 'context' )
                                            // InternalKim.g:3093:10: lv_anyContextEvent_16_0= 'context'
                                            {
                                            lv_anyContextEvent_16_0=(Token)match(input,62,FOLLOW_51); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										newLeafNode(lv_anyContextEvent_16_0, grammarAccess.getActionSpecificationAccess().getAnyContextEventContextKeyword_1_1_5_1_1_0_0());
                                              									
                                            }
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElement(grammarAccess.getActionSpecificationRule());
                                              										}
                                              										setWithLastConsumed(current, "anyContextEvent", true, "context");
                                              									
                                            }

                                            }


                                            }


                                            }
                                            break;
                                        case 2 :
                                            // InternalKim.g:3106:8: ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) )
                                            {
                                            // InternalKim.g:3106:8: ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) )
                                            // InternalKim.g:3107:9: ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) )
                                            {
                                            // InternalKim.g:3107:9: ( (lv_relatedEventContext_17_0= 'related' ) )
                                            // InternalKim.g:3108:10: (lv_relatedEventContext_17_0= 'related' )
                                            {
                                            // InternalKim.g:3108:10: (lv_relatedEventContext_17_0= 'related' )
                                            // InternalKim.g:3109:11: lv_relatedEventContext_17_0= 'related'
                                            {
                                            lv_relatedEventContext_17_0=(Token)match(input,63,FOLLOW_21); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											newLeafNode(lv_relatedEventContext_17_0, grammarAccess.getActionSpecificationAccess().getRelatedEventContextRelatedKeyword_1_1_5_1_1_1_0_0());
                                              										
                                            }
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElement(grammarAccess.getActionSpecificationRule());
                                              											}
                                              											setWithLastConsumed(current, "relatedEventContext", true, "related");
                                              										
                                            }

                                            }


                                            }

                                            // InternalKim.g:3121:9: ( (lv_eventContext_18_0= ruleConceptDeclaration ) )
                                            // InternalKim.g:3122:10: (lv_eventContext_18_0= ruleConceptDeclaration )
                                            {
                                            // InternalKim.g:3122:10: (lv_eventContext_18_0= ruleConceptDeclaration )
                                            // InternalKim.g:3123:11: lv_eventContext_18_0= ruleConceptDeclaration
                                            {
                                            if ( state.backtracking==0 ) {

                                              											newCompositeNode(grammarAccess.getActionSpecificationAccess().getEventContextConceptDeclarationParserRuleCall_1_1_5_1_1_1_1_0());
                                              										
                                            }
                                            pushFollow(FOLLOW_51);
                                            lv_eventContext_18_0=ruleConceptDeclaration();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                                              											}
                                              											set(
                                              												current,
                                              												"eventContext",
                                              												lv_eventContext_18_0,
                                              												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                                              											afterParserOrEnumRuleCall();
                                              										
                                            }

                                            }


                                            }


                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:3145:4: ( (lv_parameters_19_0= ruleList ) )?
                    int alt67=2;
                    alt67 = dfa67.predict(input);
                    switch (alt67) {
                        case 1 :
                            // InternalKim.g:3146:5: (lv_parameters_19_0= ruleList )
                            {
                            // InternalKim.g:3146:5: (lv_parameters_19_0= ruleList )
                            // InternalKim.g:3147:6: lv_parameters_19_0= ruleList
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getActionSpecificationAccess().getParametersListParserRuleCall_1_2_0());
                              					
                            }
                            pushFollow(FOLLOW_54);
                            lv_parameters_19_0=ruleList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                              						}
                              						set(
                              							current,
                              							"parameters",
                              							lv_parameters_19_0,
                              							"org.integratedmodelling.kim.Kim.List");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:3164:4: ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )?
                    int alt69=2;
                    int LA69_0 = input.LA(1);

                    if ( ((LA69_0>=64 && LA69_0<=68)) ) {
                        alt69=1;
                    }
                    switch (alt69) {
                        case 1 :
                            // InternalKim.g:3165:5: ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )*
                            {
                            // InternalKim.g:3165:5: ( (lv_actions_20_0= ruleAction ) )
                            // InternalKim.g:3166:6: (lv_actions_20_0= ruleAction )
                            {
                            // InternalKim.g:3166:6: (lv_actions_20_0= ruleAction )
                            // InternalKim.g:3167:7: lv_actions_20_0= ruleAction
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_1_3_0_0());
                              						
                            }
                            pushFollow(FOLLOW_35);
                            lv_actions_20_0=ruleAction();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                              							}
                              							add(
                              								current,
                              								"actions",
                              								lv_actions_20_0,
                              								"org.integratedmodelling.kim.Kim.Action");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalKim.g:3184:5: ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )*
                            loop68:
                            do {
                                int alt68=2;
                                int LA68_0 = input.LA(1);

                                if ( (LA68_0==25) ) {
                                    alt68=1;
                                }


                                switch (alt68) {
                            	case 1 :
                            	    // InternalKim.g:3185:6: ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) )
                            	    {
                            	    // InternalKim.g:3185:6: ( ( ',' )=>otherlv_21= ',' )
                            	    // InternalKim.g:3186:7: ( ',' )=>otherlv_21= ','
                            	    {
                            	    otherlv_21=(Token)match(input,25,FOLLOW_49); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_21, grammarAccess.getActionSpecificationAccess().getCommaKeyword_1_3_1_0());
                            	      						
                            	    }

                            	    }

                            	    // InternalKim.g:3192:6: ( (lv_actions_22_0= ruleAction ) )
                            	    // InternalKim.g:3193:7: (lv_actions_22_0= ruleAction )
                            	    {
                            	    // InternalKim.g:3193:7: (lv_actions_22_0= ruleAction )
                            	    // InternalKim.g:3194:8: lv_actions_22_0= ruleAction
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_1_3_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_35);
                            	    lv_actions_22_0=ruleAction();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"actions",
                            	      									lv_actions_22_0,
                            	      									"org.integratedmodelling.kim.Kim.Action");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop68;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleActionSpecification"


    // $ANTLR start "entryRuleFunctionOrID"
    // InternalKim.g:3218:1: entryRuleFunctionOrID returns [EObject current=null] : iv_ruleFunctionOrID= ruleFunctionOrID EOF ;
    public final EObject entryRuleFunctionOrID() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionOrID = null;


        try {
            // InternalKim.g:3218:53: (iv_ruleFunctionOrID= ruleFunctionOrID EOF )
            // InternalKim.g:3219:2: iv_ruleFunctionOrID= ruleFunctionOrID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionOrIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionOrID=ruleFunctionOrID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionOrID; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionOrID"


    // $ANTLR start "ruleFunctionOrID"
    // InternalKim.g:3225:1: ruleFunctionOrID returns [EObject current=null] : ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) ) ;
    public final EObject ruleFunctionOrID() throws RecognitionException {
        EObject current = null;

        Token lv_functionId_1_1=null;
        EObject lv_function_0_0 = null;

        AntlrDatatypeRuleToken lv_functionId_1_2 = null;



        	enterRule();

        try {
            // InternalKim.g:3231:2: ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) ) )
            // InternalKim.g:3232:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) )
            {
            // InternalKim.g:3232:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) )
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==RULE_LOWERCASE_ID) ) {
                int LA72_1 = input.LA(2);

                if ( (synpred128_InternalKim()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA72_0==RULE_LOWERCASE_DASHID) ) {
                int LA72_2 = input.LA(2);

                if ( (synpred128_InternalKim()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 72, 0, input);

                throw nvae;
            }
            switch (alt72) {
                case 1 :
                    // InternalKim.g:3233:3: ( (lv_function_0_0= ruleFunction ) )
                    {
                    // InternalKim.g:3233:3: ( (lv_function_0_0= ruleFunction ) )
                    // InternalKim.g:3234:4: (lv_function_0_0= ruleFunction )
                    {
                    // InternalKim.g:3234:4: (lv_function_0_0= ruleFunction )
                    // InternalKim.g:3235:5: lv_function_0_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionFunctionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_0_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionOrIDRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_0_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3253:3: ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) )
                    {
                    // InternalKim.g:3253:3: ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) )
                    // InternalKim.g:3254:4: ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:3254:4: ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) )
                    // InternalKim.g:3255:5: (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId )
                    {
                    // InternalKim.g:3255:5: (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId )
                    int alt71=2;
                    int LA71_0 = input.LA(1);

                    if ( (LA71_0==RULE_LOWERCASE_ID) ) {
                        int LA71_1 = input.LA(2);

                        if ( (LA71_1==89||LA71_1==93) ) {
                            alt71=2;
                        }
                        else if ( (LA71_1==EOF||(LA71_1>=RULE_LOWERCASE_ID && LA71_1<=RULE_STRING)||(LA71_1>=RULE_CAMELCASE_ID && LA71_1<=RULE_LOWERCASE_DASHID)||LA71_1==19||LA71_1==25||(LA71_1>=28 && LA71_1<=29)||LA71_1==36||(LA71_1>=39 && LA71_1<=40)||(LA71_1>=54 && LA71_1<=56)||(LA71_1>=64 && LA71_1<=68)||LA71_1==88||(LA71_1>=112 && LA71_1<=113)||(LA71_1>=121 && LA71_1<=122)||(LA71_1>=124 && LA71_1<=136)) ) {
                            alt71=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 71, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA71_0==RULE_LOWERCASE_DASHID) ) {
                        alt71=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 71, 0, input);

                        throw nvae;
                    }
                    switch (alt71) {
                        case 1 :
                            // InternalKim.g:3256:6: lv_functionId_1_1= RULE_LOWERCASE_ID
                            {
                            lv_functionId_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_functionId_1_1, grammarAccess.getFunctionOrIDAccess().getFunctionIdLOWERCASE_IDTerminalRuleCall_1_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getFunctionOrIDRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"functionId",
                              							lv_functionId_1_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:3271:6: lv_functionId_1_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionIdNamespaceIdParserRuleCall_1_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_functionId_1_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getFunctionOrIDRule());
                              						}
                              						set(
                              							current,
                              							"functionId",
                              							lv_functionId_1_2,
                              							"org.integratedmodelling.kim.Kim.NamespaceId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionOrID"


    // $ANTLR start "entryRuleAction"
    // InternalKim.g:3293:1: entryRuleAction returns [EObject current=null] : iv_ruleAction= ruleAction EOF ;
    public final EObject entryRuleAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAction = null;


        try {
            // InternalKim.g:3293:47: (iv_ruleAction= ruleAction EOF )
            // InternalKim.g:3294:2: iv_ruleAction= ruleAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAction=ruleAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAction"


    // $ANTLR start "ruleAction"
    // InternalKim.g:3300:1: ruleAction returns [EObject current=null] : ( ( ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) | ( ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )? ) | ( ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )? ) | ( ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )? ) ) ;
    public final EObject ruleAction() throws RecognitionException {
        EObject current = null;

        Token lv_change_0_0=null;
        Token lv_set_1_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_conditionNegative_6_0=null;
        Token lv_integrate_8_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token lv_conditionNegative_13_0=null;
        Token lv_do_15_0=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token lv_conditionNegative_20_0=null;
        Token lv_move_22_0=null;
        Token lv_away_24_0=null;
        EObject lv_assignments_2_0 = null;

        EObject lv_assignments_4_0 = null;

        EObject lv_condition_7_0 = null;

        EObject lv_assignments_9_0 = null;

        EObject lv_assignments_11_0 = null;

        EObject lv_condition_14_0 = null;

        EObject lv_executed_16_0 = null;

        EObject lv_executed_18_0 = null;

        EObject lv_condition_21_0 = null;

        EObject lv_where_23_0 = null;

        EObject lv_condition_25_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3306:2: ( ( ( ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) | ( ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )? ) | ( ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )? ) | ( ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )? ) ) )
            // InternalKim.g:3307:2: ( ( ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) | ( ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )? ) | ( ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )? ) | ( ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )? ) )
            {
            // InternalKim.g:3307:2: ( ( ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) | ( ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )? ) | ( ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )? ) | ( ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )? ) )
            int alt85=4;
            switch ( input.LA(1) ) {
            case 64:
            case 65:
                {
                alt85=1;
                }
                break;
            case 66:
                {
                alt85=2;
                }
                break;
            case 67:
                {
                alt85=3;
                }
                break;
            case 68:
                {
                alt85=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;
            }

            switch (alt85) {
                case 1 :
                    // InternalKim.g:3308:3: ( ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3308:3: ( ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? )
                    // InternalKim.g:3309:4: ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3309:4: ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) )
                    int alt73=2;
                    int LA73_0 = input.LA(1);

                    if ( (LA73_0==64) ) {
                        alt73=1;
                    }
                    else if ( (LA73_0==65) ) {
                        alt73=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 73, 0, input);

                        throw nvae;
                    }
                    switch (alt73) {
                        case 1 :
                            // InternalKim.g:3310:5: ( (lv_change_0_0= 'change' ) )
                            {
                            // InternalKim.g:3310:5: ( (lv_change_0_0= 'change' ) )
                            // InternalKim.g:3311:6: (lv_change_0_0= 'change' )
                            {
                            // InternalKim.g:3311:6: (lv_change_0_0= 'change' )
                            // InternalKim.g:3312:7: lv_change_0_0= 'change'
                            {
                            lv_change_0_0=(Token)match(input,64,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_change_0_0, grammarAccess.getActionAccess().getChangeChangeKeyword_0_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "change", true, "change");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:3325:5: ( (lv_set_1_0= 'set' ) )
                            {
                            // InternalKim.g:3325:5: ( (lv_set_1_0= 'set' ) )
                            // InternalKim.g:3326:6: (lv_set_1_0= 'set' )
                            {
                            // InternalKim.g:3326:6: (lv_set_1_0= 'set' )
                            // InternalKim.g:3327:7: lv_set_1_0= 'set'
                            {
                            lv_set_1_0=(Token)match(input,65,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_set_1_0, grammarAccess.getActionAccess().getSetSetKeyword_0_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "set", true, "set");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:3340:4: ( (lv_assignments_2_0= ruleValueAssignment ) )
                    // InternalKim.g:3341:5: (lv_assignments_2_0= ruleValueAssignment )
                    {
                    // InternalKim.g:3341:5: (lv_assignments_2_0= ruleValueAssignment )
                    // InternalKim.g:3342:6: lv_assignments_2_0= ruleValueAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_56);
                    lv_assignments_2_0=ruleValueAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"assignments",
                      							lv_assignments_2_0,
                      							"org.integratedmodelling.kim.Kim.ValueAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3359:4: (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )*
                    loop74:
                    do {
                        int alt74=2;
                        int LA74_0 = input.LA(1);

                        if ( (LA74_0==25) ) {
                            int LA74_2 = input.LA(2);

                            if ( ((LA74_2>=RULE_UPPERCASE_ID && LA74_2<=RULE_STRING)||(LA74_2>=RULE_EXPR && LA74_2<=RULE_INT)||(LA74_2>=25 && LA74_2<=27)||LA74_2==34||LA74_2==36||LA74_2==49||(LA74_2>=232 && LA74_2<=233)) ) {
                                alt74=1;
                            }


                        }


                        switch (alt74) {
                    	case 1 :
                    	    // InternalKim.g:3360:5: otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) )
                    	    {
                    	    otherlv_3=(Token)match(input,25,FOLLOW_55); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getActionAccess().getCommaKeyword_0_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3364:5: ( (lv_assignments_4_0= ruleValueAssignment ) )
                    	    // InternalKim.g:3365:6: (lv_assignments_4_0= ruleValueAssignment )
                    	    {
                    	    // InternalKim.g:3365:6: (lv_assignments_4_0= ruleValueAssignment )
                    	    // InternalKim.g:3366:7: lv_assignments_4_0= ruleValueAssignment
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_0_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_56);
                    	    lv_assignments_4_0=ruleValueAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"assignments",
                    	      								lv_assignments_4_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueAssignment");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop74;
                        }
                    } while (true);

                    // InternalKim.g:3384:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )?
                    int alt76=2;
                    int LA76_0 = input.LA(1);

                    if ( ((LA76_0>=44 && LA76_0<=45)) ) {
                        alt76=1;
                    }
                    switch (alt76) {
                        case 1 :
                            // InternalKim.g:3385:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) )
                            {
                            // InternalKim.g:3385:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) )
                            // InternalKim.g:3386:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3396:6: (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) )
                            int alt75=2;
                            int LA75_0 = input.LA(1);

                            if ( (LA75_0==44) ) {
                                alt75=1;
                            }
                            else if ( (LA75_0==45) ) {
                                alt75=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 75, 0, input);

                                throw nvae;
                            }
                            switch (alt75) {
                                case 1 :
                                    // InternalKim.g:3397:7: otherlv_5= 'if'
                                    {
                                    otherlv_5=(Token)match(input,44,FOLLOW_11); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_5, grammarAccess.getActionAccess().getIfKeyword_0_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3402:7: ( (lv_conditionNegative_6_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3402:7: ( (lv_conditionNegative_6_0= 'unless' ) )
                                    // InternalKim.g:3403:8: (lv_conditionNegative_6_0= 'unless' )
                                    {
                                    // InternalKim.g:3403:8: (lv_conditionNegative_6_0= 'unless' )
                                    // InternalKim.g:3404:9: lv_conditionNegative_6_0= 'unless'
                                    {
                                    lv_conditionNegative_6_0=(Token)match(input,45,FOLLOW_11); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_6_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_0_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", true, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3418:5: ( (lv_condition_7_0= ruleValue ) )
                            // InternalKim.g:3419:6: (lv_condition_7_0= ruleValue )
                            {
                            // InternalKim.g:3419:6: (lv_condition_7_0= ruleValue )
                            // InternalKim.g:3420:7: lv_condition_7_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_0_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_7_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_7_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3440:3: ( ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3440:3: ( ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )? )
                    // InternalKim.g:3441:4: ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3441:4: ( (lv_integrate_8_0= 'integrate' ) )
                    // InternalKim.g:3442:5: (lv_integrate_8_0= 'integrate' )
                    {
                    // InternalKim.g:3442:5: (lv_integrate_8_0= 'integrate' )
                    // InternalKim.g:3443:6: lv_integrate_8_0= 'integrate'
                    {
                    lv_integrate_8_0=(Token)match(input,66,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_integrate_8_0, grammarAccess.getActionAccess().getIntegrateIntegrateKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "integrate", true, "integrate");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3455:4: ( (lv_assignments_9_0= ruleValueAssignment ) )
                    // InternalKim.g:3456:5: (lv_assignments_9_0= ruleValueAssignment )
                    {
                    // InternalKim.g:3456:5: (lv_assignments_9_0= ruleValueAssignment )
                    // InternalKim.g:3457:6: lv_assignments_9_0= ruleValueAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_56);
                    lv_assignments_9_0=ruleValueAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"assignments",
                      							lv_assignments_9_0,
                      							"org.integratedmodelling.kim.Kim.ValueAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3474:4: (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )*
                    loop77:
                    do {
                        int alt77=2;
                        int LA77_0 = input.LA(1);

                        if ( (LA77_0==25) ) {
                            int LA77_2 = input.LA(2);

                            if ( ((LA77_2>=RULE_UPPERCASE_ID && LA77_2<=RULE_STRING)||(LA77_2>=RULE_EXPR && LA77_2<=RULE_INT)||(LA77_2>=25 && LA77_2<=27)||LA77_2==34||LA77_2==36||LA77_2==49||(LA77_2>=232 && LA77_2<=233)) ) {
                                alt77=1;
                            }


                        }


                        switch (alt77) {
                    	case 1 :
                    	    // InternalKim.g:3475:5: otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) )
                    	    {
                    	    otherlv_10=(Token)match(input,25,FOLLOW_55); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getActionAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3479:5: ( (lv_assignments_11_0= ruleValueAssignment ) )
                    	    // InternalKim.g:3480:6: (lv_assignments_11_0= ruleValueAssignment )
                    	    {
                    	    // InternalKim.g:3480:6: (lv_assignments_11_0= ruleValueAssignment )
                    	    // InternalKim.g:3481:7: lv_assignments_11_0= ruleValueAssignment
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_56);
                    	    lv_assignments_11_0=ruleValueAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"assignments",
                    	      								lv_assignments_11_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueAssignment");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop77;
                        }
                    } while (true);

                    // InternalKim.g:3499:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )?
                    int alt79=2;
                    int LA79_0 = input.LA(1);

                    if ( ((LA79_0>=44 && LA79_0<=45)) ) {
                        alt79=1;
                    }
                    switch (alt79) {
                        case 1 :
                            // InternalKim.g:3500:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) )
                            {
                            // InternalKim.g:3500:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) )
                            // InternalKim.g:3501:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3511:6: (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) )
                            int alt78=2;
                            int LA78_0 = input.LA(1);

                            if ( (LA78_0==44) ) {
                                alt78=1;
                            }
                            else if ( (LA78_0==45) ) {
                                alt78=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 78, 0, input);

                                throw nvae;
                            }
                            switch (alt78) {
                                case 1 :
                                    // InternalKim.g:3512:7: otherlv_12= 'if'
                                    {
                                    otherlv_12=(Token)match(input,44,FOLLOW_11); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_12, grammarAccess.getActionAccess().getIfKeyword_1_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3517:7: ( (lv_conditionNegative_13_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3517:7: ( (lv_conditionNegative_13_0= 'unless' ) )
                                    // InternalKim.g:3518:8: (lv_conditionNegative_13_0= 'unless' )
                                    {
                                    // InternalKim.g:3518:8: (lv_conditionNegative_13_0= 'unless' )
                                    // InternalKim.g:3519:9: lv_conditionNegative_13_0= 'unless'
                                    {
                                    lv_conditionNegative_13_0=(Token)match(input,45,FOLLOW_11); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_13_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_1_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", true, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3533:5: ( (lv_condition_14_0= ruleValue ) )
                            // InternalKim.g:3534:6: (lv_condition_14_0= ruleValue )
                            {
                            // InternalKim.g:3534:6: (lv_condition_14_0= ruleValue )
                            // InternalKim.g:3535:7: lv_condition_14_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_1_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_14_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_14_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:3555:3: ( ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3555:3: ( ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )? )
                    // InternalKim.g:3556:4: ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3556:4: ( (lv_do_15_0= 'do' ) )
                    // InternalKim.g:3557:5: (lv_do_15_0= 'do' )
                    {
                    // InternalKim.g:3557:5: (lv_do_15_0= 'do' )
                    // InternalKim.g:3558:6: lv_do_15_0= 'do'
                    {
                    lv_do_15_0=(Token)match(input,67,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_do_15_0, grammarAccess.getActionAccess().getDoDoKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "do", true, "do");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3570:4: ( (lv_executed_16_0= ruleValueExecution ) )
                    // InternalKim.g:3571:5: (lv_executed_16_0= ruleValueExecution )
                    {
                    // InternalKim.g:3571:5: (lv_executed_16_0= ruleValueExecution )
                    // InternalKim.g:3572:6: lv_executed_16_0= ruleValueExecution
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getExecutedValueExecutionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_56);
                    lv_executed_16_0=ruleValueExecution();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"executed",
                      							lv_executed_16_0,
                      							"org.integratedmodelling.kim.Kim.ValueExecution");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3589:4: (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )*
                    loop80:
                    do {
                        int alt80=2;
                        int LA80_0 = input.LA(1);

                        if ( (LA80_0==25) ) {
                            int LA80_2 = input.LA(2);

                            if ( (LA80_2==RULE_LOWERCASE_ID||LA80_2==RULE_EXPR||LA80_2==RULE_LOWERCASE_DASHID||LA80_2==88) ) {
                                alt80=1;
                            }


                        }


                        switch (alt80) {
                    	case 1 :
                    	    // InternalKim.g:3590:5: otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) )
                    	    {
                    	    otherlv_17=(Token)match(input,25,FOLLOW_18); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_17, grammarAccess.getActionAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3594:5: ( (lv_executed_18_0= ruleValueExecution ) )
                    	    // InternalKim.g:3595:6: (lv_executed_18_0= ruleValueExecution )
                    	    {
                    	    // InternalKim.g:3595:6: (lv_executed_18_0= ruleValueExecution )
                    	    // InternalKim.g:3596:7: lv_executed_18_0= ruleValueExecution
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getExecutedValueExecutionParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_56);
                    	    lv_executed_18_0=ruleValueExecution();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"executed",
                    	      								lv_executed_18_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueExecution");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop80;
                        }
                    } while (true);

                    // InternalKim.g:3614:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )?
                    int alt82=2;
                    int LA82_0 = input.LA(1);

                    if ( ((LA82_0>=44 && LA82_0<=45)) ) {
                        alt82=1;
                    }
                    switch (alt82) {
                        case 1 :
                            // InternalKim.g:3615:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) )
                            {
                            // InternalKim.g:3615:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) )
                            // InternalKim.g:3616:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3626:6: (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) )
                            int alt81=2;
                            int LA81_0 = input.LA(1);

                            if ( (LA81_0==44) ) {
                                alt81=1;
                            }
                            else if ( (LA81_0==45) ) {
                                alt81=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 81, 0, input);

                                throw nvae;
                            }
                            switch (alt81) {
                                case 1 :
                                    // InternalKim.g:3627:7: otherlv_19= 'if'
                                    {
                                    otherlv_19=(Token)match(input,44,FOLLOW_11); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_19, grammarAccess.getActionAccess().getIfKeyword_2_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3632:7: ( (lv_conditionNegative_20_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3632:7: ( (lv_conditionNegative_20_0= 'unless' ) )
                                    // InternalKim.g:3633:8: (lv_conditionNegative_20_0= 'unless' )
                                    {
                                    // InternalKim.g:3633:8: (lv_conditionNegative_20_0= 'unless' )
                                    // InternalKim.g:3634:9: lv_conditionNegative_20_0= 'unless'
                                    {
                                    lv_conditionNegative_20_0=(Token)match(input,45,FOLLOW_11); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_20_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_2_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", true, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3648:5: ( (lv_condition_21_0= ruleValue ) )
                            // InternalKim.g:3649:6: (lv_condition_21_0= ruleValue )
                            {
                            // InternalKim.g:3649:6: (lv_condition_21_0= ruleValue )
                            // InternalKim.g:3650:7: lv_condition_21_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_2_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_21_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_21_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:3670:3: ( ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )? )
                    {
                    // InternalKim.g:3670:3: ( ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )? )
                    // InternalKim.g:3671:4: ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )?
                    {
                    // InternalKim.g:3671:4: ( (lv_move_22_0= 'move' ) )
                    // InternalKim.g:3672:5: (lv_move_22_0= 'move' )
                    {
                    // InternalKim.g:3672:5: (lv_move_22_0= 'move' )
                    // InternalKim.g:3673:6: lv_move_22_0= 'move'
                    {
                    lv_move_22_0=(Token)match(input,68,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_move_22_0, grammarAccess.getActionAccess().getMoveMoveKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "move", true, "move");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3685:4: ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) )
                    int alt83=2;
                    int LA83_0 = input.LA(1);

                    if ( ((LA83_0>=RULE_UPPERCASE_ID && LA83_0<=RULE_STRING)||(LA83_0>=RULE_EXPR && LA83_0<=RULE_INT)||(LA83_0>=25 && LA83_0<=27)||LA83_0==36||(LA83_0>=49 && LA83_0<=50)||LA83_0==191||(LA83_0>=232 && LA83_0<=233)) ) {
                        alt83=1;
                    }
                    else if ( (LA83_0==69) ) {
                        alt83=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 83, 0, input);

                        throw nvae;
                    }
                    switch (alt83) {
                        case 1 :
                            // InternalKim.g:3686:5: ( (lv_where_23_0= ruleValue ) )
                            {
                            // InternalKim.g:3686:5: ( (lv_where_23_0= ruleValue ) )
                            // InternalKim.g:3687:6: (lv_where_23_0= ruleValue )
                            {
                            // InternalKim.g:3687:6: (lv_where_23_0= ruleValue )
                            // InternalKim.g:3688:7: lv_where_23_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getWhereValueParserRuleCall_3_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_58);
                            lv_where_23_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"where",
                              								lv_where_23_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:3706:5: ( (lv_away_24_0= 'away' ) )
                            {
                            // InternalKim.g:3706:5: ( (lv_away_24_0= 'away' ) )
                            // InternalKim.g:3707:6: (lv_away_24_0= 'away' )
                            {
                            // InternalKim.g:3707:6: (lv_away_24_0= 'away' )
                            // InternalKim.g:3708:7: lv_away_24_0= 'away'
                            {
                            lv_away_24_0=(Token)match(input,69,FOLLOW_58); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_away_24_0, grammarAccess.getActionAccess().getAwayAwayKeyword_3_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "away", true, "away");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:3721:4: ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )?
                    int alt84=2;
                    alt84 = dfa84.predict(input);
                    switch (alt84) {
                        case 1 :
                            // InternalKim.g:3722:5: ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue )
                            {
                            // InternalKim.g:3726:5: (lv_condition_25_0= ruleValue )
                            // InternalKim.g:3727:6: lv_condition_25_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_3_2_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_25_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getActionRule());
                              						}
                              						set(
                              							current,
                              							"condition",
                              							lv_condition_25_0,
                              							"org.integratedmodelling.kim.Kim.Value");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAction"


    // $ANTLR start "entryRuleValueAssignment"
    // InternalKim.g:3749:1: entryRuleValueAssignment returns [EObject current=null] : iv_ruleValueAssignment= ruleValueAssignment EOF ;
    public final EObject entryRuleValueAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueAssignment = null;


        try {
            // InternalKim.g:3749:56: (iv_ruleValueAssignment= ruleValueAssignment EOF )
            // InternalKim.g:3750:2: iv_ruleValueAssignment= ruleValueAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueAssignment=ruleValueAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueAssignment"


    // $ANTLR start "ruleValueAssignment"
    // InternalKim.g:3756:1: ruleValueAssignment returns [EObject current=null] : ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) ) ;
    public final EObject ruleValueAssignment() throws RecognitionException {
        EObject current = null;

        Token lv_target_0_0=null;
        Token otherlv_1=null;
        EObject lv_assignedValue_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3762:2: ( ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) ) )
            // InternalKim.g:3763:2: ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) )
            {
            // InternalKim.g:3763:2: ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) )
            // InternalKim.g:3764:3: ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) )
            {
            // InternalKim.g:3764:3: ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==RULE_LOWERCASE_ID) ) {
                int LA87_1 = input.LA(2);

                if ( (LA87_1==34) ) {
                    alt87=1;
                }
            }
            else if ( (LA87_0==34) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalKim.g:3765:4: ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to'
                    {
                    // InternalKim.g:3765:4: ( (lv_target_0_0= RULE_LOWERCASE_ID ) )?
                    int alt86=2;
                    int LA86_0 = input.LA(1);

                    if ( (LA86_0==RULE_LOWERCASE_ID) ) {
                        alt86=1;
                    }
                    switch (alt86) {
                        case 1 :
                            // InternalKim.g:3766:5: (lv_target_0_0= RULE_LOWERCASE_ID )
                            {
                            // InternalKim.g:3766:5: (lv_target_0_0= RULE_LOWERCASE_ID )
                            // InternalKim.g:3767:6: lv_target_0_0= RULE_LOWERCASE_ID
                            {
                            lv_target_0_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_target_0_0, grammarAccess.getValueAssignmentAccess().getTargetLOWERCASE_IDTerminalRuleCall_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueAssignmentRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"target",
                              							lv_target_0_0,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_1=(Token)match(input,34,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getValueAssignmentAccess().getToKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:3788:3: ( (lv_assignedValue_2_0= ruleComputableValue ) )
            // InternalKim.g:3789:4: (lv_assignedValue_2_0= ruleComputableValue )
            {
            // InternalKim.g:3789:4: (lv_assignedValue_2_0= ruleComputableValue )
            // InternalKim.g:3790:5: lv_assignedValue_2_0= ruleComputableValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValueAssignmentAccess().getAssignedValueComputableValueParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_assignedValue_2_0=ruleComputableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValueAssignmentRule());
              					}
              					set(
              						current,
              						"assignedValue",
              						lv_assignedValue_2_0,
              						"org.integratedmodelling.kim.Kim.ComputableValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueAssignment"


    // $ANTLR start "entryRuleComputableValue"
    // InternalKim.g:3811:1: entryRuleComputableValue returns [EObject current=null] : iv_ruleComputableValue= ruleComputableValue EOF ;
    public final EObject entryRuleComputableValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComputableValue = null;


        try {
            // InternalKim.g:3811:56: (iv_ruleComputableValue= ruleComputableValue EOF )
            // InternalKim.g:3812:2: iv_ruleComputableValue= ruleComputableValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComputableValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComputableValue=ruleComputableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComputableValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComputableValue"


    // $ANTLR start "ruleComputableValue"
    // InternalKim.g:3818:1: ruleComputableValue returns [EObject current=null] : ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) ) ;
    public final EObject ruleComputableValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_2_0=null;
        Token otherlv_3=null;
        Token lv_language_4_1=null;
        Token lv_language_4_2=null;
        Token lv_language_4_3=null;
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;
        Token lv_null_7_0=null;
        EObject lv_literal_0_0 = null;

        EObject lv_function_1_0 = null;

        EObject lv_list_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3824:2: ( ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) ) )
            // InternalKim.g:3825:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )
            {
            // InternalKim.g:3825:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )
            int alt91=6;
            alt91 = dfa91.predict(input);
            switch (alt91) {
                case 1 :
                    // InternalKim.g:3826:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    {
                    // InternalKim.g:3826:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    // InternalKim.g:3827:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    {
                    // InternalKim.g:3827:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    // InternalKim.g:3828:5: lv_literal_0_0= ruleLiteralOrIdOrComma
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleLiteralOrIdOrComma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.integratedmodelling.kim.Kim.LiteralOrIdOrComma");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3846:3: ( (lv_function_1_0= ruleFunction ) )
                    {
                    // InternalKim.g:3846:3: ( (lv_function_1_0= ruleFunction ) )
                    // InternalKim.g:3847:4: (lv_function_1_0= ruleFunction )
                    {
                    // InternalKim.g:3847:4: (lv_function_1_0= ruleFunction )
                    // InternalKim.g:3848:5: lv_function_1_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getFunctionFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_1_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_1_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:3866:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? )
                    {
                    // InternalKim.g:3866:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? )
                    // InternalKim.g:3867:4: ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )?
                    {
                    // InternalKim.g:3867:4: ( (lv_expr_2_0= RULE_EXPR ) )
                    // InternalKim.g:3868:5: (lv_expr_2_0= RULE_EXPR )
                    {
                    // InternalKim.g:3868:5: (lv_expr_2_0= RULE_EXPR )
                    // InternalKim.g:3869:6: lv_expr_2_0= RULE_EXPR
                    {
                    lv_expr_2_0=(Token)match(input,RULE_EXPR,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_expr_2_0, grammarAccess.getComputableValueAccess().getExprEXPRTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getComputableValueRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"expr",
                      							lv_expr_2_0,
                      							"org.integratedmodelling.kim.Kim.EXPR");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3885:4: (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )?
                    int alt89=2;
                    int LA89_0 = input.LA(1);

                    if ( (LA89_0==48) ) {
                        alt89=1;
                    }
                    switch (alt89) {
                        case 1 :
                            // InternalKim.g:3886:5: otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) )
                            {
                            otherlv_3=(Token)match(input,48,FOLLOW_60); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getComputableValueAccess().getInKeyword_2_1_0());
                              				
                            }
                            // InternalKim.g:3890:5: ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) )
                            // InternalKim.g:3891:6: ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) )
                            {
                            // InternalKim.g:3891:6: ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) )
                            // InternalKim.g:3892:7: (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID )
                            {
                            // InternalKim.g:3892:7: (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID )
                            int alt88=3;
                            switch ( input.LA(1) ) {
                            case RULE_LOWERCASE_ID:
                                {
                                alt88=1;
                                }
                                break;
                            case RULE_UPPERCASE_ID:
                                {
                                alt88=2;
                                }
                                break;
                            case RULE_CAMELCASE_ID:
                                {
                                alt88=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 88, 0, input);

                                throw nvae;
                            }

                            switch (alt88) {
                                case 1 :
                                    // InternalKim.g:3893:8: lv_language_4_1= RULE_LOWERCASE_ID
                                    {
                                    lv_language_4_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_1, grammarAccess.getComputableValueAccess().getLanguageLOWERCASE_IDTerminalRuleCall_2_1_1_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_1,
                                      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3908:8: lv_language_4_2= RULE_UPPERCASE_ID
                                    {
                                    lv_language_4_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_2, grammarAccess.getComputableValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_2_1_1_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_2,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:3923:8: lv_language_4_3= RULE_CAMELCASE_ID
                                    {
                                    lv_language_4_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_3, grammarAccess.getComputableValueAccess().getLanguageCAMELCASE_IDTerminalRuleCall_2_1_1_0_2());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_3,
                                      									"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:3943:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:3943:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:3944:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:3944:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:3945:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:3945:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    int alt90=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt90=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt90=2;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt90=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 90, 0, input);

                        throw nvae;
                    }

                    switch (alt90) {
                        case 1 :
                            // InternalKim.g:3946:6: lv_id_5_1= RULE_LOWERCASE_ID
                            {
                            lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_1, grammarAccess.getComputableValueAccess().getIdLOWERCASE_IDTerminalRuleCall_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:3961:6: lv_id_5_2= RULE_UPPERCASE_ID
                            {
                            lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_2, grammarAccess.getComputableValueAccess().getIdUPPERCASE_IDTerminalRuleCall_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_2,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:3976:6: lv_id_5_3= RULE_CAMELCASE_ID
                            {
                            lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_3, grammarAccess.getComputableValueAccess().getIdCAMELCASE_IDTerminalRuleCall_3_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_3,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:3994:3: ( (lv_list_6_0= ruleList ) )
                    {
                    // InternalKim.g:3994:3: ( (lv_list_6_0= ruleList ) )
                    // InternalKim.g:3995:4: (lv_list_6_0= ruleList )
                    {
                    // InternalKim.g:3995:4: (lv_list_6_0= ruleList )
                    // InternalKim.g:3996:5: lv_list_6_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getListListParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_6_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_6_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:4014:3: ( (lv_null_7_0= 'unknown' ) )
                    {
                    // InternalKim.g:4014:3: ( (lv_null_7_0= 'unknown' ) )
                    // InternalKim.g:4015:4: (lv_null_7_0= 'unknown' )
                    {
                    // InternalKim.g:4015:4: (lv_null_7_0= 'unknown' )
                    // InternalKim.g:4016:5: lv_null_7_0= 'unknown'
                    {
                    lv_null_7_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_7_0, grammarAccess.getComputableValueAccess().getNullUnknownKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getComputableValueRule());
                      					}
                      					setWithLastConsumed(current, "null", true, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComputableValue"


    // $ANTLR start "entryRuleValueExecution"
    // InternalKim.g:4032:1: entryRuleValueExecution returns [EObject current=null] : iv_ruleValueExecution= ruleValueExecution EOF ;
    public final EObject entryRuleValueExecution() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueExecution = null;


        try {
            // InternalKim.g:4032:55: (iv_ruleValueExecution= ruleValueExecution EOF )
            // InternalKim.g:4033:2: iv_ruleValueExecution= ruleValueExecution EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueExecutionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueExecution=ruleValueExecution();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueExecution; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueExecution"


    // $ANTLR start "ruleValueExecution"
    // InternalKim.g:4039:1: ruleValueExecution returns [EObject current=null] : ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? ) ;
    public final EObject ruleValueExecution() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_target_2_0=null;
        EObject lv_execValue_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:4045:2: ( ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? ) )
            // InternalKim.g:4046:2: ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? )
            {
            // InternalKim.g:4046:2: ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? )
            // InternalKim.g:4047:3: ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )?
            {
            // InternalKim.g:4047:3: ( (lv_execValue_0_0= ruleExecutableValue ) )
            // InternalKim.g:4048:4: (lv_execValue_0_0= ruleExecutableValue )
            {
            // InternalKim.g:4048:4: (lv_execValue_0_0= ruleExecutableValue )
            // InternalKim.g:4049:5: lv_execValue_0_0= ruleExecutableValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValueExecutionAccess().getExecValueExecutableValueParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_61);
            lv_execValue_0_0=ruleExecutableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValueExecutionRule());
              					}
              					set(
              						current,
              						"execValue",
              						lv_execValue_0_0,
              						"org.integratedmodelling.kim.Kim.ExecutableValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:4066:3: (otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==23) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalKim.g:4067:4: otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) )
                    {
                    otherlv_1=(Token)match(input,23,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getValueExecutionAccess().getAsKeyword_1_0());
                      			
                    }
                    // InternalKim.g:4071:4: ( (lv_target_2_0= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:4072:5: (lv_target_2_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:4072:5: (lv_target_2_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:4073:6: lv_target_2_0= RULE_LOWERCASE_ID
                    {
                    lv_target_2_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_target_2_0, grammarAccess.getValueExecutionAccess().getTargetLOWERCASE_IDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getValueExecutionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"target",
                      							lv_target_2_0,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueExecution"


    // $ANTLR start "entryRuleExecutableValue"
    // InternalKim.g:4094:1: entryRuleExecutableValue returns [EObject current=null] : iv_ruleExecutableValue= ruleExecutableValue EOF ;
    public final EObject entryRuleExecutableValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExecutableValue = null;


        try {
            // InternalKim.g:4094:56: (iv_ruleExecutableValue= ruleExecutableValue EOF )
            // InternalKim.g:4095:2: iv_ruleExecutableValue= ruleExecutableValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExecutableValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExecutableValue=ruleExecutableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExecutableValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExecutableValue"


    // $ANTLR start "ruleExecutableValue"
    // InternalKim.g:4101:1: ruleExecutableValue returns [EObject current=null] : ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) ) ;
    public final EObject ruleExecutableValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_1_0=null;
        Token otherlv_2=null;
        Token lv_language_3_1=null;
        Token lv_language_3_2=null;
        Token lv_language_3_3=null;
        EObject lv_function_0_0 = null;

        AntlrDatatypeRuleToken lv_urn_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:4107:2: ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) ) )
            // InternalKim.g:4108:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) )
            {
            // InternalKim.g:4108:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) )
            int alt95=3;
            alt95 = dfa95.predict(input);
            switch (alt95) {
                case 1 :
                    // InternalKim.g:4109:3: ( (lv_function_0_0= ruleFunction ) )
                    {
                    // InternalKim.g:4109:3: ( (lv_function_0_0= ruleFunction ) )
                    // InternalKim.g:4110:4: (lv_function_0_0= ruleFunction )
                    {
                    // InternalKim.g:4110:4: (lv_function_0_0= ruleFunction )
                    // InternalKim.g:4111:5: lv_function_0_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getExecutableValueAccess().getFunctionFunctionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_0_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getExecutableValueRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_0_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:4129:3: ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? )
                    {
                    // InternalKim.g:4129:3: ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? )
                    // InternalKim.g:4130:4: ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )?
                    {
                    // InternalKim.g:4130:4: ( (lv_expr_1_0= RULE_EXPR ) )
                    // InternalKim.g:4131:5: (lv_expr_1_0= RULE_EXPR )
                    {
                    // InternalKim.g:4131:5: (lv_expr_1_0= RULE_EXPR )
                    // InternalKim.g:4132:6: lv_expr_1_0= RULE_EXPR
                    {
                    lv_expr_1_0=(Token)match(input,RULE_EXPR,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_expr_1_0, grammarAccess.getExecutableValueAccess().getExprEXPRTerminalRuleCall_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getExecutableValueRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"expr",
                      							lv_expr_1_0,
                      							"org.integratedmodelling.kim.Kim.EXPR");
                      					
                    }

                    }


                    }

                    // InternalKim.g:4148:4: (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )?
                    int alt94=2;
                    int LA94_0 = input.LA(1);

                    if ( (LA94_0==48) ) {
                        alt94=1;
                    }
                    switch (alt94) {
                        case 1 :
                            // InternalKim.g:4149:5: otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) )
                            {
                            otherlv_2=(Token)match(input,48,FOLLOW_60); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getExecutableValueAccess().getInKeyword_1_1_0());
                              				
                            }
                            // InternalKim.g:4153:5: ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) )
                            // InternalKim.g:4154:6: ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) )
                            {
                            // InternalKim.g:4154:6: ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) )
                            // InternalKim.g:4155:7: (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID )
                            {
                            // InternalKim.g:4155:7: (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID )
                            int alt93=3;
                            switch ( input.LA(1) ) {
                            case RULE_LOWERCASE_ID:
                                {
                                alt93=1;
                                }
                                break;
                            case RULE_UPPERCASE_ID:
                                {
                                alt93=2;
                                }
                                break;
                            case RULE_CAMELCASE_ID:
                                {
                                alt93=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 93, 0, input);

                                throw nvae;
                            }

                            switch (alt93) {
                                case 1 :
                                    // InternalKim.g:4156:8: lv_language_3_1= RULE_LOWERCASE_ID
                                    {
                                    lv_language_3_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_3_1, grammarAccess.getExecutableValueAccess().getLanguageLOWERCASE_IDTerminalRuleCall_1_1_1_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getExecutableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_3_1,
                                      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:4171:8: lv_language_3_2= RULE_UPPERCASE_ID
                                    {
                                    lv_language_3_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_3_2, grammarAccess.getExecutableValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_1_1_1_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getExecutableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_3_2,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:4186:8: lv_language_3_3= RULE_CAMELCASE_ID
                                    {
                                    lv_language_3_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_3_3, grammarAccess.getExecutableValueAccess().getLanguageCAMELCASE_IDTerminalRuleCall_1_1_1_0_2());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getExecutableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_3_3,
                                      									"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:4206:3: ( (lv_urn_4_0= ruleUrnId ) )
                    {
                    // InternalKim.g:4206:3: ( (lv_urn_4_0= ruleUrnId ) )
                    // InternalKim.g:4207:4: (lv_urn_4_0= ruleUrnId )
                    {
                    // InternalKim.g:4207:4: (lv_urn_4_0= ruleUrnId )
                    // InternalKim.g:4208:5: lv_urn_4_0= ruleUrnId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getExecutableValueAccess().getUrnUrnIdParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_urn_4_0=ruleUrnId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getExecutableValueRule());
                      					}
                      					set(
                      						current,
                      						"urn",
                      						lv_urn_4_0,
                      						"org.integratedmodelling.kim.Kim.UrnId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExecutableValue"


    // $ANTLR start "entryRuleMODEL_TYPE"
    // InternalKim.g:4229:1: entryRuleMODEL_TYPE returns [String current=null] : iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF ;
    public final String entryRuleMODEL_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMODEL_TYPE = null;


        try {
            // InternalKim.g:4229:50: (iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF )
            // InternalKim.g:4230:2: iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMODEL_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMODEL_TYPE=ruleMODEL_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMODEL_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMODEL_TYPE"


    // $ANTLR start "ruleMODEL_TYPE"
    // InternalKim.g:4236:1: ruleMODEL_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'model' | kw= 'learn' | kw= 'number' | kw= 'text' | kw= 'boolean' ) ;
    public final AntlrDatatypeRuleToken ruleMODEL_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:4242:2: ( (kw= 'model' | kw= 'learn' | kw= 'number' | kw= 'text' | kw= 'boolean' ) )
            // InternalKim.g:4243:2: (kw= 'model' | kw= 'learn' | kw= 'number' | kw= 'text' | kw= 'boolean' )
            {
            // InternalKim.g:4243:2: (kw= 'model' | kw= 'learn' | kw= 'number' | kw= 'text' | kw= 'boolean' )
            int alt96=5;
            switch ( input.LA(1) ) {
            case 70:
                {
                alt96=1;
                }
                break;
            case 71:
                {
                alt96=2;
                }
                break;
            case 72:
                {
                alt96=3;
                }
                break;
            case 73:
                {
                alt96=4;
                }
                break;
            case 74:
                {
                alt96=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 96, 0, input);

                throw nvae;
            }

            switch (alt96) {
                case 1 :
                    // InternalKim.g:4244:3: kw= 'model'
                    {
                    kw=(Token)match(input,70,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getModelKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:4250:3: kw= 'learn'
                    {
                    kw=(Token)match(input,71,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getLearnKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:4256:3: kw= 'number'
                    {
                    kw=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getNumberKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:4262:3: kw= 'text'
                    {
                    kw=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getTextKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:4268:3: kw= 'boolean'
                    {
                    kw=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getBooleanKeyword_4());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMODEL_TYPE"


    // $ANTLR start "entryRuleNamespace"
    // InternalKim.g:4277:1: entryRuleNamespace returns [EObject current=null] : iv_ruleNamespace= ruleNamespace EOF ;
    public final EObject entryRuleNamespace() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamespace = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6()
        	);

        try {
            // InternalKim.g:4283:2: (iv_ruleNamespace= ruleNamespace EOF )
            // InternalKim.g:4284:2: iv_ruleNamespace= ruleNamespace EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespace=ruleNamespace();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespace; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNamespace"


    // $ANTLR start "ruleNamespace"
    // InternalKim.g:4293:1: ruleNamespace returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_4_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_5= 'namespace' | ( (lv_scenario_6_0= 'scenario' ) ) | ( (lv_worldviewBound_7_0= 'worldview' ) ) ) ( (lv_name_8_0= rulePathName ) ) ( (lv_docstring_9_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_42= 'with' otherlv_43= 'parameters' ( (lv_parameters_44_0= ruleMetadata ) ) )? (otherlv_45= 'with' otherlv_46= 'metadata' ( (lv_metadata_47_0= ruleMetadata ) ) )? (otherlv_48= 'with' otherlv_49= 'documentation' ( (lv_documentation_50_0= ruleMetadata ) ) )? otherlv_51= ';' ) ;
    public final EObject ruleNamespace() throws RecognitionException {
        EObject current = null;

        Token lv_private_3_0=null;
        Token lv_inactive_4_0=null;
        Token otherlv_5=null;
        Token lv_scenario_6_0=null;
        Token lv_worldviewBound_7_0=null;
        Token lv_docstring_9_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token lv_rootDomain_25_0=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        Token otherlv_38=null;
        Token otherlv_40=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token otherlv_48=null;
        Token otherlv_49=null;
        Token otherlv_51=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_imported_12_0 = null;

        EObject lv_imported_14_0 = null;

        EObject lv_owlImports_16_0 = null;

        EObject lv_owlImports_18_0 = null;

        EObject lv_coverage_20_0 = null;

        EObject lv_coverage_22_0 = null;

        EObject lv_domainConcept_26_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_29_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_31_0 = null;

        AntlrDatatypeRuleToken lv_version_33_0 = null;

        AntlrDatatypeRuleToken lv_lookupNamespace_37_0 = null;

        AntlrDatatypeRuleToken lv_blacklistNamespace_39_0 = null;

        EObject lv_weights_41_0 = null;

        EObject lv_parameters_44_0 = null;

        EObject lv_metadata_47_0 = null;

        EObject lv_documentation_50_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6()
        	);

        try {
            // InternalKim.g:4304:2: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_4_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_5= 'namespace' | ( (lv_scenario_6_0= 'scenario' ) ) | ( (lv_worldviewBound_7_0= 'worldview' ) ) ) ( (lv_name_8_0= rulePathName ) ) ( (lv_docstring_9_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_42= 'with' otherlv_43= 'parameters' ( (lv_parameters_44_0= ruleMetadata ) ) )? (otherlv_45= 'with' otherlv_46= 'metadata' ( (lv_metadata_47_0= ruleMetadata ) ) )? (otherlv_48= 'with' otherlv_49= 'documentation' ( (lv_documentation_50_0= ruleMetadata ) ) )? otherlv_51= ';' ) )
            // InternalKim.g:4305:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_4_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_5= 'namespace' | ( (lv_scenario_6_0= 'scenario' ) ) | ( (lv_worldviewBound_7_0= 'worldview' ) ) ) ( (lv_name_8_0= rulePathName ) ) ( (lv_docstring_9_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_42= 'with' otherlv_43= 'parameters' ( (lv_parameters_44_0= ruleMetadata ) ) )? (otherlv_45= 'with' otherlv_46= 'metadata' ( (lv_metadata_47_0= ruleMetadata ) ) )? (otherlv_48= 'with' otherlv_49= 'documentation' ( (lv_documentation_50_0= ruleMetadata ) ) )? otherlv_51= ';' )
            {
            // InternalKim.g:4305:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_4_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_5= 'namespace' | ( (lv_scenario_6_0= 'scenario' ) ) | ( (lv_worldviewBound_7_0= 'worldview' ) ) ) ( (lv_name_8_0= rulePathName ) ) ( (lv_docstring_9_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_42= 'with' otherlv_43= 'parameters' ( (lv_parameters_44_0= ruleMetadata ) ) )? (otherlv_45= 'with' otherlv_46= 'metadata' ( (lv_metadata_47_0= ruleMetadata ) ) )? (otherlv_48= 'with' otherlv_49= 'documentation' ( (lv_documentation_50_0= ruleMetadata ) ) )? otherlv_51= ';' )
            // InternalKim.g:4306:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_4_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_5= 'namespace' | ( (lv_scenario_6_0= 'scenario' ) ) | ( (lv_worldviewBound_7_0= 'worldview' ) ) ) ( (lv_name_8_0= rulePathName ) ) ( (lv_docstring_9_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_42= 'with' otherlv_43= 'parameters' ( (lv_parameters_44_0= ruleMetadata ) ) )? (otherlv_45= 'with' otherlv_46= 'metadata' ( (lv_metadata_47_0= ruleMetadata ) ) )? (otherlv_48= 'with' otherlv_49= 'documentation' ( (lv_documentation_50_0= ruleMetadata ) ) )? otherlv_51= ';'
            {
            // InternalKim.g:4306:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==RULE_ANNOTATION_ID) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalKim.g:4307:4: ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )*
                    {
                    // InternalKim.g:4307:4: ( (lv_annotations_0_0= ruleAnnotation ) )
                    // InternalKim.g:4308:5: (lv_annotations_0_0= ruleAnnotation )
                    {
                    // InternalKim.g:4308:5: (lv_annotations_0_0= ruleAnnotation )
                    // InternalKim.g:4309:6: lv_annotations_0_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_63);
                    lv_annotations_0_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						add(
                      							current,
                      							"annotations",
                      							lv_annotations_0_0,
                      							"org.integratedmodelling.kim.Kim.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:4326:4: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop97:
                    do {
                        int alt97=2;
                        int LA97_0 = input.LA(1);

                        if ( (LA97_0==RULE_ANNOTATION_ID) ) {
                            alt97=1;
                        }


                        switch (alt97) {
                    	case 1 :
                    	    // InternalKim.g:4327:5: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalKim.g:4327:5: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalKim.g:4328:6: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getNamespaceAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_63);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_1_0,
                    	      							"org.integratedmodelling.kim.Kim.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop97;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:4346:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_4_0= 'void' ) ) ) ) ) )* ) ) )
            // InternalKim.g:4347:4: ( ( ( ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_4_0= 'void' ) ) ) ) ) )* ) )
            {
            // InternalKim.g:4347:4: ( ( ( ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_4_0= 'void' ) ) ) ) ) )* ) )
            // InternalKim.g:4348:5: ( ( ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_4_0= 'void' ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());
            // InternalKim.g:4351:5: ( ( ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_4_0= 'void' ) ) ) ) ) )* )
            // InternalKim.g:4352:6: ( ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_4_0= 'void' ) ) ) ) ) )*
            {
            // InternalKim.g:4352:6: ( ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_4_0= 'void' ) ) ) ) ) )*
            loop99:
            do {
                int alt99=3;
                int LA99_0 = input.LA(1);

                if ( LA99_0 == 21 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
                    alt99=1;
                }
                else if ( LA99_0 == 20 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
                    alt99=2;
                }


                switch (alt99) {
            	case 1 :
            	    // InternalKim.g:4353:4: ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) )
            	    {
            	    // InternalKim.g:4353:4: ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) )
            	    // InternalKim.g:4354:5: {...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:4354:106: ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) )
            	    // InternalKim.g:4355:6: ({...}? => ( (lv_private_3_0= 'private' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:4358:9: ({...}? => ( (lv_private_3_0= 'private' ) ) )
            	    // InternalKim.g:4358:10: {...}? => ( (lv_private_3_0= 'private' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4358:19: ( (lv_private_3_0= 'private' ) )
            	    // InternalKim.g:4358:20: (lv_private_3_0= 'private' )
            	    {
            	    // InternalKim.g:4358:20: (lv_private_3_0= 'private' )
            	    // InternalKim.g:4359:10: lv_private_3_0= 'private'
            	    {
            	    lv_private_3_0=(Token)match(input,21,FOLLOW_64); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_private_3_0, grammarAccess.getNamespaceAccess().getPrivatePrivateKeyword_1_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getNamespaceRule());
            	      										}
            	      										setWithLastConsumed(current, "private", true, "private");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:4376:4: ({...}? => ( ({...}? => ( (lv_inactive_4_0= 'void' ) ) ) ) )
            	    {
            	    // InternalKim.g:4376:4: ({...}? => ( ({...}? => ( (lv_inactive_4_0= 'void' ) ) ) ) )
            	    // InternalKim.g:4377:5: {...}? => ( ({...}? => ( (lv_inactive_4_0= 'void' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:4377:106: ( ({...}? => ( (lv_inactive_4_0= 'void' ) ) ) )
            	    // InternalKim.g:4378:6: ({...}? => ( (lv_inactive_4_0= 'void' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:4381:9: ({...}? => ( (lv_inactive_4_0= 'void' ) ) )
            	    // InternalKim.g:4381:10: {...}? => ( (lv_inactive_4_0= 'void' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4381:19: ( (lv_inactive_4_0= 'void' ) )
            	    // InternalKim.g:4381:20: (lv_inactive_4_0= 'void' )
            	    {
            	    // InternalKim.g:4381:20: (lv_inactive_4_0= 'void' )
            	    // InternalKim.g:4382:10: lv_inactive_4_0= 'void'
            	    {
            	    lv_inactive_4_0=(Token)match(input,20,FOLLOW_64); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_inactive_4_0, grammarAccess.getNamespaceAccess().getInactiveVoidKeyword_1_1_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getNamespaceRule());
            	      										}
            	      										setWithLastConsumed(current, "inactive", true, "void");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop99;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            }

            // InternalKim.g:4406:3: (otherlv_5= 'namespace' | ( (lv_scenario_6_0= 'scenario' ) ) | ( (lv_worldviewBound_7_0= 'worldview' ) ) )
            int alt100=3;
            switch ( input.LA(1) ) {
            case 75:
                {
                alt100=1;
                }
                break;
            case 76:
                {
                alt100=2;
                }
                break;
            case 77:
                {
                alt100=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 100, 0, input);

                throw nvae;
            }

            switch (alt100) {
                case 1 :
                    // InternalKim.g:4407:4: otherlv_5= 'namespace'
                    {
                    otherlv_5=(Token)match(input,75,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getNamespaceAccess().getNamespaceKeyword_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:4412:4: ( (lv_scenario_6_0= 'scenario' ) )
                    {
                    // InternalKim.g:4412:4: ( (lv_scenario_6_0= 'scenario' ) )
                    // InternalKim.g:4413:5: (lv_scenario_6_0= 'scenario' )
                    {
                    // InternalKim.g:4413:5: (lv_scenario_6_0= 'scenario' )
                    // InternalKim.g:4414:6: lv_scenario_6_0= 'scenario'
                    {
                    lv_scenario_6_0=(Token)match(input,76,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_scenario_6_0, grammarAccess.getNamespaceAccess().getScenarioScenarioKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamespaceRule());
                      						}
                      						setWithLastConsumed(current, "scenario", true, "scenario");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:4427:4: ( (lv_worldviewBound_7_0= 'worldview' ) )
                    {
                    // InternalKim.g:4427:4: ( (lv_worldviewBound_7_0= 'worldview' ) )
                    // InternalKim.g:4428:5: (lv_worldviewBound_7_0= 'worldview' )
                    {
                    // InternalKim.g:4428:5: (lv_worldviewBound_7_0= 'worldview' )
                    // InternalKim.g:4429:6: lv_worldviewBound_7_0= 'worldview'
                    {
                    lv_worldviewBound_7_0=(Token)match(input,77,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_worldviewBound_7_0, grammarAccess.getNamespaceAccess().getWorldviewBoundWorldviewKeyword_2_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamespaceRule());
                      						}
                      						setWithLastConsumed(current, "worldviewBound", true, "worldview");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:4442:3: ( (lv_name_8_0= rulePathName ) )
            // InternalKim.g:4443:4: (lv_name_8_0= rulePathName )
            {
            // InternalKim.g:4443:4: (lv_name_8_0= rulePathName )
            // InternalKim.g:4444:5: lv_name_8_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamespaceAccess().getNamePathNameParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_65);
            lv_name_8_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamespaceRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_8_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:4461:3: ( (lv_docstring_9_0= RULE_STRING ) )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==RULE_STRING) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // InternalKim.g:4462:4: (lv_docstring_9_0= RULE_STRING )
                    {
                    // InternalKim.g:4462:4: (lv_docstring_9_0= RULE_STRING )
                    // InternalKim.g:4463:5: lv_docstring_9_0= RULE_STRING
                    {
                    lv_docstring_9_0=(Token)match(input,RULE_STRING,FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_docstring_9_0, grammarAccess.getNamespaceAccess().getDocstringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getNamespaceRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"docstring",
                      						lv_docstring_9_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:4479:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) )
            // InternalKim.g:4480:4: ( ( ( ({...}? => ( ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:4480:4: ( ( ( ({...}? => ( ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) )
            // InternalKim.g:4481:5: ( ( ({...}? => ( ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());
            // InternalKim.g:4484:5: ( ( ({...}? => ( ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* )
            // InternalKim.g:4485:6: ( ({...}? => ( ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*
            {
            // InternalKim.g:4485:6: ( ({...}? => ( ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*
            loop111:
            do {
                int alt111=8;
                alt111 = dfa111.predict(input);
                switch (alt111) {
            	case 1 :
            	    // InternalKim.g:4486:4: ({...}? => ( ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:4486:4: ({...}? => ( ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) ) ) )
            	    // InternalKim.g:4487:5: {...}? => ( ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0)");
            	    }
            	    // InternalKim.g:4487:106: ( ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) ) )
            	    // InternalKim.g:4488:6: ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0);
            	    // InternalKim.g:4491:9: ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) )
            	    // InternalKim.g:4491:10: {...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4491:19: (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* )
            	    // InternalKim.g:4491:20: otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )*
            	    {
            	    otherlv_11=(Token)match(input,29,FOLLOW_67); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_11, grammarAccess.getNamespaceAccess().getUsingKeyword_5_0_0());
            	      								
            	    }
            	    // InternalKim.g:4495:9: ( (lv_imported_12_0= ruleImport ) )
            	    // InternalKim.g:4496:10: (lv_imported_12_0= ruleImport )
            	    {
            	    // InternalKim.g:4496:10: (lv_imported_12_0= ruleImport )
            	    // InternalKim.g:4497:11: lv_imported_12_0= ruleImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_68);
            	    lv_imported_12_0=ruleImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"imported",
            	      												lv_imported_12_0,
            	      												"org.integratedmodelling.kim.Kim.Import");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4514:9: ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )*
            	    loop102:
            	    do {
            	        int alt102=2;
            	        int LA102_0 = input.LA(1);

            	        if ( (LA102_0==25) ) {
            	            alt102=1;
            	        }


            	        switch (alt102) {
            	    	case 1 :
            	    	    // InternalKim.g:4515:10: ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) )
            	    	    {
            	    	    // InternalKim.g:4515:10: ( ( ',' )=>otherlv_13= ',' )
            	    	    // InternalKim.g:4516:11: ( ',' )=>otherlv_13= ','
            	    	    {
            	    	    otherlv_13=(Token)match(input,25,FOLLOW_67); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_13, grammarAccess.getNamespaceAccess().getCommaKeyword_5_0_2_0());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:4522:10: ( (lv_imported_14_0= ruleImport ) )
            	    	    // InternalKim.g:4523:11: (lv_imported_14_0= ruleImport )
            	    	    {
            	    	    // InternalKim.g:4523:11: (lv_imported_14_0= ruleImport )
            	    	    // InternalKim.g:4524:12: lv_imported_14_0= ruleImport
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_0_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_68);
            	    	    lv_imported_14_0=ruleImport();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"imported",
            	    	      													lv_imported_14_0,
            	    	      													"org.integratedmodelling.kim.Kim.Import");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop102;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:4548:4: ({...}? => ( ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:4548:4: ({...}? => ( ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) ) ) )
            	    // InternalKim.g:4549:5: {...}? => ( ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1)");
            	    }
            	    // InternalKim.g:4549:106: ( ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) ) )
            	    // InternalKim.g:4550:6: ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1);
            	    // InternalKim.g:4553:9: ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) )
            	    // InternalKim.g:4553:10: {...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4553:19: (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* )
            	    // InternalKim.g:4553:20: otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )*
            	    {
            	    otherlv_15=(Token)match(input,78,FOLLOW_69); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_15, grammarAccess.getNamespaceAccess().getImportsKeyword_5_1_0());
            	      								
            	    }
            	    // InternalKim.g:4557:9: ( (lv_owlImports_16_0= ruleOwlImport ) )
            	    // InternalKim.g:4558:10: (lv_owlImports_16_0= ruleOwlImport )
            	    {
            	    // InternalKim.g:4558:10: (lv_owlImports_16_0= ruleOwlImport )
            	    // InternalKim.g:4559:11: lv_owlImports_16_0= ruleOwlImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_68);
            	    lv_owlImports_16_0=ruleOwlImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"owlImports",
            	      												lv_owlImports_16_0,
            	      												"org.integratedmodelling.kim.Kim.OwlImport");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4576:9: (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )*
            	    loop103:
            	    do {
            	        int alt103=2;
            	        int LA103_0 = input.LA(1);

            	        if ( (LA103_0==25) ) {
            	            alt103=1;
            	        }


            	        switch (alt103) {
            	    	case 1 :
            	    	    // InternalKim.g:4577:10: otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) )
            	    	    {
            	    	    otherlv_17=(Token)match(input,25,FOLLOW_69); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_17, grammarAccess.getNamespaceAccess().getCommaKeyword_5_1_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:4581:10: ( (lv_owlImports_18_0= ruleOwlImport ) )
            	    	    // InternalKim.g:4582:11: (lv_owlImports_18_0= ruleOwlImport )
            	    	    {
            	    	    // InternalKim.g:4582:11: (lv_owlImports_18_0= ruleOwlImport )
            	    	    // InternalKim.g:4583:12: lv_owlImports_18_0= ruleOwlImport
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_1_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_68);
            	    	    lv_owlImports_18_0=ruleOwlImport();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"owlImports",
            	    	      													lv_owlImports_18_0,
            	    	      													"org.integratedmodelling.kim.Kim.OwlImport");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop103;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:4607:4: ({...}? => ( ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:4607:4: ({...}? => ( ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) ) ) )
            	    // InternalKim.g:4608:5: {...}? => ( ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2)");
            	    }
            	    // InternalKim.g:4608:106: ( ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) ) )
            	    // InternalKim.g:4609:6: ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2);
            	    // InternalKim.g:4612:9: ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) )
            	    // InternalKim.g:4612:10: {...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4612:19: (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* )
            	    // InternalKim.g:4612:20: otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )*
            	    {
            	    otherlv_19=(Token)match(input,79,FOLLOW_24); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_19, grammarAccess.getNamespaceAccess().getCoveringKeyword_5_2_0());
            	      								
            	    }
            	    // InternalKim.g:4616:9: ( (lv_coverage_20_0= ruleFunction ) )
            	    // InternalKim.g:4617:10: (lv_coverage_20_0= ruleFunction )
            	    {
            	    // InternalKim.g:4617:10: (lv_coverage_20_0= ruleFunction )
            	    // InternalKim.g:4618:11: lv_coverage_20_0= ruleFunction
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_68);
            	    lv_coverage_20_0=ruleFunction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"coverage",
            	      												lv_coverage_20_0,
            	      												"org.integratedmodelling.kim.Kim.Function");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4635:9: ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )*
            	    loop104:
            	    do {
            	        int alt104=2;
            	        int LA104_0 = input.LA(1);

            	        if ( (LA104_0==25) ) {
            	            alt104=1;
            	        }


            	        switch (alt104) {
            	    	case 1 :
            	    	    // InternalKim.g:4636:10: ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) )
            	    	    {
            	    	    // InternalKim.g:4636:10: ( ( ',' )=>otherlv_21= ',' )
            	    	    // InternalKim.g:4637:11: ( ',' )=>otherlv_21= ','
            	    	    {
            	    	    otherlv_21=(Token)match(input,25,FOLLOW_24); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_21, grammarAccess.getNamespaceAccess().getCommaKeyword_5_2_2_0());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:4643:10: ( (lv_coverage_22_0= ruleFunction ) )
            	    	    // InternalKim.g:4644:11: (lv_coverage_22_0= ruleFunction )
            	    	    {
            	    	    // InternalKim.g:4644:11: (lv_coverage_22_0= ruleFunction )
            	    	    // InternalKim.g:4645:12: lv_coverage_22_0= ruleFunction
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_2_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_68);
            	    	    lv_coverage_22_0=ruleFunction();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"coverage",
            	    	      													lv_coverage_22_0,
            	    	      													"org.integratedmodelling.kim.Kim.Function");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop104;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:4669:4: ({...}? => ( ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:4669:4: ({...}? => ( ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) ) ) )
            	    // InternalKim.g:4670:5: {...}? => ( ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3)");
            	    }
            	    // InternalKim.g:4670:106: ( ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:4671:6: ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3);
            	    // InternalKim.g:4674:9: ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:4674:10: {...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4674:19: (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) )
            	    // InternalKim.g:4674:20: otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) )
            	    {
            	    otherlv_23=(Token)match(input,48,FOLLOW_70); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_23, grammarAccess.getNamespaceAccess().getInKeyword_5_3_0());
            	      								
            	    }
            	    otherlv_24=(Token)match(input,80,FOLLOW_71); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_24, grammarAccess.getNamespaceAccess().getDomainKeyword_5_3_1());
            	      								
            	    }
            	    // InternalKim.g:4682:9: ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) )
            	    int alt105=2;
            	    int LA105_0 = input.LA(1);

            	    if ( (LA105_0==81) ) {
            	        alt105=1;
            	    }
            	    else if ( (LA105_0==RULE_LOWERCASE_ID||(LA105_0>=RULE_CAMELCASE_ID && LA105_0<=RULE_LOWERCASE_DASHID)||LA105_0==36||(LA105_0>=112 && LA105_0<=113)||(LA105_0>=121 && LA105_0<=122)||(LA105_0>=124 && LA105_0<=136)) ) {
            	        alt105=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 105, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt105) {
            	        case 1 :
            	            // InternalKim.g:4683:10: ( (lv_rootDomain_25_0= 'root' ) )
            	            {
            	            // InternalKim.g:4683:10: ( (lv_rootDomain_25_0= 'root' ) )
            	            // InternalKim.g:4684:11: (lv_rootDomain_25_0= 'root' )
            	            {
            	            // InternalKim.g:4684:11: (lv_rootDomain_25_0= 'root' )
            	            // InternalKim.g:4685:12: lv_rootDomain_25_0= 'root'
            	            {
            	            lv_rootDomain_25_0=(Token)match(input,81,FOLLOW_66); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_rootDomain_25_0, grammarAccess.getNamespaceAccess().getRootDomainRootKeyword_5_3_2_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getNamespaceRule());
            	              												}
            	              												setWithLastConsumed(current, "rootDomain", true, "root");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:4698:10: ( (lv_domainConcept_26_0= ruleConcept ) )
            	            {
            	            // InternalKim.g:4698:10: ( (lv_domainConcept_26_0= ruleConcept ) )
            	            // InternalKim.g:4699:11: (lv_domainConcept_26_0= ruleConcept )
            	            {
            	            // InternalKim.g:4699:11: (lv_domainConcept_26_0= ruleConcept )
            	            // InternalKim.g:4700:12: lv_domainConcept_26_0= ruleConcept
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getNamespaceAccess().getDomainConceptConceptParserRuleCall_5_3_2_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_66);
            	            lv_domainConcept_26_0=ruleConcept();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	              												}
            	              												set(
            	              													current,
            	              													"domainConcept",
            	              													lv_domainConcept_26_0,
            	              													"org.integratedmodelling.kim.Kim.Concept");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:4724:4: ({...}? => ( ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:4724:4: ({...}? => ( ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) ) ) )
            	    // InternalKim.g:4725:5: {...}? => ( ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4)");
            	    }
            	    // InternalKim.g:4725:106: ( ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) ) )
            	    // InternalKim.g:4726:6: ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4);
            	    // InternalKim.g:4729:9: ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) )
            	    // InternalKim.g:4729:10: {...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4729:19: (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) )
            	    // InternalKim.g:4729:20: otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* )
            	    {
            	    otherlv_27=(Token)match(input,82,FOLLOW_72); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getNamespaceAccess().getDisjointKeyword_5_4_0());
            	      								
            	    }
            	    otherlv_28=(Token)match(input,40,FOLLOW_24); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_28, grammarAccess.getNamespaceAccess().getWithKeyword_5_4_1());
            	      								
            	    }
            	    // InternalKim.g:4737:9: ( (lv_disjointNamespaces_29_0= rulePathName ) )
            	    // InternalKim.g:4738:10: (lv_disjointNamespaces_29_0= rulePathName )
            	    {
            	    // InternalKim.g:4738:10: (lv_disjointNamespaces_29_0= rulePathName )
            	    // InternalKim.g:4739:11: lv_disjointNamespaces_29_0= rulePathName
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_4_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_73);
            	    lv_disjointNamespaces_29_0=rulePathName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"disjointNamespaces",
            	      												lv_disjointNamespaces_29_0,
            	      												"org.integratedmodelling.kim.Kim.PathName");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4756:9: (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* )
            	    // InternalKim.g:4757:10: otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )*
            	    {
            	    otherlv_30=(Token)match(input,25,FOLLOW_74); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_30, grammarAccess.getNamespaceAccess().getCommaKeyword_5_4_3_0());
            	      									
            	    }
            	    // InternalKim.g:4761:10: ( (lv_disjointNamespaces_31_0= rulePathName ) )*
            	    loop106:
            	    do {
            	        int alt106=2;
            	        int LA106_0 = input.LA(1);

            	        if ( (LA106_0==RULE_LOWERCASE_ID||LA106_0==RULE_LOWERCASE_DASHID) ) {
            	            alt106=1;
            	        }


            	        switch (alt106) {
            	    	case 1 :
            	    	    // InternalKim.g:4762:11: (lv_disjointNamespaces_31_0= rulePathName )
            	    	    {
            	    	    // InternalKim.g:4762:11: (lv_disjointNamespaces_31_0= rulePathName )
            	    	    // InternalKim.g:4763:12: lv_disjointNamespaces_31_0= rulePathName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_4_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_74);
            	    	    lv_disjointNamespaces_31_0=rulePathName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"disjointNamespaces",
            	    	      													lv_disjointNamespaces_31_0,
            	    	      													"org.integratedmodelling.kim.Kim.PathName");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop106;
            	        }
            	    } while (true);


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:4787:4: ({...}? => ( ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:4787:4: ({...}? => ( ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) ) ) )
            	    // InternalKim.g:4788:5: {...}? => ( ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5)");
            	    }
            	    // InternalKim.g:4788:106: ( ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) ) )
            	    // InternalKim.g:4789:6: ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5);
            	    // InternalKim.g:4792:9: ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) )
            	    // InternalKim.g:4792:10: {...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4792:19: (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) )
            	    // InternalKim.g:4792:20: otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) )
            	    {
            	    otherlv_32=(Token)match(input,83,FOLLOW_75); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_32, grammarAccess.getNamespaceAccess().getVersionKeyword_5_5_0());
            	      								
            	    }
            	    // InternalKim.g:4796:9: ( (lv_version_33_0= ruleVersionNumber ) )
            	    // InternalKim.g:4797:10: (lv_version_33_0= ruleVersionNumber )
            	    {
            	    // InternalKim.g:4797:10: (lv_version_33_0= ruleVersionNumber )
            	    // InternalKim.g:4798:11: lv_version_33_0= ruleVersionNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getVersionVersionNumberParserRuleCall_5_5_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_66);
            	    lv_version_33_0=ruleVersionNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											set(
            	      												current,
            	      												"version",
            	      												lv_version_33_0,
            	      												"org.integratedmodelling.kim.Kim.VersionNumber");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:4821:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
            	    {
            	    // InternalKim.g:4821:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
            	    // InternalKim.g:4822:5: {...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6)");
            	    }
            	    // InternalKim.g:4822:106: ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) )
            	    // InternalKim.g:4823:6: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6);
            	    // InternalKim.g:4826:9: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
            	    // InternalKim.g:4826:10: {...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4826:19: ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
            	    // InternalKim.g:4826:20: ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
            	    {
            	    // InternalKim.g:4826:20: ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
            	    // InternalKim.g:4827:10: ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
            	    {
            	    getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6());
            	    // InternalKim.g:4830:10: ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
            	    // InternalKim.g:4831:11: ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?
            	    {
            	    // InternalKim.g:4831:11: ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+
            	    int cnt110=0;
            	    loop110:
            	    do {
            	        int alt110=4;
            	        switch ( input.LA(1) ) {
            	        case 29:
            	            {
            	            int LA110_2 = input.LA(2);

            	            if ( synpred198_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2) ) {
            	                alt110=3;
            	            }


            	            }
            	            break;
            	        case 84:
            	            {
            	            int LA110_3 = input.LA(2);

            	            if ( synpred195_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0) ) {
            	                alt110=1;
            	            }


            	            }
            	            break;
            	        case 86:
            	            {
            	            int LA110_4 = input.LA(2);

            	            if ( synpred197_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1) ) {
            	                alt110=2;
            	            }


            	            }
            	            break;

            	        }

            	        switch (alt110) {
            	    	case 1 :
            	    	    // InternalKim.g:4832:9: ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) )
            	    	    {
            	    	    // InternalKim.g:4832:9: ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) )
            	    	    // InternalKim.g:4833:10: {...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0)");
            	    	    }
            	    	    // InternalKim.g:4833:113: ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) )
            	    	    // InternalKim.g:4834:11: ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0);
            	    	    // InternalKim.g:4837:14: ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) )
            	    	    // InternalKim.g:4837:15: {...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:4837:24: (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? )
            	    	    // InternalKim.g:4837:25: otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )?
            	    	    {
            	    	    otherlv_35=(Token)match(input,84,FOLLOW_76); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_35, grammarAccess.getNamespaceAccess().getResolveKeyword_5_6_0_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:4841:14: (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )?
            	    	    int alt108=2;
            	    	    int LA108_0 = input.LA(1);

            	    	    if ( (LA108_0==85) ) {
            	    	        alt108=1;
            	    	    }
            	    	    switch (alt108) {
            	    	        case 1 :
            	    	            // InternalKim.g:4842:15: otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )*
            	    	            {
            	    	            otherlv_36=(Token)match(input,85,FOLLOW_74); if (state.failed) return current;
            	    	            if ( state.backtracking==0 ) {

            	    	              															newLeafNode(otherlv_36, grammarAccess.getNamespaceAccess().getFromKeyword_5_6_0_1_0());
            	    	              														
            	    	            }
            	    	            // InternalKim.g:4846:15: ( (lv_lookupNamespace_37_0= rulePathName ) )*
            	    	            loop107:
            	    	            do {
            	    	                int alt107=2;
            	    	                int LA107_0 = input.LA(1);

            	    	                if ( (LA107_0==RULE_LOWERCASE_ID||LA107_0==RULE_LOWERCASE_DASHID) ) {
            	    	                    alt107=1;
            	    	                }


            	    	                switch (alt107) {
            	    	            	case 1 :
            	    	            	    // InternalKim.g:4847:16: (lv_lookupNamespace_37_0= rulePathName )
            	    	            	    {
            	    	            	    // InternalKim.g:4847:16: (lv_lookupNamespace_37_0= rulePathName )
            	    	            	    // InternalKim.g:4848:17: lv_lookupNamespace_37_0= rulePathName
            	    	            	    {
            	    	            	    if ( state.backtracking==0 ) {

            	    	            	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_6_0_1_1_0());
            	    	            	      																
            	    	            	    }
            	    	            	    pushFollow(FOLLOW_74);
            	    	            	    lv_lookupNamespace_37_0=rulePathName();

            	    	            	    state._fsp--;
            	    	            	    if (state.failed) return current;
            	    	            	    if ( state.backtracking==0 ) {

            	    	            	      																	if (current==null) {
            	    	            	      																		current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	            	      																	}
            	    	            	      																	add(
            	    	            	      																		current,
            	    	            	      																		"lookupNamespace",
            	    	            	      																		lv_lookupNamespace_37_0,
            	    	            	      																		"org.integratedmodelling.kim.Kim.PathName");
            	    	            	      																	afterParserOrEnumRuleCall();
            	    	            	      																
            	    	            	    }

            	    	            	    }


            	    	            	    }
            	    	            	    break;

            	    	            	default :
            	    	            	    break loop107;
            	    	                }
            	    	            } while (true);


            	    	            }
            	    	            break;

            	    	    }


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // InternalKim.g:4872:9: ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) )
            	    	    {
            	    	    // InternalKim.g:4872:9: ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) )
            	    	    // InternalKim.g:4873:10: {...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1)");
            	    	    }
            	    	    // InternalKim.g:4873:113: ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) )
            	    	    // InternalKim.g:4874:11: ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1);
            	    	    // InternalKim.g:4877:14: ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) )
            	    	    // InternalKim.g:4877:15: {...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:4877:24: (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* )
            	    	    // InternalKim.g:4877:25: otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )*
            	    	    {
            	    	    otherlv_38=(Token)match(input,86,FOLLOW_74); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_38, grammarAccess.getNamespaceAccess().getOutsideKeyword_5_6_1_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:4881:14: ( (lv_blacklistNamespace_39_0= rulePathName ) )*
            	    	    loop109:
            	    	    do {
            	    	        int alt109=2;
            	    	        int LA109_0 = input.LA(1);

            	    	        if ( (LA109_0==RULE_LOWERCASE_ID||LA109_0==RULE_LOWERCASE_DASHID) ) {
            	    	            alt109=1;
            	    	        }


            	    	        switch (alt109) {
            	    	    	case 1 :
            	    	    	    // InternalKim.g:4882:15: (lv_blacklistNamespace_39_0= rulePathName )
            	    	    	    {
            	    	    	    // InternalKim.g:4882:15: (lv_blacklistNamespace_39_0= rulePathName )
            	    	    	    // InternalKim.g:4883:16: lv_blacklistNamespace_39_0= rulePathName
            	    	    	    {
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_6_1_1_0());
            	    	    	      															
            	    	    	    }
            	    	    	    pushFollow(FOLLOW_74);
            	    	    	    lv_blacklistNamespace_39_0=rulePathName();

            	    	    	    state._fsp--;
            	    	    	    if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																if (current==null) {
            	    	    	      																	current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	    	      																}
            	    	    	      																add(
            	    	    	      																	current,
            	    	    	      																	"blacklistNamespace",
            	    	    	      																	lv_blacklistNamespace_39_0,
            	    	    	      																	"org.integratedmodelling.kim.Kim.PathName");
            	    	    	      																afterParserOrEnumRuleCall();
            	    	    	      															
            	    	    	    }

            	    	    	    }


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop109;
            	    	        }
            	    	    } while (true);


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 3 :
            	    	    // InternalKim.g:4906:9: ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) )
            	    	    {
            	    	    // InternalKim.g:4906:9: ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) )
            	    	    // InternalKim.g:4907:10: {...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2)");
            	    	    }
            	    	    // InternalKim.g:4907:113: ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) )
            	    	    // InternalKim.g:4908:11: ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2);
            	    	    // InternalKim.g:4911:14: ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) )
            	    	    // InternalKim.g:4911:15: {...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:4911:24: (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) )
            	    	    // InternalKim.g:4911:25: otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) )
            	    	    {
            	    	    otherlv_40=(Token)match(input,29,FOLLOW_32); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_40, grammarAccess.getNamespaceAccess().getUsingKeyword_5_6_2_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:4915:14: ( (lv_weights_41_0= ruleMetadata ) )
            	    	    // InternalKim.g:4916:15: (lv_weights_41_0= ruleMetadata )
            	    	    {
            	    	    // InternalKim.g:4916:15: (lv_weights_41_0= ruleMetadata )
            	    	    // InternalKim.g:4917:16: lv_weights_41_0= ruleMetadata
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMetadataParserRuleCall_5_6_2_1_0());
            	    	      															
            	    	    }
            	    	    pushFollow(FOLLOW_66);
            	    	    lv_weights_41_0=ruleMetadata();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      																if (current==null) {
            	    	      																	current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      																}
            	    	      																set(
            	    	      																	current,
            	    	      																	"weights",
            	    	      																	lv_weights_41_0,
            	    	      																	"org.integratedmodelling.kim.Kim.Metadata");
            	    	      																afterParserOrEnumRuleCall();
            	    	      															
            	    	    }

            	    	    }


            	    	    }


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt110 >= 1 ) break loop110;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(110, input);
            	                throw eee;
            	        }
            	        cnt110++;
            	    } while (true);

            	    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6()) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6())");
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6());

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop111;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            }

            // InternalKim.g:4960:3: (otherlv_42= 'with' otherlv_43= 'parameters' ( (lv_parameters_44_0= ruleMetadata ) ) )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==40) ) {
                int LA112_1 = input.LA(2);

                if ( (LA112_1==87) ) {
                    alt112=1;
                }
            }
            switch (alt112) {
                case 1 :
                    // InternalKim.g:4961:4: otherlv_42= 'with' otherlv_43= 'parameters' ( (lv_parameters_44_0= ruleMetadata ) )
                    {
                    otherlv_42=(Token)match(input,40,FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getNamespaceAccess().getWithKeyword_6_0());
                      			
                    }
                    otherlv_43=(Token)match(input,87,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_43, grammarAccess.getNamespaceAccess().getParametersKeyword_6_1());
                      			
                    }
                    // InternalKim.g:4969:4: ( (lv_parameters_44_0= ruleMetadata ) )
                    // InternalKim.g:4970:5: (lv_parameters_44_0= ruleMetadata )
                    {
                    // InternalKim.g:4970:5: (lv_parameters_44_0= ruleMetadata )
                    // InternalKim.g:4971:6: lv_parameters_44_0= ruleMetadata
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getParametersMetadataParserRuleCall_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_78);
                    lv_parameters_44_0=ruleMetadata();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						set(
                      							current,
                      							"parameters",
                      							lv_parameters_44_0,
                      							"org.integratedmodelling.kim.Kim.Metadata");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:4989:3: (otherlv_45= 'with' otherlv_46= 'metadata' ( (lv_metadata_47_0= ruleMetadata ) ) )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==40) ) {
                int LA113_1 = input.LA(2);

                if ( (LA113_1==41) ) {
                    alt113=1;
                }
            }
            switch (alt113) {
                case 1 :
                    // InternalKim.g:4990:4: otherlv_45= 'with' otherlv_46= 'metadata' ( (lv_metadata_47_0= ruleMetadata ) )
                    {
                    otherlv_45=(Token)match(input,40,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_45, grammarAccess.getNamespaceAccess().getWithKeyword_7_0());
                      			
                    }
                    otherlv_46=(Token)match(input,41,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_46, grammarAccess.getNamespaceAccess().getMetadataKeyword_7_1());
                      			
                    }
                    // InternalKim.g:4998:4: ( (lv_metadata_47_0= ruleMetadata ) )
                    // InternalKim.g:4999:5: (lv_metadata_47_0= ruleMetadata )
                    {
                    // InternalKim.g:4999:5: (lv_metadata_47_0= ruleMetadata )
                    // InternalKim.g:5000:6: lv_metadata_47_0= ruleMetadata
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getMetadataMetadataParserRuleCall_7_2_0());
                      					
                    }
                    pushFollow(FOLLOW_78);
                    lv_metadata_47_0=ruleMetadata();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						set(
                      							current,
                      							"metadata",
                      							lv_metadata_47_0,
                      							"org.integratedmodelling.kim.Kim.Metadata");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:5018:3: (otherlv_48= 'with' otherlv_49= 'documentation' ( (lv_documentation_50_0= ruleMetadata ) ) )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==40) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalKim.g:5019:4: otherlv_48= 'with' otherlv_49= 'documentation' ( (lv_documentation_50_0= ruleMetadata ) )
                    {
                    otherlv_48=(Token)match(input,40,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getNamespaceAccess().getWithKeyword_8_0());
                      			
                    }
                    otherlv_49=(Token)match(input,42,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_49, grammarAccess.getNamespaceAccess().getDocumentationKeyword_8_1());
                      			
                    }
                    // InternalKim.g:5027:4: ( (lv_documentation_50_0= ruleMetadata ) )
                    // InternalKim.g:5028:5: (lv_documentation_50_0= ruleMetadata )
                    {
                    // InternalKim.g:5028:5: (lv_documentation_50_0= ruleMetadata )
                    // InternalKim.g:5029:6: lv_documentation_50_0= ruleMetadata
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getDocumentationMetadataParserRuleCall_8_2_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_documentation_50_0=ruleMetadata();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						set(
                      							current,
                      							"documentation",
                      							lv_documentation_50_0,
                      							"org.integratedmodelling.kim.Kim.Metadata");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_51=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_51, grammarAccess.getNamespaceAccess().getSemicolonKeyword_9());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNamespace"


    // $ANTLR start "entryRuleOwlImport"
    // InternalKim.g:5058:1: entryRuleOwlImport returns [EObject current=null] : iv_ruleOwlImport= ruleOwlImport EOF ;
    public final EObject entryRuleOwlImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwlImport = null;


        try {
            // InternalKim.g:5058:50: (iv_ruleOwlImport= ruleOwlImport EOF )
            // InternalKim.g:5059:2: iv_ruleOwlImport= ruleOwlImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwlImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwlImport=ruleOwlImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwlImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwlImport"


    // $ANTLR start "ruleOwlImport"
    // InternalKim.g:5065:1: ruleOwlImport returns [EObject current=null] : ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) ) ;
    public final EObject ruleOwlImport() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token lv_prefix_2_0=null;


        	enterRule();

        try {
            // InternalKim.g:5071:2: ( ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) ) )
            // InternalKim.g:5072:2: ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) )
            {
            // InternalKim.g:5072:2: ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) )
            // InternalKim.g:5073:3: ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) )
            {
            // InternalKim.g:5073:3: ( (lv_name_0_0= RULE_STRING ) )
            // InternalKim.g:5074:4: (lv_name_0_0= RULE_STRING )
            {
            // InternalKim.g:5074:4: (lv_name_0_0= RULE_STRING )
            // InternalKim.g:5075:5: lv_name_0_0= RULE_STRING
            {
            lv_name_0_0=(Token)match(input,RULE_STRING,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getOwlImportAccess().getNameSTRINGTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getOwlImportRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.eclipse.xtext.common.Terminals.STRING");
              				
            }

            }


            }

            // InternalKim.g:5091:3: (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) )
            // InternalKim.g:5092:4: otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) )
            {
            otherlv_1=(Token)match(input,23,FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getOwlImportAccess().getAsKeyword_1_0());
              			
            }
            // InternalKim.g:5096:4: ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) )
            // InternalKim.g:5097:5: (lv_prefix_2_0= RULE_LOWERCASE_ID )
            {
            // InternalKim.g:5097:5: (lv_prefix_2_0= RULE_LOWERCASE_ID )
            // InternalKim.g:5098:6: lv_prefix_2_0= RULE_LOWERCASE_ID
            {
            lv_prefix_2_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						newLeafNode(lv_prefix_2_0, grammarAccess.getOwlImportAccess().getPrefixLOWERCASE_IDTerminalRuleCall_1_1_0());
              					
            }
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getOwlImportRule());
              						}
              						setWithLastConsumed(
              							current,
              							"prefix",
              							lv_prefix_2_0,
              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
              					
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwlImport"


    // $ANTLR start "entryRuleImport"
    // InternalKim.g:5119:1: entryRuleImport returns [EObject current=null] : iv_ruleImport= ruleImport EOF ;
    public final EObject entryRuleImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImport = null;


        try {
            // InternalKim.g:5119:47: (iv_ruleImport= ruleImport EOF )
            // InternalKim.g:5120:2: iv_ruleImport= ruleImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImport=ruleImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // InternalKim.g:5126:1: ruleImport returns [EObject current=null] : ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) ) ;
    public final EObject ruleImport() throws RecognitionException {
        EObject current = null;

        Token lv_star_1_0=null;
        Token otherlv_2=null;
        EObject lv_imports_0_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:5132:2: ( ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) ) )
            // InternalKim.g:5133:2: ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) )
            {
            // InternalKim.g:5133:2: ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) )
            // InternalKim.g:5134:3: ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) )
            {
            // InternalKim.g:5134:3: ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==36||LA116_0==38) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalKim.g:5135:4: ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from'
                    {
                    // InternalKim.g:5135:4: ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) )
                    int alt115=2;
                    int LA115_0 = input.LA(1);

                    if ( (LA115_0==36) ) {
                        alt115=1;
                    }
                    else if ( (LA115_0==38) ) {
                        alt115=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 115, 0, input);

                        throw nvae;
                    }
                    switch (alt115) {
                        case 1 :
                            // InternalKim.g:5136:5: ( (lv_imports_0_0= ruleList ) )
                            {
                            // InternalKim.g:5136:5: ( (lv_imports_0_0= ruleList ) )
                            // InternalKim.g:5137:6: (lv_imports_0_0= ruleList )
                            {
                            // InternalKim.g:5137:6: (lv_imports_0_0= ruleList )
                            // InternalKim.g:5138:7: lv_imports_0_0= ruleList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getImportAccess().getImportsListParserRuleCall_0_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_79);
                            lv_imports_0_0=ruleList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getImportRule());
                              							}
                              							set(
                              								current,
                              								"imports",
                              								lv_imports_0_0,
                              								"org.integratedmodelling.kim.Kim.List");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:5156:5: ( (lv_star_1_0= '*' ) )
                            {
                            // InternalKim.g:5156:5: ( (lv_star_1_0= '*' ) )
                            // InternalKim.g:5157:6: (lv_star_1_0= '*' )
                            {
                            // InternalKim.g:5157:6: (lv_star_1_0= '*' )
                            // InternalKim.g:5158:7: lv_star_1_0= '*'
                            {
                            lv_star_1_0=(Token)match(input,38,FOLLOW_79); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_star_1_0, grammarAccess.getImportAccess().getStarAsteriskKeyword_0_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getImportRule());
                              							}
                              							setWithLastConsumed(current, "star", true, "*");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,85,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getImportAccess().getFromKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5176:3: ( (lv_name_3_0= rulePathName ) )
            // InternalKim.g:5177:4: (lv_name_3_0= rulePathName )
            {
            // InternalKim.g:5177:4: (lv_name_3_0= rulePathName )
            // InternalKim.g:5178:5: lv_name_3_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getImportAccess().getNamePathNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_3_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getImportRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "entryRuleUrnId"
    // InternalKim.g:5199:1: entryRuleUrnId returns [String current=null] : iv_ruleUrnId= ruleUrnId EOF ;
    public final String entryRuleUrnId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUrnId = null;


        try {
            // InternalKim.g:5199:45: (iv_ruleUrnId= ruleUrnId EOF )
            // InternalKim.g:5200:2: iv_ruleUrnId= ruleUrnId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUrnIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUrnId=ruleUrnId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUrnId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUrnId"


    // $ANTLR start "ruleUrnId"
    // InternalKim.g:5206:1: ruleUrnId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' this_Path_7= rulePath (kw= ':' this_VersionNumber_9= ruleVersionNumber )? (kw= '#' (this_LOWERCASE_ID_11= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_12= RULE_LOWERCASE_DASHID | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_LOWERCASE_ID_15= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_16= RULE_LOWERCASE_DASHID | this_UrnKvp_17= ruleUrnKvp ) )* )? ) ;
    public final AntlrDatatypeRuleToken ruleUrnId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_LOWERCASE_ID_11=null;
        Token this_LOWERCASE_DASHID_12=null;
        Token this_LOWERCASE_ID_15=null;
        Token this_LOWERCASE_DASHID_16=null;
        AntlrDatatypeRuleToken this_PathName_1 = null;

        AntlrDatatypeRuleToken this_PathName_3 = null;

        AntlrDatatypeRuleToken this_PathName_5 = null;

        AntlrDatatypeRuleToken this_Path_7 = null;

        AntlrDatatypeRuleToken this_VersionNumber_9 = null;

        AntlrDatatypeRuleToken this_UrnKvp_13 = null;

        AntlrDatatypeRuleToken this_UrnKvp_17 = null;



        	enterRule();

        try {
            // InternalKim.g:5212:2: ( ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' this_Path_7= rulePath (kw= ':' this_VersionNumber_9= ruleVersionNumber )? (kw= '#' (this_LOWERCASE_ID_11= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_12= RULE_LOWERCASE_DASHID | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_LOWERCASE_ID_15= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_16= RULE_LOWERCASE_DASHID | this_UrnKvp_17= ruleUrnKvp ) )* )? ) )
            // InternalKim.g:5213:2: ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' this_Path_7= rulePath (kw= ':' this_VersionNumber_9= ruleVersionNumber )? (kw= '#' (this_LOWERCASE_ID_11= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_12= RULE_LOWERCASE_DASHID | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_LOWERCASE_ID_15= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_16= RULE_LOWERCASE_DASHID | this_UrnKvp_17= ruleUrnKvp ) )* )? )
            {
            // InternalKim.g:5213:2: ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' this_Path_7= rulePath (kw= ':' this_VersionNumber_9= ruleVersionNumber )? (kw= '#' (this_LOWERCASE_ID_11= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_12= RULE_LOWERCASE_DASHID | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_LOWERCASE_ID_15= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_16= RULE_LOWERCASE_DASHID | this_UrnKvp_17= ruleUrnKvp ) )* )? )
            // InternalKim.g:5214:3: (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' this_Path_7= rulePath (kw= ':' this_VersionNumber_9= ruleVersionNumber )? (kw= '#' (this_LOWERCASE_ID_11= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_12= RULE_LOWERCASE_DASHID | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_LOWERCASE_ID_15= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_16= RULE_LOWERCASE_DASHID | this_UrnKvp_17= ruleUrnKvp ) )* )?
            {
            // InternalKim.g:5214:3: (kw= 'urn:klab:' )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==88) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalKim.g:5215:4: kw= 'urn:klab:'
                    {
                    kw=(Token)match(input,88,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getUrnKlabKeyword_0());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_80);
            this_PathName_1=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,89,FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_2());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_80);
            this_PathName_3=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_3);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,89,FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_4());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_80);
            this_PathName_5=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_5);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,89,FOLLOW_81); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_6());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_7());
              		
            }
            pushFollow(FOLLOW_82);
            this_Path_7=rulePath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_Path_7);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKim.g:5276:3: (kw= ':' this_VersionNumber_9= ruleVersionNumber )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==89) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalKim.g:5277:4: kw= ':' this_VersionNumber_9= ruleVersionNumber
                    {
                    kw=(Token)match(input,89,FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_8_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getUrnIdAccess().getVersionNumberParserRuleCall_8_1());
                      			
                    }
                    pushFollow(FOLLOW_83);
                    this_VersionNumber_9=ruleVersionNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_VersionNumber_9);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5293:3: (kw= '#' (this_LOWERCASE_ID_11= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_12= RULE_LOWERCASE_DASHID | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_LOWERCASE_ID_15= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_16= RULE_LOWERCASE_DASHID | this_UrnKvp_17= ruleUrnKvp ) )* )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==53) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalKim.g:5294:4: kw= '#' (this_LOWERCASE_ID_11= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_12= RULE_LOWERCASE_DASHID | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_LOWERCASE_ID_15= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_16= RULE_LOWERCASE_DASHID | this_UrnKvp_17= ruleUrnKvp ) )*
                    {
                    kw=(Token)match(input,53,FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getNumberSignKeyword_9_0());
                      			
                    }
                    // InternalKim.g:5299:4: (this_LOWERCASE_ID_11= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_12= RULE_LOWERCASE_DASHID | this_UrnKvp_13= ruleUrnKvp )
                    int alt119=3;
                    int LA119_0 = input.LA(1);

                    if ( (LA119_0==RULE_LOWERCASE_ID) ) {
                        int LA119_1 = input.LA(2);

                        if ( (LA119_1==EOF||(LA119_1>=RULE_LOWERCASE_ID && LA119_1<=RULE_STRING)||(LA119_1>=RULE_CAMELCASE_ID && LA119_1<=RULE_LOWERCASE_DASHID)||LA119_1==19||LA119_1==23||LA119_1==25||(LA119_1>=28 && LA119_1<=31)||(LA119_1>=35 && LA119_1<=36)||(LA119_1>=39 && LA119_1<=40)||(LA119_1>=44 && LA119_1<=45)||(LA119_1>=54 && LA119_1<=56)||LA119_1==88||LA119_1==90||(LA119_1>=112 && LA119_1<=113)||(LA119_1>=121 && LA119_1<=122)||(LA119_1>=124 && LA119_1<=136)) ) {
                            alt119=1;
                        }
                        else if ( (LA119_1==91) ) {
                            alt119=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 119, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA119_0==RULE_LOWERCASE_DASHID) ) {
                        int LA119_2 = input.LA(2);

                        if ( (LA119_2==EOF||(LA119_2>=RULE_LOWERCASE_ID && LA119_2<=RULE_STRING)||(LA119_2>=RULE_CAMELCASE_ID && LA119_2<=RULE_LOWERCASE_DASHID)||LA119_2==19||LA119_2==23||LA119_2==25||(LA119_2>=28 && LA119_2<=31)||(LA119_2>=35 && LA119_2<=36)||(LA119_2>=39 && LA119_2<=40)||(LA119_2>=44 && LA119_2<=45)||(LA119_2>=54 && LA119_2<=56)||LA119_2==88||LA119_2==90||(LA119_2>=112 && LA119_2<=113)||(LA119_2>=121 && LA119_2<=122)||(LA119_2>=124 && LA119_2<=136)) ) {
                            alt119=2;
                        }
                        else if ( (LA119_2==91) ) {
                            alt119=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 119, 2, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 119, 0, input);

                        throw nvae;
                    }
                    switch (alt119) {
                        case 1 :
                            // InternalKim.g:5300:5: this_LOWERCASE_ID_11= RULE_LOWERCASE_ID
                            {
                            this_LOWERCASE_ID_11=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_84); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_LOWERCASE_ID_11);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_LOWERCASE_ID_11, grammarAccess.getUrnIdAccess().getLOWERCASE_IDTerminalRuleCall_9_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:5308:5: this_LOWERCASE_DASHID_12= RULE_LOWERCASE_DASHID
                            {
                            this_LOWERCASE_DASHID_12=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_84); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_LOWERCASE_DASHID_12);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_LOWERCASE_DASHID_12, grammarAccess.getUrnIdAccess().getLOWERCASE_DASHIDTerminalRuleCall_9_1_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:5316:5: this_UrnKvp_13= ruleUrnKvp
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getUrnIdAccess().getUrnKvpParserRuleCall_9_1_2());
                              				
                            }
                            pushFollow(FOLLOW_84);
                            this_UrnKvp_13=ruleUrnKvp();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_UrnKvp_13);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:5327:4: (kw= '&' (this_LOWERCASE_ID_15= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_16= RULE_LOWERCASE_DASHID | this_UrnKvp_17= ruleUrnKvp ) )*
                    loop121:
                    do {
                        int alt121=2;
                        int LA121_0 = input.LA(1);

                        if ( (LA121_0==90) ) {
                            alt121=1;
                        }


                        switch (alt121) {
                    	case 1 :
                    	    // InternalKim.g:5328:5: kw= '&' (this_LOWERCASE_ID_15= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_16= RULE_LOWERCASE_DASHID | this_UrnKvp_17= ruleUrnKvp )
                    	    {
                    	    kw=(Token)match(input,90,FOLLOW_81); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current.merge(kw);
                    	      					newLeafNode(kw, grammarAccess.getUrnIdAccess().getAmpersandKeyword_9_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:5333:5: (this_LOWERCASE_ID_15= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_16= RULE_LOWERCASE_DASHID | this_UrnKvp_17= ruleUrnKvp )
                    	    int alt120=3;
                    	    int LA120_0 = input.LA(1);

                    	    if ( (LA120_0==RULE_LOWERCASE_ID) ) {
                    	        int LA120_1 = input.LA(2);

                    	        if ( (LA120_1==EOF||(LA120_1>=RULE_LOWERCASE_ID && LA120_1<=RULE_STRING)||(LA120_1>=RULE_CAMELCASE_ID && LA120_1<=RULE_LOWERCASE_DASHID)||LA120_1==19||LA120_1==23||LA120_1==25||(LA120_1>=28 && LA120_1<=31)||(LA120_1>=35 && LA120_1<=36)||(LA120_1>=39 && LA120_1<=40)||(LA120_1>=44 && LA120_1<=45)||(LA120_1>=54 && LA120_1<=56)||LA120_1==88||LA120_1==90||(LA120_1>=112 && LA120_1<=113)||(LA120_1>=121 && LA120_1<=122)||(LA120_1>=124 && LA120_1<=136)) ) {
                    	            alt120=1;
                    	        }
                    	        else if ( (LA120_1==91) ) {
                    	            alt120=3;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return current;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 120, 1, input);

                    	            throw nvae;
                    	        }
                    	    }
                    	    else if ( (LA120_0==RULE_LOWERCASE_DASHID) ) {
                    	        int LA120_2 = input.LA(2);

                    	        if ( (LA120_2==91) ) {
                    	            alt120=3;
                    	        }
                    	        else if ( (LA120_2==EOF||(LA120_2>=RULE_LOWERCASE_ID && LA120_2<=RULE_STRING)||(LA120_2>=RULE_CAMELCASE_ID && LA120_2<=RULE_LOWERCASE_DASHID)||LA120_2==19||LA120_2==23||LA120_2==25||(LA120_2>=28 && LA120_2<=31)||(LA120_2>=35 && LA120_2<=36)||(LA120_2>=39 && LA120_2<=40)||(LA120_2>=44 && LA120_2<=45)||(LA120_2>=54 && LA120_2<=56)||LA120_2==88||LA120_2==90||(LA120_2>=112 && LA120_2<=113)||(LA120_2>=121 && LA120_2<=122)||(LA120_2>=124 && LA120_2<=136)) ) {
                    	            alt120=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return current;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 120, 2, input);

                    	            throw nvae;
                    	        }
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 120, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt120) {
                    	        case 1 :
                    	            // InternalKim.g:5334:6: this_LOWERCASE_ID_15= RULE_LOWERCASE_ID
                    	            {
                    	            this_LOWERCASE_ID_15=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_84); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						current.merge(this_LOWERCASE_ID_15);
                    	              					
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(this_LOWERCASE_ID_15, grammarAccess.getUrnIdAccess().getLOWERCASE_IDTerminalRuleCall_9_2_1_0());
                    	              					
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:5342:6: this_LOWERCASE_DASHID_16= RULE_LOWERCASE_DASHID
                    	            {
                    	            this_LOWERCASE_DASHID_16=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_84); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						current.merge(this_LOWERCASE_DASHID_16);
                    	              					
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(this_LOWERCASE_DASHID_16, grammarAccess.getUrnIdAccess().getLOWERCASE_DASHIDTerminalRuleCall_9_2_1_1());
                    	              					
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalKim.g:5350:6: this_UrnKvp_17= ruleUrnKvp
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              						newCompositeNode(grammarAccess.getUrnIdAccess().getUrnKvpParserRuleCall_9_2_1_2());
                    	              					
                    	            }
                    	            pushFollow(FOLLOW_84);
                    	            this_UrnKvp_17=ruleUrnKvp();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						current.merge(this_UrnKvp_17);
                    	              					
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              						afterParserOrEnumRuleCall();
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop121;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUrnId"


    // $ANTLR start "entryRuleUrnKvp"
    // InternalKim.g:5367:1: entryRuleUrnKvp returns [String current=null] : iv_ruleUrnKvp= ruleUrnKvp EOF ;
    public final String entryRuleUrnKvp() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUrnKvp = null;


        try {
            // InternalKim.g:5367:46: (iv_ruleUrnKvp= ruleUrnKvp EOF )
            // InternalKim.g:5368:2: iv_ruleUrnKvp= ruleUrnKvp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUrnKvpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUrnKvp=ruleUrnKvp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUrnKvp.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUrnKvp"


    // $ANTLR start "ruleUrnKvp"
    // InternalKim.g:5374:1: ruleUrnKvp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) kw= '=' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) ) ;
    public final AntlrDatatypeRuleToken ruleUrnKvp() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_0=null;
        Token this_LOWERCASE_DASHID_1=null;
        Token kw=null;
        Token this_LOWERCASE_ID_3=null;
        Token this_LOWERCASE_DASHID_4=null;


        	enterRule();

        try {
            // InternalKim.g:5380:2: ( ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) kw= '=' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) ) )
            // InternalKim.g:5381:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) kw= '=' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) )
            {
            // InternalKim.g:5381:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) kw= '=' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) )
            // InternalKim.g:5382:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) kw= '=' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID )
            {
            // InternalKim.g:5382:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID )
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==RULE_LOWERCASE_ID) ) {
                alt123=1;
            }
            else if ( (LA123_0==RULE_LOWERCASE_DASHID) ) {
                alt123=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 123, 0, input);

                throw nvae;
            }
            switch (alt123) {
                case 1 :
                    // InternalKim.g:5383:4: this_LOWERCASE_ID_0= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_85); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getUrnKvpAccess().getLOWERCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:5391:4: this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_1=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_85); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_1, grammarAccess.getUrnKvpAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,91,FOLLOW_81); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnKvpAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalKim.g:5404:3: (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID )
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==RULE_LOWERCASE_ID) ) {
                alt124=1;
            }
            else if ( (LA124_0==RULE_LOWERCASE_DASHID) ) {
                alt124=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 124, 0, input);

                throw nvae;
            }
            switch (alt124) {
                case 1 :
                    // InternalKim.g:5405:4: this_LOWERCASE_ID_3= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_3=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_3);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_3, grammarAccess.getUrnKvpAccess().getLOWERCASE_IDTerminalRuleCall_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:5413:4: this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_4=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_4);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_4, grammarAccess.getUrnKvpAccess().getLOWERCASE_DASHIDTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUrnKvp"


    // $ANTLR start "entryRuleLocalFilePath"
    // InternalKim.g:5425:1: entryRuleLocalFilePath returns [String current=null] : iv_ruleLocalFilePath= ruleLocalFilePath EOF ;
    public final String entryRuleLocalFilePath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLocalFilePath = null;


        try {
            // InternalKim.g:5425:53: (iv_ruleLocalFilePath= ruleLocalFilePath EOF )
            // InternalKim.g:5426:2: iv_ruleLocalFilePath= ruleLocalFilePath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalFilePathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLocalFilePath=ruleLocalFilePath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocalFilePath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocalFilePath"


    // $ANTLR start "ruleLocalFilePath"
    // InternalKim.g:5432:1: ruleLocalFilePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? ) ;
    public final AntlrDatatypeRuleToken ruleLocalFilePath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_CAMELCASE_ID_0=null;
        Token this_LOWERCASE_ID_1=null;
        Token this_LOWERCASE_DASHID_2=null;
        Token kw=null;
        Token this_CAMELCASE_ID_4=null;
        Token this_LOWERCASE_ID_5=null;
        Token this_LOWERCASE_DASHID_6=null;
        Token this_LOWERCASE_ID_8=null;
        Token this_LOWERCASE_ID_10=null;


        	enterRule();

        try {
            // InternalKim.g:5438:2: ( ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? ) )
            // InternalKim.g:5439:2: ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? )
            {
            // InternalKim.g:5439:2: ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? )
            // InternalKim.g:5440:3: (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )?
            {
            // InternalKim.g:5440:3: (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID )
            int alt125=3;
            switch ( input.LA(1) ) {
            case RULE_CAMELCASE_ID:
                {
                alt125=1;
                }
                break;
            case RULE_LOWERCASE_ID:
                {
                alt125=2;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt125=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 125, 0, input);

                throw nvae;
            }

            switch (alt125) {
                case 1 :
                    // InternalKim.g:5441:4: this_CAMELCASE_ID_0= RULE_CAMELCASE_ID
                    {
                    this_CAMELCASE_ID_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_86); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_CAMELCASE_ID_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_CAMELCASE_ID_0, grammarAccess.getLocalFilePathAccess().getCAMELCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:5449:4: this_LOWERCASE_ID_1= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_86); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_1, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:5457:4: this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_86); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_2, grammarAccess.getLocalFilePathAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5465:3: (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )*
            loop127:
            do {
                int alt127=2;
                int LA127_0 = input.LA(1);

                if ( (LA127_0==92) ) {
                    alt127=1;
                }


                switch (alt127) {
            	case 1 :
            	    // InternalKim.g:5466:4: kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    {
            	    kw=(Token)match(input,92,FOLLOW_87); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getSolidusKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:5471:4: (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    int alt126=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_CAMELCASE_ID:
            	        {
            	        alt126=1;
            	        }
            	        break;
            	    case RULE_LOWERCASE_ID:
            	        {
            	        alt126=2;
            	        }
            	        break;
            	    case RULE_LOWERCASE_DASHID:
            	        {
            	        alt126=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 126, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt126) {
            	        case 1 :
            	            // InternalKim.g:5472:5: this_CAMELCASE_ID_4= RULE_CAMELCASE_ID
            	            {
            	            this_CAMELCASE_ID_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_86); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_CAMELCASE_ID_4);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_CAMELCASE_ID_4, grammarAccess.getLocalFilePathAccess().getCAMELCASE_IDTerminalRuleCall_1_1_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:5480:5: this_LOWERCASE_ID_5= RULE_LOWERCASE_ID
            	            {
            	            this_LOWERCASE_ID_5=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_86); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_ID_5);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_ID_5, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_1_1_1());
            	              				
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:5488:5: this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID
            	            {
            	            this_LOWERCASE_DASHID_6=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_86); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_DASHID_6);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_DASHID_6, grammarAccess.getLocalFilePathAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_2());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop127;
                }
            } while (true);

            // InternalKim.g:5497:3: (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==93) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // InternalKim.g:5498:4: kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID
                    {
                    kw=(Token)match(input,93,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getFullStopKeyword_2_0());
                      			
                    }
                    this_LOWERCASE_ID_8=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_8);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_8, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5511:3: (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==53) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalKim.g:5512:4: kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID
                    {
                    kw=(Token)match(input,53,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getNumberSignKeyword_3_0());
                      			
                    }
                    this_LOWERCASE_ID_10=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_10);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_10, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocalFilePath"


    // $ANTLR start "entryRuleObserveStatement"
    // InternalKim.g:5529:1: entryRuleObserveStatement returns [EObject current=null] : iv_ruleObserveStatement= ruleObserveStatement EOF ;
    public final EObject entryRuleObserveStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObserveStatement = null;


        try {
            // InternalKim.g:5529:57: (iv_ruleObserveStatement= ruleObserveStatement EOF )
            // InternalKim.g:5530:2: iv_ruleObserveStatement= ruleObserveStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObserveStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObserveStatement=ruleObserveStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObserveStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleObserveStatement"


    // $ANTLR start "ruleObserveStatement"
    // InternalKim.g:5536:1: ruleObserveStatement returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) ) ) ;
    public final EObject ruleObserveStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_1_0 = null;

        EObject lv_body_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:5542:2: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) ) ) )
            // InternalKim.g:5543:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) ) )
            {
            // InternalKim.g:5543:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) ) )
            // InternalKim.g:5544:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) )
            {
            // InternalKim.g:5544:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==RULE_ANNOTATION_ID) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalKim.g:5545:4: ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )*
                    {
                    // InternalKim.g:5545:4: ( (lv_annotations_0_0= ruleAnnotation ) )
                    // InternalKim.g:5546:5: (lv_annotations_0_0= ruleAnnotation )
                    {
                    // InternalKim.g:5546:5: (lv_annotations_0_0= ruleAnnotation )
                    // InternalKim.g:5547:6: lv_annotations_0_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getObserveStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_88);
                    lv_annotations_0_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getObserveStatementRule());
                      						}
                      						add(
                      							current,
                      							"annotations",
                      							lv_annotations_0_0,
                      							"org.integratedmodelling.kim.Kim.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:5564:4: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop130:
                    do {
                        int alt130=2;
                        int LA130_0 = input.LA(1);

                        if ( (LA130_0==RULE_ANNOTATION_ID) ) {
                            alt130=1;
                        }


                        switch (alt130) {
                    	case 1 :
                    	    // InternalKim.g:5565:5: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalKim.g:5565:5: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalKim.g:5566:6: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getObserveStatementAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_88);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getObserveStatementRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_1_0,
                    	      							"org.integratedmodelling.kim.Kim.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop130;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_2=(Token)match(input,94,FOLLOW_89); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getObserveStatementAccess().getObserveKeyword_1());
              		
            }
            // InternalKim.g:5588:3: ( (lv_body_3_0= ruleObserveStatementBody ) )
            // InternalKim.g:5589:4: (lv_body_3_0= ruleObserveStatementBody )
            {
            // InternalKim.g:5589:4: (lv_body_3_0= ruleObserveStatementBody )
            // InternalKim.g:5590:5: lv_body_3_0= ruleObserveStatementBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getObserveStatementAccess().getBodyObserveStatementBodyParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_3_0=ruleObserveStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getObserveStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_3_0,
              						"org.integratedmodelling.kim.Kim.ObserveStatementBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleObserveStatement"


    // $ANTLR start "entryRuleObserveStatementBody"
    // InternalKim.g:5611:1: entryRuleObserveStatementBody returns [EObject current=null] : iv_ruleObserveStatementBody= ruleObserveStatementBody EOF ;
    public final EObject entryRuleObserveStatementBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObserveStatementBody = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()
        	);

        try {
            // InternalKim.g:5615:2: (iv_ruleObserveStatementBody= ruleObserveStatementBody EOF )
            // InternalKim.g:5616:2: iv_ruleObserveStatementBody= ruleObserveStatementBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObserveStatementBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObserveStatementBody=ruleObserveStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObserveStatementBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleObserveStatementBody"


    // $ANTLR start "ruleObserveStatementBody"
    // InternalKim.g:5625:1: ruleObserveStatementBody returns [EObject current=null] : ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?) ) ) ;
    public final EObject ruleObserveStatementBody() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_docstring_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        EObject lv_urn_1_0 = null;

        EObject lv_concept_3_0 = null;

        AntlrDatatypeRuleToken lv_parents_6_0 = null;

        AntlrDatatypeRuleToken lv_parents_8_0 = null;

        EObject lv_actions_9_0 = null;

        EObject lv_states_11_0 = null;

        EObject lv_states_13_0 = null;

        EObject lv_observations_16_0 = null;

        EObject lv_observations_20_0 = null;

        EObject lv_accessor_23_0 = null;

        EObject lv_metadata_26_0 = null;

        EObject lv_documentation_29_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()
        	);

        try {
            // InternalKim.g:5634:2: ( ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?) ) ) )
            // InternalKim.g:5635:2: ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?) ) )
            {
            // InternalKim.g:5635:2: ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?) ) )
            // InternalKim.g:5636:3: ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?) )
            {
            // InternalKim.g:5636:3: ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?) )
            // InternalKim.g:5637:4: ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?)
            {
            getUnorderedGroupHelper().enter(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());
            // InternalKim.g:5640:4: ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?)
            // InternalKim.g:5641:5: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?
            {
            // InternalKim.g:5641:5: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? ) ) ) ) )+
            int cnt145=0;
            loop145:
            do {
                int alt145=3;
                alt145 = dfa145.predict(input);
                switch (alt145) {
            	case 1 :
            	    // InternalKim.g:5642:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? ) ) ) )
            	    {
            	    // InternalKim.g:5642:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? ) ) ) )
            	    // InternalKim.g:5643:4: {...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0)");
            	    }
            	    // InternalKim.g:5643:114: ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? ) ) )
            	    // InternalKim.g:5644:5: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0);
            	    // InternalKim.g:5647:8: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? ) )
            	    // InternalKim.g:5647:9: {...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    }
            	    // InternalKim.g:5647:18: ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? )
            	    // InternalKim.g:5647:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )?
            	    {
            	    // InternalKim.g:5647:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?
            	    int alt132=2;
            	    alt132 = dfa132.predict(input);
            	    switch (alt132) {
            	        case 1 :
            	            // InternalKim.g:5648:9: ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as'
            	            {
            	            // InternalKim.g:5648:9: ( (lv_urn_1_0= ruleUrn ) )
            	            // InternalKim.g:5649:10: (lv_urn_1_0= ruleUrn )
            	            {
            	            // InternalKim.g:5649:10: (lv_urn_1_0= ruleUrn )
            	            // InternalKim.g:5650:11: lv_urn_1_0= ruleUrn
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getUrnUrnParserRuleCall_0_0_0_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_10);
            	            lv_urn_1_0=ruleUrn();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											set(
            	              												current,
            	              												"urn",
            	              												lv_urn_1_0,
            	              												"org.integratedmodelling.kim.Kim.Urn");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }

            	            otherlv_2=(Token)match(input,23,FOLLOW_21); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_2, grammarAccess.getObserveStatementBodyAccess().getAsKeyword_0_0_1());
            	              								
            	            }

            	            }
            	            break;

            	    }

            	    // InternalKim.g:5672:8: ( (lv_concept_3_0= ruleNamedObservableSemantics ) )
            	    // InternalKim.g:5673:9: (lv_concept_3_0= ruleNamedObservableSemantics )
            	    {
            	    // InternalKim.g:5673:9: (lv_concept_3_0= ruleNamedObservableSemantics )
            	    // InternalKim.g:5674:10: lv_concept_3_0= ruleNamedObservableSemantics
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getConceptNamedObservableSemanticsParserRuleCall_0_1_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_concept_3_0=ruleNamedObservableSemantics();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	      										}
            	      										set(
            	      											current,
            	      											"concept",
            	      											lv_concept_3_0,
            	      											"org.integratedmodelling.kim.Kim.NamedObservableSemantics");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }

            	    // InternalKim.g:5691:8: ( (lv_docstring_4_0= RULE_STRING ) )?
            	    int alt133=2;
            	    int LA133_0 = input.LA(1);

            	    if ( (LA133_0==RULE_STRING) ) {
            	        int LA133_1 = input.LA(2);

            	        if ( (LA133_1==EOF||(LA133_1>=RULE_LOWERCASE_ID && LA133_1<=RULE_STRING)||(LA133_1>=RULE_CAMELCASE_ID && LA133_1<=RULE_LOWERCASE_DASHID)||LA133_1==19||(LA133_1>=28 && LA133_1<=29)||LA133_1==36||(LA133_1>=39 && LA133_1<=40)||(LA133_1>=54 && LA133_1<=56)||LA133_1==88||LA133_1==95||(LA133_1>=112 && LA133_1<=113)||(LA133_1>=121 && LA133_1<=122)||(LA133_1>=124 && LA133_1<=136)) ) {
            	            alt133=1;
            	        }
            	    }
            	    switch (alt133) {
            	        case 1 :
            	            // InternalKim.g:5692:9: (lv_docstring_4_0= RULE_STRING )
            	            {
            	            // InternalKim.g:5692:9: (lv_docstring_4_0= RULE_STRING )
            	            // InternalKim.g:5693:10: lv_docstring_4_0= RULE_STRING
            	            {
            	            lv_docstring_4_0=(Token)match(input,RULE_STRING,FOLLOW_90); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_docstring_4_0, grammarAccess.getObserveStatementBodyAccess().getDocstringSTRINGTerminalRuleCall_0_2_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getObserveStatementBodyRule());
            	              										}
            	              										setWithLastConsumed(
            	              											current,
            	              											"docstring",
            	              											lv_docstring_4_0,
            	              											"org.eclipse.xtext.common.Terminals.STRING");
            	              									
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5709:8: (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )?
            	    int alt135=2;
            	    int LA135_0 = input.LA(1);

            	    if ( (LA135_0==95) ) {
            	        alt135=1;
            	    }
            	    switch (alt135) {
            	        case 1 :
            	            // InternalKim.g:5710:9: otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
            	            {
            	            otherlv_5=(Token)match(input,95,FOLLOW_24); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_5, grammarAccess.getObserveStatementBodyAccess().getExtendsKeyword_0_3_0());
            	              								
            	            }
            	            // InternalKim.g:5714:9: ( (lv_parents_6_0= rulePathName ) )
            	            // InternalKim.g:5715:10: (lv_parents_6_0= rulePathName )
            	            {
            	            // InternalKim.g:5715:10: (lv_parents_6_0= rulePathName )
            	            // InternalKim.g:5716:11: lv_parents_6_0= rulePathName
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_1_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_91);
            	            lv_parents_6_0=rulePathName();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											add(
            	              												current,
            	              												"parents",
            	              												lv_parents_6_0,
            	              												"org.integratedmodelling.kim.Kim.PathName");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }

            	            // InternalKim.g:5733:9: (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
            	            loop134:
            	            do {
            	                int alt134=2;
            	                int LA134_0 = input.LA(1);

            	                if ( (LA134_0==25) ) {
            	                    alt134=1;
            	                }


            	                switch (alt134) {
            	            	case 1 :
            	            	    // InternalKim.g:5734:10: otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) )
            	            	    {
            	            	    otherlv_7=(Token)match(input,25,FOLLOW_24); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      										newLeafNode(otherlv_7, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_3_2_0());
            	            	      									
            	            	    }
            	            	    // InternalKim.g:5738:10: ( (lv_parents_8_0= rulePathName ) )
            	            	    // InternalKim.g:5739:11: (lv_parents_8_0= rulePathName )
            	            	    {
            	            	    // InternalKim.g:5739:11: (lv_parents_8_0= rulePathName )
            	            	    // InternalKim.g:5740:12: lv_parents_8_0= rulePathName
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_2_1_0());
            	            	      											
            	            	    }
            	            	    pushFollow(FOLLOW_91);
            	            	    lv_parents_8_0=rulePathName();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      												if (current==null) {
            	            	      													current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	            	      												}
            	            	      												add(
            	            	      													current,
            	            	      													"parents",
            	            	      													lv_parents_8_0,
            	            	      													"org.integratedmodelling.kim.Kim.PathName");
            	            	      												afterParserOrEnumRuleCall();
            	            	      											
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop134;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5759:8: ( (lv_actions_9_0= ruleActionSpecification ) )*
            	    loop136:
            	    do {
            	        int alt136=2;
            	        int LA136_0 = input.LA(1);

            	        if ( ((LA136_0>=54 && LA136_0<=56)) ) {
            	            alt136=1;
            	        }


            	        switch (alt136) {
            	    	case 1 :
            	    	    // InternalKim.g:5760:9: (lv_actions_9_0= ruleActionSpecification )
            	    	    {
            	    	    // InternalKim.g:5760:9: (lv_actions_9_0= ruleActionSpecification )
            	    	    // InternalKim.g:5761:10: lv_actions_9_0= ruleActionSpecification
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getActionsActionSpecificationParserRuleCall_0_4_0());
            	    	      									
            	    	    }
            	    	    pushFollow(FOLLOW_92);
            	    	    lv_actions_9_0=ruleActionSpecification();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										if (current==null) {
            	    	      											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	      										}
            	    	      										add(
            	    	      											current,
            	    	      											"actions",
            	    	      											lv_actions_9_0,
            	    	      											"org.integratedmodelling.kim.Kim.ActionSpecification");
            	    	      										afterParserOrEnumRuleCall();
            	    	      									
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop136;
            	        }
            	    } while (true);

            	    // InternalKim.g:5778:8: (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )?
            	    int alt138=2;
            	    int LA138_0 = input.LA(1);

            	    if ( (LA138_0==28) ) {
            	        alt138=1;
            	    }
            	    switch (alt138) {
            	        case 1 :
            	            // InternalKim.g:5779:9: otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
            	            {
            	            otherlv_10=(Token)match(input,28,FOLLOW_7); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_10, grammarAccess.getObserveStatementBodyAccess().getObservingKeyword_0_5_0());
            	              								
            	            }
            	            // InternalKim.g:5783:9: ( (lv_states_11_0= ruleObservableSemantics ) )
            	            // InternalKim.g:5784:10: (lv_states_11_0= ruleObservableSemantics )
            	            {
            	            // InternalKim.g:5784:10: (lv_states_11_0= ruleObservableSemantics )
            	            // InternalKim.g:5785:11: lv_states_11_0= ruleObservableSemantics
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_5_1_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_93);
            	            lv_states_11_0=ruleObservableSemantics();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											add(
            	              												current,
            	              												"states",
            	              												lv_states_11_0,
            	              												"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }

            	            // InternalKim.g:5802:9: (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
            	            loop137:
            	            do {
            	                int alt137=2;
            	                int LA137_0 = input.LA(1);

            	                if ( (LA137_0==25) ) {
            	                    alt137=1;
            	                }


            	                switch (alt137) {
            	            	case 1 :
            	            	    // InternalKim.g:5803:10: otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) )
            	            	    {
            	            	    otherlv_12=(Token)match(input,25,FOLLOW_7); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      										newLeafNode(otherlv_12, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_5_2_0());
            	            	      									
            	            	    }
            	            	    // InternalKim.g:5807:10: ( (lv_states_13_0= ruleObservableSemantics ) )
            	            	    // InternalKim.g:5808:11: (lv_states_13_0= ruleObservableSemantics )
            	            	    {
            	            	    // InternalKim.g:5808:11: (lv_states_13_0= ruleObservableSemantics )
            	            	    // InternalKim.g:5809:12: lv_states_13_0= ruleObservableSemantics
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_5_2_1_0());
            	            	      											
            	            	    }
            	            	    pushFollow(FOLLOW_93);
            	            	    lv_states_13_0=ruleObservableSemantics();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      												if (current==null) {
            	            	      													current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	            	      												}
            	            	      												add(
            	            	      													current,
            	            	      													"states",
            	            	      													lv_states_13_0,
            	            	      													"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	            	      												afterParserOrEnumRuleCall();
            	            	      											
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop137;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5828:8: (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )?
            	    int alt140=2;
            	    int LA140_0 = input.LA(1);

            	    if ( (LA140_0==40) ) {
            	        int LA140_1 = input.LA(2);

            	        if ( (LA140_1==36) ) {
            	            alt140=1;
            	        }
            	    }
            	    switch (alt140) {
            	        case 1 :
            	            // InternalKim.g:5829:9: otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
            	            {
            	            otherlv_14=(Token)match(input,40,FOLLOW_41); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_14, grammarAccess.getObserveStatementBodyAccess().getWithKeyword_0_6_0());
            	              								
            	            }
            	            // InternalKim.g:5833:9: (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' )
            	            // InternalKim.g:5834:10: otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')'
            	            {
            	            otherlv_15=(Token)match(input,36,FOLLOW_94); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_15, grammarAccess.getObserveStatementBodyAccess().getLeftParenthesisKeyword_0_6_1_0());
            	              									
            	            }
            	            // InternalKim.g:5838:10: ( (lv_observations_16_0= ruleObserveStatementBody ) )
            	            // InternalKim.g:5839:11: (lv_observations_16_0= ruleObserveStatementBody )
            	            {
            	            // InternalKim.g:5839:11: (lv_observations_16_0= ruleObserveStatementBody )
            	            // InternalKim.g:5840:12: lv_observations_16_0= ruleObserveStatementBody
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_6_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_95);
            	            lv_observations_16_0=ruleObserveStatementBody();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"observations",
            	              													lv_observations_16_0,
            	              													"org.integratedmodelling.kim.Kim.ObserveStatementBody");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            otherlv_17=(Token)match(input,39,FOLLOW_93); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_17, grammarAccess.getObserveStatementBodyAccess().getRightParenthesisKeyword_0_6_1_2());
            	              									
            	            }

            	            }

            	            // InternalKim.g:5862:9: (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
            	            loop139:
            	            do {
            	                int alt139=2;
            	                int LA139_0 = input.LA(1);

            	                if ( (LA139_0==25) ) {
            	                    alt139=1;
            	                }


            	                switch (alt139) {
            	            	case 1 :
            	            	    // InternalKim.g:5863:10: otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')'
            	            	    {
            	            	    otherlv_18=(Token)match(input,25,FOLLOW_41); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      										newLeafNode(otherlv_18, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_6_2_0());
            	            	      									
            	            	    }
            	            	    otherlv_19=(Token)match(input,36,FOLLOW_94); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      										newLeafNode(otherlv_19, grammarAccess.getObserveStatementBodyAccess().getLeftParenthesisKeyword_0_6_2_1());
            	            	      									
            	            	    }
            	            	    // InternalKim.g:5871:10: ( (lv_observations_20_0= ruleObserveStatementBody ) )
            	            	    // InternalKim.g:5872:11: (lv_observations_20_0= ruleObserveStatementBody )
            	            	    {
            	            	    // InternalKim.g:5872:11: (lv_observations_20_0= ruleObserveStatementBody )
            	            	    // InternalKim.g:5873:12: lv_observations_20_0= ruleObserveStatementBody
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_6_2_2_0());
            	            	      											
            	            	    }
            	            	    pushFollow(FOLLOW_95);
            	            	    lv_observations_20_0=ruleObserveStatementBody();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      												if (current==null) {
            	            	      													current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	            	      												}
            	            	      												add(
            	            	      													current,
            	            	      													"observations",
            	            	      													lv_observations_20_0,
            	            	      													"org.integratedmodelling.kim.Kim.ObserveStatementBody");
            	            	      												afterParserOrEnumRuleCall();
            	            	      											
            	            	    }

            	            	    }


            	            	    }

            	            	    otherlv_21=(Token)match(input,39,FOLLOW_93); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      										newLeafNode(otherlv_21, grammarAccess.getObserveStatementBodyAccess().getRightParenthesisKeyword_0_6_2_3());
            	            	      									
            	            	    }

            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop139;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5896:8: (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )?
            	    int alt142=2;
            	    int LA142_0 = input.LA(1);

            	    if ( (LA142_0==29) ) {
            	        alt142=1;
            	    }
            	    switch (alt142) {
            	        case 1 :
            	            // InternalKim.g:5897:9: otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )?
            	            {
            	            otherlv_22=(Token)match(input,29,FOLLOW_96); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_22, grammarAccess.getObserveStatementBodyAccess().getUsingKeyword_0_7_0());
            	              								
            	            }
            	            // InternalKim.g:5901:9: ( (lv_accessor_23_0= ruleFunction ) )?
            	            int alt141=2;
            	            alt141 = dfa141.predict(input);
            	            switch (alt141) {
            	                case 1 :
            	                    // InternalKim.g:5902:10: (lv_accessor_23_0= ruleFunction )
            	                    {
            	                    // InternalKim.g:5902:10: (lv_accessor_23_0= ruleFunction )
            	                    // InternalKim.g:5903:11: lv_accessor_23_0= ruleFunction
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getAccessorFunctionParserRuleCall_0_7_1_0());
            	                      										
            	                    }
            	                    pushFollow(FOLLOW_96);
            	                    lv_accessor_23_0=ruleFunction();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      											if (current==null) {
            	                      												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	                      											}
            	                      											set(
            	                      												current,
            	                      												"accessor",
            	                      												lv_accessor_23_0,
            	                      												"org.integratedmodelling.kim.Kim.Function");
            	                      											afterParserOrEnumRuleCall();
            	                      										
            	                    }

            	                    }


            	                    }
            	                    break;

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:5927:3: ({...}? => ( ({...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? ) ) ) )
            	    {
            	    // InternalKim.g:5927:3: ({...}? => ( ({...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? ) ) ) )
            	    // InternalKim.g:5928:4: {...}? => ( ({...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1)");
            	    }
            	    // InternalKim.g:5928:114: ( ({...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? ) ) )
            	    // InternalKim.g:5929:5: ({...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1);
            	    // InternalKim.g:5932:8: ({...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? ) )
            	    // InternalKim.g:5932:9: {...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    }
            	    // InternalKim.g:5932:18: ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? )
            	    // InternalKim.g:5932:19: (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )?
            	    {
            	    // InternalKim.g:5932:19: (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )?
            	    int alt143=2;
            	    int LA143_0 = input.LA(1);

            	    if ( (LA143_0==40) ) {
            	        int LA143_1 = input.LA(2);

            	        if ( (synpred236_InternalKim()) ) {
            	            alt143=1;
            	        }
            	    }
            	    switch (alt143) {
            	        case 1 :
            	            // InternalKim.g:5933:9: otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) )
            	            {
            	            otherlv_24=(Token)match(input,40,FOLLOW_31); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_24, grammarAccess.getObserveStatementBodyAccess().getWithKeyword_1_0_0());
            	              								
            	            }
            	            otherlv_25=(Token)match(input,41,FOLLOW_32); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_25, grammarAccess.getObserveStatementBodyAccess().getMetadataKeyword_1_0_1());
            	              								
            	            }
            	            // InternalKim.g:5941:9: ( (lv_metadata_26_0= ruleMetadata ) )
            	            // InternalKim.g:5942:10: (lv_metadata_26_0= ruleMetadata )
            	            {
            	            // InternalKim.g:5942:10: (lv_metadata_26_0= ruleMetadata )
            	            // InternalKim.g:5943:11: lv_metadata_26_0= ruleMetadata
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getMetadataMetadataParserRuleCall_1_0_2_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_96);
            	            lv_metadata_26_0=ruleMetadata();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											set(
            	              												current,
            	              												"metadata",
            	              												lv_metadata_26_0,
            	              												"org.integratedmodelling.kim.Kim.Metadata");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5961:8: (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )?
            	    int alt144=2;
            	    int LA144_0 = input.LA(1);

            	    if ( (LA144_0==40) ) {
            	        int LA144_1 = input.LA(2);

            	        if ( (synpred237_InternalKim()) ) {
            	            alt144=1;
            	        }
            	    }
            	    switch (alt144) {
            	        case 1 :
            	            // InternalKim.g:5962:9: otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) )
            	            {
            	            otherlv_27=(Token)match(input,40,FOLLOW_34); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_27, grammarAccess.getObserveStatementBodyAccess().getWithKeyword_1_1_0());
            	              								
            	            }
            	            otherlv_28=(Token)match(input,42,FOLLOW_32); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_28, grammarAccess.getObserveStatementBodyAccess().getDocumentationKeyword_1_1_1());
            	              								
            	            }
            	            // InternalKim.g:5970:9: ( (lv_documentation_29_0= ruleMetadata ) )
            	            // InternalKim.g:5971:10: (lv_documentation_29_0= ruleMetadata )
            	            {
            	            // InternalKim.g:5971:10: (lv_documentation_29_0= ruleMetadata )
            	            // InternalKim.g:5972:11: lv_documentation_29_0= ruleMetadata
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getDocumentationMetadataParserRuleCall_1_1_2_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_96);
            	            lv_documentation_29_0=ruleMetadata();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											set(
            	              												current,
            	              												"documentation",
            	              												lv_documentation_29_0,
            	              												"org.integratedmodelling.kim.Kim.Metadata");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt145 >= 1 ) break loop145;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(145, input);
                        throw eee;
                }
                cnt145++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {
                if (state.backtracking>0) {state.failed=true; return current;}
                throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup())");
            }

            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleObserveStatementBody"


    // $ANTLR start "entryRuleObservableSemantics"
    // InternalKim.g:6010:1: entryRuleObservableSemantics returns [EObject current=null] : iv_ruleObservableSemantics= ruleObservableSemantics EOF ;
    public final EObject entryRuleObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:6014:2: (iv_ruleObservableSemantics= ruleObservableSemantics EOF )
            // InternalKim.g:6015:2: iv_ruleObservableSemantics= ruleObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObservableSemantics=ruleObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleObservableSemantics"


    // $ANTLR start "ruleObservableSemantics"
    // InternalKim.g:6024:1: ruleObservableSemantics returns [EObject current=null] : ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_generic_2_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_18=null;
        Token lv_optional_20_0=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token lv_name_26_0=null;
        EObject lv_value_0_0 = null;

        EObject lv_declaration_3_0 = null;

        EObject lv_by_6_0 = null;

        EObject lv_downTo_9_0 = null;

        EObject lv_role_11_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_14_0 = null;

        EObject lv_unit_16_0 = null;

        EObject lv_currency_17_0 = null;

        EObject lv_unit_19_0 = null;

        EObject lv_from_22_0 = null;

        EObject lv_to_24_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:6033:2: ( ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:6034:2: ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:6034:2: ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:6035:3: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:6035:3: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )?
            int alt146=2;
            alt146 = dfa146.predict(input);
            switch (alt146) {
                case 1 :
                    // InternalKim.g:6036:4: ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as'
                    {
                    // InternalKim.g:6036:4: ( (lv_value_0_0= ruleValue ) )
                    // InternalKim.g:6037:5: (lv_value_0_0= ruleValue )
                    {
                    // InternalKim.g:6037:5: (lv_value_0_0= ruleValue )
                    // InternalKim.g:6038:6: lv_value_0_0= ruleValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueValueParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_10);
                    lv_value_0_0=ruleValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_0_0,
                      							"org.integratedmodelling.kim.Kim.Value");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,23,FOLLOW_97); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getObservableSemanticsAccess().getAsKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:6060:3: ( (lv_generic_2_0= 'any' ) )?
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==96) ) {
                alt147=1;
            }
            switch (alt147) {
                case 1 :
                    // InternalKim.g:6061:4: (lv_generic_2_0= 'any' )
                    {
                    // InternalKim.g:6061:4: (lv_generic_2_0= 'any' )
                    // InternalKim.g:6062:5: lv_generic_2_0= 'any'
                    {
                    lv_generic_2_0=(Token)match(input,96,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generic_2_0, grammarAccess.getObservableSemanticsAccess().getGenericAnyKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getObservableSemanticsRule());
                      					}
                      					setWithLastConsumed(current, "generic", true, "any");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:6074:3: ( (lv_declaration_3_0= ruleConceptDeclaration ) )
            // InternalKim.g:6075:4: (lv_declaration_3_0= ruleConceptDeclaration )
            {
            // InternalKim.g:6075:4: (lv_declaration_3_0= ruleConceptDeclaration )
            // InternalKim.g:6076:5: lv_declaration_3_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_98);
            lv_declaration_3_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_3_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:6093:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:6094:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:6094:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) )
            // InternalKim.g:6095:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());
            // InternalKim.g:6098:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* )
            // InternalKim.g:6099:6: ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )*
            {
            // InternalKim.g:6099:6: ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )*
            loop151:
            do {
                int alt151=9;
                alt151 = dfa151.predict(input);
                switch (alt151) {
            	case 1 :
            	    // InternalKim.g:6100:4: ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6100:4: ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:6101:5: {...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:6101:116: ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:6102:6: ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:6105:9: ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) )
            	    // InternalKim.g:6105:10: {...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6105:19: (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) )
            	    // InternalKim.g:6105:20: otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) )
            	    {
            	    otherlv_5=(Token)match(input,97,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getObservableSemanticsAccess().getByKeyword_3_0_0());
            	      								
            	    }
            	    // InternalKim.g:6109:9: ( (lv_by_6_0= ruleConcept ) )
            	    // InternalKim.g:6110:10: (lv_by_6_0= ruleConcept )
            	    {
            	    // InternalKim.g:6110:10: (lv_by_6_0= ruleConcept )
            	    // InternalKim.g:6111:11: lv_by_6_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getByConceptParserRuleCall_3_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_by_6_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"by",
            	      												lv_by_6_0,
            	      												"org.integratedmodelling.kim.Kim.Concept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:6134:4: ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6134:4: ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:6135:5: {...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:6135:116: ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:6136:6: ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:6139:9: ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) )
            	    // InternalKim.g:6139:10: {...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6139:19: (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) )
            	    // InternalKim.g:6139:20: otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) )
            	    {
            	    otherlv_7=(Token)match(input,98,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getObservableSemanticsAccess().getDownKeyword_3_1_0());
            	      								
            	    }
            	    otherlv_8=(Token)match(input,34,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_8, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_1_1());
            	      								
            	    }
            	    // InternalKim.g:6147:9: ( (lv_downTo_9_0= ruleConcept ) )
            	    // InternalKim.g:6148:10: (lv_downTo_9_0= ruleConcept )
            	    {
            	    // InternalKim.g:6148:10: (lv_downTo_9_0= ruleConcept )
            	    // InternalKim.g:6149:11: lv_downTo_9_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDownToConceptParserRuleCall_3_1_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_downTo_9_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"downTo",
            	      												lv_downTo_9_0,
            	      												"org.integratedmodelling.kim.Kim.Concept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:6172:4: ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6172:4: ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:6173:5: {...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:6173:116: ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:6174:6: ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:6177:9: ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) )
            	    // InternalKim.g:6177:10: {...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6177:19: (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) )
            	    // InternalKim.g:6177:20: otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) )
            	    {
            	    otherlv_10=(Token)match(input,23,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_10, grammarAccess.getObservableSemanticsAccess().getAsKeyword_3_2_0());
            	      								
            	    }
            	    // InternalKim.g:6181:9: ( (lv_role_11_0= ruleConcept ) )
            	    // InternalKim.g:6182:10: (lv_role_11_0= ruleConcept )
            	    {
            	    // InternalKim.g:6182:10: (lv_role_11_0= ruleConcept )
            	    // InternalKim.g:6183:11: lv_role_11_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getRoleConceptParserRuleCall_3_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_role_11_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"role",
            	      												lv_role_11_0,
            	      												"org.integratedmodelling.kim.Kim.Concept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:6206:4: ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6206:4: ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:6207:5: {...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:6207:116: ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:6208:6: ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:6211:9: ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:6211:10: {...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6211:19: (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) )
            	    // InternalKim.g:6211:20: otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) )
            	    {
            	    otherlv_12=(Token)match(input,33,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_12, grammarAccess.getObservableSemanticsAccess().getAccordingKeyword_3_3_0());
            	      								
            	    }
            	    otherlv_13=(Token)match(input,34,FOLLOW_24); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_13, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_3_1());
            	      								
            	    }
            	    // InternalKim.g:6219:9: ( (lv_accordingTo_14_0= rulePropertyId ) )
            	    // InternalKim.g:6220:10: (lv_accordingTo_14_0= rulePropertyId )
            	    {
            	    // InternalKim.g:6220:10: (lv_accordingTo_14_0= rulePropertyId )
            	    // InternalKim.g:6221:11: lv_accordingTo_14_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_3_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_accordingTo_14_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_14_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:6244:4: ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6244:4: ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:6245:5: {...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalKim.g:6245:116: ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:6246:6: ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4);
            	    // InternalKim.g:6249:9: ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:6249:10: {...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6249:19: ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) )
            	    int alt149=2;
            	    int LA149_0 = input.LA(1);

            	    if ( (LA149_0==48) ) {
            	        alt149=1;
            	    }
            	    else if ( (LA149_0==99) ) {
            	        alt149=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 149, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt149) {
            	        case 1 :
            	            // InternalKim.g:6249:20: (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:6249:20: (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:6250:10: otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) )
            	            {
            	            otherlv_15=(Token)match(input,48,FOLLOW_99); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_15, grammarAccess.getObservableSemanticsAccess().getInKeyword_3_4_0_0());
            	              									
            	            }
            	            // InternalKim.g:6254:10: ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) )
            	            int alt148=2;
            	            alt148 = dfa148.predict(input);
            	            switch (alt148) {
            	                case 1 :
            	                    // InternalKim.g:6255:11: ( (lv_unit_16_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:6255:11: ( (lv_unit_16_0= ruleUnit ) )
            	                    // InternalKim.g:6256:12: (lv_unit_16_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:6256:12: (lv_unit_16_0= ruleUnit )
            	                    // InternalKim.g:6257:13: lv_unit_16_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_4_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_98);
            	                    lv_unit_16_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_16_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:6275:11: ( (lv_currency_17_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:6275:11: ( (lv_currency_17_0= ruleCurrency ) )
            	                    // InternalKim.g:6276:12: (lv_currency_17_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:6276:12: (lv_currency_17_0= ruleCurrency )
            	                    // InternalKim.g:6277:13: lv_currency_17_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_4_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_98);
            	                    lv_currency_17_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_17_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:6297:9: (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:6297:9: (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) )
            	            // InternalKim.g:6298:10: otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) )
            	            {
            	            otherlv_18=(Token)match(input,99,FOLLOW_100); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_18, grammarAccess.getObservableSemanticsAccess().getPerKeyword_3_4_1_0());
            	              									
            	            }
            	            // InternalKim.g:6302:10: ( (lv_unit_19_0= ruleUnit ) )
            	            // InternalKim.g:6303:11: (lv_unit_19_0= ruleUnit )
            	            {
            	            // InternalKim.g:6303:11: (lv_unit_19_0= ruleUnit )
            	            // InternalKim.g:6304:12: lv_unit_19_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_4_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_98);
            	            lv_unit_19_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_19_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:6328:4: ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) )
            	    {
            	    // InternalKim.g:6328:4: ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) )
            	    // InternalKim.g:6329:5: {...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalKim.g:6329:116: ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) )
            	    // InternalKim.g:6330:6: ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5);
            	    // InternalKim.g:6333:9: ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) )
            	    // InternalKim.g:6333:10: {...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6333:19: ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' )
            	    int alt150=2;
            	    int LA150_0 = input.LA(1);

            	    if ( (LA150_0==100) ) {
            	        alt150=1;
            	    }
            	    else if ( (LA150_0==101) ) {
            	        alt150=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 150, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt150) {
            	        case 1 :
            	            // InternalKim.g:6333:20: ( (lv_optional_20_0= 'optional' ) )
            	            {
            	            // InternalKim.g:6333:20: ( (lv_optional_20_0= 'optional' ) )
            	            // InternalKim.g:6334:10: (lv_optional_20_0= 'optional' )
            	            {
            	            // InternalKim.g:6334:10: (lv_optional_20_0= 'optional' )
            	            // InternalKim.g:6335:11: lv_optional_20_0= 'optional'
            	            {
            	            lv_optional_20_0=(Token)match(input,100,FOLLOW_98); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_optional_20_0, grammarAccess.getObservableSemanticsAccess().getOptionalOptionalKeyword_3_5_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	              											}
            	              											setWithLastConsumed(current, "optional", true, "optional");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:6348:9: otherlv_21= 'required'
            	            {
            	            otherlv_21=(Token)match(input,101,FOLLOW_98); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_21, grammarAccess.getObservableSemanticsAccess().getRequiredKeyword_3_5_1());
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:6358:4: ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6358:4: ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:6359:5: {...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6)");
            	    }
            	    // InternalKim.g:6359:116: ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:6360:6: ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6);
            	    // InternalKim.g:6363:9: ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) )
            	    // InternalKim.g:6363:10: {...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6363:19: ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) )
            	    // InternalKim.g:6363:20: ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:6363:20: ( (lv_from_22_0= ruleNumber ) )
            	    // InternalKim.g:6364:10: (lv_from_22_0= ruleNumber )
            	    {
            	    // InternalKim.g:6364:10: (lv_from_22_0= ruleNumber )
            	    // InternalKim.g:6365:11: lv_from_22_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getFromNumberParserRuleCall_3_6_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_23);
            	    lv_from_22_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_22_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_23=(Token)match(input,34,FOLLOW_39); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_23, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_6_1());
            	      								
            	    }
            	    // InternalKim.g:6386:9: ( (lv_to_24_0= ruleNumber ) )
            	    // InternalKim.g:6387:10: (lv_to_24_0= ruleNumber )
            	    {
            	    // InternalKim.g:6387:10: (lv_to_24_0= ruleNumber )
            	    // InternalKim.g:6388:11: lv_to_24_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getToNumberParserRuleCall_3_6_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_to_24_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_24_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalKim.g:6411:4: ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6411:4: ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) )
            	    // InternalKim.g:6412:5: {...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7)");
            	    }
            	    // InternalKim.g:6412:116: ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) )
            	    // InternalKim.g:6413:6: ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7);
            	    // InternalKim.g:6416:9: ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) )
            	    // InternalKim.g:6416:10: {...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6416:19: (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) )
            	    // InternalKim.g:6416:20: otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) )
            	    {
            	    otherlv_25=(Token)match(input,102,FOLLOW_62); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_25, grammarAccess.getObservableSemanticsAccess().getNamedKeyword_3_7_0());
            	      								
            	    }
            	    // InternalKim.g:6420:9: ( (lv_name_26_0= RULE_LOWERCASE_ID ) )
            	    // InternalKim.g:6421:10: (lv_name_26_0= RULE_LOWERCASE_ID )
            	    {
            	    // InternalKim.g:6421:10: (lv_name_26_0= RULE_LOWERCASE_ID )
            	    // InternalKim.g:6422:11: lv_name_26_0= RULE_LOWERCASE_ID
            	    {
            	    lv_name_26_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_98); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_name_26_0, grammarAccess.getObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_3_7_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"name",
            	      												lv_name_26_0,
            	      												"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop151;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleObservableSemantics"


    // $ANTLR start "entryRuleDependency"
    // InternalKim.g:6458:1: entryRuleDependency returns [EObject current=null] : iv_ruleDependency= ruleDependency EOF ;
    public final EObject entryRuleDependency() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDependency = null;


        try {
            // InternalKim.g:6458:51: (iv_ruleDependency= ruleDependency EOF )
            // InternalKim.g:6459:2: iv_ruleDependency= ruleDependency EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDependencyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDependency=ruleDependency();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDependency; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDependency"


    // $ANTLR start "ruleDependency"
    // InternalKim.g:6465:1: ruleDependency returns [EObject current=null] : ( ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) ) | ( (lv_observable_1_0= ruleObservableSemantics ) ) ) ;
    public final EObject ruleDependency() throws RecognitionException {
        EObject current = null;

        Token lv_modelReference_0_1=null;
        AntlrDatatypeRuleToken lv_modelReference_0_2 = null;

        EObject lv_observable_1_0 = null;



        	enterRule();

        try {
            // InternalKim.g:6471:2: ( ( ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) ) | ( (lv_observable_1_0= ruleObservableSemantics ) ) ) )
            // InternalKim.g:6472:2: ( ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) ) | ( (lv_observable_1_0= ruleObservableSemantics ) ) )
            {
            // InternalKim.g:6472:2: ( ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) ) | ( (lv_observable_1_0= ruleObservableSemantics ) ) )
            int alt153=2;
            alt153 = dfa153.predict(input);
            switch (alt153) {
                case 1 :
                    // InternalKim.g:6473:3: ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) )
                    {
                    // InternalKim.g:6473:3: ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) )
                    // InternalKim.g:6474:4: ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) )
                    {
                    // InternalKim.g:6474:4: ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) )
                    // InternalKim.g:6475:5: (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName )
                    {
                    // InternalKim.g:6475:5: (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName )
                    int alt152=2;
                    int LA152_0 = input.LA(1);

                    if ( (LA152_0==RULE_LOWERCASE_ID) ) {
                        int LA152_1 = input.LA(2);

                        if ( (synpred252_InternalKim()) ) {
                            alt152=1;
                        }
                        else if ( (true) ) {
                            alt152=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 152, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA152_0==RULE_LOWERCASE_DASHID) ) {
                        alt152=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 152, 0, input);

                        throw nvae;
                    }
                    switch (alt152) {
                        case 1 :
                            // InternalKim.g:6476:6: lv_modelReference_0_1= RULE_LOWERCASE_ID
                            {
                            lv_modelReference_0_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_modelReference_0_1, grammarAccess.getDependencyAccess().getModelReferenceLOWERCASE_IDTerminalRuleCall_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getDependencyRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"modelReference",
                              							lv_modelReference_0_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:6491:6: lv_modelReference_0_2= rulePathName
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getDependencyAccess().getModelReferencePathNameParserRuleCall_0_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_modelReference_0_2=rulePathName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getDependencyRule());
                              						}
                              						set(
                              							current,
                              							"modelReference",
                              							lv_modelReference_0_2,
                              							"org.integratedmodelling.kim.Kim.PathName");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:6510:3: ( (lv_observable_1_0= ruleObservableSemantics ) )
                    {
                    // InternalKim.g:6510:3: ( (lv_observable_1_0= ruleObservableSemantics ) )
                    // InternalKim.g:6511:4: (lv_observable_1_0= ruleObservableSemantics )
                    {
                    // InternalKim.g:6511:4: (lv_observable_1_0= ruleObservableSemantics )
                    // InternalKim.g:6512:5: lv_observable_1_0= ruleObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDependencyAccess().getObservableObservableSemanticsParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_observable_1_0=ruleObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDependencyRule());
                      					}
                      					set(
                      						current,
                      						"observable",
                      						lv_observable_1_0,
                      						"org.integratedmodelling.kim.Kim.ObservableSemantics");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDependency"


    // $ANTLR start "entryRuleConceptDeclaration"
    // InternalKim.g:6533:1: entryRuleConceptDeclaration returns [EObject current=null] : iv_ruleConceptDeclaration= ruleConceptDeclaration EOF ;
    public final EObject entryRuleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptDeclaration = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:6537:2: (iv_ruleConceptDeclaration= ruleConceptDeclaration EOF )
            // InternalKim.g:6538:2: iv_ruleConceptDeclaration= ruleConceptDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptDeclaration=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptDeclaration"


    // $ANTLR start "ruleConceptDeclaration"
    // InternalKim.g:6547:1: ruleConceptDeclaration returns [EObject current=null] : ( ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )? ) ;
    public final EObject ruleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        EObject lv_main_0_0 = null;

        EObject lv_inherency_3_0 = null;

        EObject lv_motivation_5_0 = null;

        EObject lv_compresent_7_0 = null;

        EObject lv_causant_10_0 = null;

        EObject lv_adjacent_13_0 = null;

        EObject lv_container_16_0 = null;

        EObject lv_contained_18_0 = null;

        EObject lv_caused_20_0 = null;

        EObject lv_during_22_0 = null;

        EObject lv_context_24_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:6556:2: ( ( ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )? ) )
            // InternalKim.g:6557:2: ( ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )? )
            {
            // InternalKim.g:6557:2: ( ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )? )
            // InternalKim.g:6558:3: ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )?
            {
            // InternalKim.g:6558:3: ( (lv_main_0_0= ruleConcept ) )+
            int cnt154=0;
            loop154:
            do {
                int alt154=2;
                alt154 = dfa154.predict(input);
                switch (alt154) {
            	case 1 :
            	    // InternalKim.g:6559:4: (lv_main_0_0= ruleConcept )
            	    {
            	    // InternalKim.g:6559:4: (lv_main_0_0= ruleConcept )
            	    // InternalKim.g:6560:5: lv_main_0_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMainConceptParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_101);
            	    lv_main_0_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"main",
            	      						lv_main_0_0,
            	      						"org.integratedmodelling.kim.Kim.Concept");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt154 >= 1 ) break loop154;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(154, input);
                        throw eee;
                }
                cnt154++;
            } while (true);

            // InternalKim.g:6577:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )?
            int alt156=2;
            alt156 = dfa156.predict(input);
            switch (alt156) {
                case 1 :
                    // InternalKim.g:6578:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
                    {
                    // InternalKim.g:6578:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
                    // InternalKim.g:6579:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
                    {
                    getUnorderedGroupHelper().enter(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
                    // InternalKim.g:6582:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
                    // InternalKim.g:6583:6: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
                    {
                    // InternalKim.g:6583:6: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
                    loop155:
                    do {
                        int alt155=11;
                        alt155 = dfa155.predict(input);
                        switch (alt155) {
                    	case 1 :
                    	    // InternalKim.g:6584:4: ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:6584:4: ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:6585:5: {...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalKim.g:6585:115: ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:6586:6: ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0);
                    	    // InternalKim.g:6589:9: ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:6589:10: {...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:6589:19: (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:6589:20: otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_2=(Token)match(input,103,FOLLOW_21); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_2, grammarAccess.getConceptDeclarationAccess().getOfKeyword_1_0_0());
                    	      								
                    	    }
                    	    // InternalKim.g:6593:9: ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:6594:10: (lv_inherency_3_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:6594:10: (lv_inherency_3_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:6595:11: lv_inherency_3_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_1_0_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_102);
                    	    lv_inherency_3_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"inherency",
                    	      												lv_inherency_3_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKim.g:6618:4: ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:6618:4: ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:6619:5: {...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalKim.g:6619:115: ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:6620:6: ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1);
                    	    // InternalKim.g:6623:9: ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:6623:10: {...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:6623:19: (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:6623:20: otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_4=(Token)match(input,104,FOLLOW_21); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_4, grammarAccess.getConceptDeclarationAccess().getForKeyword_1_1_0());
                    	      								
                    	    }
                    	    // InternalKim.g:6627:9: ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:6628:10: (lv_motivation_5_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:6628:10: (lv_motivation_5_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:6629:11: lv_motivation_5_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_1_1_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_102);
                    	    lv_motivation_5_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"motivation",
                    	      												lv_motivation_5_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalKim.g:6652:4: ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:6652:4: ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:6653:5: {...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalKim.g:6653:115: ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:6654:6: ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2);
                    	    // InternalKim.g:6657:9: ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:6657:10: {...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:6657:19: (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:6657:20: otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_6=(Token)match(input,40,FOLLOW_21); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_6, grammarAccess.getConceptDeclarationAccess().getWithKeyword_1_2_0());
                    	      								
                    	    }
                    	    // InternalKim.g:6661:9: ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:6662:10: (lv_compresent_7_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:6662:10: (lv_compresent_7_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:6663:11: lv_compresent_7_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_1_2_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_102);
                    	    lv_compresent_7_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"compresent",
                    	      												lv_compresent_7_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalKim.g:6686:4: ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:6686:4: ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:6687:5: {...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalKim.g:6687:115: ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:6688:6: ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3);
                    	    // InternalKim.g:6691:9: ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:6691:10: {...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:6691:19: (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:6691:20: otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_8=(Token)match(input,105,FOLLOW_103); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_8, grammarAccess.getConceptDeclarationAccess().getCausedKeyword_1_3_0());
                    	      								
                    	    }
                    	    otherlv_9=(Token)match(input,97,FOLLOW_21); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_9, grammarAccess.getConceptDeclarationAccess().getByKeyword_1_3_1());
                    	      								
                    	    }
                    	    // InternalKim.g:6699:9: ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:6700:10: (lv_causant_10_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:6700:10: (lv_causant_10_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:6701:11: lv_causant_10_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_1_3_2_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_102);
                    	    lv_causant_10_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"causant",
                    	      												lv_causant_10_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalKim.g:6724:4: ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:6724:4: ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:6725:5: {...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalKim.g:6725:115: ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:6726:6: ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4);
                    	    // InternalKim.g:6729:9: ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:6729:10: {...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:6729:19: (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:6729:20: otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_11=(Token)match(input,106,FOLLOW_23); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_11, grammarAccess.getConceptDeclarationAccess().getAdjacentKeyword_1_4_0());
                    	      								
                    	    }
                    	    otherlv_12=(Token)match(input,34,FOLLOW_21); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_12, grammarAccess.getConceptDeclarationAccess().getToKeyword_1_4_1());
                    	      								
                    	    }
                    	    // InternalKim.g:6737:9: ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:6738:10: (lv_adjacent_13_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:6738:10: (lv_adjacent_13_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:6739:11: lv_adjacent_13_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_1_4_2_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_102);
                    	    lv_adjacent_13_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"adjacent",
                    	      												lv_adjacent_13_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalKim.g:6762:4: ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:6762:4: ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:6763:5: {...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalKim.g:6763:115: ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:6764:6: ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5);
                    	    // InternalKim.g:6767:9: ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:6767:10: {...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:6767:19: (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:6767:20: otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_14=(Token)match(input,107,FOLLOW_104); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_14, grammarAccess.getConceptDeclarationAccess().getContainedKeyword_1_5_0());
                    	      								
                    	    }
                    	    otherlv_15=(Token)match(input,48,FOLLOW_21); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_15, grammarAccess.getConceptDeclarationAccess().getInKeyword_1_5_1());
                    	      								
                    	    }
                    	    // InternalKim.g:6775:9: ( (lv_container_16_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:6776:10: (lv_container_16_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:6776:10: (lv_container_16_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:6777:11: lv_container_16_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_1_5_2_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_102);
                    	    lv_container_16_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"container",
                    	      												lv_container_16_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalKim.g:6800:4: ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:6800:4: ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:6801:5: {...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalKim.g:6801:115: ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:6802:6: ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6);
                    	    // InternalKim.g:6805:9: ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:6805:10: {...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:6805:19: (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:6805:20: otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_17=(Token)match(input,108,FOLLOW_21); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_17, grammarAccess.getConceptDeclarationAccess().getContainingKeyword_1_6_0());
                    	      								
                    	    }
                    	    // InternalKim.g:6809:9: ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:6810:10: (lv_contained_18_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:6810:10: (lv_contained_18_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:6811:11: lv_contained_18_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_1_6_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_102);
                    	    lv_contained_18_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"contained",
                    	      												lv_contained_18_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 8 :
                    	    // InternalKim.g:6834:4: ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:6834:4: ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:6835:5: {...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7)");
                    	    }
                    	    // InternalKim.g:6835:115: ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:6836:6: ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7);
                    	    // InternalKim.g:6839:9: ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:6839:10: {...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:6839:19: (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:6839:20: otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_19=(Token)match(input,109,FOLLOW_21); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_19, grammarAccess.getConceptDeclarationAccess().getCausingKeyword_1_7_0());
                    	      								
                    	    }
                    	    // InternalKim.g:6843:9: ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:6844:10: (lv_caused_20_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:6844:10: (lv_caused_20_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:6845:11: lv_caused_20_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_1_7_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_102);
                    	    lv_caused_20_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"caused",
                    	      												lv_caused_20_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 9 :
                    	    // InternalKim.g:6868:4: ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:6868:4: ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:6869:5: {...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8)");
                    	    }
                    	    // InternalKim.g:6869:115: ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:6870:6: ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8);
                    	    // InternalKim.g:6873:9: ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:6873:10: {...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:6873:19: (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:6873:20: otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_21=(Token)match(input,110,FOLLOW_21); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_21, grammarAccess.getConceptDeclarationAccess().getDuringKeyword_1_8_0());
                    	      								
                    	    }
                    	    // InternalKim.g:6877:9: ( (lv_during_22_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:6878:10: (lv_during_22_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:6878:10: (lv_during_22_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:6879:11: lv_during_22_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getDuringSimpleConceptDeclarationParserRuleCall_1_8_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_102);
                    	    lv_during_22_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"during",
                    	      												lv_during_22_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 10 :
                    	    // InternalKim.g:6902:4: ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:6902:4: ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:6903:5: {...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9)");
                    	    }
                    	    // InternalKim.g:6903:115: ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:6904:6: ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9);
                    	    // InternalKim.g:6907:9: ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:6907:10: {...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:6907:19: (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:6907:20: otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_23=(Token)match(input,111,FOLLOW_21); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_23, grammarAccess.getConceptDeclarationAccess().getWithinKeyword_1_9_0());
                    	      								
                    	    }
                    	    // InternalKim.g:6911:9: ( (lv_context_24_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:6912:10: (lv_context_24_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:6912:10: (lv_context_24_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:6913:11: lv_context_24_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContextSimpleConceptDeclarationParserRuleCall_1_9_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_102);
                    	    lv_context_24_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"context",
                    	      												lv_context_24_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop155;
                        }
                    } while (true);


                    }


                    }

                    getUnorderedGroupHelper().leave(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptDeclaration"


    // $ANTLR start "entryRuleConceptReference"
    // InternalKim.g:6950:1: entryRuleConceptReference returns [EObject current=null] : iv_ruleConceptReference= ruleConceptReference EOF ;
    public final EObject entryRuleConceptReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptReference = null;


        try {
            // InternalKim.g:6950:57: (iv_ruleConceptReference= ruleConceptReference EOF )
            // InternalKim.g:6951:2: iv_ruleConceptReference= ruleConceptReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptReference=ruleConceptReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConceptReference"


    // $ANTLR start "ruleConceptReference"
    // InternalKim.g:6957:1: ruleConceptReference returns [EObject current=null] : ( ( (lv_name_0_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_1_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'concomitant' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) ) ) ) ;
    public final EObject ruleConceptReference() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_templateType_2_1=null;
        Token lv_templateType_2_2=null;
        Token lv_name_3_0=null;
        Token otherlv_5=null;
        Token lv_name_7_0=null;
        Token otherlv_9=null;
        Token lv_name_11_0=null;
        Token otherlv_13=null;
        Token lv_name_15_0=null;
        Token otherlv_17=null;
        Token lv_name_19_0=null;
        Token otherlv_21=null;
        Token lv_name_23_0=null;
        Token otherlv_25=null;
        Token lv_name_27_0=null;
        Token otherlv_29=null;
        Token lv_name_31_0=null;
        Token otherlv_33=null;
        Token lv_name_35_0=null;
        Token otherlv_37=null;
        Token lv_name_39_0=null;
        Token otherlv_41=null;
        Token lv_template_43_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_4_0 = null;

        EObject lv_extends_6_0 = null;

        AntlrDatatypeRuleToken lv_type_8_0 = null;

        EObject lv_extends_10_0 = null;

        AntlrDatatypeRuleToken lv_type_12_0 = null;

        EObject lv_extends_14_0 = null;

        AntlrDatatypeRuleToken lv_type_16_0 = null;

        EObject lv_extends_18_0 = null;

        AntlrDatatypeRuleToken lv_type_20_0 = null;

        EObject lv_extends_22_0 = null;

        AntlrDatatypeRuleToken lv_type_24_0 = null;

        EObject lv_extends_26_0 = null;

        AntlrDatatypeRuleToken lv_type_28_0 = null;

        EObject lv_extends_30_0 = null;

        AntlrDatatypeRuleToken lv_type_32_0 = null;

        EObject lv_extends_34_0 = null;

        AntlrDatatypeRuleToken lv_type_36_0 = null;

        EObject lv_extends_38_0 = null;

        AntlrDatatypeRuleToken lv_type_40_0 = null;

        EObject lv_extends_42_0 = null;



        	enterRule();

        try {
            // InternalKim.g:6963:2: ( ( ( (lv_name_0_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_1_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'concomitant' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) ) ) ) )
            // InternalKim.g:6964:2: ( ( (lv_name_0_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_1_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'concomitant' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) ) ) )
            {
            // InternalKim.g:6964:2: ( ( (lv_name_0_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_1_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'concomitant' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) ) ) )
            int alt169=3;
            switch ( input.LA(1) ) {
            case RULE_CAMELCASE_ID:
                {
                alt169=1;
                }
                break;
            case RULE_LOWERCASE_ID:
            case RULE_LOWERCASE_DASHID:
                {
                alt169=2;
                }
                break;
            case 112:
            case 113:
                {
                alt169=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 169, 0, input);

                throw nvae;
            }

            switch (alt169) {
                case 1 :
                    // InternalKim.g:6965:3: ( (lv_name_0_0= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:6965:3: ( (lv_name_0_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:6966:4: (lv_name_0_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:6966:4: (lv_name_0_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:6967:5: lv_name_0_0= RULE_CAMELCASE_ID
                    {
                    lv_name_0_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_0, grammarAccess.getConceptReferenceAccess().getNameCAMELCASE_IDTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConceptReferenceRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:6984:3: ( (lv_name_1_0= ruleNamespaceId ) )
                    {
                    // InternalKim.g:6984:3: ( (lv_name_1_0= ruleNamespaceId ) )
                    // InternalKim.g:6985:4: (lv_name_1_0= ruleNamespaceId )
                    {
                    // InternalKim.g:6985:4: (lv_name_1_0= ruleNamespaceId )
                    // InternalKim.g:6986:5: lv_name_1_0= ruleNamespaceId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConceptReferenceAccess().getNameNamespaceIdParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_1_0=ruleNamespaceId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.integratedmodelling.kim.Kim.NamespaceId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:7004:3: ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'concomitant' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) ) )
                    {
                    // InternalKim.g:7004:3: ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'concomitant' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) ) )
                    // InternalKim.g:7005:4: ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'concomitant' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) )
                    {
                    // InternalKim.g:7005:4: ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) )
                    // InternalKim.g:7006:5: ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) )
                    {
                    // InternalKim.g:7006:5: ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) )
                    // InternalKim.g:7007:6: (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' )
                    {
                    // InternalKim.g:7007:6: (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' )
                    int alt157=2;
                    int LA157_0 = input.LA(1);

                    if ( (LA157_0==112) ) {
                        alt157=1;
                    }
                    else if ( (LA157_0==113) ) {
                        alt157=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 157, 0, input);

                        throw nvae;
                    }
                    switch (alt157) {
                        case 1 :
                            // InternalKim.g:7008:7: lv_templateType_2_1= '${'
                            {
                            lv_templateType_2_1=(Token)match(input,112,FOLLOW_105); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_templateType_2_1, grammarAccess.getConceptReferenceAccess().getTemplateTypeDollarSignLeftCurlyBracketKeyword_2_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptReferenceRule());
                              							}
                              							setWithLastConsumed(current, "templateType", lv_templateType_2_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:7019:7: lv_templateType_2_2= '#{'
                            {
                            lv_templateType_2_2=(Token)match(input,113,FOLLOW_105); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_templateType_2_2, grammarAccess.getConceptReferenceAccess().getTemplateTypeNumberSignLeftCurlyBracketKeyword_2_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptReferenceRule());
                              							}
                              							setWithLastConsumed(current, "templateType", lv_templateType_2_2, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:7032:4: ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'concomitant' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) )
                    int alt168=10;
                    switch ( input.LA(1) ) {
                    case 62:
                        {
                        alt168=1;
                        }
                        break;
                    case 114:
                        {
                        alt168=2;
                        }
                        break;
                    case 115:
                        {
                        alt168=3;
                        }
                        break;
                    case 106:
                        {
                        alt168=4;
                        }
                        break;
                    case 116:
                        {
                        alt168=5;
                        }
                        break;
                    case 107:
                        {
                        alt168=6;
                        }
                        break;
                    case 117:
                        {
                        alt168=7;
                        }
                        break;
                    case 118:
                        {
                        alt168=8;
                        }
                        break;
                    case 105:
                        {
                        alt168=9;
                        }
                        break;
                    case 119:
                        {
                        alt168=10;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 168, 0, input);

                        throw nvae;
                    }

                    switch (alt168) {
                        case 1 :
                            // InternalKim.g:7033:5: ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:7033:5: ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:7034:6: ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:7034:6: ( (lv_name_3_0= 'context' ) )
                            // InternalKim.g:7035:7: (lv_name_3_0= 'context' )
                            {
                            // InternalKim.g:7035:7: (lv_name_3_0= 'context' )
                            // InternalKim.g:7036:8: lv_name_3_0= 'context'
                            {
                            lv_name_3_0=(Token)match(input,62,FOLLOW_106); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_3_0, grammarAccess.getConceptReferenceAccess().getNameContextKeyword_2_1_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_3_0, "context");
                              							
                            }

                            }


                            }

                            // InternalKim.g:7048:6: ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) )
                            int alt158=2;
                            int LA158_0 = input.LA(1);

                            if ( (LA158_0==80||(LA158_0>=143 && LA158_0<=144)||LA158_0==165||(LA158_0>=178 && LA158_0<=181)||(LA158_0>=194 && LA158_0<=223)) ) {
                                alt158=1;
                            }
                            else if ( (LA158_0==95) ) {
                                alt158=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 158, 0, input);

                                throw nvae;
                            }
                            switch (alt158) {
                                case 1 :
                                    // InternalKim.g:7049:7: ( (lv_type_4_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:7049:7: ( (lv_type_4_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:7050:8: (lv_type_4_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:7050:8: (lv_type_4_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:7051:9: lv_type_4_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_0_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_107);
                                    lv_type_4_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_4_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7069:7: (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:7069:7: (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) )
                                    // InternalKim.g:7070:8: otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) )
                                    {
                                    otherlv_5=(Token)match(input,95,FOLLOW_21); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_5, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_0_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:7074:8: ( (lv_extends_6_0= ruleConcept ) )
                                    // InternalKim.g:7075:9: (lv_extends_6_0= ruleConcept )
                                    {
                                    // InternalKim.g:7075:9: (lv_extends_6_0= ruleConcept )
                                    // InternalKim.g:7076:10: lv_extends_6_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_0_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_107);
                                    lv_extends_6_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_6_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:7097:5: ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:7097:5: ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:7098:6: ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:7098:6: ( (lv_name_7_0= 'inherent' ) )
                            // InternalKim.g:7099:7: (lv_name_7_0= 'inherent' )
                            {
                            // InternalKim.g:7099:7: (lv_name_7_0= 'inherent' )
                            // InternalKim.g:7100:8: lv_name_7_0= 'inherent'
                            {
                            lv_name_7_0=(Token)match(input,114,FOLLOW_106); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_7_0, grammarAccess.getConceptReferenceAccess().getNameInherentKeyword_2_1_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_7_0, "inherent");
                              							
                            }

                            }


                            }

                            // InternalKim.g:7112:6: ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) )
                            int alt159=2;
                            int LA159_0 = input.LA(1);

                            if ( (LA159_0==80||(LA159_0>=143 && LA159_0<=144)||LA159_0==165||(LA159_0>=178 && LA159_0<=181)||(LA159_0>=194 && LA159_0<=223)) ) {
                                alt159=1;
                            }
                            else if ( (LA159_0==95) ) {
                                alt159=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 159, 0, input);

                                throw nvae;
                            }
                            switch (alt159) {
                                case 1 :
                                    // InternalKim.g:7113:7: ( (lv_type_8_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:7113:7: ( (lv_type_8_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:7114:8: (lv_type_8_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:7114:8: (lv_type_8_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:7115:9: lv_type_8_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_1_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_107);
                                    lv_type_8_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_8_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7133:7: (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:7133:7: (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) )
                                    // InternalKim.g:7134:8: otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) )
                                    {
                                    otherlv_9=(Token)match(input,95,FOLLOW_21); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_9, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_1_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:7138:8: ( (lv_extends_10_0= ruleConcept ) )
                                    // InternalKim.g:7139:9: (lv_extends_10_0= ruleConcept )
                                    {
                                    // InternalKim.g:7139:9: (lv_extends_10_0= ruleConcept )
                                    // InternalKim.g:7140:10: lv_extends_10_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_1_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_107);
                                    lv_extends_10_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_10_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:7161:5: ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:7161:5: ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:7162:6: ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:7162:6: ( (lv_name_11_0= 'compresent' ) )
                            // InternalKim.g:7163:7: (lv_name_11_0= 'compresent' )
                            {
                            // InternalKim.g:7163:7: (lv_name_11_0= 'compresent' )
                            // InternalKim.g:7164:8: lv_name_11_0= 'compresent'
                            {
                            lv_name_11_0=(Token)match(input,115,FOLLOW_106); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_11_0, grammarAccess.getConceptReferenceAccess().getNameCompresentKeyword_2_1_2_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_11_0, "compresent");
                              							
                            }

                            }


                            }

                            // InternalKim.g:7176:6: ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) )
                            int alt160=2;
                            int LA160_0 = input.LA(1);

                            if ( (LA160_0==80||(LA160_0>=143 && LA160_0<=144)||LA160_0==165||(LA160_0>=178 && LA160_0<=181)||(LA160_0>=194 && LA160_0<=223)) ) {
                                alt160=1;
                            }
                            else if ( (LA160_0==95) ) {
                                alt160=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 160, 0, input);

                                throw nvae;
                            }
                            switch (alt160) {
                                case 1 :
                                    // InternalKim.g:7177:7: ( (lv_type_12_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:7177:7: ( (lv_type_12_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:7178:8: (lv_type_12_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:7178:8: (lv_type_12_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:7179:9: lv_type_12_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_2_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_107);
                                    lv_type_12_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_12_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7197:7: (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:7197:7: (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) )
                                    // InternalKim.g:7198:8: otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) )
                                    {
                                    otherlv_13=(Token)match(input,95,FOLLOW_21); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_13, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_2_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:7202:8: ( (lv_extends_14_0= ruleConcept ) )
                                    // InternalKim.g:7203:9: (lv_extends_14_0= ruleConcept )
                                    {
                                    // InternalKim.g:7203:9: (lv_extends_14_0= ruleConcept )
                                    // InternalKim.g:7204:10: lv_extends_14_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_2_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_107);
                                    lv_extends_14_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_14_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:7225:5: ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:7225:5: ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:7226:6: ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:7226:6: ( (lv_name_15_0= 'adjacent' ) )
                            // InternalKim.g:7227:7: (lv_name_15_0= 'adjacent' )
                            {
                            // InternalKim.g:7227:7: (lv_name_15_0= 'adjacent' )
                            // InternalKim.g:7228:8: lv_name_15_0= 'adjacent'
                            {
                            lv_name_15_0=(Token)match(input,106,FOLLOW_106); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_15_0, grammarAccess.getConceptReferenceAccess().getNameAdjacentKeyword_2_1_3_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_15_0, "adjacent");
                              							
                            }

                            }


                            }

                            // InternalKim.g:7240:6: ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) )
                            int alt161=2;
                            int LA161_0 = input.LA(1);

                            if ( (LA161_0==80||(LA161_0>=143 && LA161_0<=144)||LA161_0==165||(LA161_0>=178 && LA161_0<=181)||(LA161_0>=194 && LA161_0<=223)) ) {
                                alt161=1;
                            }
                            else if ( (LA161_0==95) ) {
                                alt161=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 161, 0, input);

                                throw nvae;
                            }
                            switch (alt161) {
                                case 1 :
                                    // InternalKim.g:7241:7: ( (lv_type_16_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:7241:7: ( (lv_type_16_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:7242:8: (lv_type_16_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:7242:8: (lv_type_16_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:7243:9: lv_type_16_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_3_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_107);
                                    lv_type_16_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_16_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7261:7: (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:7261:7: (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) )
                                    // InternalKim.g:7262:8: otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) )
                                    {
                                    otherlv_17=(Token)match(input,95,FOLLOW_21); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_17, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_3_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:7266:8: ( (lv_extends_18_0= ruleConcept ) )
                                    // InternalKim.g:7267:9: (lv_extends_18_0= ruleConcept )
                                    {
                                    // InternalKim.g:7267:9: (lv_extends_18_0= ruleConcept )
                                    // InternalKim.g:7268:10: lv_extends_18_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_3_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_107);
                                    lv_extends_18_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_18_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 5 :
                            // InternalKim.g:7289:5: ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:7289:5: ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:7290:6: ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:7290:6: ( (lv_name_19_0= 'container' ) )
                            // InternalKim.g:7291:7: (lv_name_19_0= 'container' )
                            {
                            // InternalKim.g:7291:7: (lv_name_19_0= 'container' )
                            // InternalKim.g:7292:8: lv_name_19_0= 'container'
                            {
                            lv_name_19_0=(Token)match(input,116,FOLLOW_106); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_19_0, grammarAccess.getConceptReferenceAccess().getNameContainerKeyword_2_1_4_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_19_0, "container");
                              							
                            }

                            }


                            }

                            // InternalKim.g:7304:6: ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) )
                            int alt162=2;
                            int LA162_0 = input.LA(1);

                            if ( (LA162_0==80||(LA162_0>=143 && LA162_0<=144)||LA162_0==165||(LA162_0>=178 && LA162_0<=181)||(LA162_0>=194 && LA162_0<=223)) ) {
                                alt162=1;
                            }
                            else if ( (LA162_0==95) ) {
                                alt162=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 162, 0, input);

                                throw nvae;
                            }
                            switch (alt162) {
                                case 1 :
                                    // InternalKim.g:7305:7: ( (lv_type_20_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:7305:7: ( (lv_type_20_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:7306:8: (lv_type_20_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:7306:8: (lv_type_20_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:7307:9: lv_type_20_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_4_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_107);
                                    lv_type_20_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_20_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7325:7: (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:7325:7: (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) )
                                    // InternalKim.g:7326:8: otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) )
                                    {
                                    otherlv_21=(Token)match(input,95,FOLLOW_21); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_21, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_4_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:7330:8: ( (lv_extends_22_0= ruleConcept ) )
                                    // InternalKim.g:7331:9: (lv_extends_22_0= ruleConcept )
                                    {
                                    // InternalKim.g:7331:9: (lv_extends_22_0= ruleConcept )
                                    // InternalKim.g:7332:10: lv_extends_22_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_4_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_107);
                                    lv_extends_22_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_22_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 6 :
                            // InternalKim.g:7353:5: ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:7353:5: ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:7354:6: ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:7354:6: ( (lv_name_23_0= 'contained' ) )
                            // InternalKim.g:7355:7: (lv_name_23_0= 'contained' )
                            {
                            // InternalKim.g:7355:7: (lv_name_23_0= 'contained' )
                            // InternalKim.g:7356:8: lv_name_23_0= 'contained'
                            {
                            lv_name_23_0=(Token)match(input,107,FOLLOW_106); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_23_0, grammarAccess.getConceptReferenceAccess().getNameContainedKeyword_2_1_5_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_23_0, "contained");
                              							
                            }

                            }


                            }

                            // InternalKim.g:7368:6: ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) )
                            int alt163=2;
                            int LA163_0 = input.LA(1);

                            if ( (LA163_0==80||(LA163_0>=143 && LA163_0<=144)||LA163_0==165||(LA163_0>=178 && LA163_0<=181)||(LA163_0>=194 && LA163_0<=223)) ) {
                                alt163=1;
                            }
                            else if ( (LA163_0==95) ) {
                                alt163=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 163, 0, input);

                                throw nvae;
                            }
                            switch (alt163) {
                                case 1 :
                                    // InternalKim.g:7369:7: ( (lv_type_24_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:7369:7: ( (lv_type_24_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:7370:8: (lv_type_24_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:7370:8: (lv_type_24_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:7371:9: lv_type_24_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_5_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_107);
                                    lv_type_24_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_24_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7389:7: (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:7389:7: (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) )
                                    // InternalKim.g:7390:8: otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) )
                                    {
                                    otherlv_25=(Token)match(input,95,FOLLOW_21); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_25, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_5_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:7394:8: ( (lv_extends_26_0= ruleConcept ) )
                                    // InternalKim.g:7395:9: (lv_extends_26_0= ruleConcept )
                                    {
                                    // InternalKim.g:7395:9: (lv_extends_26_0= ruleConcept )
                                    // InternalKim.g:7396:10: lv_extends_26_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_5_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_107);
                                    lv_extends_26_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_26_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 7 :
                            // InternalKim.g:7417:5: ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:7417:5: ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:7418:6: ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:7418:6: ( (lv_name_27_0= 'purpose' ) )
                            // InternalKim.g:7419:7: (lv_name_27_0= 'purpose' )
                            {
                            // InternalKim.g:7419:7: (lv_name_27_0= 'purpose' )
                            // InternalKim.g:7420:8: lv_name_27_0= 'purpose'
                            {
                            lv_name_27_0=(Token)match(input,117,FOLLOW_106); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_27_0, grammarAccess.getConceptReferenceAccess().getNamePurposeKeyword_2_1_6_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_27_0, "purpose");
                              							
                            }

                            }


                            }

                            // InternalKim.g:7432:6: ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) )
                            int alt164=2;
                            int LA164_0 = input.LA(1);

                            if ( (LA164_0==80||(LA164_0>=143 && LA164_0<=144)||LA164_0==165||(LA164_0>=178 && LA164_0<=181)||(LA164_0>=194 && LA164_0<=223)) ) {
                                alt164=1;
                            }
                            else if ( (LA164_0==95) ) {
                                alt164=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 164, 0, input);

                                throw nvae;
                            }
                            switch (alt164) {
                                case 1 :
                                    // InternalKim.g:7433:7: ( (lv_type_28_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:7433:7: ( (lv_type_28_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:7434:8: (lv_type_28_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:7434:8: (lv_type_28_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:7435:9: lv_type_28_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_6_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_107);
                                    lv_type_28_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_28_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7453:7: (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:7453:7: (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) )
                                    // InternalKim.g:7454:8: otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) )
                                    {
                                    otherlv_29=(Token)match(input,95,FOLLOW_21); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_29, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_6_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:7458:8: ( (lv_extends_30_0= ruleConcept ) )
                                    // InternalKim.g:7459:9: (lv_extends_30_0= ruleConcept )
                                    {
                                    // InternalKim.g:7459:9: (lv_extends_30_0= ruleConcept )
                                    // InternalKim.g:7460:10: lv_extends_30_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_6_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_107);
                                    lv_extends_30_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_30_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 8 :
                            // InternalKim.g:7481:5: ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:7481:5: ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:7482:6: ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:7482:6: ( (lv_name_31_0= 'causant' ) )
                            // InternalKim.g:7483:7: (lv_name_31_0= 'causant' )
                            {
                            // InternalKim.g:7483:7: (lv_name_31_0= 'causant' )
                            // InternalKim.g:7484:8: lv_name_31_0= 'causant'
                            {
                            lv_name_31_0=(Token)match(input,118,FOLLOW_106); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_31_0, grammarAccess.getConceptReferenceAccess().getNameCausantKeyword_2_1_7_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_31_0, "causant");
                              							
                            }

                            }


                            }

                            // InternalKim.g:7496:6: ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) )
                            int alt165=2;
                            int LA165_0 = input.LA(1);

                            if ( (LA165_0==80||(LA165_0>=143 && LA165_0<=144)||LA165_0==165||(LA165_0>=178 && LA165_0<=181)||(LA165_0>=194 && LA165_0<=223)) ) {
                                alt165=1;
                            }
                            else if ( (LA165_0==95) ) {
                                alt165=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 165, 0, input);

                                throw nvae;
                            }
                            switch (alt165) {
                                case 1 :
                                    // InternalKim.g:7497:7: ( (lv_type_32_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:7497:7: ( (lv_type_32_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:7498:8: (lv_type_32_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:7498:8: (lv_type_32_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:7499:9: lv_type_32_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_7_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_107);
                                    lv_type_32_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_32_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7517:7: (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:7517:7: (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) )
                                    // InternalKim.g:7518:8: otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) )
                                    {
                                    otherlv_33=(Token)match(input,95,FOLLOW_21); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_33, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_7_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:7522:8: ( (lv_extends_34_0= ruleConcept ) )
                                    // InternalKim.g:7523:9: (lv_extends_34_0= ruleConcept )
                                    {
                                    // InternalKim.g:7523:9: (lv_extends_34_0= ruleConcept )
                                    // InternalKim.g:7524:10: lv_extends_34_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_7_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_107);
                                    lv_extends_34_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_34_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 9 :
                            // InternalKim.g:7545:5: ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:7545:5: ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:7546:6: ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:7546:6: ( (lv_name_35_0= 'caused' ) )
                            // InternalKim.g:7547:7: (lv_name_35_0= 'caused' )
                            {
                            // InternalKim.g:7547:7: (lv_name_35_0= 'caused' )
                            // InternalKim.g:7548:8: lv_name_35_0= 'caused'
                            {
                            lv_name_35_0=(Token)match(input,105,FOLLOW_106); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_35_0, grammarAccess.getConceptReferenceAccess().getNameCausedKeyword_2_1_8_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_35_0, "caused");
                              							
                            }

                            }


                            }

                            // InternalKim.g:7560:6: ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) )
                            int alt166=2;
                            int LA166_0 = input.LA(1);

                            if ( (LA166_0==80||(LA166_0>=143 && LA166_0<=144)||LA166_0==165||(LA166_0>=178 && LA166_0<=181)||(LA166_0>=194 && LA166_0<=223)) ) {
                                alt166=1;
                            }
                            else if ( (LA166_0==95) ) {
                                alt166=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 166, 0, input);

                                throw nvae;
                            }
                            switch (alt166) {
                                case 1 :
                                    // InternalKim.g:7561:7: ( (lv_type_36_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:7561:7: ( (lv_type_36_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:7562:8: (lv_type_36_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:7562:8: (lv_type_36_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:7563:9: lv_type_36_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_8_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_107);
                                    lv_type_36_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_36_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7581:7: (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:7581:7: (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) )
                                    // InternalKim.g:7582:8: otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) )
                                    {
                                    otherlv_37=(Token)match(input,95,FOLLOW_21); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_37, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_8_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:7586:8: ( (lv_extends_38_0= ruleConcept ) )
                                    // InternalKim.g:7587:9: (lv_extends_38_0= ruleConcept )
                                    {
                                    // InternalKim.g:7587:9: (lv_extends_38_0= ruleConcept )
                                    // InternalKim.g:7588:10: lv_extends_38_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_8_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_107);
                                    lv_extends_38_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_38_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 10 :
                            // InternalKim.g:7609:5: ( ( (lv_name_39_0= 'concomitant' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:7609:5: ( ( (lv_name_39_0= 'concomitant' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:7610:6: ( (lv_name_39_0= 'concomitant' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:7610:6: ( (lv_name_39_0= 'concomitant' ) )
                            // InternalKim.g:7611:7: (lv_name_39_0= 'concomitant' )
                            {
                            // InternalKim.g:7611:7: (lv_name_39_0= 'concomitant' )
                            // InternalKim.g:7612:8: lv_name_39_0= 'concomitant'
                            {
                            lv_name_39_0=(Token)match(input,119,FOLLOW_106); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_39_0, grammarAccess.getConceptReferenceAccess().getNameConcomitantKeyword_2_1_9_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_39_0, "concomitant");
                              							
                            }

                            }


                            }

                            // InternalKim.g:7624:6: ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) )
                            int alt167=2;
                            int LA167_0 = input.LA(1);

                            if ( (LA167_0==80||(LA167_0>=143 && LA167_0<=144)||LA167_0==165||(LA167_0>=178 && LA167_0<=181)||(LA167_0>=194 && LA167_0<=223)) ) {
                                alt167=1;
                            }
                            else if ( (LA167_0==95) ) {
                                alt167=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 167, 0, input);

                                throw nvae;
                            }
                            switch (alt167) {
                                case 1 :
                                    // InternalKim.g:7625:7: ( (lv_type_40_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:7625:7: ( (lv_type_40_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:7626:8: (lv_type_40_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:7626:8: (lv_type_40_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:7627:9: lv_type_40_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_9_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_107);
                                    lv_type_40_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_40_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7645:7: (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:7645:7: (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) )
                                    // InternalKim.g:7646:8: otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) )
                                    {
                                    otherlv_41=(Token)match(input,95,FOLLOW_21); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_41, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_9_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:7650:8: ( (lv_extends_42_0= ruleConcept ) )
                                    // InternalKim.g:7651:9: (lv_extends_42_0= ruleConcept )
                                    {
                                    // InternalKim.g:7651:9: (lv_extends_42_0= ruleConcept )
                                    // InternalKim.g:7652:10: lv_extends_42_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_9_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_107);
                                    lv_extends_42_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_42_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:7673:4: ( (lv_template_43_0= '}' ) )
                    // InternalKim.g:7674:5: (lv_template_43_0= '}' )
                    {
                    // InternalKim.g:7674:5: (lv_template_43_0= '}' )
                    // InternalKim.g:7675:6: lv_template_43_0= '}'
                    {
                    lv_template_43_0=(Token)match(input,120,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_template_43_0, grammarAccess.getConceptReferenceAccess().getTemplateRightCurlyBracketKeyword_2_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptReferenceRule());
                      						}
                      						setWithLastConsumed(current, "template", true, "}");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConceptReference"


    // $ANTLR start "entryRuleOPERATOR_TARGET"
    // InternalKim.g:7692:1: entryRuleOPERATOR_TARGET returns [String current=null] : iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF ;
    public final String entryRuleOPERATOR_TARGET() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOPERATOR_TARGET = null;


        try {
            // InternalKim.g:7692:55: (iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF )
            // InternalKim.g:7693:2: iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOPERATOR_TARGETRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOPERATOR_TARGET=ruleOPERATOR_TARGET();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOPERATOR_TARGET.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOPERATOR_TARGET"


    // $ANTLR start "ruleOPERATOR_TARGET"
    // InternalKim.g:7699:1: ruleOPERATOR_TARGET returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' ) ;
    public final AntlrDatatypeRuleToken ruleOPERATOR_TARGET() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:7705:2: ( (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' ) )
            // InternalKim.g:7706:2: (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' )
            {
            // InternalKim.g:7706:2: (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' )
            int alt170=9;
            switch ( input.LA(1) ) {
            case 62:
                {
                alt170=1;
                }
                break;
            case 114:
                {
                alt170=2;
                }
                break;
            case 115:
                {
                alt170=3;
                }
                break;
            case 106:
                {
                alt170=4;
                }
                break;
            case 116:
                {
                alt170=5;
                }
                break;
            case 107:
                {
                alt170=6;
                }
                break;
            case 117:
                {
                alt170=7;
                }
                break;
            case 118:
                {
                alt170=8;
                }
                break;
            case 105:
                {
                alt170=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 170, 0, input);

                throw nvae;
            }

            switch (alt170) {
                case 1 :
                    // InternalKim.g:7707:3: kw= 'context'
                    {
                    kw=(Token)match(input,62,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContextKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:7713:3: kw= 'inherent'
                    {
                    kw=(Token)match(input,114,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getInherentKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:7719:3: kw= 'compresent'
                    {
                    kw=(Token)match(input,115,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCompresentKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:7725:3: kw= 'adjacent'
                    {
                    kw=(Token)match(input,106,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getAdjacentKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:7731:3: kw= 'container'
                    {
                    kw=(Token)match(input,116,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContainerKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:7737:3: kw= 'contained'
                    {
                    kw=(Token)match(input,107,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContainedKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:7743:3: kw= 'purpose'
                    {
                    kw=(Token)match(input,117,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getPurposeKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:7749:3: kw= 'causant'
                    {
                    kw=(Token)match(input,118,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCausantKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:7755:3: kw= 'caused'
                    {
                    kw=(Token)match(input,105,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCausedKeyword_8());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOPERATOR_TARGET"


    // $ANTLR start "entryRuleConcept"
    // InternalKim.g:7764:1: entryRuleConcept returns [EObject current=null] : iv_ruleConcept= ruleConcept EOF ;
    public final EObject entryRuleConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConcept = null;


        try {
            // InternalKim.g:7764:48: (iv_ruleConcept= ruleConcept EOF )
            // InternalKim.g:7765:2: iv_ruleConcept= ruleConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConcept=ruleConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConcept"


    // $ANTLR start "ruleConcept"
    // InternalKim.g:7771:1: ruleConcept returns [EObject current=null] : ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_27_0= 'magnitude' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_30_0= 'type' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_33_0= 'observability' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_36_0= 'proportion' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_39= 'in' ) ( (lv_other_40_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_41_0= 'ratio' ) ) otherlv_42= 'of' ( (lv_concept_43_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_44= 'to' ) ( (lv_other_45_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_value_46_0= 'value' ) ) otherlv_47= 'of' ( (lv_concept_48_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_49= 'over' ) ( (lv_other_50_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_51_0= 'occurrence' ) ) otherlv_52= 'of' ( (lv_concept_53_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_54= '(' ( (lv_declaration_55_0= ruleExpression ) ) otherlv_56= ')' ) ) ;
    public final EObject ruleConcept() throws RecognitionException {
        EObject current = null;

        Token lv_negated_0_1=null;
        Token lv_negated_0_2=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_stringIdentifier_4_1=null;
        Token lv_stringIdentifier_4_2=null;
        Token lv_intIdentifier_5_0=null;
        Token otherlv_6=null;
        Token lv_authority_7_1=null;
        Token lv_authority_7_2=null;
        Token lv_presence_8_0=null;
        Token otherlv_9=null;
        Token lv_count_11_0=null;
        Token otherlv_12=null;
        Token lv_distance_14_0=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token lv_probability_18_0=null;
        Token otherlv_19=null;
        Token lv_assessment_21_0=null;
        Token otherlv_22=null;
        Token lv_uncertainty_24_0=null;
        Token otherlv_25=null;
        Token lv_magnitude_27_0=null;
        Token otherlv_28=null;
        Token lv_type_30_0=null;
        Token otherlv_31=null;
        Token lv_observability_33_0=null;
        Token otherlv_34=null;
        Token lv_proportion_36_0=null;
        Token otherlv_37=null;
        Token otherlv_39=null;
        Token lv_ratio_41_0=null;
        Token otherlv_42=null;
        Token otherlv_44=null;
        Token lv_value_46_0=null;
        Token otherlv_47=null;
        Token otherlv_49=null;
        Token lv_occurrence_51_0=null;
        Token otherlv_52=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        EObject lv_name_1_0 = null;

        EObject lv_concept_10_0 = null;

        EObject lv_concept_13_0 = null;

        EObject lv_concept_17_0 = null;

        EObject lv_concept_20_0 = null;

        EObject lv_concept_23_0 = null;

        EObject lv_concept_26_0 = null;

        EObject lv_concept_29_0 = null;

        EObject lv_concept_32_0 = null;

        EObject lv_concept_35_0 = null;

        EObject lv_concept_38_0 = null;

        EObject lv_other_40_0 = null;

        EObject lv_concept_43_0 = null;

        EObject lv_other_45_0 = null;

        EObject lv_concept_48_0 = null;

        EObject lv_other_50_0 = null;

        EObject lv_concept_53_0 = null;

        EObject lv_declaration_55_0 = null;



        	enterRule();

        try {
            // InternalKim.g:7777:2: ( ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_27_0= 'magnitude' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_30_0= 'type' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_33_0= 'observability' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_36_0= 'proportion' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_39= 'in' ) ( (lv_other_40_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_41_0= 'ratio' ) ) otherlv_42= 'of' ( (lv_concept_43_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_44= 'to' ) ( (lv_other_45_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_value_46_0= 'value' ) ) otherlv_47= 'of' ( (lv_concept_48_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_49= 'over' ) ( (lv_other_50_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_51_0= 'occurrence' ) ) otherlv_52= 'of' ( (lv_concept_53_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_54= '(' ( (lv_declaration_55_0= ruleExpression ) ) otherlv_56= ')' ) ) )
            // InternalKim.g:7778:2: ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_27_0= 'magnitude' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_30_0= 'type' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_33_0= 'observability' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_36_0= 'proportion' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_39= 'in' ) ( (lv_other_40_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_41_0= 'ratio' ) ) otherlv_42= 'of' ( (lv_concept_43_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_44= 'to' ) ( (lv_other_45_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_value_46_0= 'value' ) ) otherlv_47= 'of' ( (lv_concept_48_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_49= 'over' ) ( (lv_other_50_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_51_0= 'occurrence' ) ) otherlv_52= 'of' ( (lv_concept_53_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_54= '(' ( (lv_declaration_55_0= ruleExpression ) ) otherlv_56= ')' ) )
            {
            // InternalKim.g:7778:2: ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_27_0= 'magnitude' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_30_0= 'type' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_33_0= 'observability' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_36_0= 'proportion' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_39= 'in' ) ( (lv_other_40_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_41_0= 'ratio' ) ) otherlv_42= 'of' ( (lv_concept_43_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_44= 'to' ) ( (lv_other_45_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_value_46_0= 'value' ) ) otherlv_47= 'of' ( (lv_concept_48_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_49= 'over' ) ( (lv_other_50_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_51_0= 'occurrence' ) ) otherlv_52= 'of' ( (lv_concept_53_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_54= '(' ( (lv_declaration_55_0= ruleExpression ) ) otherlv_56= ')' ) )
            int alt180=15;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
            case RULE_CAMELCASE_ID:
            case RULE_LOWERCASE_DASHID:
            case 112:
            case 113:
            case 121:
            case 122:
                {
                alt180=1;
                }
                break;
            case 124:
                {
                alt180=2;
                }
                break;
            case 125:
                {
                alt180=3;
                }
                break;
            case 126:
                {
                alt180=4;
                }
                break;
            case 127:
                {
                alt180=5;
                }
                break;
            case 128:
                {
                alt180=6;
                }
                break;
            case 129:
                {
                alt180=7;
                }
                break;
            case 130:
                {
                alt180=8;
                }
                break;
            case 131:
                {
                alt180=9;
                }
                break;
            case 132:
                {
                alt180=10;
                }
                break;
            case 133:
                {
                alt180=11;
                }
                break;
            case 134:
                {
                alt180=12;
                }
                break;
            case 135:
                {
                alt180=13;
                }
                break;
            case 136:
                {
                alt180=14;
                }
                break;
            case 36:
                {
                alt180=15;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 180, 0, input);

                throw nvae;
            }

            switch (alt180) {
                case 1 :
                    // InternalKim.g:7779:3: ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    {
                    // InternalKim.g:7779:3: ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    // InternalKim.g:7780:4: ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )?
                    {
                    // InternalKim.g:7780:4: ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )?
                    int alt172=2;
                    int LA172_0 = input.LA(1);

                    if ( ((LA172_0>=121 && LA172_0<=122)) ) {
                        alt172=1;
                    }
                    switch (alt172) {
                        case 1 :
                            // InternalKim.g:7781:5: ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) )
                            {
                            // InternalKim.g:7781:5: ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) )
                            // InternalKim.g:7782:6: (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' )
                            {
                            // InternalKim.g:7782:6: (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' )
                            int alt171=2;
                            int LA171_0 = input.LA(1);

                            if ( (LA171_0==121) ) {
                                alt171=1;
                            }
                            else if ( (LA171_0==122) ) {
                                alt171=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 171, 0, input);

                                throw nvae;
                            }
                            switch (alt171) {
                                case 1 :
                                    // InternalKim.g:7783:7: lv_negated_0_1= 'not'
                                    {
                                    lv_negated_0_1=(Token)match(input,121,FOLLOW_108); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(lv_negated_0_1, grammarAccess.getConceptAccess().getNegatedNotKeyword_0_0_0_0());
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElement(grammarAccess.getConceptRule());
                                      							}
                                      							setWithLastConsumed(current, "negated", true, null);
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7794:7: lv_negated_0_2= 'no'
                                    {
                                    lv_negated_0_2=(Token)match(input,122,FOLLOW_108); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(lv_negated_0_2, grammarAccess.getConceptAccess().getNegatedNoKeyword_0_0_0_1());
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElement(grammarAccess.getConceptRule());
                                      							}
                                      							setWithLastConsumed(current, "negated", true, null);
                                      						
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:7807:4: ( (lv_name_1_0= ruleConceptReference ) )
                    // InternalKim.g:7808:5: (lv_name_1_0= ruleConceptReference )
                    {
                    // InternalKim.g:7808:5: (lv_name_1_0= ruleConceptReference )
                    // InternalKim.g:7809:6: lv_name_1_0= ruleConceptReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getNameConceptReferenceParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_109);
                    lv_name_1_0=ruleConceptReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.integratedmodelling.kim.Kim.ConceptReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:7826:4: (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )?
                    int alt176=2;
                    int LA176_0 = input.LA(1);

                    if ( (LA176_0==123) ) {
                        alt176=1;
                    }
                    switch (alt176) {
                        case 1 :
                            // InternalKim.g:7827:5: otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) )
                            {
                            otherlv_2=(Token)match(input,123,FOLLOW_10); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getConceptAccess().getIdentifiedKeyword_0_2_0());
                              				
                            }
                            otherlv_3=(Token)match(input,23,FOLLOW_110); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getConceptAccess().getAsKeyword_0_2_1());
                              				
                            }
                            // InternalKim.g:7835:5: ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) )
                            int alt174=2;
                            int LA174_0 = input.LA(1);

                            if ( (LA174_0==RULE_STRING||LA174_0==RULE_ID) ) {
                                alt174=1;
                            }
                            else if ( (LA174_0==RULE_INT) ) {
                                alt174=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 174, 0, input);

                                throw nvae;
                            }
                            switch (alt174) {
                                case 1 :
                                    // InternalKim.g:7836:6: ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) )
                                    {
                                    // InternalKim.g:7836:6: ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) )
                                    // InternalKim.g:7837:7: ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) )
                                    {
                                    // InternalKim.g:7837:7: ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) )
                                    // InternalKim.g:7838:8: (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING )
                                    {
                                    // InternalKim.g:7838:8: (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING )
                                    int alt173=2;
                                    int LA173_0 = input.LA(1);

                                    if ( (LA173_0==RULE_ID) ) {
                                        alt173=1;
                                    }
                                    else if ( (LA173_0==RULE_STRING) ) {
                                        alt173=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 173, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt173) {
                                        case 1 :
                                            // InternalKim.g:7839:9: lv_stringIdentifier_4_1= RULE_ID
                                            {
                                            lv_stringIdentifier_4_1=(Token)match(input,RULE_ID,FOLLOW_103); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_1, grammarAccess.getConceptAccess().getStringIdentifierIDTerminalRuleCall_0_2_2_0_0_0());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_1,
                                              										"org.eclipse.xtext.common.Terminals.ID");
                                              								
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalKim.g:7854:9: lv_stringIdentifier_4_2= RULE_STRING
                                            {
                                            lv_stringIdentifier_4_2=(Token)match(input,RULE_STRING,FOLLOW_103); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_2, grammarAccess.getConceptAccess().getStringIdentifierSTRINGTerminalRuleCall_0_2_2_0_0_1());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_2,
                                              										"org.eclipse.xtext.common.Terminals.STRING");
                                              								
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7872:6: ( (lv_intIdentifier_5_0= RULE_INT ) )
                                    {
                                    // InternalKim.g:7872:6: ( (lv_intIdentifier_5_0= RULE_INT ) )
                                    // InternalKim.g:7873:7: (lv_intIdentifier_5_0= RULE_INT )
                                    {
                                    // InternalKim.g:7873:7: (lv_intIdentifier_5_0= RULE_INT )
                                    // InternalKim.g:7874:8: lv_intIdentifier_5_0= RULE_INT
                                    {
                                    lv_intIdentifier_5_0=(Token)match(input,RULE_INT,FOLLOW_103); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_intIdentifier_5_0, grammarAccess.getConceptAccess().getIntIdentifierINTTerminalRuleCall_0_2_2_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"intIdentifier",
                                      									lv_intIdentifier_5_0,
                                      									"org.eclipse.xtext.common.Terminals.INT");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_6=(Token)match(input,97,FOLLOW_111); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getConceptAccess().getByKeyword_0_2_3());
                              				
                            }
                            // InternalKim.g:7895:5: ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) )
                            // InternalKim.g:7896:6: ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) )
                            {
                            // InternalKim.g:7896:6: ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) )
                            // InternalKim.g:7897:7: (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH )
                            {
                            // InternalKim.g:7897:7: (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH )
                            int alt175=2;
                            int LA175_0 = input.LA(1);

                            if ( (LA175_0==RULE_UPPERCASE_ID) ) {
                                alt175=1;
                            }
                            else if ( (LA175_0==RULE_UPPERCASE_PATH) ) {
                                alt175=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 175, 0, input);

                                throw nvae;
                            }
                            switch (alt175) {
                                case 1 :
                                    // InternalKim.g:7898:8: lv_authority_7_1= RULE_UPPERCASE_ID
                                    {
                                    lv_authority_7_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_authority_7_1, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_0_2_4_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"authority",
                                      									lv_authority_7_1,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7913:8: lv_authority_7_2= RULE_UPPERCASE_PATH
                                    {
                                    lv_authority_7_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_authority_7_2, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_0_2_4_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"authority",
                                      									lv_authority_7_2,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:7933:3: ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7933:3: ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7934:4: ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7934:4: ( (lv_presence_8_0= 'presence' ) )
                    // InternalKim.g:7935:5: (lv_presence_8_0= 'presence' )
                    {
                    // InternalKim.g:7935:5: (lv_presence_8_0= 'presence' )
                    // InternalKim.g:7936:6: lv_presence_8_0= 'presence'
                    {
                    lv_presence_8_0=(Token)match(input,124,FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_presence_8_0, grammarAccess.getConceptAccess().getPresencePresenceKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "presence", true, "presence");
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,103,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getConceptAccess().getOfKeyword_1_1());
                      			
                    }
                    // InternalKim.g:7952:4: ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7953:5: (lv_concept_10_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7953:5: (lv_concept_10_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7954:6: lv_concept_10_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_10_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_10_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:7973:3: ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7973:3: ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7974:4: ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7974:4: ( (lv_count_11_0= 'count' ) )
                    // InternalKim.g:7975:5: (lv_count_11_0= 'count' )
                    {
                    // InternalKim.g:7975:5: (lv_count_11_0= 'count' )
                    // InternalKim.g:7976:6: lv_count_11_0= 'count'
                    {
                    lv_count_11_0=(Token)match(input,125,FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_count_11_0, grammarAccess.getConceptAccess().getCountCountKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "count", true, "count");
                      					
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,103,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getConceptAccess().getOfKeyword_2_1());
                      			
                    }
                    // InternalKim.g:7992:4: ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7993:5: (lv_concept_13_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7993:5: (lv_concept_13_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7994:6: lv_concept_13_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_13_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:8013:3: ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:8013:3: ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:8014:4: ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:8014:4: ( (lv_distance_14_0= 'distance' ) )
                    // InternalKim.g:8015:5: (lv_distance_14_0= 'distance' )
                    {
                    // InternalKim.g:8015:5: (lv_distance_14_0= 'distance' )
                    // InternalKim.g:8016:6: lv_distance_14_0= 'distance'
                    {
                    lv_distance_14_0=(Token)match(input,126,FOLLOW_113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_distance_14_0, grammarAccess.getConceptAccess().getDistanceDistanceKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "distance", true, "distance");
                      					
                    }

                    }


                    }

                    // InternalKim.g:8028:4: (otherlv_15= 'to' | otherlv_16= 'from' )
                    int alt177=2;
                    int LA177_0 = input.LA(1);

                    if ( (LA177_0==34) ) {
                        alt177=1;
                    }
                    else if ( (LA177_0==85) ) {
                        alt177=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 177, 0, input);

                        throw nvae;
                    }
                    switch (alt177) {
                        case 1 :
                            // InternalKim.g:8029:5: otherlv_15= 'to'
                            {
                            otherlv_15=(Token)match(input,34,FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_15, grammarAccess.getConceptAccess().getToKeyword_3_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:8034:5: otherlv_16= 'from'
                            {
                            otherlv_16=(Token)match(input,85,FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_16, grammarAccess.getConceptAccess().getFromKeyword_3_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:8039:4: ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:8040:5: (lv_concept_17_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:8040:5: (lv_concept_17_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:8041:6: lv_concept_17_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_3_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_17_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_17_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:8060:3: ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:8060:3: ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:8061:4: ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:8061:4: ( (lv_probability_18_0= 'probability' ) )
                    // InternalKim.g:8062:5: (lv_probability_18_0= 'probability' )
                    {
                    // InternalKim.g:8062:5: (lv_probability_18_0= 'probability' )
                    // InternalKim.g:8063:6: lv_probability_18_0= 'probability'
                    {
                    lv_probability_18_0=(Token)match(input,127,FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_probability_18_0, grammarAccess.getConceptAccess().getProbabilityProbabilityKeyword_4_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "probability", true, "probability");
                      					
                    }

                    }


                    }

                    otherlv_19=(Token)match(input,103,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getConceptAccess().getOfKeyword_4_1());
                      			
                    }
                    // InternalKim.g:8079:4: ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:8080:5: (lv_concept_20_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:8080:5: (lv_concept_20_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:8081:6: lv_concept_20_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_20_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_20_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:8100:3: ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:8100:3: ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:8101:4: ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:8101:4: ( (lv_assessment_21_0= 'assessment' ) )
                    // InternalKim.g:8102:5: (lv_assessment_21_0= 'assessment' )
                    {
                    // InternalKim.g:8102:5: (lv_assessment_21_0= 'assessment' )
                    // InternalKim.g:8103:6: lv_assessment_21_0= 'assessment'
                    {
                    lv_assessment_21_0=(Token)match(input,128,FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_assessment_21_0, grammarAccess.getConceptAccess().getAssessmentAssessmentKeyword_5_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "assessment", true, "assessment");
                      					
                    }

                    }


                    }

                    otherlv_22=(Token)match(input,103,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getConceptAccess().getOfKeyword_5_1());
                      			
                    }
                    // InternalKim.g:8119:4: ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:8120:5: (lv_concept_23_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:8120:5: (lv_concept_23_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:8121:6: lv_concept_23_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_23_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_23_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:8140:3: ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:8140:3: ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:8141:4: ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:8141:4: ( (lv_uncertainty_24_0= 'uncertainty' ) )
                    // InternalKim.g:8142:5: (lv_uncertainty_24_0= 'uncertainty' )
                    {
                    // InternalKim.g:8142:5: (lv_uncertainty_24_0= 'uncertainty' )
                    // InternalKim.g:8143:6: lv_uncertainty_24_0= 'uncertainty'
                    {
                    lv_uncertainty_24_0=(Token)match(input,129,FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_uncertainty_24_0, grammarAccess.getConceptAccess().getUncertaintyUncertaintyKeyword_6_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "uncertainty", true, "uncertainty");
                      					
                    }

                    }


                    }

                    otherlv_25=(Token)match(input,103,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_25, grammarAccess.getConceptAccess().getOfKeyword_6_1());
                      			
                    }
                    // InternalKim.g:8159:4: ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:8160:5: (lv_concept_26_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:8160:5: (lv_concept_26_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:8161:6: lv_concept_26_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_26_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_26_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:8180:3: ( ( (lv_magnitude_27_0= 'magnitude' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:8180:3: ( ( (lv_magnitude_27_0= 'magnitude' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:8181:4: ( (lv_magnitude_27_0= 'magnitude' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:8181:4: ( (lv_magnitude_27_0= 'magnitude' ) )
                    // InternalKim.g:8182:5: (lv_magnitude_27_0= 'magnitude' )
                    {
                    // InternalKim.g:8182:5: (lv_magnitude_27_0= 'magnitude' )
                    // InternalKim.g:8183:6: lv_magnitude_27_0= 'magnitude'
                    {
                    lv_magnitude_27_0=(Token)match(input,130,FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_magnitude_27_0, grammarAccess.getConceptAccess().getMagnitudeMagnitudeKeyword_7_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "magnitude", true, "magnitude");
                      					
                    }

                    }


                    }

                    otherlv_28=(Token)match(input,103,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getConceptAccess().getOfKeyword_7_1());
                      			
                    }
                    // InternalKim.g:8199:4: ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:8200:5: (lv_concept_29_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:8200:5: (lv_concept_29_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:8201:6: lv_concept_29_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_7_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_29_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_29_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:8220:3: ( ( (lv_type_30_0= 'type' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:8220:3: ( ( (lv_type_30_0= 'type' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:8221:4: ( (lv_type_30_0= 'type' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:8221:4: ( (lv_type_30_0= 'type' ) )
                    // InternalKim.g:8222:5: (lv_type_30_0= 'type' )
                    {
                    // InternalKim.g:8222:5: (lv_type_30_0= 'type' )
                    // InternalKim.g:8223:6: lv_type_30_0= 'type'
                    {
                    lv_type_30_0=(Token)match(input,131,FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_type_30_0, grammarAccess.getConceptAccess().getTypeTypeKeyword_8_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "type", true, "type");
                      					
                    }

                    }


                    }

                    otherlv_31=(Token)match(input,103,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getConceptAccess().getOfKeyword_8_1());
                      			
                    }
                    // InternalKim.g:8239:4: ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:8240:5: (lv_concept_32_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:8240:5: (lv_concept_32_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:8241:6: lv_concept_32_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_8_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_32_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_32_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:8260:3: ( ( (lv_observability_33_0= 'observability' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:8260:3: ( ( (lv_observability_33_0= 'observability' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:8261:4: ( (lv_observability_33_0= 'observability' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:8261:4: ( (lv_observability_33_0= 'observability' ) )
                    // InternalKim.g:8262:5: (lv_observability_33_0= 'observability' )
                    {
                    // InternalKim.g:8262:5: (lv_observability_33_0= 'observability' )
                    // InternalKim.g:8263:6: lv_observability_33_0= 'observability'
                    {
                    lv_observability_33_0=(Token)match(input,132,FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_observability_33_0, grammarAccess.getConceptAccess().getObservabilityObservabilityKeyword_9_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "observability", true, "observability");
                      					
                    }

                    }


                    }

                    otherlv_34=(Token)match(input,103,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_34, grammarAccess.getConceptAccess().getOfKeyword_9_1());
                      			
                    }
                    // InternalKim.g:8279:4: ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:8280:5: (lv_concept_35_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:8280:5: (lv_concept_35_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:8281:6: lv_concept_35_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_9_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_35_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_35_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalKim.g:8300:3: ( ( (lv_proportion_36_0= 'proportion' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_39= 'in' ) ( (lv_other_40_0= ruleSimpleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:8300:3: ( ( (lv_proportion_36_0= 'proportion' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_39= 'in' ) ( (lv_other_40_0= ruleSimpleConceptDeclaration ) ) )? )
                    // InternalKim.g:8301:4: ( (lv_proportion_36_0= 'proportion' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_39= 'in' ) ( (lv_other_40_0= ruleSimpleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:8301:4: ( (lv_proportion_36_0= 'proportion' ) )
                    // InternalKim.g:8302:5: (lv_proportion_36_0= 'proportion' )
                    {
                    // InternalKim.g:8302:5: (lv_proportion_36_0= 'proportion' )
                    // InternalKim.g:8303:6: lv_proportion_36_0= 'proportion'
                    {
                    lv_proportion_36_0=(Token)match(input,133,FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_proportion_36_0, grammarAccess.getConceptAccess().getProportionProportionKeyword_10_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "proportion", true, "proportion");
                      					
                    }

                    }


                    }

                    otherlv_37=(Token)match(input,103,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_37, grammarAccess.getConceptAccess().getOfKeyword_10_1());
                      			
                    }
                    // InternalKim.g:8319:4: ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:8320:5: (lv_concept_38_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:8320:5: (lv_concept_38_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:8321:6: lv_concept_38_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_10_2_0());
                      					
                    }
                    pushFollow(FOLLOW_59);
                    lv_concept_38_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_38_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:8338:4: ( ( ( 'in' )=>otherlv_39= 'in' ) ( (lv_other_40_0= ruleSimpleConceptDeclaration ) ) )?
                    int alt178=2;
                    int LA178_0 = input.LA(1);

                    if ( (LA178_0==48) ) {
                        int LA178_1 = input.LA(2);

                        if ( (synpred314_InternalKim()) ) {
                            alt178=1;
                        }
                    }
                    switch (alt178) {
                        case 1 :
                            // InternalKim.g:8339:5: ( ( 'in' )=>otherlv_39= 'in' ) ( (lv_other_40_0= ruleSimpleConceptDeclaration ) )
                            {
                            // InternalKim.g:8339:5: ( ( 'in' )=>otherlv_39= 'in' )
                            // InternalKim.g:8340:6: ( 'in' )=>otherlv_39= 'in'
                            {
                            otherlv_39=(Token)match(input,48,FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_39, grammarAccess.getConceptAccess().getInKeyword_10_3_0());
                              					
                            }

                            }

                            // InternalKim.g:8346:5: ( (lv_other_40_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:8347:6: (lv_other_40_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:8347:6: (lv_other_40_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:8348:7: lv_other_40_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_10_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_other_40_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"other",
                              								lv_other_40_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalKim.g:8368:3: ( ( (lv_ratio_41_0= 'ratio' ) ) otherlv_42= 'of' ( (lv_concept_43_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_44= 'to' ) ( (lv_other_45_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:8368:3: ( ( (lv_ratio_41_0= 'ratio' ) ) otherlv_42= 'of' ( (lv_concept_43_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_44= 'to' ) ( (lv_other_45_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:8369:4: ( (lv_ratio_41_0= 'ratio' ) ) otherlv_42= 'of' ( (lv_concept_43_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_44= 'to' ) ( (lv_other_45_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:8369:4: ( (lv_ratio_41_0= 'ratio' ) )
                    // InternalKim.g:8370:5: (lv_ratio_41_0= 'ratio' )
                    {
                    // InternalKim.g:8370:5: (lv_ratio_41_0= 'ratio' )
                    // InternalKim.g:8371:6: lv_ratio_41_0= 'ratio'
                    {
                    lv_ratio_41_0=(Token)match(input,134,FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_ratio_41_0, grammarAccess.getConceptAccess().getRatioRatioKeyword_11_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "ratio", true, "ratio");
                      					
                    }

                    }


                    }

                    otherlv_42=(Token)match(input,103,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getConceptAccess().getOfKeyword_11_1());
                      			
                    }
                    // InternalKim.g:8387:4: ( (lv_concept_43_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:8388:5: (lv_concept_43_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:8388:5: (lv_concept_43_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:8389:6: lv_concept_43_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_11_2_0());
                      					
                    }
                    pushFollow(FOLLOW_23);
                    lv_concept_43_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_43_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:8406:4: ( ( 'to' )=>otherlv_44= 'to' )
                    // InternalKim.g:8407:5: ( 'to' )=>otherlv_44= 'to'
                    {
                    otherlv_44=(Token)match(input,34,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_44, grammarAccess.getConceptAccess().getToKeyword_11_3());
                      				
                    }

                    }

                    // InternalKim.g:8413:4: ( (lv_other_45_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:8414:5: (lv_other_45_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:8414:5: (lv_other_45_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:8415:6: lv_other_45_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_11_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_other_45_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"other",
                      							lv_other_45_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalKim.g:8434:3: ( ( (lv_value_46_0= 'value' ) ) otherlv_47= 'of' ( (lv_concept_48_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_49= 'over' ) ( (lv_other_50_0= ruleSimpleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:8434:3: ( ( (lv_value_46_0= 'value' ) ) otherlv_47= 'of' ( (lv_concept_48_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_49= 'over' ) ( (lv_other_50_0= ruleSimpleConceptDeclaration ) ) )? )
                    // InternalKim.g:8435:4: ( (lv_value_46_0= 'value' ) ) otherlv_47= 'of' ( (lv_concept_48_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_49= 'over' ) ( (lv_other_50_0= ruleSimpleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:8435:4: ( (lv_value_46_0= 'value' ) )
                    // InternalKim.g:8436:5: (lv_value_46_0= 'value' )
                    {
                    // InternalKim.g:8436:5: (lv_value_46_0= 'value' )
                    // InternalKim.g:8437:6: lv_value_46_0= 'value'
                    {
                    lv_value_46_0=(Token)match(input,135,FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_46_0, grammarAccess.getConceptAccess().getValueValueKeyword_12_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "value", true, "value");
                      					
                    }

                    }


                    }

                    otherlv_47=(Token)match(input,103,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_47, grammarAccess.getConceptAccess().getOfKeyword_12_1());
                      			
                    }
                    // InternalKim.g:8453:4: ( (lv_concept_48_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:8454:5: (lv_concept_48_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:8454:5: (lv_concept_48_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:8455:6: lv_concept_48_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_12_2_0());
                      					
                    }
                    pushFollow(FOLLOW_114);
                    lv_concept_48_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_48_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:8472:4: ( ( ( 'over' )=>otherlv_49= 'over' ) ( (lv_other_50_0= ruleSimpleConceptDeclaration ) ) )?
                    int alt179=2;
                    int LA179_0 = input.LA(1);

                    if ( (LA179_0==55) ) {
                        int LA179_1 = input.LA(2);

                        if ( (synpred319_InternalKim()) ) {
                            alt179=1;
                        }
                    }
                    switch (alt179) {
                        case 1 :
                            // InternalKim.g:8473:5: ( ( 'over' )=>otherlv_49= 'over' ) ( (lv_other_50_0= ruleSimpleConceptDeclaration ) )
                            {
                            // InternalKim.g:8473:5: ( ( 'over' )=>otherlv_49= 'over' )
                            // InternalKim.g:8474:6: ( 'over' )=>otherlv_49= 'over'
                            {
                            otherlv_49=(Token)match(input,55,FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_49, grammarAccess.getConceptAccess().getOverKeyword_12_3_0());
                              					
                            }

                            }

                            // InternalKim.g:8480:5: ( (lv_other_50_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:8481:6: (lv_other_50_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:8481:6: (lv_other_50_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:8482:7: lv_other_50_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_12_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_other_50_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"other",
                              								lv_other_50_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 14 :
                    // InternalKim.g:8502:3: ( ( (lv_occurrence_51_0= 'occurrence' ) ) otherlv_52= 'of' ( (lv_concept_53_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:8502:3: ( ( (lv_occurrence_51_0= 'occurrence' ) ) otherlv_52= 'of' ( (lv_concept_53_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:8503:4: ( (lv_occurrence_51_0= 'occurrence' ) ) otherlv_52= 'of' ( (lv_concept_53_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:8503:4: ( (lv_occurrence_51_0= 'occurrence' ) )
                    // InternalKim.g:8504:5: (lv_occurrence_51_0= 'occurrence' )
                    {
                    // InternalKim.g:8504:5: (lv_occurrence_51_0= 'occurrence' )
                    // InternalKim.g:8505:6: lv_occurrence_51_0= 'occurrence'
                    {
                    lv_occurrence_51_0=(Token)match(input,136,FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_occurrence_51_0, grammarAccess.getConceptAccess().getOccurrenceOccurrenceKeyword_13_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "occurrence", true, "occurrence");
                      					
                    }

                    }


                    }

                    otherlv_52=(Token)match(input,103,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_52, grammarAccess.getConceptAccess().getOfKeyword_13_1());
                      			
                    }
                    // InternalKim.g:8521:4: ( (lv_concept_53_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:8522:5: (lv_concept_53_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:8522:5: (lv_concept_53_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:8523:6: lv_concept_53_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_13_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_53_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_53_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 15 :
                    // InternalKim.g:8542:3: (otherlv_54= '(' ( (lv_declaration_55_0= ruleExpression ) ) otherlv_56= ')' )
                    {
                    // InternalKim.g:8542:3: (otherlv_54= '(' ( (lv_declaration_55_0= ruleExpression ) ) otherlv_56= ')' )
                    // InternalKim.g:8543:4: otherlv_54= '(' ( (lv_declaration_55_0= ruleExpression ) ) otherlv_56= ')'
                    {
                    otherlv_54=(Token)match(input,36,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_54, grammarAccess.getConceptAccess().getLeftParenthesisKeyword_14_0());
                      			
                    }
                    // InternalKim.g:8547:4: ( (lv_declaration_55_0= ruleExpression ) )
                    // InternalKim.g:8548:5: (lv_declaration_55_0= ruleExpression )
                    {
                    // InternalKim.g:8548:5: (lv_declaration_55_0= ruleExpression )
                    // InternalKim.g:8549:6: lv_declaration_55_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getDeclarationExpressionParserRuleCall_14_1_0());
                      					
                    }
                    pushFollow(FOLLOW_95);
                    lv_declaration_55_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"declaration",
                      							lv_declaration_55_0,
                      							"org.integratedmodelling.kim.Kim.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_56=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_56, grammarAccess.getConceptAccess().getRightParenthesisKeyword_14_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConcept"


    // $ANTLR start "entryRuleExpression"
    // InternalKim.g:8575:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalKim.g:8575:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalKim.g:8576:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalKim.g:8582:1: ruleExpression returns [EObject current=null] : this_Term_0= ruleTerm ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Term_0 = null;



        	enterRule();

        try {
            // InternalKim.g:8588:2: (this_Term_0= ruleTerm )
            // InternalKim.g:8589:2: this_Term_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getExpressionAccess().getTermParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Term_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Term_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleTerm"
    // InternalKim.g:8603:1: entryRuleTerm returns [EObject current=null] : iv_ruleTerm= ruleTerm EOF ;
    public final EObject entryRuleTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTerm = null;


        try {
            // InternalKim.g:8603:45: (iv_ruleTerm= ruleTerm EOF )
            // InternalKim.g:8604:2: iv_ruleTerm= ruleTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTerm=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTerm"


    // $ANTLR start "ruleTerm"
    // InternalKim.g:8610:1: ruleTerm returns [EObject current=null] : (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* ) ;
    public final EObject ruleTerm() throws RecognitionException {
        EObject current = null;

        Token lv_operators_1_0=null;
        EObject this_Factor_0 = null;

        EObject lv_operands_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:8616:2: ( (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* ) )
            // InternalKim.g:8617:2: (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* )
            {
            // InternalKim.g:8617:2: (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* )
            // InternalKim.g:8618:3: this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTermAccess().getFactorParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_115);
            this_Factor_0=ruleFactor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Factor_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKim.g:8629:3: ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )*
            loop181:
            do {
                int alt181=2;
                int LA181_0 = input.LA(1);

                if ( (LA181_0==137) ) {
                    int LA181_2 = input.LA(2);

                    if ( (synpred322_InternalKim()) ) {
                        alt181=1;
                    }


                }


                switch (alt181) {
            	case 1 :
            	    // InternalKim.g:8630:4: ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) )
            	    {
            	    // InternalKim.g:8630:4: ( (lv_operators_1_0= 'or' ) )
            	    // InternalKim.g:8631:5: (lv_operators_1_0= 'or' )
            	    {
            	    // InternalKim.g:8631:5: (lv_operators_1_0= 'or' )
            	    // InternalKim.g:8632:6: lv_operators_1_0= 'or'
            	    {
            	    lv_operators_1_0=(Token)match(input,137,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_operators_1_0, grammarAccess.getTermAccess().getOperatorsOrKeyword_1_0_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getTermRule());
            	      						}
            	      						addWithLastConsumed(current, "operators", lv_operators_1_0, "or");
            	      					
            	    }

            	    }


            	    }

            	    // InternalKim.g:8644:4: ( (lv_operands_2_0= ruleFactor ) )
            	    // InternalKim.g:8645:5: (lv_operands_2_0= ruleFactor )
            	    {
            	    // InternalKim.g:8645:5: (lv_operands_2_0= ruleFactor )
            	    // InternalKim.g:8646:6: lv_operands_2_0= ruleFactor
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTermAccess().getOperandsFactorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_115);
            	    lv_operands_2_0=ruleFactor();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operands",
            	      							lv_operands_2_0,
            	      							"org.integratedmodelling.kim.Kim.Factor");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop181;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTerm"


    // $ANTLR start "entryRuleFactor"
    // InternalKim.g:8668:1: entryRuleFactor returns [EObject current=null] : iv_ruleFactor= ruleFactor EOF ;
    public final EObject entryRuleFactor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFactor = null;


        try {
            // InternalKim.g:8668:47: (iv_ruleFactor= ruleFactor EOF )
            // InternalKim.g:8669:2: iv_ruleFactor= ruleFactor EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFactorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFactor=ruleFactor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFactor; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFactor"


    // $ANTLR start "ruleFactor"
    // InternalKim.g:8675:1: ruleFactor returns [EObject current=null] : (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* ) ;
    public final EObject ruleFactor() throws RecognitionException {
        EObject current = null;

        Token lv_operators_1_1=null;
        Token lv_operators_1_2=null;
        EObject this_ConceptDeclaration_0 = null;

        EObject lv_operands_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:8681:2: ( (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* ) )
            // InternalKim.g:8682:2: (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* )
            {
            // InternalKim.g:8682:2: (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* )
            // InternalKim.g:8683:3: this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFactorAccess().getConceptDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_116);
            this_ConceptDeclaration_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ConceptDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKim.g:8694:3: ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )*
            loop183:
            do {
                int alt183=2;
                int LA183_0 = input.LA(1);

                if ( (LA183_0==138) ) {
                    int LA183_2 = input.LA(2);

                    if ( (synpred324_InternalKim()) ) {
                        alt183=1;
                    }


                }
                else if ( (LA183_0==139) ) {
                    int LA183_3 = input.LA(2);

                    if ( (synpred324_InternalKim()) ) {
                        alt183=1;
                    }


                }


                switch (alt183) {
            	case 1 :
            	    // InternalKim.g:8695:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) )
            	    {
            	    // InternalKim.g:8695:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) )
            	    // InternalKim.g:8696:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
            	    {
            	    // InternalKim.g:8696:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
            	    // InternalKim.g:8697:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
            	    {
            	    // InternalKim.g:8697:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
            	    int alt182=2;
            	    int LA182_0 = input.LA(1);

            	    if ( (LA182_0==138) ) {
            	        alt182=1;
            	    }
            	    else if ( (LA182_0==139) ) {
            	        alt182=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 182, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt182) {
            	        case 1 :
            	            // InternalKim.g:8698:7: lv_operators_1_1= 'and'
            	            {
            	            lv_operators_1_1=(Token)match(input,138,FOLLOW_21); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operators_1_1, grammarAccess.getFactorAccess().getOperatorsAndKeyword_1_0_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getFactorRule());
            	              							}
            	              							addWithLastConsumed(current, "operators", lv_operators_1_1, null);
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:8709:7: lv_operators_1_2= 'follows'
            	            {
            	            lv_operators_1_2=(Token)match(input,139,FOLLOW_21); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operators_1_2, grammarAccess.getFactorAccess().getOperatorsFollowsKeyword_1_0_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getFactorRule());
            	              							}
            	              							addWithLastConsumed(current, "operators", lv_operators_1_2, null);
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalKim.g:8722:4: ( (lv_operands_2_0= ruleTerm ) )
            	    // InternalKim.g:8723:5: (lv_operands_2_0= ruleTerm )
            	    {
            	    // InternalKim.g:8723:5: (lv_operands_2_0= ruleTerm )
            	    // InternalKim.g:8724:6: lv_operands_2_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFactorAccess().getOperandsTermParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_116);
            	    lv_operands_2_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFactorRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operands",
            	      							lv_operands_2_0,
            	      							"org.integratedmodelling.kim.Kim.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop183;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFactor"


    // $ANTLR start "entryRuleSimpleConceptDeclaration"
    // InternalKim.g:8746:1: entryRuleSimpleConceptDeclaration returns [EObject current=null] : iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF ;
    public final EObject entryRuleSimpleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleConceptDeclaration = null;


        try {
            // InternalKim.g:8746:65: (iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF )
            // InternalKim.g:8747:2: iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleConceptDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleConceptDeclaration=ruleSimpleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleConceptDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleConceptDeclaration"


    // $ANTLR start "ruleSimpleConceptDeclaration"
    // InternalKim.g:8753:1: ruleSimpleConceptDeclaration returns [EObject current=null] : ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ) ;
    public final EObject ruleSimpleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        EObject lv_main_1_0 = null;



        	enterRule();

        try {
            // InternalKim.g:8759:2: ( ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ) )
            // InternalKim.g:8760:2: ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ )
            {
            // InternalKim.g:8760:2: ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ )
            // InternalKim.g:8761:3: ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+
            {
            // InternalKim.g:8761:3: ( (lv_name_0_0= RULE_STRING ) )?
            int alt184=2;
            int LA184_0 = input.LA(1);

            if ( (LA184_0==RULE_STRING) ) {
                alt184=1;
            }
            switch (alt184) {
                case 1 :
                    // InternalKim.g:8762:4: (lv_name_0_0= RULE_STRING )
                    {
                    // InternalKim.g:8762:4: (lv_name_0_0= RULE_STRING )
                    // InternalKim.g:8763:5: lv_name_0_0= RULE_STRING
                    {
                    lv_name_0_0=(Token)match(input,RULE_STRING,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_0, grammarAccess.getSimpleConceptDeclarationAccess().getNameSTRINGTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSimpleConceptDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:8779:3: ( (lv_main_1_0= ruleConcept ) )+
            int cnt185=0;
            loop185:
            do {
                int alt185=2;
                alt185 = dfa185.predict(input);
                switch (alt185) {
            	case 1 :
            	    // InternalKim.g:8780:4: (lv_main_1_0= ruleConcept )
            	    {
            	    // InternalKim.g:8780:4: (lv_main_1_0= ruleConcept )
            	    // InternalKim.g:8781:5: lv_main_1_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSimpleConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_117);
            	    lv_main_1_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSimpleConceptDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"main",
            	      						lv_main_1_0,
            	      						"org.integratedmodelling.kim.Kim.Concept");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt185 >= 1 ) break loop185;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(185, input);
                        throw eee;
                }
                cnt185++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleConceptDeclaration"


    // $ANTLR start "entryRuleUpperOntologyDefinition"
    // InternalKim.g:8802:1: entryRuleUpperOntologyDefinition returns [EObject current=null] : iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF ;
    public final EObject entryRuleUpperOntologyDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUpperOntologyDefinition = null;


        try {
            // InternalKim.g:8802:64: (iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF )
            // InternalKim.g:8803:2: iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUpperOntologyDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUpperOntologyDefinition=ruleUpperOntologyDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUpperOntologyDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUpperOntologyDefinition"


    // $ANTLR start "ruleUpperOntologyDefinition"
    // InternalKim.g:8809:1: ruleUpperOntologyDefinition returns [EObject current=null] : (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) ) ;
    public final EObject ruleUpperOntologyDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_agentSpecifier_1_1=null;
        Token lv_agentSpecifier_1_2=null;
        Token lv_agentSpecifier_1_3=null;
        Token lv_concept_2_0=null;
        Token lv_concept_5_0=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        AntlrDatatypeRuleToken lv_propertySpecifiers_3_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_4_0 = null;

        AntlrDatatypeRuleToken lv_coreconcept_7_1 = null;

        AntlrDatatypeRuleToken lv_coreconcept_7_2 = null;

        AntlrDatatypeRuleToken lv_operand_8_0 = null;

        AntlrDatatypeRuleToken lv_property_10_1 = null;

        AntlrDatatypeRuleToken lv_property_10_2 = null;



        	enterRule();

        try {
            // InternalKim.g:8815:2: ( (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) ) )
            // InternalKim.g:8816:2: (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) )
            {
            // InternalKim.g:8816:2: (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) )
            // InternalKim.g:8817:3: otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) )
            {
            otherlv_0=(Token)match(input,70,FOLLOW_118); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getUpperOntologyDefinitionAccess().getModelKeyword_0());
              		
            }
            // InternalKim.g:8821:3: ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) )
            int alt192=2;
            int LA192_0 = input.LA(1);

            if ( (LA192_0==29||(LA192_0>=140 && LA192_0<=142)||(LA192_0>=224 && LA192_0<=225)) ) {
                alt192=1;
            }
            else if ( (LA192_0==62||(LA192_0>=105 && LA192_0<=107)||(LA192_0>=114 && LA192_0<=118)) ) {
                alt192=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 192, 0, input);

                throw nvae;
            }
            switch (alt192) {
                case 1 :
                    // InternalKim.g:8822:4: ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) )
                    {
                    // InternalKim.g:8822:4: ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) )
                    // InternalKim.g:8823:5: ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) )
                    {
                    // InternalKim.g:8823:5: ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? )
                    int alt189=2;
                    int LA189_0 = input.LA(1);

                    if ( ((LA189_0>=140 && LA189_0<=142)) ) {
                        alt189=1;
                    }
                    else if ( (LA189_0==29||(LA189_0>=224 && LA189_0<=225)) ) {
                        alt189=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 189, 0, input);

                        throw nvae;
                    }
                    switch (alt189) {
                        case 1 :
                            // InternalKim.g:8824:6: ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) )
                            {
                            // InternalKim.g:8824:6: ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) )
                            // InternalKim.g:8825:7: ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) )
                            {
                            // InternalKim.g:8825:7: ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) )
                            // InternalKim.g:8826:8: ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) )
                            {
                            // InternalKim.g:8826:8: ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) )
                            // InternalKim.g:8827:9: (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' )
                            {
                            // InternalKim.g:8827:9: (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' )
                            int alt186=3;
                            switch ( input.LA(1) ) {
                            case 140:
                                {
                                alt186=1;
                                }
                                break;
                            case 141:
                                {
                                alt186=2;
                                }
                                break;
                            case 142:
                                {
                                alt186=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 186, 0, input);

                                throw nvae;
                            }

                            switch (alt186) {
                                case 1 :
                                    // InternalKim.g:8828:10: lv_agentSpecifier_1_1= 'deliberative'
                                    {
                                    lv_agentSpecifier_1_1=(Token)match(input,140,FOLLOW_119); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_1, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierDeliberativeKeyword_1_0_0_0_0_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_1, null);
                                      									
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8839:10: lv_agentSpecifier_1_2= 'interactive'
                                    {
                                    lv_agentSpecifier_1_2=(Token)match(input,141,FOLLOW_119); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_2, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierInteractiveKeyword_1_0_0_0_0_0_1());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_2, null);
                                      									
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:8850:10: lv_agentSpecifier_1_3= 'reactive'
                                    {
                                    lv_agentSpecifier_1_3=(Token)match(input,142,FOLLOW_119); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_3, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierReactiveKeyword_1_0_0_0_0_0_2());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_3, null);
                                      									
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalKim.g:8863:7: ( (lv_concept_2_0= 'agent' ) )
                            // InternalKim.g:8864:8: (lv_concept_2_0= 'agent' )
                            {
                            // InternalKim.g:8864:8: (lv_concept_2_0= 'agent' )
                            // InternalKim.g:8865:9: lv_concept_2_0= 'agent'
                            {
                            lv_concept_2_0=(Token)match(input,143,FOLLOW_120); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									newLeafNode(lv_concept_2_0, grammarAccess.getUpperOntologyDefinitionAccess().getConceptAgentKeyword_1_0_0_0_1_0());
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                              									}
                              									setWithLastConsumed(current, "concept", lv_concept_2_0, "agent");
                              								
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:8879:6: ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )?
                            {
                            // InternalKim.g:8879:6: ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )?
                            int alt188=2;
                            int LA188_0 = input.LA(1);

                            if ( ((LA188_0>=224 && LA188_0<=225)) ) {
                                alt188=1;
                            }
                            switch (alt188) {
                                case 1 :
                                    // InternalKim.g:8880:7: ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) )
                                    {
                                    // InternalKim.g:8880:7: ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) )
                                    // InternalKim.g:8881:8: (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE )
                                    {
                                    // InternalKim.g:8881:8: (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE )
                                    // InternalKim.g:8882:9: lv_propertySpecifiers_3_0= rulePROPERTY_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_0_0_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_121);
                                    lv_propertySpecifiers_3_0=rulePROPERTY_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                                      									}
                                      									add(
                                      										current,
                                      										"propertySpecifiers",
                                      										lv_propertySpecifiers_3_0,
                                      										"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }

                                    // InternalKim.g:8899:7: ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )*
                                    loop187:
                                    do {
                                        int alt187=2;
                                        int LA187_0 = input.LA(1);

                                        if ( ((LA187_0>=224 && LA187_0<=225)) ) {
                                            alt187=1;
                                        }


                                        switch (alt187) {
                                    	case 1 :
                                    	    // InternalKim.g:8900:8: (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE )
                                    	    {
                                    	    // InternalKim.g:8900:8: (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE )
                                    	    // InternalKim.g:8901:9: lv_propertySpecifiers_4_0= rulePROPERTY_TYPE
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      									newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_0_0_1_1_0());
                                    	      								
                                    	    }
                                    	    pushFollow(FOLLOW_121);
                                    	    lv_propertySpecifiers_4_0=rulePROPERTY_TYPE();

                                    	    state._fsp--;
                                    	    if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      									if (current==null) {
                                    	      										current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                                    	      									}
                                    	      									add(
                                    	      										current,
                                    	      										"propertySpecifiers",
                                    	      										lv_propertySpecifiers_4_0,
                                    	      										"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
                                    	      									afterParserOrEnumRuleCall();
                                    	      								
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    break loop187;
                                        }
                                    } while (true);

                                    // InternalKim.g:8918:7: ( (lv_concept_5_0= 'relationship' ) )
                                    // InternalKim.g:8919:8: (lv_concept_5_0= 'relationship' )
                                    {
                                    // InternalKim.g:8919:8: (lv_concept_5_0= 'relationship' )
                                    // InternalKim.g:8920:9: lv_concept_5_0= 'relationship'
                                    {
                                    lv_concept_5_0=(Token)match(input,144,FOLLOW_120); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_concept_5_0, grammarAccess.getUpperOntologyDefinitionAccess().getConceptRelationshipKeyword_1_0_0_1_2_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      									}
                                      									setWithLastConsumed(current, "concept", lv_concept_5_0, "relationship");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,29,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getUpperOntologyDefinitionAccess().getUsingKeyword_1_0_1());
                      				
                    }
                    // InternalKim.g:8938:5: ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) )
                    // InternalKim.g:8939:6: ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) )
                    {
                    // InternalKim.g:8939:6: ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) )
                    // InternalKim.g:8940:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )
                    {
                    // InternalKim.g:8940:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )
                    int alt190=2;
                    alt190 = dfa190.predict(input);
                    switch (alt190) {
                        case 1 :
                            // InternalKim.g:8941:8: lv_coreconcept_7_1= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getCoreconceptNamespaceIdParserRuleCall_1_0_2_0_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_coreconcept_7_1=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"coreconcept",
                              									lv_coreconcept_7_1,
                              									"org.integratedmodelling.kim.Kim.NamespaceId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:8957:8: lv_coreconcept_7_2= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getCoreconceptPropertyIdParserRuleCall_1_0_2_0_1());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_coreconcept_7_2=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"coreconcept",
                              									lv_coreconcept_7_2,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:8977:4: ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) )
                    {
                    // InternalKim.g:8977:4: ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) )
                    // InternalKim.g:8978:5: ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) )
                    {
                    // InternalKim.g:8978:5: ( (lv_operand_8_0= ruleOPERATOR_TARGET ) )
                    // InternalKim.g:8979:6: (lv_operand_8_0= ruleOPERATOR_TARGET )
                    {
                    // InternalKim.g:8979:6: (lv_operand_8_0= ruleOPERATOR_TARGET )
                    // InternalKim.g:8980:7: lv_operand_8_0= ruleOPERATOR_TARGET
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getOperandOPERATOR_TARGETParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_120);
                    lv_operand_8_0=ruleOPERATOR_TARGET();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                      							}
                      							set(
                      								current,
                      								"operand",
                      								lv_operand_8_0,
                      								"org.integratedmodelling.kim.Kim.OPERATOR_TARGET");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,29,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getUpperOntologyDefinitionAccess().getUsingKeyword_1_1_1());
                      				
                    }
                    // InternalKim.g:9001:5: ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) )
                    // InternalKim.g:9002:6: ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:9002:6: ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) )
                    // InternalKim.g:9003:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )
                    {
                    // InternalKim.g:9003:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )
                    int alt191=2;
                    alt191 = dfa191.predict(input);
                    switch (alt191) {
                        case 1 :
                            // InternalKim.g:9004:8: lv_property_10_1= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertyPropertyIdParserRuleCall_1_1_2_0_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_property_10_1=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"property",
                              									lv_property_10_1,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:9020:8: lv_property_10_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertyNamespaceIdParserRuleCall_1_1_2_0_1());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_property_10_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"property",
                              									lv_property_10_2,
                              									"org.integratedmodelling.kim.Kim.NamespaceId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUpperOntologyDefinition"


    // $ANTLR start "entryRuleConceptStatement"
    // InternalKim.g:9044:1: entryRuleConceptStatement returns [EObject current=null] : iv_ruleConceptStatement= ruleConceptStatement EOF ;
    public final EObject entryRuleConceptStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptStatement = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:9048:2: (iv_ruleConceptStatement= ruleConceptStatement EOF )
            // InternalKim.g:9049:2: iv_ruleConceptStatement= ruleConceptStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptStatement=ruleConceptStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptStatement"


    // $ANTLR start "ruleConceptStatement"
    // InternalKim.g:9058:1: ruleConceptStatement returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) ) ) ( (lv_concept_8_0= ruleCONCEPT_TYPE ) ) ( (lv_body_9_0= ruleConceptStatementBody ) ) (otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) ) )? ) ;
    public final EObject ruleConceptStatement() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_2_0=null;
        Token lv_deniable_3_0=null;
        Token lv_subjective_4_0=null;
        Token lv_agentSpecifier_5_1=null;
        Token lv_agentSpecifier_5_2=null;
        Token lv_agentSpecifier_5_3=null;
        Token otherlv_10=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_6_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;

        AntlrDatatypeRuleToken lv_concept_8_0 = null;

        EObject lv_body_9_0 = null;

        AntlrDatatypeRuleToken lv_name_11_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:9067:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) ) ) ( (lv_concept_8_0= ruleCONCEPT_TYPE ) ) ( (lv_body_9_0= ruleConceptStatementBody ) ) (otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) ) )? ) )
            // InternalKim.g:9068:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) ) ) ( (lv_concept_8_0= ruleCONCEPT_TYPE ) ) ( (lv_body_9_0= ruleConceptStatementBody ) ) (otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) ) )? )
            {
            // InternalKim.g:9068:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) ) ) ( (lv_concept_8_0= ruleCONCEPT_TYPE ) ) ( (lv_body_9_0= ruleConceptStatementBody ) ) (otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) ) )? )
            // InternalKim.g:9069:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) ) ) ( (lv_concept_8_0= ruleCONCEPT_TYPE ) ) ( (lv_body_9_0= ruleConceptStatementBody ) ) (otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) ) )?
            {
            // InternalKim.g:9069:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop193:
            do {
                int alt193=2;
                int LA193_0 = input.LA(1);

                if ( (LA193_0==RULE_ANNOTATION_ID) ) {
                    alt193=1;
                }


                switch (alt193) {
            	case 1 :
            	    // InternalKim.g:9070:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:9070:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:9071:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_122);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop193;
                }
            } while (true);

            // InternalKim.g:9088:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) ) )
            // InternalKim.g:9089:4: ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) )
            {
            // InternalKim.g:9089:4: ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) )
            // InternalKim.g:9090:5: ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());
            // InternalKim.g:9093:5: ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* )
            // InternalKim.g:9094:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )*
            {
            // InternalKim.g:9094:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )*
            loop197:
            do {
                int alt197=5;
                alt197 = dfa197.predict(input);
                switch (alt197) {
            	case 1 :
            	    // InternalKim.g:9095:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
            	    {
            	    // InternalKim.g:9095:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
            	    // InternalKim.g:9096:5: {...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:9096:113: ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
            	    // InternalKim.g:9097:6: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:9100:9: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
            	    // InternalKim.g:9100:10: {...}? => ( (lv_abstract_2_0= 'abstract' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:9100:19: ( (lv_abstract_2_0= 'abstract' ) )
            	    // InternalKim.g:9100:20: (lv_abstract_2_0= 'abstract' )
            	    {
            	    // InternalKim.g:9100:20: (lv_abstract_2_0= 'abstract' )
            	    // InternalKim.g:9101:10: lv_abstract_2_0= 'abstract'
            	    {
            	    lv_abstract_2_0=(Token)match(input,145,FOLLOW_122); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_abstract_2_0, grammarAccess.getConceptStatementAccess().getAbstractAbstractKeyword_1_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "abstract", true, "abstract");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:9118:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
            	    {
            	    // InternalKim.g:9118:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
            	    // InternalKim.g:9119:5: {...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:9119:113: ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
            	    // InternalKim.g:9120:6: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:9123:9: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
            	    // InternalKim.g:9123:10: {...}? => ( (lv_deniable_3_0= 'deniable' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:9123:19: ( (lv_deniable_3_0= 'deniable' ) )
            	    // InternalKim.g:9123:20: (lv_deniable_3_0= 'deniable' )
            	    {
            	    // InternalKim.g:9123:20: (lv_deniable_3_0= 'deniable' )
            	    // InternalKim.g:9124:10: lv_deniable_3_0= 'deniable'
            	    {
            	    lv_deniable_3_0=(Token)match(input,146,FOLLOW_122); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_deniable_3_0, grammarAccess.getConceptStatementAccess().getDeniableDeniableKeyword_1_1_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "deniable", true, "deniable");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:9141:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
            	    {
            	    // InternalKim.g:9141:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
            	    // InternalKim.g:9142:5: {...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // InternalKim.g:9142:113: ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
            	    // InternalKim.g:9143:6: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2);
            	    // InternalKim.g:9146:9: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
            	    // InternalKim.g:9146:10: {...}? => ( (lv_subjective_4_0= 'subjective' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:9146:19: ( (lv_subjective_4_0= 'subjective' ) )
            	    // InternalKim.g:9146:20: (lv_subjective_4_0= 'subjective' )
            	    {
            	    // InternalKim.g:9146:20: (lv_subjective_4_0= 'subjective' )
            	    // InternalKim.g:9147:10: lv_subjective_4_0= 'subjective'
            	    {
            	    lv_subjective_4_0=(Token)match(input,147,FOLLOW_122); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_subjective_4_0, grammarAccess.getConceptStatementAccess().getSubjectiveSubjectiveKeyword_1_2_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "subjective", true, "subjective");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:9164:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:9164:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) )
            	    // InternalKim.g:9165:5: {...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // InternalKim.g:9165:113: ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) )
            	    // InternalKim.g:9166:6: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3);
            	    // InternalKim.g:9169:9: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) )
            	    // InternalKim.g:9169:10: {...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:9169:19: ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) )
            	    int alt196=2;
            	    int LA196_0 = input.LA(1);

            	    if ( ((LA196_0>=140 && LA196_0<=142)) ) {
            	        alt196=1;
            	    }
            	    else if ( ((LA196_0>=224 && LA196_0<=225)) ) {
            	        alt196=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 196, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt196) {
            	        case 1 :
            	            // InternalKim.g:9169:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
            	            {
            	            // InternalKim.g:9169:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
            	            // InternalKim.g:9170:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
            	            {
            	            // InternalKim.g:9170:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
            	            // InternalKim.g:9171:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
            	            {
            	            // InternalKim.g:9171:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
            	            int alt194=3;
            	            switch ( input.LA(1) ) {
            	            case 140:
            	                {
            	                alt194=1;
            	                }
            	                break;
            	            case 141:
            	                {
            	                alt194=2;
            	                }
            	                break;
            	            case 142:
            	                {
            	                alt194=3;
            	                }
            	                break;
            	            default:
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 194, 0, input);

            	                throw nvae;
            	            }

            	            switch (alt194) {
            	                case 1 :
            	                    // InternalKim.g:9172:12: lv_agentSpecifier_5_1= 'deliberative'
            	                    {
            	                    lv_agentSpecifier_5_1=(Token)match(input,140,FOLLOW_122); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_1, grammarAccess.getConceptStatementAccess().getAgentSpecifierDeliberativeKeyword_1_3_0_0_0());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_1, null);
            	                      											
            	                    }

            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:9183:12: lv_agentSpecifier_5_2= 'interactive'
            	                    {
            	                    lv_agentSpecifier_5_2=(Token)match(input,141,FOLLOW_122); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_2, grammarAccess.getConceptStatementAccess().getAgentSpecifierInteractiveKeyword_1_3_0_0_1());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_2, null);
            	                      											
            	                    }

            	                    }
            	                    break;
            	                case 3 :
            	                    // InternalKim.g:9194:12: lv_agentSpecifier_5_3= 'reactive'
            	                    {
            	                    lv_agentSpecifier_5_3=(Token)match(input,142,FOLLOW_122); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_3, grammarAccess.getConceptStatementAccess().getAgentSpecifierReactiveKeyword_1_3_0_0_2());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_3, null);
            	                      											
            	                    }

            	                    }
            	                    break;

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:9208:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
            	            {
            	            // InternalKim.g:9208:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
            	            // InternalKim.g:9209:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
            	            {
            	            // InternalKim.g:9209:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) )
            	            // InternalKim.g:9210:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
            	            {
            	            // InternalKim.g:9210:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
            	            // InternalKim.g:9211:12: lv_propertySpecifiers_6_0= rulePROPERTY_TYPE
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_0_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_122);
            	            lv_propertySpecifiers_6_0=rulePROPERTY_TYPE();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	              												}
            	              												add(
            	              													current,
            	              													"propertySpecifiers",
            	              													lv_propertySpecifiers_6_0,
            	              													"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:9228:10: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
            	            loop195:
            	            do {
            	                int alt195=2;
            	                int LA195_0 = input.LA(1);

            	                if ( (LA195_0==224) ) {
            	                    int LA195_2 = input.LA(2);

            	                    if ( (synpred342_InternalKim()) ) {
            	                        alt195=1;
            	                    }


            	                }
            	                else if ( (LA195_0==225) ) {
            	                    int LA195_3 = input.LA(2);

            	                    if ( (synpred342_InternalKim()) ) {
            	                        alt195=1;
            	                    }


            	                }


            	                switch (alt195) {
            	            	case 1 :
            	            	    // InternalKim.g:9229:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
            	            	    {
            	            	    // InternalKim.g:9229:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
            	            	    // InternalKim.g:9230:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
            	            	      											
            	            	    }
            	            	    pushFollow(FOLLOW_122);
            	            	    lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      												if (current==null) {
            	            	      													current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	            	      												}
            	            	      												add(
            	            	      													current,
            	            	      													"propertySpecifiers",
            	            	      													lv_propertySpecifiers_7_0,
            	            	      													"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
            	            	      												afterParserOrEnumRuleCall();
            	            	      											
            	            	    }

            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop195;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop197;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            }

            // InternalKim.g:9261:3: ( (lv_concept_8_0= ruleCONCEPT_TYPE ) )
            // InternalKim.g:9262:4: (lv_concept_8_0= ruleCONCEPT_TYPE )
            {
            // InternalKim.g:9262:4: (lv_concept_8_0= ruleCONCEPT_TYPE )
            // InternalKim.g:9263:5: lv_concept_8_0= ruleCONCEPT_TYPE
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConceptStatementAccess().getConceptCONCEPT_TYPEParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_123);
            lv_concept_8_0=ruleCONCEPT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
              					}
              					set(
              						current,
              						"concept",
              						lv_concept_8_0,
              						"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:9280:3: ( (lv_body_9_0= ruleConceptStatementBody ) )
            // InternalKim.g:9281:4: (lv_body_9_0= ruleConceptStatementBody )
            {
            // InternalKim.g:9281:4: (lv_body_9_0= ruleConceptStatementBody )
            // InternalKim.g:9282:5: lv_body_9_0= ruleConceptStatementBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConceptStatementAccess().getBodyConceptStatementBodyParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_124);
            lv_body_9_0=ruleConceptStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_9_0,
              						"org.integratedmodelling.kim.Kim.ConceptStatementBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:9299:3: (otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) ) )?
            int alt198=2;
            int LA198_0 = input.LA(1);

            if ( (LA198_0==102) ) {
                alt198=1;
            }
            switch (alt198) {
                case 1 :
                    // InternalKim.g:9300:4: otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) )
                    {
                    otherlv_10=(Token)match(input,102,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getConceptStatementAccess().getNamedKeyword_4_0());
                      			
                    }
                    // InternalKim.g:9304:4: ( (lv_name_11_0= ruleNamespaceId ) )
                    // InternalKim.g:9305:5: (lv_name_11_0= ruleNamespaceId )
                    {
                    // InternalKim.g:9305:5: (lv_name_11_0= ruleNamespaceId )
                    // InternalKim.g:9306:6: lv_name_11_0= ruleNamespaceId
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptStatementAccess().getNameNamespaceIdParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_11_0=ruleNamespaceId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptStatementRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_11_0,
                      							"org.integratedmodelling.kim.Kim.NamespaceId");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptStatement"


    // $ANTLR start "entryRuleConceptStatementBody"
    // InternalKim.g:9331:1: entryRuleConceptStatementBody returns [EObject current=null] : iv_ruleConceptStatementBody= ruleConceptStatementBody EOF ;
    public final EObject entryRuleConceptStatementBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptStatementBody = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:9335:2: (iv_ruleConceptStatementBody= ruleConceptStatementBody EOF )
            // InternalKim.g:9336:2: iv_ruleConceptStatementBody= ruleConceptStatementBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptStatementBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptStatementBody=ruleConceptStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptStatementBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptStatementBody"


    // $ANTLR start "ruleConceptStatementBody"
    // InternalKim.g:9345:1: ruleConceptStatementBody returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleConceptStatementBody() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_1_0=null;
        Token lv_root_2_0=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_stringIdentifier_6_1=null;
        Token lv_stringIdentifier_6_2=null;
        Token lv_intIdentifier_7_0=null;
        Token otherlv_8=null;
        Token lv_authority_9_1=null;
        Token lv_authority_9_2=null;
        Token lv_docstring_11_0=null;
        Token otherlv_12=null;
        Token lv_coreConcept_13_0=null;
        Token lv_alias_14_0=null;
        Token lv_nothing_15_0=null;
        Token lv_connectors_17_1=null;
        Token lv_connectors_17_2=null;
        Token lv_connectors_17_3=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token lv_specific_23_0=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_definedAuthority_29_0=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token otherlv_35=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        Token otherlv_43=null;
        Token otherlv_45=null;
        Token otherlv_47=null;
        Token otherlv_49=null;
        Token otherlv_51=null;
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token otherlv_60=null;
        Token otherlv_62=null;
        Token otherlv_64=null;
        Token otherlv_66=null;
        Token otherlv_68=null;
        Token otherlv_70=null;
        Token otherlv_72=null;
        Token otherlv_74=null;
        Token lv_constituent_75_0=null;
        Token lv_constitutes_76_0=null;
        Token lv_partOf_77_0=null;
        Token otherlv_79=null;
        Token otherlv_81=null;
        Token otherlv_83=null;
        Token otherlv_84=null;
        Token otherlv_86=null;
        Token otherlv_88=null;
        Token otherlv_90=null;
        Token otherlv_92=null;
        Token otherlv_94=null;
        Token otherlv_96=null;
        Token otherlv_97=null;
        Token otherlv_99=null;
        Token otherlv_101=null;
        Token otherlv_103=null;
        Token lv_disjoint_104_0=null;
        Token otherlv_105=null;
        Token otherlv_107=null;
        Token otherlv_110=null;
        Token otherlv_111=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parents_16_0 = null;

        EObject lv_parents_18_0 = null;

        EObject lv_contextualizedTraits_20_0 = null;

        EObject lv_contextualizedTraits_22_0 = null;

        EObject lv_contextualizesTraits_24_0 = null;

        EObject lv_contextualizesTraits_26_0 = null;

        EObject lv_upperConcept_30_0 = null;

        EObject lv_requirements_32_0 = null;

        EObject lv_requirements_34_0 = null;

        EObject lv_describedQuality_36_0 = null;

        EObject lv_describedProportionality_39_0 = null;

        EObject lv_describedInverseProportionalityQuality_42_0 = null;

        EObject lv_describedNonzeroQuality_44_0 = null;

        EObject lv_classifiesQuality_46_0 = null;

        EObject lv_discretizesQuality_48_0 = null;

        EObject lv_actuallyInheritedTraits_50_0 = null;

        EObject lv_actuallyInheritedTraits_52_0 = null;

        EObject lv_roles_55_0 = null;

        EObject lv_roles_57_0 = null;

        EObject lv_targetObservables_59_0 = null;

        EObject lv_targetObservables_61_0 = null;

        EObject lv_restrictedObservables_63_0 = null;

        EObject lv_restrictedObservables_65_0 = null;

        EObject lv_conferredTraits_67_0 = null;

        EObject lv_conferredTraits_69_0 = null;

        EObject lv_conferredTargets_71_0 = null;

        EObject lv_conferredTargets_73_0 = null;

        EObject lv_whole_78_0 = null;

        EObject lv_creates_80_0 = null;

        EObject lv_creates_82_0 = null;

        EObject lv_traitTargets_85_0 = null;

        EObject lv_traitTargets_87_0 = null;

        EObject lv_domains_89_0 = null;

        EObject lv_ranges_91_0 = null;

        EObject lv_domains_93_0 = null;

        EObject lv_ranges_95_0 = null;

        EObject lv_inverse_98_0 = null;

        EObject lv_qualitiesAffected_100_0 = null;

        EObject lv_qualitiesAffected_102_0 = null;

        EObject lv_children_106_0 = null;

        EObject lv_children_108_0 = null;

        EObject lv_restrictions_109_0 = null;

        EObject lv_metadata_112_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:9354:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:9355:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:9355:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:9356:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:9356:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop199:
            do {
                int alt199=2;
                int LA199_0 = input.LA(1);

                if ( (LA199_0==RULE_ANNOTATION_ID) ) {
                    alt199=1;
                }


                switch (alt199) {
            	case 1 :
            	    // InternalKim.g:9357:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:9357:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:9358:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop199;
                }
            } while (true);

            // InternalKim.g:9375:3: ( (lv_abstract_1_0= 'abstract' ) )?
            int alt200=2;
            int LA200_0 = input.LA(1);

            if ( (LA200_0==145) ) {
                alt200=1;
            }
            switch (alt200) {
                case 1 :
                    // InternalKim.g:9376:4: (lv_abstract_1_0= 'abstract' )
                    {
                    // InternalKim.g:9376:4: (lv_abstract_1_0= 'abstract' )
                    // InternalKim.g:9377:5: lv_abstract_1_0= 'abstract'
                    {
                    lv_abstract_1_0=(Token)match(input,145,FOLLOW_125); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_abstract_1_0, grammarAccess.getConceptStatementBodyAccess().getAbstractAbstractKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      					}
                      					setWithLastConsumed(current, "abstract", true, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:9389:3: ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) )
            int alt205=2;
            int LA205_0 = input.LA(1);

            if ( (LA205_0==81) ) {
                alt205=1;
            }
            else if ( (LA205_0==RULE_CAMELCASE_ID) ) {
                alt205=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 205, 0, input);

                throw nvae;
            }
            switch (alt205) {
                case 1 :
                    // InternalKim.g:9390:4: ( (lv_root_2_0= 'root' ) )
                    {
                    // InternalKim.g:9390:4: ( (lv_root_2_0= 'root' ) )
                    // InternalKim.g:9391:5: (lv_root_2_0= 'root' )
                    {
                    // InternalKim.g:9391:5: (lv_root_2_0= 'root' )
                    // InternalKim.g:9392:6: lv_root_2_0= 'root'
                    {
                    lv_root_2_0=(Token)match(input,81,FOLLOW_126); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_root_2_0, grammarAccess.getConceptStatementBodyAccess().getRootRootKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      						}
                      						setWithLastConsumed(current, "root", true, "root");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:9405:4: ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    {
                    // InternalKim.g:9405:4: ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    // InternalKim.g:9406:5: ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )?
                    {
                    // InternalKim.g:9406:5: ( (lv_name_3_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:9407:6: (lv_name_3_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:9407:6: (lv_name_3_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:9408:7: lv_name_3_0= RULE_CAMELCASE_ID
                    {
                    lv_name_3_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_127); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_name_3_0, grammarAccess.getConceptStatementBodyAccess().getNameCAMELCASE_IDTerminalRuleCall_2_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"name",
                      								lv_name_3_0,
                      								"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      						
                    }

                    }


                    }

                    // InternalKim.g:9424:5: (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )?
                    int alt204=2;
                    int LA204_0 = input.LA(1);

                    if ( (LA204_0==123) ) {
                        alt204=1;
                    }
                    switch (alt204) {
                        case 1 :
                            // InternalKim.g:9425:6: otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) )
                            {
                            otherlv_4=(Token)match(input,123,FOLLOW_10); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_4, grammarAccess.getConceptStatementBodyAccess().getIdentifiedKeyword_2_1_1_0());
                              					
                            }
                            otherlv_5=(Token)match(input,23,FOLLOW_110); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getConceptStatementBodyAccess().getAsKeyword_2_1_1_1());
                              					
                            }
                            // InternalKim.g:9433:6: ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) )
                            int alt202=2;
                            int LA202_0 = input.LA(1);

                            if ( (LA202_0==RULE_STRING||LA202_0==RULE_ID) ) {
                                alt202=1;
                            }
                            else if ( (LA202_0==RULE_INT) ) {
                                alt202=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 202, 0, input);

                                throw nvae;
                            }
                            switch (alt202) {
                                case 1 :
                                    // InternalKim.g:9434:7: ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) )
                                    {
                                    // InternalKim.g:9434:7: ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) )
                                    // InternalKim.g:9435:8: ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) )
                                    {
                                    // InternalKim.g:9435:8: ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) )
                                    // InternalKim.g:9436:9: (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING )
                                    {
                                    // InternalKim.g:9436:9: (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING )
                                    int alt201=2;
                                    int LA201_0 = input.LA(1);

                                    if ( (LA201_0==RULE_ID) ) {
                                        alt201=1;
                                    }
                                    else if ( (LA201_0==RULE_STRING) ) {
                                        alt201=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 201, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt201) {
                                        case 1 :
                                            // InternalKim.g:9437:10: lv_stringIdentifier_6_1= RULE_ID
                                            {
                                            lv_stringIdentifier_6_1=(Token)match(input,RULE_ID,FOLLOW_103); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										newLeafNode(lv_stringIdentifier_6_1, grammarAccess.getConceptStatementBodyAccess().getStringIdentifierIDTerminalRuleCall_2_1_1_2_0_0_0());
                                              									
                                            }
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                              										}
                                              										setWithLastConsumed(
                                              											current,
                                              											"stringIdentifier",
                                              											lv_stringIdentifier_6_1,
                                              											"org.eclipse.xtext.common.Terminals.ID");
                                              									
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalKim.g:9452:10: lv_stringIdentifier_6_2= RULE_STRING
                                            {
                                            lv_stringIdentifier_6_2=(Token)match(input,RULE_STRING,FOLLOW_103); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										newLeafNode(lv_stringIdentifier_6_2, grammarAccess.getConceptStatementBodyAccess().getStringIdentifierSTRINGTerminalRuleCall_2_1_1_2_0_0_1());
                                              									
                                            }
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                              										}
                                              										setWithLastConsumed(
                                              											current,
                                              											"stringIdentifier",
                                              											lv_stringIdentifier_6_2,
                                              											"org.eclipse.xtext.common.Terminals.STRING");
                                              									
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:9470:7: ( (lv_intIdentifier_7_0= RULE_INT ) )
                                    {
                                    // InternalKim.g:9470:7: ( (lv_intIdentifier_7_0= RULE_INT ) )
                                    // InternalKim.g:9471:8: (lv_intIdentifier_7_0= RULE_INT )
                                    {
                                    // InternalKim.g:9471:8: (lv_intIdentifier_7_0= RULE_INT )
                                    // InternalKim.g:9472:9: lv_intIdentifier_7_0= RULE_INT
                                    {
                                    lv_intIdentifier_7_0=(Token)match(input,RULE_INT,FOLLOW_103); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_intIdentifier_7_0, grammarAccess.getConceptStatementBodyAccess().getIntIdentifierINTTerminalRuleCall_2_1_1_2_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"intIdentifier",
                                      										lv_intIdentifier_7_0,
                                      										"org.eclipse.xtext.common.Terminals.INT");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_8=(Token)match(input,97,FOLLOW_111); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getConceptStatementBodyAccess().getByKeyword_2_1_1_3());
                              					
                            }
                            // InternalKim.g:9493:6: ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) )
                            // InternalKim.g:9494:7: ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) )
                            {
                            // InternalKim.g:9494:7: ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) )
                            // InternalKim.g:9495:8: (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH )
                            {
                            // InternalKim.g:9495:8: (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH )
                            int alt203=2;
                            int LA203_0 = input.LA(1);

                            if ( (LA203_0==RULE_UPPERCASE_ID) ) {
                                alt203=1;
                            }
                            else if ( (LA203_0==RULE_UPPERCASE_PATH) ) {
                                alt203=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 203, 0, input);

                                throw nvae;
                            }
                            switch (alt203) {
                                case 1 :
                                    // InternalKim.g:9496:9: lv_authority_9_1= RULE_UPPERCASE_ID
                                    {
                                    lv_authority_9_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_126); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_authority_9_1, grammarAccess.getConceptStatementBodyAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_2_1_1_4_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"authority",
                                      										lv_authority_9_1,
                                      										"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:9511:9: lv_authority_9_2= RULE_UPPERCASE_PATH
                                    {
                                    lv_authority_9_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_126); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_authority_9_2, grammarAccess.getConceptStatementBodyAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_2_1_1_4_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"authority",
                                      										lv_authority_9_2,
                                      										"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:9531:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:9532:4: ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:9532:4: ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) )
            // InternalKim.g:9533:5: ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
            // InternalKim.g:9536:5: ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* )
            // InternalKim.g:9537:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )*
            {
            // InternalKim.g:9537:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )*
            loop232:
            do {
                int alt232=24;
                alt232 = dfa232.predict(input);
                switch (alt232) {
            	case 1 :
            	    // InternalKim.g:9538:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
            	    {
            	    // InternalKim.g:9538:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:9539:5: {...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:9539:117: ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
            	    // InternalKim.g:9540:6: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:9543:9: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
            	    // InternalKim.g:9543:10: {...}? => ( (lv_docstring_11_0= RULE_STRING ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9543:19: ( (lv_docstring_11_0= RULE_STRING ) )
            	    // InternalKim.g:9543:20: (lv_docstring_11_0= RULE_STRING )
            	    {
            	    // InternalKim.g:9543:20: (lv_docstring_11_0= RULE_STRING )
            	    // InternalKim.g:9544:10: lv_docstring_11_0= RULE_STRING
            	    {
            	    lv_docstring_11_0=(Token)match(input,RULE_STRING,FOLLOW_126); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_docstring_11_0, grammarAccess.getConceptStatementBodyAccess().getDocstringSTRINGTerminalRuleCall_3_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	      										}
            	      										setWithLastConsumed(
            	      											current,
            	      											"docstring",
            	      											lv_docstring_11_0,
            	      											"org.eclipse.xtext.common.Terminals.STRING");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:9565:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9565:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
            	    // InternalKim.g:9566:5: {...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:9566:117: ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:9567:6: ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:9570:9: ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:9570:10: {...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9570:19: ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:9570:20: ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    // InternalKim.g:9570:20: ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) )
            	    int alt207=2;
            	    int LA207_0 = input.LA(1);

            	    if ( (LA207_0==148) ) {
            	        alt207=1;
            	    }
            	    else if ( (LA207_0==150) ) {
            	        alt207=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 207, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt207) {
            	        case 1 :
            	            // InternalKim.g:9571:10: (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? )
            	            {
            	            // InternalKim.g:9571:10: (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? )
            	            // InternalKim.g:9572:11: otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )?
            	            {
            	            otherlv_12=(Token)match(input,148,FOLLOW_128); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_12, grammarAccess.getConceptStatementBodyAccess().getIsKeyword_3_1_0_0_0());
            	              										
            	            }
            	            // InternalKim.g:9576:11: ( (lv_coreConcept_13_0= 'core' ) )?
            	            int alt206=2;
            	            int LA206_0 = input.LA(1);

            	            if ( (LA206_0==149) ) {
            	                alt206=1;
            	            }
            	            switch (alt206) {
            	                case 1 :
            	                    // InternalKim.g:9577:12: (lv_coreConcept_13_0= 'core' )
            	                    {
            	                    // InternalKim.g:9577:12: (lv_coreConcept_13_0= 'core' )
            	                    // InternalKim.g:9578:13: lv_coreConcept_13_0= 'core'
            	                    {
            	                    lv_coreConcept_13_0=(Token)match(input,149,FOLLOW_129); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(lv_coreConcept_13_0, grammarAccess.getConceptStatementBodyAccess().getCoreConceptCoreKeyword_3_1_0_0_1_0());
            	                      												
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	                      													}
            	                      													setWithLastConsumed(current, "coreConcept", true, "core");
            	                      												
            	                    }

            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:9592:10: ( (lv_alias_14_0= 'equals' ) )
            	            {
            	            // InternalKim.g:9592:10: ( (lv_alias_14_0= 'equals' ) )
            	            // InternalKim.g:9593:11: (lv_alias_14_0= 'equals' )
            	            {
            	            // InternalKim.g:9593:11: (lv_alias_14_0= 'equals' )
            	            // InternalKim.g:9594:12: lv_alias_14_0= 'equals'
            	            {
            	            lv_alias_14_0=(Token)match(input,150,FOLLOW_129); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_alias_14_0, grammarAccess.getConceptStatementBodyAccess().getAliasEqualsKeyword_3_1_0_1_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "alias", true, "equals");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:9607:9: ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
            	    int alt210=2;
            	    int LA210_0 = input.LA(1);

            	    if ( (LA210_0==151) ) {
            	        alt210=1;
            	    }
            	    else if ( (LA210_0==RULE_LOWERCASE_ID||(LA210_0>=RULE_CAMELCASE_ID && LA210_0<=RULE_LOWERCASE_DASHID)||LA210_0==36||(LA210_0>=112 && LA210_0<=113)||(LA210_0>=121 && LA210_0<=122)||(LA210_0>=124 && LA210_0<=136)) ) {
            	        alt210=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 210, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt210) {
            	        case 1 :
            	            // InternalKim.g:9608:10: ( (lv_nothing_15_0= 'nothing' ) )
            	            {
            	            // InternalKim.g:9608:10: ( (lv_nothing_15_0= 'nothing' ) )
            	            // InternalKim.g:9609:11: (lv_nothing_15_0= 'nothing' )
            	            {
            	            // InternalKim.g:9609:11: (lv_nothing_15_0= 'nothing' )
            	            // InternalKim.g:9610:12: lv_nothing_15_0= 'nothing'
            	            {
            	            lv_nothing_15_0=(Token)match(input,151,FOLLOW_126); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_nothing_15_0, grammarAccess.getConceptStatementBodyAccess().getNothingNothingKeyword_3_1_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "nothing", true, "nothing");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:9623:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
            	            {
            	            // InternalKim.g:9623:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
            	            // InternalKim.g:9624:11: ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
            	            {
            	            // InternalKim.g:9624:11: ( (lv_parents_16_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:9625:12: (lv_parents_16_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:9625:12: (lv_parents_16_0= ruleConceptDeclaration )
            	            // InternalKim.g:9626:13: lv_parents_16_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_0_0());
            	              												
            	            }
            	            pushFollow(FOLLOW_130);
            	            lv_parents_16_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              													}
            	              													add(
            	              														current,
            	              														"parents",
            	              														lv_parents_16_0,
            	              														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              													afterParserOrEnumRuleCall();
            	              												
            	            }

            	            }


            	            }

            	            // InternalKim.g:9643:11: ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
            	            loop209:
            	            do {
            	                int alt209=2;
            	                int LA209_0 = input.LA(1);

            	                if ( (LA209_0==25||(LA209_0>=137 && LA209_0<=138)) ) {
            	                    alt209=1;
            	                }


            	                switch (alt209) {
            	            	case 1 :
            	            	    // InternalKim.g:9644:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    // InternalKim.g:9644:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) )
            	            	    // InternalKim.g:9645:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
            	            	    {
            	            	    // InternalKim.g:9645:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
            	            	    // InternalKim.g:9646:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
            	            	    {
            	            	    // InternalKim.g:9646:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
            	            	    int alt208=3;
            	            	    switch ( input.LA(1) ) {
            	            	    case 25:
            	            	        {
            	            	        alt208=1;
            	            	        }
            	            	        break;
            	            	    case 137:
            	            	        {
            	            	        alt208=2;
            	            	        }
            	            	        break;
            	            	    case 138:
            	            	        {
            	            	        alt208=3;
            	            	        }
            	            	        break;
            	            	    default:
            	            	        if (state.backtracking>0) {state.failed=true; return current;}
            	            	        NoViableAltException nvae =
            	            	            new NoViableAltException("", 208, 0, input);

            	            	        throw nvae;
            	            	    }

            	            	    switch (alt208) {
            	            	        case 1 :
            	            	            // InternalKim.g:9647:15: lv_connectors_17_1= ','
            	            	            {
            	            	            lv_connectors_17_1=(Token)match(input,25,FOLLOW_21); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_1, grammarAccess.getConceptStatementBodyAccess().getConnectorsCommaKeyword_3_1_1_1_1_0_0_0());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_1, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;
            	            	        case 2 :
            	            	            // InternalKim.g:9658:15: lv_connectors_17_2= 'or'
            	            	            {
            	            	            lv_connectors_17_2=(Token)match(input,137,FOLLOW_21); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_2, grammarAccess.getConceptStatementBodyAccess().getConnectorsOrKeyword_3_1_1_1_1_0_0_1());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_2, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;
            	            	        case 3 :
            	            	            // InternalKim.g:9669:15: lv_connectors_17_3= 'and'
            	            	            {
            	            	            lv_connectors_17_3=(Token)match(input,138,FOLLOW_21); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_3, grammarAccess.getConceptStatementBodyAccess().getConnectorsAndKeyword_3_1_1_1_1_0_0_2());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_3, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;

            	            	    }


            	            	    }


            	            	    }

            	            	    // InternalKim.g:9682:12: ( (lv_parents_18_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:9683:13: (lv_parents_18_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:9683:13: (lv_parents_18_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:9684:14: lv_parents_18_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      														newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_1_1_0());
            	            	      													
            	            	    }
            	            	    pushFollow(FOLLOW_130);
            	            	    lv_parents_18_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      														if (current==null) {
            	            	      															current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      														}
            	            	      														add(
            	            	      															current,
            	            	      															"parents",
            	            	      															lv_parents_18_0,
            	            	      															"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      														afterParserOrEnumRuleCall();
            	            	      													
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop209;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:9710:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:9710:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:9711:5: {...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:9711:117: ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:9712:6: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:9715:9: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:9715:10: {...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9715:19: ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
            	    int alt213=2;
            	    int LA213_0 = input.LA(1);

            	    if ( (LA213_0==152) ) {
            	        alt213=1;
            	    }
            	    else if ( (LA213_0==153) ) {
            	        alt213=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 213, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt213) {
            	        case 1 :
            	            // InternalKim.g:9715:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
            	            {
            	            // InternalKim.g:9715:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
            	            // InternalKim.g:9716:10: otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
            	            {
            	            otherlv_19=(Token)match(input,152,FOLLOW_7); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_19, grammarAccess.getConceptStatementBodyAccess().getExposesKeyword_3_2_0_0());
            	              									
            	            }
            	            // InternalKim.g:9720:10: ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) )
            	            // InternalKim.g:9721:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
            	            {
            	            // InternalKim.g:9721:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
            	            // InternalKim.g:9722:12: lv_contextualizedTraits_20_0= ruleObservableSemantics
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_131);
            	            lv_contextualizedTraits_20_0=ruleObservableSemantics();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"contextualizedTraits",
            	              													lv_contextualizedTraits_20_0,
            	              													"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:9739:10: (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
            	            loop211:
            	            do {
            	                int alt211=2;
            	                int LA211_0 = input.LA(1);

            	                if ( (LA211_0==25) ) {
            	                    alt211=1;
            	                }


            	                switch (alt211) {
            	            	case 1 :
            	            	    // InternalKim.g:9740:11: otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
            	            	    {
            	            	    otherlv_21=(Token)match(input,25,FOLLOW_7); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_21, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_2_0_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:9744:11: ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
            	            	    // InternalKim.g:9745:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
            	            	    {
            	            	    // InternalKim.g:9745:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
            	            	    // InternalKim.g:9746:13: lv_contextualizedTraits_22_0= ruleObservableSemantics
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_131);
            	            	    lv_contextualizedTraits_22_0=ruleObservableSemantics();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"contextualizedTraits",
            	            	      														lv_contextualizedTraits_22_0,
            	            	      														"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop211;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:9766:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
            	            {
            	            // InternalKim.g:9766:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
            	            // InternalKim.g:9767:10: ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
            	            {
            	            // InternalKim.g:9767:10: ( (lv_specific_23_0= 'exposing' ) )
            	            // InternalKim.g:9768:11: (lv_specific_23_0= 'exposing' )
            	            {
            	            // InternalKim.g:9768:11: (lv_specific_23_0= 'exposing' )
            	            // InternalKim.g:9769:12: lv_specific_23_0= 'exposing'
            	            {
            	            lv_specific_23_0=(Token)match(input,153,FOLLOW_21); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_specific_23_0, grammarAccess.getConceptStatementBodyAccess().getSpecificExposingKeyword_3_2_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "specific", true, "exposing");
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:9781:10: ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:9782:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:9782:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
            	            // InternalKim.g:9783:12: lv_contextualizesTraits_24_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_131);
            	            lv_contextualizesTraits_24_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"contextualizesTraits",
            	              													lv_contextualizesTraits_24_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:9800:10: (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
            	            loop212:
            	            do {
            	                int alt212=2;
            	                int LA212_0 = input.LA(1);

            	                if ( (LA212_0==25) ) {
            	                    alt212=1;
            	                }


            	                switch (alt212) {
            	            	case 1 :
            	            	    // InternalKim.g:9801:11: otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_25=(Token)match(input,25,FOLLOW_21); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_25, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_2_1_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:9805:11: ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:9806:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:9806:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:9807:13: lv_contextualizesTraits_26_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_131);
            	            	    lv_contextualizesTraits_26_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"contextualizesTraits",
            	            	      														lv_contextualizesTraits_26_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop212;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:9832:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9832:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
            	    // InternalKim.g:9833:5: {...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:9833:117: ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:9834:6: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:9837:9: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:9837:10: {...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9837:19: (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
            	    // InternalKim.g:9837:20: otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
            	    {
            	    otherlv_27=(Token)match(input,154,FOLLOW_132); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getConceptStatementBodyAccess().getDefinesKeyword_3_3_0());
            	      								
            	    }
            	    // InternalKim.g:9841:9: ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
            	    int alt214=2;
            	    int LA214_0 = input.LA(1);

            	    if ( (LA214_0==155) ) {
            	        alt214=1;
            	    }
            	    else if ( (LA214_0==RULE_LOWERCASE_ID||(LA214_0>=RULE_CAMELCASE_ID && LA214_0<=RULE_LOWERCASE_DASHID)||LA214_0==36||(LA214_0>=112 && LA214_0<=113)||(LA214_0>=121 && LA214_0<=122)||(LA214_0>=124 && LA214_0<=136)) ) {
            	        alt214=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 214, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt214) {
            	        case 1 :
            	            // InternalKim.g:9842:10: (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) )
            	            {
            	            // InternalKim.g:9842:10: (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) )
            	            // InternalKim.g:9843:11: otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) )
            	            {
            	            otherlv_28=(Token)match(input,155,FOLLOW_133); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_28, grammarAccess.getConceptStatementBodyAccess().getAuthorityKeyword_3_3_1_0_0());
            	              										
            	            }
            	            // InternalKim.g:9847:11: ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) )
            	            // InternalKim.g:9848:12: (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH )
            	            {
            	            // InternalKim.g:9848:12: (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH )
            	            // InternalKim.g:9849:13: lv_definedAuthority_29_0= RULE_UPPERCASE_PATH
            	            {
            	            lv_definedAuthority_29_0=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_126); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_definedAuthority_29_0, grammarAccess.getConceptStatementBodyAccess().getDefinedAuthorityUPPERCASE_PATHTerminalRuleCall_3_3_1_0_1_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              													}
            	              													setWithLastConsumed(
            	              														current,
            	              														"definedAuthority",
            	              														lv_definedAuthority_29_0,
            	              														"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
            	              												
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:9867:10: ( (lv_upperConcept_30_0= ruleConcept ) )
            	            {
            	            // InternalKim.g:9867:10: ( (lv_upperConcept_30_0= ruleConcept ) )
            	            // InternalKim.g:9868:11: (lv_upperConcept_30_0= ruleConcept )
            	            {
            	            // InternalKim.g:9868:11: (lv_upperConcept_30_0= ruleConcept )
            	            // InternalKim.g:9869:12: lv_upperConcept_30_0= ruleConcept
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getUpperConceptConceptParserRuleCall_3_3_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_126);
            	            lv_upperConcept_30_0=ruleConcept();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												set(
            	              													current,
            	              													"upperConcept",
            	              													lv_upperConcept_30_0,
            	              													"org.integratedmodelling.kim.Kim.Concept");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:9893:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:9893:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
            	    // InternalKim.g:9894:5: {...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalKim.g:9894:117: ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
            	    // InternalKim.g:9895:6: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4);
            	    // InternalKim.g:9898:9: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
            	    // InternalKim.g:9898:10: {...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9898:19: (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
            	    // InternalKim.g:9898:20: otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
            	    {
            	    otherlv_31=(Token)match(input,156,FOLLOW_134); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_31, grammarAccess.getConceptStatementBodyAccess().getRequiresKeyword_3_4_0());
            	      								
            	    }
            	    // InternalKim.g:9902:9: ( (lv_requirements_32_0= ruleIdentityRequirement ) )
            	    // InternalKim.g:9903:10: (lv_requirements_32_0= ruleIdentityRequirement )
            	    {
            	    // InternalKim.g:9903:10: (lv_requirements_32_0= ruleIdentityRequirement )
            	    // InternalKim.g:9904:11: lv_requirements_32_0= ruleIdentityRequirement
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_131);
            	    lv_requirements_32_0=ruleIdentityRequirement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"requirements",
            	      												lv_requirements_32_0,
            	      												"org.integratedmodelling.kim.Kim.IdentityRequirement");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:9921:9: (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
            	    loop215:
            	    do {
            	        int alt215=2;
            	        int LA215_0 = input.LA(1);

            	        if ( (LA215_0==25) ) {
            	            alt215=1;
            	        }


            	        switch (alt215) {
            	    	case 1 :
            	    	    // InternalKim.g:9922:10: otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) )
            	    	    {
            	    	    otherlv_33=(Token)match(input,25,FOLLOW_134); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_33, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_4_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:9926:10: ( (lv_requirements_34_0= ruleIdentityRequirement ) )
            	    	    // InternalKim.g:9927:11: (lv_requirements_34_0= ruleIdentityRequirement )
            	    	    {
            	    	    // InternalKim.g:9927:11: (lv_requirements_34_0= ruleIdentityRequirement )
            	    	    // InternalKim.g:9928:12: lv_requirements_34_0= ruleIdentityRequirement
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_131);
            	    	    lv_requirements_34_0=ruleIdentityRequirement();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"requirements",
            	    	      													lv_requirements_34_0,
            	    	      													"org.integratedmodelling.kim.Kim.IdentityRequirement");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop215;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:9952:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9952:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:9953:5: {...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalKim.g:9953:117: ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:9954:6: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5);
            	    // InternalKim.g:9957:9: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:9957:10: {...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9957:19: (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:9957:20: otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_35=(Token)match(input,157,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_35, grammarAccess.getConceptStatementBodyAccess().getDescribesKeyword_3_5_0());
            	      								
            	    }
            	    // InternalKim.g:9961:9: ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9962:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9962:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
            	    // InternalKim.g:9963:11: lv_describedQuality_36_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedQualityConceptDeclarationParserRuleCall_3_5_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_126);
            	    lv_describedQuality_36_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedQuality",
            	      												lv_describedQuality_36_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:9986:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9986:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:9987:5: {...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6)");
            	    }
            	    // InternalKim.g:9987:117: ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:9988:6: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6);
            	    // InternalKim.g:9991:9: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:9991:10: {...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9991:19: (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:9991:20: otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_37=(Token)match(input,158,FOLLOW_72); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_37, grammarAccess.getConceptStatementBodyAccess().getIncreasesKeyword_3_6_0());
            	      								
            	    }
            	    otherlv_38=(Token)match(input,40,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_38, grammarAccess.getConceptStatementBodyAccess().getWithKeyword_3_6_1());
            	      								
            	    }
            	    // InternalKim.g:9999:9: ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:10000:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:10000:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
            	    // InternalKim.g:10001:11: lv_describedProportionality_39_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedProportionalityConceptDeclarationParserRuleCall_3_6_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_126);
            	    lv_describedProportionality_39_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedProportionality",
            	      												lv_describedProportionality_39_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalKim.g:10024:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:10024:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:10025:5: {...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7)");
            	    }
            	    // InternalKim.g:10025:117: ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:10026:6: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7);
            	    // InternalKim.g:10029:9: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:10029:10: {...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10029:19: (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:10029:20: otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_40=(Token)match(input,159,FOLLOW_72); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_40, grammarAccess.getConceptStatementBodyAccess().getDecreasesKeyword_3_7_0());
            	      								
            	    }
            	    otherlv_41=(Token)match(input,40,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_41, grammarAccess.getConceptStatementBodyAccess().getWithKeyword_3_7_1());
            	      								
            	    }
            	    // InternalKim.g:10037:9: ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:10038:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:10038:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
            	    // InternalKim.g:10039:11: lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedInverseProportionalityQualityConceptDeclarationParserRuleCall_3_7_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_126);
            	    lv_describedInverseProportionalityQuality_42_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedInverseProportionalityQuality",
            	      												lv_describedInverseProportionalityQuality_42_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalKim.g:10062:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:10062:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:10063:5: {...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8)");
            	    }
            	    // InternalKim.g:10063:117: ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:10064:6: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8);
            	    // InternalKim.g:10067:9: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:10067:10: {...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10067:19: (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:10067:20: otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_43=(Token)match(input,160,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_43, grammarAccess.getConceptStatementBodyAccess().getMarksKeyword_3_8_0());
            	      								
            	    }
            	    // InternalKim.g:10071:9: ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:10072:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:10072:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
            	    // InternalKim.g:10073:11: lv_describedNonzeroQuality_44_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedNonzeroQualityConceptDeclarationParserRuleCall_3_8_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_126);
            	    lv_describedNonzeroQuality_44_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedNonzeroQuality",
            	      												lv_describedNonzeroQuality_44_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalKim.g:10096:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:10096:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:10097:5: {...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9)");
            	    }
            	    // InternalKim.g:10097:117: ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:10098:6: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9);
            	    // InternalKim.g:10101:9: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:10101:10: {...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10101:19: (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:10101:20: otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_45=(Token)match(input,161,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_45, grammarAccess.getConceptStatementBodyAccess().getClassifiesKeyword_3_9_0());
            	      								
            	    }
            	    // InternalKim.g:10105:9: ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:10106:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:10106:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
            	    // InternalKim.g:10107:11: lv_classifiesQuality_46_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getClassifiesQualityConceptDeclarationParserRuleCall_3_9_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_126);
            	    lv_classifiesQuality_46_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"classifiesQuality",
            	      												lv_classifiesQuality_46_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalKim.g:10130:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:10130:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:10131:5: {...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10)");
            	    }
            	    // InternalKim.g:10131:118: ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:10132:6: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10);
            	    // InternalKim.g:10135:9: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:10135:10: {...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10135:19: (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:10135:20: otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_47=(Token)match(input,162,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_47, grammarAccess.getConceptStatementBodyAccess().getDiscretizesKeyword_3_10_0());
            	      								
            	    }
            	    // InternalKim.g:10139:9: ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:10140:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:10140:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
            	    // InternalKim.g:10141:11: lv_discretizesQuality_48_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDiscretizesQualityConceptDeclarationParserRuleCall_3_10_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_126);
            	    lv_discretizesQuality_48_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"discretizesQuality",
            	      												lv_discretizesQuality_48_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalKim.g:10164:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:10164:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:10165:5: {...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11)");
            	    }
            	    // InternalKim.g:10165:118: ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:10166:6: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11);
            	    // InternalKim.g:10169:9: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:10169:10: {...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10169:19: (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:10169:20: otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_49=(Token)match(input,163,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_49, grammarAccess.getConceptStatementBodyAccess().getInheritsKeyword_3_11_0());
            	      								
            	    }
            	    // InternalKim.g:10173:9: ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:10174:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:10174:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
            	    // InternalKim.g:10175:11: lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_131);
            	    lv_actuallyInheritedTraits_50_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"actuallyInheritedTraits",
            	      												lv_actuallyInheritedTraits_50_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10192:9: (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
            	    loop216:
            	    do {
            	        int alt216=2;
            	        int LA216_0 = input.LA(1);

            	        if ( (LA216_0==25) ) {
            	            alt216=1;
            	        }


            	        switch (alt216) {
            	    	case 1 :
            	    	    // InternalKim.g:10193:10: otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_51=(Token)match(input,25,FOLLOW_21); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_51, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_11_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:10197:10: ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:10198:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:10198:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:10199:12: lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_131);
            	    	    lv_actuallyInheritedTraits_52_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"actuallyInheritedTraits",
            	    	      													lv_actuallyInheritedTraits_52_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop216;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 13 :
            	    // InternalKim.g:10223:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:10223:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:10224:5: {...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12)");
            	    }
            	    // InternalKim.g:10224:118: ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:10225:6: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12);
            	    // InternalKim.g:10228:9: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:10228:10: {...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10228:19: (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:10228:20: otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    otherlv_53=(Token)match(input,164,FOLLOW_135); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_53, grammarAccess.getConceptStatementBodyAccess().getHasKeyword_3_12_0());
            	      								
            	    }
            	    otherlv_54=(Token)match(input,165,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_54, grammarAccess.getConceptStatementBodyAccess().getRoleKeyword_3_12_1());
            	      								
            	    }
            	    // InternalKim.g:10236:9: ( (lv_roles_55_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:10237:10: (lv_roles_55_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:10237:10: (lv_roles_55_0= ruleConceptDeclaration )
            	    // InternalKim.g:10238:11: lv_roles_55_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_136);
            	    lv_roles_55_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"roles",
            	      												lv_roles_55_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10255:9: (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )*
            	    loop217:
            	    do {
            	        int alt217=2;
            	        int LA217_0 = input.LA(1);

            	        if ( (LA217_0==25) ) {
            	            alt217=1;
            	        }


            	        switch (alt217) {
            	    	case 1 :
            	    	    // InternalKim.g:10256:10: otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_56=(Token)match(input,25,FOLLOW_21); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_56, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_3_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:10260:10: ( (lv_roles_57_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:10261:11: (lv_roles_57_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:10261:11: (lv_roles_57_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:10262:12: lv_roles_57_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_136);
            	    	    lv_roles_57_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"roles",
            	    	      													lv_roles_57_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop217;
            	        }
            	    } while (true);

            	    // InternalKim.g:10280:9: (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )?
            	    int alt219=2;
            	    int LA219_0 = input.LA(1);

            	    if ( (LA219_0==166) ) {
            	        alt219=1;
            	    }
            	    switch (alt219) {
            	        case 1 :
            	            // InternalKim.g:10281:10: otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
            	            {
            	            otherlv_58=(Token)match(input,166,FOLLOW_21); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_58, grammarAccess.getConceptStatementBodyAccess().getTargetingKeyword_3_12_4_0());
            	              									
            	            }
            	            // InternalKim.g:10285:10: ( (lv_targetObservables_59_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:10286:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:10286:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
            	            // InternalKim.g:10287:12: lv_targetObservables_59_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_137);
            	            lv_targetObservables_59_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"targetObservables",
            	              													lv_targetObservables_59_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:10304:10: (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
            	            loop218:
            	            do {
            	                int alt218=2;
            	                int LA218_0 = input.LA(1);

            	                if ( (LA218_0==25) ) {
            	                    alt218=1;
            	                }


            	                switch (alt218) {
            	            	case 1 :
            	            	    // InternalKim.g:10305:11: otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_60=(Token)match(input,25,FOLLOW_21); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_60, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_4_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:10309:11: ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:10310:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:10310:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:10311:13: lv_targetObservables_61_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_137);
            	            	    lv_targetObservables_61_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"targetObservables",
            	            	      														lv_targetObservables_61_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop218;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    // InternalKim.g:10330:9: (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:10331:10: otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_62=(Token)match(input,48,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_62, grammarAccess.getConceptStatementBodyAccess().getInKeyword_3_12_5_0());
            	      									
            	    }
            	    // InternalKim.g:10335:10: ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:10336:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:10336:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
            	    // InternalKim.g:10337:12: lv_restrictedObservables_63_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_1_0());
            	      											
            	    }
            	    pushFollow(FOLLOW_131);
            	    lv_restrictedObservables_63_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      												if (current==null) {
            	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      												}
            	      												add(
            	      													current,
            	      													"restrictedObservables",
            	      													lv_restrictedObservables_63_0,
            	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      												afterParserOrEnumRuleCall();
            	      											
            	    }

            	    }


            	    }

            	    // InternalKim.g:10354:10: (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
            	    loop220:
            	    do {
            	        int alt220=2;
            	        int LA220_0 = input.LA(1);

            	        if ( (LA220_0==25) ) {
            	            alt220=1;
            	        }


            	        switch (alt220) {
            	    	case 1 :
            	    	    // InternalKim.g:10355:11: otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_64=(Token)match(input,25,FOLLOW_21); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_64, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_5_2_0());
            	    	      										
            	    	    }
            	    	    // InternalKim.g:10359:11: ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:10360:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:10360:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:10361:13: lv_restrictedObservables_65_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_2_1_0());
            	    	      												
            	    	    }
            	    	    pushFollow(FOLLOW_131);
            	    	    lv_restrictedObservables_65_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      													if (current==null) {
            	    	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      													}
            	    	      													add(
            	    	      														current,
            	    	      														"restrictedObservables",
            	    	      														lv_restrictedObservables_65_0,
            	    	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      													afterParserOrEnumRuleCall();
            	    	      												
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop220;
            	        }
            	    } while (true);


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 14 :
            	    // InternalKim.g:10386:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
            	    {
            	    // InternalKim.g:10386:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
            	    // InternalKim.g:10387:5: {...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13)");
            	    }
            	    // InternalKim.g:10387:118: ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
            	    // InternalKim.g:10388:6: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13);
            	    // InternalKim.g:10391:9: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
            	    // InternalKim.g:10391:10: {...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10391:19: (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
            	    // InternalKim.g:10391:20: otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
            	    {
            	    otherlv_66=(Token)match(input,167,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_66, grammarAccess.getConceptStatementBodyAccess().getConfersKeyword_3_13_0());
            	      								
            	    }
            	    // InternalKim.g:10395:9: ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:10396:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:10396:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
            	    // InternalKim.g:10397:11: lv_conferredTraits_67_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_138);
            	    lv_conferredTraits_67_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"conferredTraits",
            	      												lv_conferredTraits_67_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10414:9: (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )*
            	    loop221:
            	    do {
            	        int alt221=2;
            	        int LA221_0 = input.LA(1);

            	        if ( (LA221_0==25) ) {
            	            alt221=1;
            	        }


            	        switch (alt221) {
            	    	case 1 :
            	    	    // InternalKim.g:10415:10: otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_68=(Token)match(input,25,FOLLOW_21); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_68, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_13_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:10419:10: ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:10420:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:10420:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:10421:12: lv_conferredTraits_69_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_138);
            	    	    lv_conferredTraits_69_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"conferredTraits",
            	    	      													lv_conferredTraits_69_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop221;
            	        }
            	    } while (true);

            	    // InternalKim.g:10439:9: (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
            	    int alt223=2;
            	    int LA223_0 = input.LA(1);

            	    if ( (LA223_0==34) ) {
            	        alt223=1;
            	    }
            	    switch (alt223) {
            	        case 1 :
            	            // InternalKim.g:10440:10: otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
            	            {
            	            otherlv_70=(Token)match(input,34,FOLLOW_21); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_70, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_13_3_0());
            	              									
            	            }
            	            // InternalKim.g:10444:10: ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:10445:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:10445:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
            	            // InternalKim.g:10446:12: lv_conferredTargets_71_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_131);
            	            lv_conferredTargets_71_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"conferredTargets",
            	              													lv_conferredTargets_71_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:10463:10: (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
            	            loop222:
            	            do {
            	                int alt222=2;
            	                int LA222_0 = input.LA(1);

            	                if ( (LA222_0==25) ) {
            	                    alt222=1;
            	                }


            	                switch (alt222) {
            	            	case 1 :
            	            	    // InternalKim.g:10464:11: otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_72=(Token)match(input,25,FOLLOW_21); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_72, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_13_3_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:10468:11: ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:10469:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:10469:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:10470:13: lv_conferredTargets_73_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_131);
            	            	    lv_conferredTargets_73_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"conferredTargets",
            	            	      														lv_conferredTargets_73_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop222;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 15 :
            	    // InternalKim.g:10495:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:10495:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:10496:5: {...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14)");
            	    }
            	    // InternalKim.g:10496:118: ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:10497:6: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14);
            	    // InternalKim.g:10500:9: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:10500:10: {...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10500:19: ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:10500:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) )
            	    {
            	    // InternalKim.g:10500:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) )
            	    int alt224=3;
            	    switch ( input.LA(1) ) {
            	    case 168:
            	        {
            	        alt224=1;
            	        }
            	        break;
            	    case 169:
            	        {
            	        alt224=2;
            	        }
            	        break;
            	    case 170:
            	        {
            	        alt224=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 224, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt224) {
            	        case 1 :
            	            // InternalKim.g:10501:10: otherlv_74= 'part'
            	            {
            	            otherlv_74=(Token)match(input,168,FOLLOW_112); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_74, grammarAccess.getConceptStatementBodyAccess().getPartKeyword_3_14_0_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:10506:10: ( (lv_constituent_75_0= 'constituent' ) )
            	            {
            	            // InternalKim.g:10506:10: ( (lv_constituent_75_0= 'constituent' ) )
            	            // InternalKim.g:10507:11: (lv_constituent_75_0= 'constituent' )
            	            {
            	            // InternalKim.g:10507:11: (lv_constituent_75_0= 'constituent' )
            	            // InternalKim.g:10508:12: lv_constituent_75_0= 'constituent'
            	            {
            	            lv_constituent_75_0=(Token)match(input,169,FOLLOW_112); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_constituent_75_0, grammarAccess.getConceptStatementBodyAccess().getConstituentConstituentKeyword_3_14_0_1_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "constituent", true, "constituent");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:10521:10: ( (lv_constitutes_76_0= 'consists' ) )
            	            {
            	            // InternalKim.g:10521:10: ( (lv_constitutes_76_0= 'consists' ) )
            	            // InternalKim.g:10522:11: (lv_constitutes_76_0= 'consists' )
            	            {
            	            // InternalKim.g:10522:11: (lv_constitutes_76_0= 'consists' )
            	            // InternalKim.g:10523:12: lv_constitutes_76_0= 'consists'
            	            {
            	            lv_constitutes_76_0=(Token)match(input,170,FOLLOW_112); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_constitutes_76_0, grammarAccess.getConceptStatementBodyAccess().getConstitutesConsistsKeyword_3_14_0_2_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "constitutes", true, "consists");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:10536:9: ( (lv_partOf_77_0= 'of' ) )
            	    // InternalKim.g:10537:10: (lv_partOf_77_0= 'of' )
            	    {
            	    // InternalKim.g:10537:10: (lv_partOf_77_0= 'of' )
            	    // InternalKim.g:10538:11: lv_partOf_77_0= 'of'
            	    {
            	    lv_partOf_77_0=(Token)match(input,103,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_partOf_77_0, grammarAccess.getConceptStatementBodyAccess().getPartOfOfKeyword_3_14_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											setWithLastConsumed(current, "partOf", true, "of");
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10550:9: ( (lv_whole_78_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:10551:10: (lv_whole_78_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:10551:10: (lv_whole_78_0= ruleConceptDeclaration )
            	    // InternalKim.g:10552:11: lv_whole_78_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getWholeConceptDeclarationParserRuleCall_3_14_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_126);
            	    lv_whole_78_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"whole",
            	      												lv_whole_78_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 16 :
            	    // InternalKim.g:10575:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:10575:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:10576:5: {...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15)");
            	    }
            	    // InternalKim.g:10576:118: ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:10577:6: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15);
            	    // InternalKim.g:10580:9: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:10580:10: {...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10580:19: (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:10580:20: otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_79=(Token)match(input,171,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_79, grammarAccess.getConceptStatementBodyAccess().getCreatesKeyword_3_15_0());
            	      								
            	    }
            	    // InternalKim.g:10584:9: ( (lv_creates_80_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:10585:10: (lv_creates_80_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:10585:10: (lv_creates_80_0= ruleConceptDeclaration )
            	    // InternalKim.g:10586:11: lv_creates_80_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_131);
            	    lv_creates_80_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"creates",
            	      												lv_creates_80_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10603:9: (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
            	    loop225:
            	    do {
            	        int alt225=2;
            	        int LA225_0 = input.LA(1);

            	        if ( (LA225_0==25) ) {
            	            alt225=1;
            	        }


            	        switch (alt225) {
            	    	case 1 :
            	    	    // InternalKim.g:10604:10: otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_81=(Token)match(input,25,FOLLOW_21); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_81, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_15_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:10608:10: ( (lv_creates_82_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:10609:11: (lv_creates_82_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:10609:11: (lv_creates_82_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:10610:12: lv_creates_82_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_131);
            	    	    lv_creates_82_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"creates",
            	    	      													lv_creates_82_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop225;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 17 :
            	    // InternalKim.g:10634:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:10634:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
            	    // InternalKim.g:10635:5: {...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16)");
            	    }
            	    // InternalKim.g:10635:118: ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
            	    // InternalKim.g:10636:6: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16);
            	    // InternalKim.g:10639:9: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
            	    // InternalKim.g:10639:10: {...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10639:19: (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
            	    // InternalKim.g:10639:20: otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
            	    {
            	    otherlv_83=(Token)match(input,172,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_83, grammarAccess.getConceptStatementBodyAccess().getAppliesKeyword_3_16_0());
            	      								
            	    }
            	    otherlv_84=(Token)match(input,34,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_84, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_16_1());
            	      								
            	    }
            	    // InternalKim.g:10647:9: ( (lv_traitTargets_85_0= ruleApplicableTarget ) )
            	    // InternalKim.g:10648:10: (lv_traitTargets_85_0= ruleApplicableTarget )
            	    {
            	    // InternalKim.g:10648:10: (lv_traitTargets_85_0= ruleApplicableTarget )
            	    // InternalKim.g:10649:11: lv_traitTargets_85_0= ruleApplicableTarget
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_131);
            	    lv_traitTargets_85_0=ruleApplicableTarget();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"traitTargets",
            	      												lv_traitTargets_85_0,
            	      												"org.integratedmodelling.kim.Kim.ApplicableTarget");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10666:9: (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
            	    loop226:
            	    do {
            	        int alt226=2;
            	        int LA226_0 = input.LA(1);

            	        if ( (LA226_0==25) ) {
            	            alt226=1;
            	        }


            	        switch (alt226) {
            	    	case 1 :
            	    	    // InternalKim.g:10667:10: otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
            	    	    {
            	    	    otherlv_86=(Token)match(input,25,FOLLOW_21); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_86, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_16_3_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:10671:10: ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
            	    	    // InternalKim.g:10672:11: (lv_traitTargets_87_0= ruleApplicableTarget )
            	    	    {
            	    	    // InternalKim.g:10672:11: (lv_traitTargets_87_0= ruleApplicableTarget )
            	    	    // InternalKim.g:10673:12: lv_traitTargets_87_0= ruleApplicableTarget
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_131);
            	    	    lv_traitTargets_87_0=ruleApplicableTarget();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"traitTargets",
            	    	      													lv_traitTargets_87_0,
            	    	      													"org.integratedmodelling.kim.Kim.ApplicableTarget");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop226;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 18 :
            	    // InternalKim.g:10697:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:10697:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:10698:5: {...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17)");
            	    }
            	    // InternalKim.g:10698:118: ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:10699:6: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17);
            	    // InternalKim.g:10702:9: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:10702:10: {...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10702:19: (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
            	    // InternalKim.g:10702:20: otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
            	    {
            	    otherlv_88=(Token)match(input,173,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_88, grammarAccess.getConceptStatementBodyAccess().getLinksKeyword_3_17_0());
            	      								
            	    }
            	    // InternalKim.g:10706:9: ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:10707:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:10707:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:10708:11: lv_domains_89_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_23);
            	    lv_domains_89_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"domains",
            	      												lv_domains_89_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10725:9: ( ( 'to' )=>otherlv_90= 'to' )
            	    // InternalKim.g:10726:10: ( 'to' )=>otherlv_90= 'to'
            	    {
            	    otherlv_90=(Token)match(input,34,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_90, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_17_2());
            	      									
            	    }

            	    }

            	    // InternalKim.g:10732:9: ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:10733:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:10733:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:10734:11: lv_ranges_91_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_131);
            	    lv_ranges_91_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"ranges",
            	      												lv_ranges_91_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10751:9: (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
            	    loop227:
            	    do {
            	        int alt227=2;
            	        int LA227_0 = input.LA(1);

            	        if ( (LA227_0==25) ) {
            	            alt227=1;
            	        }


            	        switch (alt227) {
            	    	case 1 :
            	    	    // InternalKim.g:10752:10: otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_92=(Token)match(input,25,FOLLOW_21); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_92, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_17_4_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:10756:10: ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) )
            	    	    // InternalKim.g:10757:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:10757:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
            	    	    // InternalKim.g:10758:12: lv_domains_93_0= ruleSimpleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_4_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_23);
            	    	    lv_domains_93_0=ruleSimpleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"domains",
            	    	      													lv_domains_93_0,
            	    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }

            	    	    // InternalKim.g:10775:10: ( ( 'to' )=>otherlv_94= 'to' )
            	    	    // InternalKim.g:10776:11: ( 'to' )=>otherlv_94= 'to'
            	    	    {
            	    	    otherlv_94=(Token)match(input,34,FOLLOW_21); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_94, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_17_4_2());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:10782:10: ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
            	    	    // InternalKim.g:10783:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:10783:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
            	    	    // InternalKim.g:10784:12: lv_ranges_95_0= ruleSimpleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_4_3_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_131);
            	    	    lv_ranges_95_0=ruleSimpleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"ranges",
            	    	      													lv_ranges_95_0,
            	    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop227;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 19 :
            	    // InternalKim.g:10808:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:10808:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:10809:5: {...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18)");
            	    }
            	    // InternalKim.g:10809:118: ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:10810:6: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18);
            	    // InternalKim.g:10813:9: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:10813:10: {...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10813:19: (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:10813:20: otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_96=(Token)match(input,174,FOLLOW_112); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_96, grammarAccess.getConceptStatementBodyAccess().getInverseKeyword_3_18_0());
            	      								
            	    }
            	    otherlv_97=(Token)match(input,103,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_97, grammarAccess.getConceptStatementBodyAccess().getOfKeyword_3_18_1());
            	      								
            	    }
            	    // InternalKim.g:10821:9: ( (lv_inverse_98_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:10822:10: (lv_inverse_98_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:10822:10: (lv_inverse_98_0= ruleConceptDeclaration )
            	    // InternalKim.g:10823:11: lv_inverse_98_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getInverseConceptDeclarationParserRuleCall_3_18_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_126);
            	    lv_inverse_98_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"inverse",
            	      												lv_inverse_98_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 20 :
            	    // InternalKim.g:10846:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:10846:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:10847:5: {...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19)");
            	    }
            	    // InternalKim.g:10847:118: ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:10848:6: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19);
            	    // InternalKim.g:10851:9: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:10851:10: {...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10851:19: (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:10851:20: otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_99=(Token)match(input,175,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_99, grammarAccess.getConceptStatementBodyAccess().getAffectsKeyword_3_19_0());
            	      								
            	    }
            	    // InternalKim.g:10855:9: ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:10856:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:10856:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
            	    // InternalKim.g:10857:11: lv_qualitiesAffected_100_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_131);
            	    lv_qualitiesAffected_100_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"qualitiesAffected",
            	      												lv_qualitiesAffected_100_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10874:9: (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
            	    loop228:
            	    do {
            	        int alt228=2;
            	        int LA228_0 = input.LA(1);

            	        if ( (LA228_0==25) ) {
            	            alt228=1;
            	        }


            	        switch (alt228) {
            	    	case 1 :
            	    	    // InternalKim.g:10875:10: otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_101=(Token)match(input,25,FOLLOW_21); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_101, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_19_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:10879:10: ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:10880:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:10880:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:10881:12: lv_qualitiesAffected_102_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_131);
            	    	    lv_qualitiesAffected_102_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"qualitiesAffected",
            	    	      													lv_qualitiesAffected_102_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop228;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 21 :
            	    // InternalKim.g:10905:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:10905:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
            	    // InternalKim.g:10906:5: {...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20)");
            	    }
            	    // InternalKim.g:10906:118: ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
            	    // InternalKim.g:10907:6: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20);
            	    // InternalKim.g:10910:9: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
            	    // InternalKim.g:10910:10: {...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10910:19: (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
            	    // InternalKim.g:10910:20: otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
            	    {
            	    otherlv_103=(Token)match(input,164,FOLLOW_139); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_103, grammarAccess.getConceptStatementBodyAccess().getHasKeyword_3_20_0());
            	      								
            	    }
            	    // InternalKim.g:10914:9: ( (lv_disjoint_104_0= 'disjoint' ) )?
            	    int alt229=2;
            	    int LA229_0 = input.LA(1);

            	    if ( (LA229_0==82) ) {
            	        alt229=1;
            	    }
            	    switch (alt229) {
            	        case 1 :
            	            // InternalKim.g:10915:10: (lv_disjoint_104_0= 'disjoint' )
            	            {
            	            // InternalKim.g:10915:10: (lv_disjoint_104_0= 'disjoint' )
            	            // InternalKim.g:10916:11: lv_disjoint_104_0= 'disjoint'
            	            {
            	            lv_disjoint_104_0=(Token)match(input,82,FOLLOW_140); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_disjoint_104_0, grammarAccess.getConceptStatementBodyAccess().getDisjointDisjointKeyword_3_20_1_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              											}
            	              											setWithLastConsumed(current, "disjoint", true, "disjoint");
            	              										
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    otherlv_105=(Token)match(input,176,FOLLOW_141); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_105, grammarAccess.getConceptStatementBodyAccess().getChildrenKeyword_3_20_2());
            	      								
            	    }
            	    // InternalKim.g:10932:9: ( (lv_children_106_0= ruleChildConcept ) )
            	    // InternalKim.g:10933:10: (lv_children_106_0= ruleChildConcept )
            	    {
            	    // InternalKim.g:10933:10: (lv_children_106_0= ruleChildConcept )
            	    // InternalKim.g:10934:11: lv_children_106_0= ruleChildConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_131);
            	    lv_children_106_0=ruleChildConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"children",
            	      												lv_children_106_0,
            	      												"org.integratedmodelling.kim.Kim.ChildConcept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10951:9: (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
            	    loop230:
            	    do {
            	        int alt230=2;
            	        int LA230_0 = input.LA(1);

            	        if ( (LA230_0==25) ) {
            	            alt230=1;
            	        }


            	        switch (alt230) {
            	    	case 1 :
            	    	    // InternalKim.g:10952:10: otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) )
            	    	    {
            	    	    otherlv_107=(Token)match(input,25,FOLLOW_141); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_107, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_20_4_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:10956:10: ( (lv_children_108_0= ruleChildConcept ) )
            	    	    // InternalKim.g:10957:11: (lv_children_108_0= ruleChildConcept )
            	    	    {
            	    	    // InternalKim.g:10957:11: (lv_children_108_0= ruleChildConcept )
            	    	    // InternalKim.g:10958:12: lv_children_108_0= ruleChildConcept
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_4_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_131);
            	    	    lv_children_108_0=ruleChildConcept();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"children",
            	    	      													lv_children_108_0,
            	    	      													"org.integratedmodelling.kim.Kim.ChildConcept");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop230;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 22 :
            	    // InternalKim.g:10982:4: ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) )
            	    {
            	    // InternalKim.g:10982:4: ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) )
            	    // InternalKim.g:10983:5: {...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21)");
            	    }
            	    // InternalKim.g:10983:118: ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ )
            	    // InternalKim.g:10984:6: ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21);
            	    // InternalKim.g:10987:9: ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+
            	    int cnt231=0;
            	    loop231:
            	    do {
            	        int alt231=2;
            	        switch ( input.LA(1) ) {
            	        case 164:
            	            {
            	            int LA231_2 = input.LA(2);

            	            if ( ((synpred402_InternalKim()&&(true))) ) {
            	                alt231=1;
            	            }


            	            }
            	            break;
            	        case 182:
            	            {
            	            int LA231_3 = input.LA(2);

            	            if ( ((synpred402_InternalKim()&&(true))) ) {
            	                alt231=1;
            	            }


            	            }
            	            break;
            	        case 183:
            	            {
            	            int LA231_4 = input.LA(2);

            	            if ( ((synpred402_InternalKim()&&(true))) ) {
            	                alt231=1;
            	            }


            	            }
            	            break;
            	        case 184:
            	            {
            	            int LA231_5 = input.LA(2);

            	            if ( ((synpred402_InternalKim()&&(true))) ) {
            	                alt231=1;
            	            }


            	            }
            	            break;

            	        }

            	        switch (alt231) {
            	    	case 1 :
            	    	    // InternalKim.g:10987:10: {...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    	    }
            	    	    // InternalKim.g:10987:19: ( (lv_restrictions_109_0= ruleRestrictionStatement ) )
            	    	    // InternalKim.g:10987:20: (lv_restrictions_109_0= ruleRestrictionStatement )
            	    	    {
            	    	    // InternalKim.g:10987:20: (lv_restrictions_109_0= ruleRestrictionStatement )
            	    	    // InternalKim.g:10988:10: lv_restrictions_109_0= ruleRestrictionStatement
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictionsRestrictionStatementParserRuleCall_3_21_0());
            	    	      									
            	    	    }
            	    	    pushFollow(FOLLOW_126);
            	    	    lv_restrictions_109_0=ruleRestrictionStatement();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										if (current==null) {
            	    	      											current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      										}
            	    	      										add(
            	    	      											current,
            	    	      											"restrictions",
            	    	      											lv_restrictions_109_0,
            	    	      											"org.integratedmodelling.kim.Kim.RestrictionStatement");
            	    	      										afterParserOrEnumRuleCall();
            	    	      									
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt231 >= 1 ) break loop231;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(231, input);
            	                throw eee;
            	        }
            	        cnt231++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 23 :
            	    // InternalKim.g:11010:4: ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11010:4: ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) )
            	    // InternalKim.g:11011:5: {...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22)");
            	    }
            	    // InternalKim.g:11011:118: ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) )
            	    // InternalKim.g:11012:6: ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22);
            	    // InternalKim.g:11015:9: ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) )
            	    // InternalKim.g:11015:10: {...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11015:19: (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) )
            	    // InternalKim.g:11015:20: otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) )
            	    {
            	    otherlv_110=(Token)match(input,40,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_110, grammarAccess.getConceptStatementBodyAccess().getWithKeyword_3_22_0());
            	      								
            	    }
            	    otherlv_111=(Token)match(input,41,FOLLOW_32); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_111, grammarAccess.getConceptStatementBodyAccess().getMetadataKeyword_3_22_1());
            	      								
            	    }
            	    // InternalKim.g:11023:9: ( (lv_metadata_112_0= ruleMetadata ) )
            	    // InternalKim.g:11024:10: (lv_metadata_112_0= ruleMetadata )
            	    {
            	    // InternalKim.g:11024:10: (lv_metadata_112_0= ruleMetadata )
            	    // InternalKim.g:11025:11: lv_metadata_112_0= ruleMetadata
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getMetadataMetadataParserRuleCall_3_22_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_126);
            	    lv_metadata_112_0=ruleMetadata();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"metadata",
            	      												lv_metadata_112_0,
            	      												"org.integratedmodelling.kim.Kim.Metadata");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop232;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptStatementBody"


    // $ANTLR start "entryRuleApplicableTarget"
    // InternalKim.g:11062:1: entryRuleApplicableTarget returns [EObject current=null] : iv_ruleApplicableTarget= ruleApplicableTarget EOF ;
    public final EObject entryRuleApplicableTarget() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleApplicableTarget = null;


        try {
            // InternalKim.g:11062:57: (iv_ruleApplicableTarget= ruleApplicableTarget EOF )
            // InternalKim.g:11063:2: iv_ruleApplicableTarget= ruleApplicableTarget EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getApplicableTargetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleApplicableTarget=ruleApplicableTarget();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleApplicableTarget; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleApplicableTarget"


    // $ANTLR start "ruleApplicableTarget"
    // InternalKim.g:11069:1: ruleApplicableTarget returns [EObject current=null] : ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? ) ;
    public final EObject ruleApplicableTarget() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_target_0_0 = null;

        EObject lv_linkFrom_2_0 = null;

        EObject lv_linkTo_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11075:2: ( ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? ) )
            // InternalKim.g:11076:2: ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? )
            {
            // InternalKim.g:11076:2: ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? )
            // InternalKim.g:11077:3: ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )?
            {
            // InternalKim.g:11077:3: ( (lv_target_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:11078:4: (lv_target_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:11078:4: (lv_target_0_0= ruleConceptDeclaration )
            // InternalKim.g:11079:5: lv_target_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getApplicableTargetAccess().getTargetConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_142);
            lv_target_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
              					}
              					set(
              						current,
              						"target",
              						lv_target_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:11096:3: (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )?
            int alt233=2;
            int LA233_0 = input.LA(1);

            if ( (LA233_0==177) ) {
                alt233=1;
            }
            switch (alt233) {
                case 1 :
                    // InternalKim.g:11097:4: otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) )
                    {
                    otherlv_1=(Token)match(input,177,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getApplicableTargetAccess().getBetweenKeyword_1_0());
                      			
                    }
                    // InternalKim.g:11101:4: ( (lv_linkFrom_2_0= ruleConceptDeclaration ) )
                    // InternalKim.g:11102:5: (lv_linkFrom_2_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:11102:5: (lv_linkFrom_2_0= ruleConceptDeclaration )
                    // InternalKim.g:11103:6: lv_linkFrom_2_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getApplicableTargetAccess().getLinkFromConceptDeclarationParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_143);
                    lv_linkFrom_2_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
                      						}
                      						set(
                      							current,
                      							"linkFrom",
                      							lv_linkFrom_2_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,138,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getApplicableTargetAccess().getAndKeyword_1_2());
                      			
                    }
                    // InternalKim.g:11124:4: ( (lv_linkTo_4_0= ruleConceptDeclaration ) )
                    // InternalKim.g:11125:5: (lv_linkTo_4_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:11125:5: (lv_linkTo_4_0= ruleConceptDeclaration )
                    // InternalKim.g:11126:6: lv_linkTo_4_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getApplicableTargetAccess().getLinkToConceptDeclarationParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_linkTo_4_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
                      						}
                      						set(
                      							current,
                      							"linkTo",
                      							lv_linkTo_4_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleApplicableTarget"


    // $ANTLR start "entryRuleChildConcept"
    // InternalKim.g:11148:1: entryRuleChildConcept returns [EObject current=null] : iv_ruleChildConcept= ruleChildConcept EOF ;
    public final EObject entryRuleChildConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChildConcept = null;


        try {
            // InternalKim.g:11148:53: (iv_ruleChildConcept= ruleChildConcept EOF )
            // InternalKim.g:11149:2: iv_ruleChildConcept= ruleChildConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChildConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChildConcept=ruleChildConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChildConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChildConcept"


    // $ANTLR start "ruleChildConcept"
    // InternalKim.g:11155:1: ruleChildConcept returns [EObject current=null] : ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) ) ;
    public final EObject ruleChildConcept() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_0_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_ConceptStatementBody_3 = null;



        	enterRule();

        try {
            // InternalKim.g:11161:2: ( ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) ) )
            // InternalKim.g:11162:2: ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) )
            {
            // InternalKim.g:11162:2: ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) )
            int alt235=2;
            int LA235_0 = input.LA(1);

            if ( (LA235_0==RULE_CAMELCASE_ID||LA235_0==145) ) {
                alt235=1;
            }
            else if ( (LA235_0==36) ) {
                alt235=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 235, 0, input);

                throw nvae;
            }
            switch (alt235) {
                case 1 :
                    // InternalKim.g:11163:3: ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:11163:3: ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:11164:4: ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:11164:4: ( (lv_abstract_0_0= 'abstract' ) )?
                    int alt234=2;
                    int LA234_0 = input.LA(1);

                    if ( (LA234_0==145) ) {
                        alt234=1;
                    }
                    switch (alt234) {
                        case 1 :
                            // InternalKim.g:11165:5: (lv_abstract_0_0= 'abstract' )
                            {
                            // InternalKim.g:11165:5: (lv_abstract_0_0= 'abstract' )
                            // InternalKim.g:11166:6: lv_abstract_0_0= 'abstract'
                            {
                            lv_abstract_0_0=(Token)match(input,145,FOLLOW_144); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_abstract_0_0, grammarAccess.getChildConceptAccess().getAbstractAbstractKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getChildConceptRule());
                              						}
                              						setWithLastConsumed(current, "abstract", true, "abstract");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:11178:4: ( (lv_name_1_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:11179:5: (lv_name_1_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:11179:5: (lv_name_1_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:11180:6: lv_name_1_0= RULE_CAMELCASE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_1_0, grammarAccess.getChildConceptAccess().getNameCAMELCASE_IDTerminalRuleCall_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getChildConceptRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:11198:3: (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' )
                    {
                    // InternalKim.g:11198:3: (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' )
                    // InternalKim.g:11199:4: otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,36,FOLLOW_123); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getChildConceptAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getChildConceptAccess().getConceptStatementBodyParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_95);
                    this_ConceptStatementBody_3=ruleConceptStatementBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ConceptStatementBody_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_4=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getChildConceptAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChildConcept"


    // $ANTLR start "entryRuleIdentityRequirement"
    // InternalKim.g:11223:1: entryRuleIdentityRequirement returns [EObject current=null] : iv_ruleIdentityRequirement= ruleIdentityRequirement EOF ;
    public final EObject entryRuleIdentityRequirement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIdentityRequirement = null;


        try {
            // InternalKim.g:11223:60: (iv_ruleIdentityRequirement= ruleIdentityRequirement EOF )
            // InternalKim.g:11224:2: iv_ruleIdentityRequirement= ruleIdentityRequirement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentityRequirementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentityRequirement=ruleIdentityRequirement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentityRequirement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentityRequirement"


    // $ANTLR start "ruleIdentityRequirement"
    // InternalKim.g:11230:1: ruleIdentityRequirement returns [EObject current=null] : ( ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* ) | (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) ) ) ;
    public final EObject ruleIdentityRequirement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_authority_8_1=null;
        Token lv_authority_8_2=null;
        EObject lv_identities_4_0 = null;

        EObject lv_identities_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11236:2: ( ( ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* ) | (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
            // InternalKim.g:11237:2: ( ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* ) | (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) ) )
            {
            // InternalKim.g:11237:2: ( ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* ) | (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) ) )
            int alt239=2;
            int LA239_0 = input.LA(1);

            if ( ((LA239_0>=178 && LA239_0<=181)) ) {
                alt239=1;
            }
            else if ( (LA239_0==155) ) {
                alt239=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 239, 0, input);

                throw nvae;
            }
            switch (alt239) {
                case 1 :
                    // InternalKim.g:11238:3: ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* )
                    {
                    // InternalKim.g:11238:3: ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* )
                    // InternalKim.g:11239:4: (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )*
                    {
                    // InternalKim.g:11239:4: (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' )
                    int alt236=4;
                    switch ( input.LA(1) ) {
                    case 178:
                        {
                        alt236=1;
                        }
                        break;
                    case 179:
                        {
                        alt236=2;
                        }
                        break;
                    case 180:
                        {
                        alt236=3;
                        }
                        break;
                    case 181:
                        {
                        alt236=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 236, 0, input);

                        throw nvae;
                    }

                    switch (alt236) {
                        case 1 :
                            // InternalKim.g:11240:5: otherlv_0= 'identity'
                            {
                            otherlv_0=(Token)match(input,178,FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_0, grammarAccess.getIdentityRequirementAccess().getIdentityKeyword_0_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:11245:5: otherlv_1= 'attribute'
                            {
                            otherlv_1=(Token)match(input,179,FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getIdentityRequirementAccess().getAttributeKeyword_0_0_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:11250:5: otherlv_2= 'realm'
                            {
                            otherlv_2=(Token)match(input,180,FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getIdentityRequirementAccess().getRealmKeyword_0_0_2());
                              				
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:11255:5: otherlv_3= 'extent'
                            {
                            otherlv_3=(Token)match(input,181,FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getIdentityRequirementAccess().getExtentKeyword_0_0_3());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:11260:4: ( (lv_identities_4_0= ruleConceptDeclaration ) )
                    // InternalKim.g:11261:5: (lv_identities_4_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:11261:5: (lv_identities_4_0= ruleConceptDeclaration )
                    // InternalKim.g:11262:6: lv_identities_4_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIdentityRequirementAccess().getIdentitiesConceptDeclarationParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_35);
                    lv_identities_4_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIdentityRequirementRule());
                      						}
                      						add(
                      							current,
                      							"identities",
                      							lv_identities_4_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:11279:4: (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )*
                    loop237:
                    do {
                        int alt237=2;
                        int LA237_0 = input.LA(1);

                        if ( (LA237_0==25) ) {
                            int LA237_1 = input.LA(2);

                            if ( (LA237_1==RULE_LOWERCASE_ID||(LA237_1>=RULE_CAMELCASE_ID && LA237_1<=RULE_LOWERCASE_DASHID)||LA237_1==36||(LA237_1>=112 && LA237_1<=113)||(LA237_1>=121 && LA237_1<=122)||(LA237_1>=124 && LA237_1<=136)) ) {
                                alt237=1;
                            }


                        }


                        switch (alt237) {
                    	case 1 :
                    	    // InternalKim.g:11280:5: otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) )
                    	    {
                    	    otherlv_5=(Token)match(input,25,FOLLOW_21); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getIdentityRequirementAccess().getCommaKeyword_0_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:11284:5: ( (lv_identities_6_0= ruleConceptDeclaration ) )
                    	    // InternalKim.g:11285:6: (lv_identities_6_0= ruleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:11285:6: (lv_identities_6_0= ruleConceptDeclaration )
                    	    // InternalKim.g:11286:7: lv_identities_6_0= ruleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getIdentityRequirementAccess().getIdentitiesConceptDeclarationParserRuleCall_0_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_35);
                    	    lv_identities_6_0=ruleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getIdentityRequirementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"identities",
                    	      								lv_identities_6_0,
                    	      								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop237;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:11306:3: (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) )
                    {
                    // InternalKim.g:11306:3: (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) )
                    // InternalKim.g:11307:4: otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) )
                    {
                    otherlv_7=(Token)match(input,155,FOLLOW_111); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getIdentityRequirementAccess().getAuthorityKeyword_1_0());
                      			
                    }
                    // InternalKim.g:11311:4: ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) )
                    // InternalKim.g:11312:5: ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) )
                    {
                    // InternalKim.g:11312:5: ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) )
                    // InternalKim.g:11313:6: (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH )
                    {
                    // InternalKim.g:11313:6: (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH )
                    int alt238=2;
                    int LA238_0 = input.LA(1);

                    if ( (LA238_0==RULE_UPPERCASE_ID) ) {
                        alt238=1;
                    }
                    else if ( (LA238_0==RULE_UPPERCASE_PATH) ) {
                        alt238=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 238, 0, input);

                        throw nvae;
                    }
                    switch (alt238) {
                        case 1 :
                            // InternalKim.g:11314:7: lv_authority_8_1= RULE_UPPERCASE_ID
                            {
                            lv_authority_8_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authority_8_1, grammarAccess.getIdentityRequirementAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"authority",
                              								lv_authority_8_1,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:11329:7: lv_authority_8_2= RULE_UPPERCASE_PATH
                            {
                            lv_authority_8_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authority_8_2, grammarAccess.getIdentityRequirementAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"authority",
                              								lv_authority_8_2,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentityRequirement"


    // $ANTLR start "entryRuleRestrictionStatement"
    // InternalKim.g:11351:1: entryRuleRestrictionStatement returns [EObject current=null] : iv_ruleRestrictionStatement= ruleRestrictionStatement EOF ;
    public final EObject entryRuleRestrictionStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictionStatement = null;


        try {
            // InternalKim.g:11351:61: (iv_ruleRestrictionStatement= ruleRestrictionStatement EOF )
            // InternalKim.g:11352:2: iv_ruleRestrictionStatement= ruleRestrictionStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictionStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRestrictionStatement=ruleRestrictionStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictionStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictionStatement"


    // $ANTLR start "ruleRestrictionStatement"
    // InternalKim.g:11358:1: ruleRestrictionStatement returns [EObject current=null] : ( ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* ) | (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* ) | (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) ) ) ;
    public final EObject ruleRestrictionStatement() throws RecognitionException {
        EObject current = null;

        Token lv_relType_0_1=null;
        Token lv_relType_0_2=null;
        Token lv_relType_0_3=null;
        Token lv_relType_0_4=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_authorities_6_1=null;
        Token lv_authorities_6_2=null;
        Token otherlv_7=null;
        Token lv_authorities_8_1=null;
        Token lv_authorities_8_2=null;
        Token otherlv_9=null;
        Token lv_literal_11_0=null;
        Token lv_subject_12_1=null;
        EObject lv_definitions_1_0 = null;

        EObject lv_definitions_3_0 = null;

        EObject lv_value_10_0 = null;

        AntlrDatatypeRuleToken lv_subject_12_2 = null;



        	enterRule();

        try {
            // InternalKim.g:11364:2: ( ( ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* ) | (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* ) | (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) ) ) )
            // InternalKim.g:11365:2: ( ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* ) | (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* ) | (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) ) )
            {
            // InternalKim.g:11365:2: ( ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* ) | (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* ) | (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) ) )
            int alt246=3;
            int LA246_0 = input.LA(1);

            if ( (LA246_0==182) ) {
                switch ( input.LA(2) ) {
                case RULE_STRING:
                case RULE_INT:
                case 26:
                case 27:
                case 232:
                case 233:
                    {
                    alt246=3;
                    }
                    break;
                case RULE_LOWERCASE_ID:
                case RULE_CAMELCASE_ID:
                case RULE_LOWERCASE_DASHID:
                case 36:
                case 73:
                case 74:
                case 112:
                case 113:
                case 121:
                case 122:
                case 124:
                case 125:
                case 126:
                case 127:
                case 128:
                case 129:
                case 130:
                case 131:
                case 132:
                case 133:
                case 134:
                case 135:
                case 136:
                case 185:
                case 186:
                case 187:
                case 236:
                case 237:
                case 238:
                    {
                    alt246=1;
                    }
                    break;
                case 155:
                    {
                    alt246=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 246, 1, input);

                    throw nvae;
                }

            }
            else if ( (LA246_0==164||(LA246_0>=183 && LA246_0<=184)) ) {
                alt246=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 246, 0, input);

                throw nvae;
            }
            switch (alt246) {
                case 1 :
                    // InternalKim.g:11366:3: ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* )
                    {
                    // InternalKim.g:11366:3: ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* )
                    // InternalKim.g:11367:4: ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )*
                    {
                    // InternalKim.g:11367:4: ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) )
                    // InternalKim.g:11368:5: ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) )
                    {
                    // InternalKim.g:11368:5: ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) )
                    // InternalKim.g:11369:6: (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' )
                    {
                    // InternalKim.g:11369:6: (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' )
                    int alt240=4;
                    switch ( input.LA(1) ) {
                    case 182:
                        {
                        alt240=1;
                        }
                        break;
                    case 164:
                        {
                        alt240=2;
                        }
                        break;
                    case 183:
                        {
                        alt240=3;
                        }
                        break;
                    case 184:
                        {
                        alt240=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 240, 0, input);

                        throw nvae;
                    }

                    switch (alt240) {
                        case 1 :
                            // InternalKim.g:11370:7: lv_relType_0_1= 'uses'
                            {
                            lv_relType_0_1=(Token)match(input,182,FOLLOW_145); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_relType_0_1, grammarAccess.getRestrictionStatementAccess().getRelTypeUsesKeyword_0_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							setWithLastConsumed(current, "relType", lv_relType_0_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:11381:7: lv_relType_0_2= 'has'
                            {
                            lv_relType_0_2=(Token)match(input,164,FOLLOW_145); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_relType_0_2, grammarAccess.getRestrictionStatementAccess().getRelTypeHasKeyword_0_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							setWithLastConsumed(current, "relType", lv_relType_0_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:11392:7: lv_relType_0_3= 'contains'
                            {
                            lv_relType_0_3=(Token)match(input,183,FOLLOW_145); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_relType_0_3, grammarAccess.getRestrictionStatementAccess().getRelTypeContainsKeyword_0_0_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							setWithLastConsumed(current, "relType", lv_relType_0_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:11403:7: lv_relType_0_4= 'implies'
                            {
                            lv_relType_0_4=(Token)match(input,184,FOLLOW_145); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_relType_0_4, grammarAccess.getRestrictionStatementAccess().getRelTypeImpliesKeyword_0_0_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							setWithLastConsumed(current, "relType", lv_relType_0_4, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:11416:4: ( (lv_definitions_1_0= ruleRestrictionDefinition ) )
                    // InternalKim.g:11417:5: (lv_definitions_1_0= ruleRestrictionDefinition )
                    {
                    // InternalKim.g:11417:5: (lv_definitions_1_0= ruleRestrictionDefinition )
                    // InternalKim.g:11418:6: lv_definitions_1_0= ruleRestrictionDefinition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRestrictionStatementAccess().getDefinitionsRestrictionDefinitionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_35);
                    lv_definitions_1_0=ruleRestrictionDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRestrictionStatementRule());
                      						}
                      						add(
                      							current,
                      							"definitions",
                      							lv_definitions_1_0,
                      							"org.integratedmodelling.kim.Kim.RestrictionDefinition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:11435:4: (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )*
                    loop241:
                    do {
                        int alt241=2;
                        int LA241_0 = input.LA(1);

                        if ( (LA241_0==25) ) {
                            alt241=1;
                        }


                        switch (alt241) {
                    	case 1 :
                    	    // InternalKim.g:11436:5: otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) )
                    	    {
                    	    otherlv_2=(Token)match(input,25,FOLLOW_145); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_2, grammarAccess.getRestrictionStatementAccess().getCommaKeyword_0_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:11440:5: ( (lv_definitions_3_0= ruleRestrictionDefinition ) )
                    	    // InternalKim.g:11441:6: (lv_definitions_3_0= ruleRestrictionDefinition )
                    	    {
                    	    // InternalKim.g:11441:6: (lv_definitions_3_0= ruleRestrictionDefinition )
                    	    // InternalKim.g:11442:7: lv_definitions_3_0= ruleRestrictionDefinition
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getRestrictionStatementAccess().getDefinitionsRestrictionDefinitionParserRuleCall_0_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_35);
                    	    lv_definitions_3_0=ruleRestrictionDefinition();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getRestrictionStatementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"definitions",
                    	      								lv_definitions_3_0,
                    	      								"org.integratedmodelling.kim.Kim.RestrictionDefinition");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop241;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:11462:3: (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* )
                    {
                    // InternalKim.g:11462:3: (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* )
                    // InternalKim.g:11463:4: otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )*
                    {
                    otherlv_4=(Token)match(input,182,FOLLOW_146); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getRestrictionStatementAccess().getUsesKeyword_1_0());
                      			
                    }
                    otherlv_5=(Token)match(input,155,FOLLOW_111); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getRestrictionStatementAccess().getAuthorityKeyword_1_1());
                      			
                    }
                    // InternalKim.g:11471:4: ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) )
                    // InternalKim.g:11472:5: ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) )
                    {
                    // InternalKim.g:11472:5: ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) )
                    // InternalKim.g:11473:6: (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH )
                    {
                    // InternalKim.g:11473:6: (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH )
                    int alt242=2;
                    int LA242_0 = input.LA(1);

                    if ( (LA242_0==RULE_UPPERCASE_ID) ) {
                        alt242=1;
                    }
                    else if ( (LA242_0==RULE_UPPERCASE_PATH) ) {
                        alt242=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 242, 0, input);

                        throw nvae;
                    }
                    switch (alt242) {
                        case 1 :
                            // InternalKim.g:11474:7: lv_authorities_6_1= RULE_UPPERCASE_ID
                            {
                            lv_authorities_6_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_35); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authorities_6_1, grammarAccess.getRestrictionStatementAccess().getAuthoritiesUPPERCASE_IDTerminalRuleCall_1_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							addWithLastConsumed(
                              								current,
                              								"authorities",
                              								lv_authorities_6_1,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:11489:7: lv_authorities_6_2= RULE_UPPERCASE_PATH
                            {
                            lv_authorities_6_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_35); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authorities_6_2, grammarAccess.getRestrictionStatementAccess().getAuthoritiesUPPERCASE_PATHTerminalRuleCall_1_2_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							addWithLastConsumed(
                              								current,
                              								"authorities",
                              								lv_authorities_6_2,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:11506:4: ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )*
                    loop244:
                    do {
                        int alt244=2;
                        int LA244_0 = input.LA(1);

                        if ( (LA244_0==25) ) {
                            alt244=1;
                        }


                        switch (alt244) {
                    	case 1 :
                    	    // InternalKim.g:11507:5: ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) )
                    	    {
                    	    // InternalKim.g:11507:5: ( ( ',' )=>otherlv_7= ',' )
                    	    // InternalKim.g:11508:6: ( ',' )=>otherlv_7= ','
                    	    {
                    	    otherlv_7=(Token)match(input,25,FOLLOW_111); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_7, grammarAccess.getRestrictionStatementAccess().getCommaKeyword_1_3_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:11514:5: ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) )
                    	    // InternalKim.g:11515:6: ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) )
                    	    {
                    	    // InternalKim.g:11515:6: ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) )
                    	    // InternalKim.g:11516:7: (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH )
                    	    {
                    	    // InternalKim.g:11516:7: (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH )
                    	    int alt243=2;
                    	    int LA243_0 = input.LA(1);

                    	    if ( (LA243_0==RULE_UPPERCASE_ID) ) {
                    	        alt243=1;
                    	    }
                    	    else if ( (LA243_0==RULE_UPPERCASE_PATH) ) {
                    	        alt243=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 243, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt243) {
                    	        case 1 :
                    	            // InternalKim.g:11517:8: lv_authorities_8_1= RULE_UPPERCASE_ID
                    	            {
                    	            lv_authorities_8_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_35); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_authorities_8_1, grammarAccess.getRestrictionStatementAccess().getAuthoritiesUPPERCASE_IDTerminalRuleCall_1_3_1_0_0());
                    	              							
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getRestrictionStatementRule());
                    	              								}
                    	              								addWithLastConsumed(
                    	              									current,
                    	              									"authorities",
                    	              									lv_authorities_8_1,
                    	              									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                    	              							
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:11532:8: lv_authorities_8_2= RULE_UPPERCASE_PATH
                    	            {
                    	            lv_authorities_8_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_35); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_authorities_8_2, grammarAccess.getRestrictionStatementAccess().getAuthoritiesUPPERCASE_PATHTerminalRuleCall_1_3_1_0_1());
                    	              							
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getRestrictionStatementRule());
                    	              								}
                    	              								addWithLastConsumed(
                    	              									current,
                    	              									"authorities",
                    	              									lv_authorities_8_2,
                    	              									"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                    	              							
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop244;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:11552:3: (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) )
                    {
                    // InternalKim.g:11552:3: (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) )
                    // InternalKim.g:11553:4: otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) )
                    {
                    otherlv_9=(Token)match(input,182,FOLLOW_147); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getRestrictionStatementAccess().getUsesKeyword_2_0());
                      			
                    }
                    // InternalKim.g:11557:4: ( (lv_value_10_0= ruleLiteral ) )
                    // InternalKim.g:11558:5: (lv_value_10_0= ruleLiteral )
                    {
                    // InternalKim.g:11558:5: (lv_value_10_0= ruleLiteral )
                    // InternalKim.g:11559:6: lv_value_10_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRestrictionStatementAccess().getValueLiteralParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_148);
                    lv_value_10_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRestrictionStatementRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_10_0,
                      							"org.integratedmodelling.kim.Kim.Literal");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:11576:4: ( (lv_literal_11_0= 'for' ) )
                    // InternalKim.g:11577:5: (lv_literal_11_0= 'for' )
                    {
                    // InternalKim.g:11577:5: (lv_literal_11_0= 'for' )
                    // InternalKim.g:11578:6: lv_literal_11_0= 'for'
                    {
                    lv_literal_11_0=(Token)match(input,104,FOLLOW_149); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_literal_11_0, grammarAccess.getRestrictionStatementAccess().getLiteralForKeyword_2_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRestrictionStatementRule());
                      						}
                      						setWithLastConsumed(current, "literal", true, "for");
                      					
                    }

                    }


                    }

                    // InternalKim.g:11590:4: ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) )
                    // InternalKim.g:11591:5: ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:11591:5: ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) )
                    // InternalKim.g:11592:6: (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId )
                    {
                    // InternalKim.g:11592:6: (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId )
                    int alt245=2;
                    int LA245_0 = input.LA(1);

                    if ( (LA245_0==RULE_CAMELCASE_ID) ) {
                        alt245=1;
                    }
                    else if ( (LA245_0==RULE_LOWERCASE_ID||LA245_0==RULE_LOWERCASE_DASHID) ) {
                        alt245=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 245, 0, input);

                        throw nvae;
                    }
                    switch (alt245) {
                        case 1 :
                            // InternalKim.g:11593:7: lv_subject_12_1= RULE_CAMELCASE_ID
                            {
                            lv_subject_12_1=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_subject_12_1, grammarAccess.getRestrictionStatementAccess().getSubjectCAMELCASE_IDTerminalRuleCall_2_3_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"subject",
                              								lv_subject_12_1,
                              								"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:11608:7: lv_subject_12_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getRestrictionStatementAccess().getSubjectNamespaceIdParserRuleCall_2_3_0_1());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_subject_12_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getRestrictionStatementRule());
                              							}
                              							set(
                              								current,
                              								"subject",
                              								lv_subject_12_2,
                              								"org.integratedmodelling.kim.Kim.NamespaceId");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictionStatement"


    // $ANTLR start "entryRuleRestrictionDefinition"
    // InternalKim.g:11631:1: entryRuleRestrictionDefinition returns [EObject current=null] : iv_ruleRestrictionDefinition= ruleRestrictionDefinition EOF ;
    public final EObject entryRuleRestrictionDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictionDefinition = null;


        try {
            // InternalKim.g:11631:62: (iv_ruleRestrictionDefinition= ruleRestrictionDefinition EOF )
            // InternalKim.g:11632:2: iv_ruleRestrictionDefinition= ruleRestrictionDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictionDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRestrictionDefinition=ruleRestrictionDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictionDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictionDefinition"


    // $ANTLR start "ruleRestrictionDefinition"
    // InternalKim.g:11638:1: ruleRestrictionDefinition returns [EObject current=null] : ( ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? (otherlv_12= 'as' ( (lv_subject_13_0= ruleConceptDeclaration ) ) )? ) ;
    public final EObject ruleRestrictionDefinition() throws RecognitionException {
        EObject current = null;

        Token lv_only_0_0=null;
        Token lv_none_1_0=null;
        Token lv_exactly_2_0=null;
        Token otherlv_3=null;
        Token lv_atLeast_4_0=null;
        Token otherlv_5=null;
        Token lv_atMost_6_0=null;
        Token lv_howmany_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_source_8_0 = null;

        Enumerator lv_dataType_9_0 = null;

        EObject lv_traitType_11_0 = null;

        EObject lv_subject_13_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11644:2: ( ( ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? (otherlv_12= 'as' ( (lv_subject_13_0= ruleConceptDeclaration ) ) )? ) )
            // InternalKim.g:11645:2: ( ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? (otherlv_12= 'as' ( (lv_subject_13_0= ruleConceptDeclaration ) ) )? )
            {
            // InternalKim.g:11645:2: ( ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? (otherlv_12= 'as' ( (lv_subject_13_0= ruleConceptDeclaration ) ) )? )
            // InternalKim.g:11646:3: ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? (otherlv_12= 'as' ( (lv_subject_13_0= ruleConceptDeclaration ) ) )?
            {
            // InternalKim.g:11646:3: ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )?
            int alt248=4;
            switch ( input.LA(1) ) {
                case 185:
                    {
                    alt248=1;
                    }
                    break;
                case 122:
                    {
                    int LA248_2 = input.LA(2);

                    if ( (synpred426_InternalKim()) ) {
                        alt248=2;
                    }
                    }
                    break;
                case 186:
                case 187:
                    {
                    alt248=3;
                    }
                    break;
            }

            switch (alt248) {
                case 1 :
                    // InternalKim.g:11647:4: ( (lv_only_0_0= 'only' ) )
                    {
                    // InternalKim.g:11647:4: ( (lv_only_0_0= 'only' ) )
                    // InternalKim.g:11648:5: (lv_only_0_0= 'only' )
                    {
                    // InternalKim.g:11648:5: (lv_only_0_0= 'only' )
                    // InternalKim.g:11649:6: lv_only_0_0= 'only'
                    {
                    lv_only_0_0=(Token)match(input,185,FOLLOW_145); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_only_0_0, grammarAccess.getRestrictionDefinitionAccess().getOnlyOnlyKeyword_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRestrictionDefinitionRule());
                      						}
                      						setWithLastConsumed(current, "only", true, "only");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:11662:4: ( (lv_none_1_0= 'no' ) )
                    {
                    // InternalKim.g:11662:4: ( (lv_none_1_0= 'no' ) )
                    // InternalKim.g:11663:5: (lv_none_1_0= 'no' )
                    {
                    // InternalKim.g:11663:5: (lv_none_1_0= 'no' )
                    // InternalKim.g:11664:6: lv_none_1_0= 'no'
                    {
                    lv_none_1_0=(Token)match(input,122,FOLLOW_145); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_none_1_0, grammarAccess.getRestrictionDefinitionAccess().getNoneNoKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRestrictionDefinitionRule());
                      						}
                      						setWithLastConsumed(current, "none", true, "no");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:11677:4: ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) )
                    {
                    // InternalKim.g:11677:4: ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) )
                    // InternalKim.g:11678:5: ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) )
                    {
                    // InternalKim.g:11678:5: ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) )
                    int alt247=3;
                    int LA247_0 = input.LA(1);

                    if ( (LA247_0==186) ) {
                        alt247=1;
                    }
                    else if ( (LA247_0==187) ) {
                        int LA247_2 = input.LA(2);

                        if ( (LA247_2==189) ) {
                            alt247=3;
                        }
                        else if ( (LA247_2==188) ) {
                            alt247=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 247, 2, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 247, 0, input);

                        throw nvae;
                    }
                    switch (alt247) {
                        case 1 :
                            // InternalKim.g:11679:6: ( (lv_exactly_2_0= 'exactly' ) )
                            {
                            // InternalKim.g:11679:6: ( (lv_exactly_2_0= 'exactly' ) )
                            // InternalKim.g:11680:7: (lv_exactly_2_0= 'exactly' )
                            {
                            // InternalKim.g:11680:7: (lv_exactly_2_0= 'exactly' )
                            // InternalKim.g:11681:8: lv_exactly_2_0= 'exactly'
                            {
                            lv_exactly_2_0=(Token)match(input,186,FOLLOW_75); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exactly_2_0, grammarAccess.getRestrictionDefinitionAccess().getExactlyExactlyKeyword_0_2_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getRestrictionDefinitionRule());
                              								}
                              								setWithLastConsumed(current, "exactly", true, "exactly");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:11694:6: (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) )
                            {
                            // InternalKim.g:11694:6: (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) )
                            // InternalKim.g:11695:7: otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) )
                            {
                            otherlv_3=(Token)match(input,187,FOLLOW_150); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_3, grammarAccess.getRestrictionDefinitionAccess().getAtKeyword_0_2_0_1_0());
                              						
                            }
                            // InternalKim.g:11699:7: ( (lv_atLeast_4_0= 'least' ) )
                            // InternalKim.g:11700:8: (lv_atLeast_4_0= 'least' )
                            {
                            // InternalKim.g:11700:8: (lv_atLeast_4_0= 'least' )
                            // InternalKim.g:11701:9: lv_atLeast_4_0= 'least'
                            {
                            lv_atLeast_4_0=(Token)match(input,188,FOLLOW_75); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									newLeafNode(lv_atLeast_4_0, grammarAccess.getRestrictionDefinitionAccess().getAtLeastLeastKeyword_0_2_0_1_1_0());
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getRestrictionDefinitionRule());
                              									}
                              									setWithLastConsumed(current, "atLeast", true, "least");
                              								
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:11715:6: (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) )
                            {
                            // InternalKim.g:11715:6: (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) )
                            // InternalKim.g:11716:7: otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) )
                            {
                            otherlv_5=(Token)match(input,187,FOLLOW_151); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_5, grammarAccess.getRestrictionDefinitionAccess().getAtKeyword_0_2_0_2_0());
                              						
                            }
                            // InternalKim.g:11720:7: ( (lv_atMost_6_0= 'most' ) )
                            // InternalKim.g:11721:8: (lv_atMost_6_0= 'most' )
                            {
                            // InternalKim.g:11721:8: (lv_atMost_6_0= 'most' )
                            // InternalKim.g:11722:9: lv_atMost_6_0= 'most'
                            {
                            lv_atMost_6_0=(Token)match(input,189,FOLLOW_75); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									newLeafNode(lv_atMost_6_0, grammarAccess.getRestrictionDefinitionAccess().getAtMostMostKeyword_0_2_0_2_1_0());
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getRestrictionDefinitionRule());
                              									}
                              									setWithLastConsumed(current, "atMost", true, "most");
                              								
                            }

                            }


                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:11736:5: ( (lv_howmany_7_0= RULE_INT ) )
                    // InternalKim.g:11737:6: (lv_howmany_7_0= RULE_INT )
                    {
                    // InternalKim.g:11737:6: (lv_howmany_7_0= RULE_INT )
                    // InternalKim.g:11738:7: lv_howmany_7_0= RULE_INT
                    {
                    lv_howmany_7_0=(Token)match(input,RULE_INT,FOLLOW_145); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_howmany_7_0, grammarAccess.getRestrictionDefinitionAccess().getHowmanyINTTerminalRuleCall_0_2_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getRestrictionDefinitionRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"howmany",
                      								lv_howmany_7_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:11756:3: ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) )
            int alt249=2;
            int LA249_0 = input.LA(1);

            if ( (LA249_0==RULE_LOWERCASE_ID||(LA249_0>=RULE_CAMELCASE_ID && LA249_0<=RULE_LOWERCASE_DASHID)||LA249_0==36||(LA249_0>=112 && LA249_0<=113)||(LA249_0>=121 && LA249_0<=122)||(LA249_0>=124 && LA249_0<=136)) ) {
                alt249=1;
            }
            else if ( ((LA249_0>=73 && LA249_0<=74)||(LA249_0>=236 && LA249_0<=238)) ) {
                alt249=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 249, 0, input);

                throw nvae;
            }
            switch (alt249) {
                case 1 :
                    // InternalKim.g:11757:4: ( (lv_source_8_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:11757:4: ( (lv_source_8_0= ruleConceptDeclaration ) )
                    // InternalKim.g:11758:5: (lv_source_8_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:11758:5: (lv_source_8_0= ruleConceptDeclaration )
                    // InternalKim.g:11759:6: lv_source_8_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getSourceConceptDeclarationParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_152);
                    lv_source_8_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                      						}
                      						set(
                      							current,
                      							"source",
                      							lv_source_8_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:11777:4: ( (lv_dataType_9_0= ruleDataType ) )
                    {
                    // InternalKim.g:11777:4: ( (lv_dataType_9_0= ruleDataType ) )
                    // InternalKim.g:11778:5: (lv_dataType_9_0= ruleDataType )
                    {
                    // InternalKim.g:11778:5: (lv_dataType_9_0= ruleDataType )
                    // InternalKim.g:11779:6: lv_dataType_9_0= ruleDataType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getDataTypeDataTypeEnumRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_152);
                    lv_dataType_9_0=ruleDataType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                      						}
                      						set(
                      							current,
                      							"dataType",
                      							lv_dataType_9_0,
                      							"org.integratedmodelling.kim.Kim.DataType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:11797:3: (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )?
            int alt250=2;
            int LA250_0 = input.LA(1);

            if ( (LA250_0==190) ) {
                alt250=1;
            }
            switch (alt250) {
                case 1 :
                    // InternalKim.g:11798:4: otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) )
                    {
                    otherlv_10=(Token)match(input,190,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getRestrictionDefinitionAccess().getInheritingKeyword_2_0());
                      			
                    }
                    // InternalKim.g:11802:4: ( (lv_traitType_11_0= ruleConceptDeclaration ) )
                    // InternalKim.g:11803:5: (lv_traitType_11_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:11803:5: (lv_traitType_11_0= ruleConceptDeclaration )
                    // InternalKim.g:11804:6: lv_traitType_11_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getTraitTypeConceptDeclarationParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_61);
                    lv_traitType_11_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                      						}
                      						set(
                      							current,
                      							"traitType",
                      							lv_traitType_11_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:11822:3: (otherlv_12= 'as' ( (lv_subject_13_0= ruleConceptDeclaration ) ) )?
            int alt251=2;
            int LA251_0 = input.LA(1);

            if ( (LA251_0==23) ) {
                alt251=1;
            }
            switch (alt251) {
                case 1 :
                    // InternalKim.g:11823:4: otherlv_12= 'as' ( (lv_subject_13_0= ruleConceptDeclaration ) )
                    {
                    otherlv_12=(Token)match(input,23,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getRestrictionDefinitionAccess().getAsKeyword_3_0());
                      			
                    }
                    // InternalKim.g:11827:4: ( (lv_subject_13_0= ruleConceptDeclaration ) )
                    // InternalKim.g:11828:5: (lv_subject_13_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:11828:5: (lv_subject_13_0= ruleConceptDeclaration )
                    // InternalKim.g:11829:6: lv_subject_13_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getSubjectConceptDeclarationParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_subject_13_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                      						}
                      						set(
                      							current,
                      							"subject",
                      							lv_subject_13_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictionDefinition"


    // $ANTLR start "entryRuleAnnotation"
    // InternalKim.g:11851:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalKim.g:11851:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalKim.g:11852:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalKim.g:11858:1: ruleAnnotation returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_parameters_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11864:2: ( ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? ) )
            // InternalKim.g:11865:2: ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? )
            {
            // InternalKim.g:11865:2: ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? )
            // InternalKim.g:11866:3: ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )?
            {
            // InternalKim.g:11866:3: ( (lv_name_0_0= RULE_ANNOTATION_ID ) )
            // InternalKim.g:11867:4: (lv_name_0_0= RULE_ANNOTATION_ID )
            {
            // InternalKim.g:11867:4: (lv_name_0_0= RULE_ANNOTATION_ID )
            // InternalKim.g:11868:5: lv_name_0_0= RULE_ANNOTATION_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ANNOTATION_ID,FOLLOW_153); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getAnnotationAccess().getNameANNOTATION_IDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAnnotationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.integratedmodelling.kim.Kim.ANNOTATION_ID");
              				
            }

            }


            }

            // InternalKim.g:11884:3: (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )?
            int alt253=2;
            int LA253_0 = input.LA(1);

            if ( (LA253_0==36) ) {
                alt253=1;
            }
            switch (alt253) {
                case 1 :
                    // InternalKim.g:11885:4: otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,36,FOLLOW_154); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    // InternalKim.g:11889:4: ( (lv_parameters_2_0= ruleParameterList ) )?
                    int alt252=2;
                    int LA252_0 = input.LA(1);

                    if ( ((LA252_0>=RULE_UPPERCASE_ID && LA252_0<=RULE_STRING)||(LA252_0>=RULE_EXPR && LA252_0<=RULE_LOWERCASE_DASHID)||LA252_0==RULE_INT||(LA252_0>=26 && LA252_0<=27)||LA252_0==36||(LA252_0>=49 && LA252_0<=50)||(LA252_0>=112 && LA252_0<=113)||(LA252_0>=121 && LA252_0<=122)||(LA252_0>=124 && LA252_0<=136)||LA252_0==191||(LA252_0>=232 && LA252_0<=233)) ) {
                        alt252=1;
                    }
                    switch (alt252) {
                        case 1 :
                            // InternalKim.g:11890:5: (lv_parameters_2_0= ruleParameterList )
                            {
                            // InternalKim.g:11890:5: (lv_parameters_2_0= ruleParameterList )
                            // InternalKim.g:11891:6: lv_parameters_2_0= ruleParameterList
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getAnnotationAccess().getParametersParameterListParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FOLLOW_95);
                            lv_parameters_2_0=ruleParameterList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getAnnotationRule());
                              						}
                              						set(
                              							current,
                              							"parameters",
                              							lv_parameters_2_0,
                              							"org.integratedmodelling.kim.Kim.ParameterList");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleList"
    // InternalKim.g:11917:1: entryRuleList returns [EObject current=null] : iv_ruleList= ruleList EOF ;
    public final EObject entryRuleList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleList = null;


        try {
            // InternalKim.g:11917:45: (iv_ruleList= ruleList EOF )
            // InternalKim.g:11918:2: iv_ruleList= ruleList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleList=ruleList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleList"


    // $ANTLR start "ruleList"
    // InternalKim.g:11924:1: ruleList returns [EObject current=null] : ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')' ) ;
    public final EObject ruleList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_contents_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11930:2: ( ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')' ) )
            // InternalKim.g:11931:2: ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')' )
            {
            // InternalKim.g:11931:2: ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')' )
            // InternalKim.g:11932:3: () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')'
            {
            // InternalKim.g:11932:3: ()
            // InternalKim.g:11933:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getListAccess().getListAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,36,FOLLOW_155); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getListAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalKim.g:11946:3: ( (lv_contents_2_0= ruleValue ) )*
            loop254:
            do {
                int alt254=2;
                int LA254_0 = input.LA(1);

                if ( ((LA254_0>=RULE_UPPERCASE_ID && LA254_0<=RULE_STRING)||(LA254_0>=RULE_EXPR && LA254_0<=RULE_INT)||(LA254_0>=25 && LA254_0<=27)||LA254_0==36||(LA254_0>=49 && LA254_0<=50)||LA254_0==191||(LA254_0>=232 && LA254_0<=233)) ) {
                    alt254=1;
                }


                switch (alt254) {
            	case 1 :
            	    // InternalKim.g:11947:4: (lv_contents_2_0= ruleValue )
            	    {
            	    // InternalKim.g:11947:4: (lv_contents_2_0= ruleValue )
            	    // InternalKim.g:11948:5: lv_contents_2_0= ruleValue
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getListAccess().getContentsValueParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_155);
            	    lv_contents_2_0=ruleValue();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getListRule());
            	      					}
            	      					add(
            	      						current,
            	      						"contents",
            	      						lv_contents_2_0,
            	      						"org.integratedmodelling.kim.Kim.Value");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop254;
                }
            } while (true);

            otherlv_3=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getListAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleList"


    // $ANTLR start "entryRuleLiteral"
    // InternalKim.g:11973:1: entryRuleLiteral returns [EObject current=null] : iv_ruleLiteral= ruleLiteral EOF ;
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteral = null;


        try {
            // InternalKim.g:11973:48: (iv_ruleLiteral= ruleLiteral EOF )
            // InternalKim.g:11974:2: iv_ruleLiteral= ruleLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteral=ruleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalKim.g:11980:1: ruleLiteral returns [EObject current=null] : ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) ;
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_string_4_0=null;
        Token lv_boolean_5_1=null;
        Token lv_boolean_5_2=null;
        EObject lv_from_0_0 = null;

        EObject lv_to_2_0 = null;

        EObject lv_number_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11986:2: ( ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) )
            // InternalKim.g:11987:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )
            {
            // InternalKim.g:11987:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )
            int alt256=4;
            alt256 = dfa256.predict(input);
            switch (alt256) {
                case 1 :
                    // InternalKim.g:11988:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:11988:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    // InternalKim.g:11989:4: ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    {
                    // InternalKim.g:11989:4: ( (lv_from_0_0= ruleNumber ) )
                    // InternalKim.g:11990:5: (lv_from_0_0= ruleNumber )
                    {
                    // InternalKim.g:11990:5: (lv_from_0_0= ruleNumber )
                    // InternalKim.g:11991:6: lv_from_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralAccess().getFromNumberParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_23);
                    lv_from_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralRule());
                      						}
                      						set(
                      							current,
                      							"from",
                      							lv_from_0_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:12008:4: ( ( 'to' )=>otherlv_1= 'to' )
                    // InternalKim.g:12009:5: ( 'to' )=>otherlv_1= 'to'
                    {
                    otherlv_1=(Token)match(input,34,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getLiteralAccess().getToKeyword_0_1());
                      				
                    }

                    }

                    // InternalKim.g:12015:4: ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    // InternalKim.g:12016:5: ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber )
                    {
                    // InternalKim.g:12020:5: (lv_to_2_0= ruleNumber )
                    // InternalKim.g:12021:6: lv_to_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralAccess().getToNumberParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_to_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralRule());
                      						}
                      						set(
                      							current,
                      							"to",
                      							lv_to_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12040:3: ( (lv_number_3_0= ruleNumber ) )
                    {
                    // InternalKim.g:12040:3: ( (lv_number_3_0= ruleNumber ) )
                    // InternalKim.g:12041:4: (lv_number_3_0= ruleNumber )
                    {
                    // InternalKim.g:12041:4: (lv_number_3_0= ruleNumber )
                    // InternalKim.g:12042:5: lv_number_3_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getNumberNumberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_3_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"number",
                      						lv_number_3_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:12060:3: ( (lv_string_4_0= RULE_STRING ) )
                    {
                    // InternalKim.g:12060:3: ( (lv_string_4_0= RULE_STRING ) )
                    // InternalKim.g:12061:4: (lv_string_4_0= RULE_STRING )
                    {
                    // InternalKim.g:12061:4: (lv_string_4_0= RULE_STRING )
                    // InternalKim.g:12062:5: lv_string_4_0= RULE_STRING
                    {
                    lv_string_4_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_4_0, grammarAccess.getLiteralAccess().getStringSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_4_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:12079:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    {
                    // InternalKim.g:12079:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    // InternalKim.g:12080:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    {
                    // InternalKim.g:12080:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    // InternalKim.g:12081:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    {
                    // InternalKim.g:12081:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    int alt255=2;
                    int LA255_0 = input.LA(1);

                    if ( (LA255_0==26) ) {
                        alt255=1;
                    }
                    else if ( (LA255_0==27) ) {
                        alt255=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 255, 0, input);

                        throw nvae;
                    }
                    switch (alt255) {
                        case 1 :
                            // InternalKim.g:12082:6: lv_boolean_5_1= 'true'
                            {
                            lv_boolean_5_1=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_1, grammarAccess.getLiteralAccess().getBooleanTrueKeyword_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:12093:6: lv_boolean_5_2= 'false'
                            {
                            lv_boolean_5_2=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_2, grammarAccess.getLiteralAccess().getBooleanFalseKeyword_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleLiteralOrID"
    // InternalKim.g:12110:1: entryRuleLiteralOrID returns [EObject current=null] : iv_ruleLiteralOrID= ruleLiteralOrID EOF ;
    public final EObject entryRuleLiteralOrID() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralOrID = null;


        try {
            // InternalKim.g:12110:52: (iv_ruleLiteralOrID= ruleLiteralOrID EOF )
            // InternalKim.g:12111:2: iv_ruleLiteralOrID= ruleLiteralOrID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralOrIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralOrID=ruleLiteralOrID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralOrID; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralOrID"


    // $ANTLR start "ruleLiteralOrID"
    // InternalKim.g:12117:1: ruleLiteralOrID returns [EObject current=null] : ( ( (lv_number_0_0= ruleNumber ) ) | ( (lv_string_1_0= RULE_STRING ) ) | ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) ) | ( (lv_id_3_0= RULE_ID ) ) ) ;
    public final EObject ruleLiteralOrID() throws RecognitionException {
        EObject current = null;

        Token lv_string_1_0=null;
        Token lv_boolean_2_1=null;
        Token lv_boolean_2_2=null;
        Token lv_id_3_0=null;
        EObject lv_number_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12123:2: ( ( ( (lv_number_0_0= ruleNumber ) ) | ( (lv_string_1_0= RULE_STRING ) ) | ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) ) | ( (lv_id_3_0= RULE_ID ) ) ) )
            // InternalKim.g:12124:2: ( ( (lv_number_0_0= ruleNumber ) ) | ( (lv_string_1_0= RULE_STRING ) ) | ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) ) | ( (lv_id_3_0= RULE_ID ) ) )
            {
            // InternalKim.g:12124:2: ( ( (lv_number_0_0= ruleNumber ) ) | ( (lv_string_1_0= RULE_STRING ) ) | ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) ) | ( (lv_id_3_0= RULE_ID ) ) )
            int alt258=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case 232:
            case 233:
                {
                alt258=1;
                }
                break;
            case RULE_STRING:
                {
                alt258=2;
                }
                break;
            case 26:
            case 27:
                {
                alt258=3;
                }
                break;
            case RULE_ID:
                {
                alt258=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 258, 0, input);

                throw nvae;
            }

            switch (alt258) {
                case 1 :
                    // InternalKim.g:12125:3: ( (lv_number_0_0= ruleNumber ) )
                    {
                    // InternalKim.g:12125:3: ( (lv_number_0_0= ruleNumber ) )
                    // InternalKim.g:12126:4: (lv_number_0_0= ruleNumber )
                    {
                    // InternalKim.g:12126:4: (lv_number_0_0= ruleNumber )
                    // InternalKim.g:12127:5: lv_number_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralOrIDAccess().getNumberNumberParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralOrIDRule());
                      					}
                      					set(
                      						current,
                      						"number",
                      						lv_number_0_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12145:3: ( (lv_string_1_0= RULE_STRING ) )
                    {
                    // InternalKim.g:12145:3: ( (lv_string_1_0= RULE_STRING ) )
                    // InternalKim.g:12146:4: (lv_string_1_0= RULE_STRING )
                    {
                    // InternalKim.g:12146:4: (lv_string_1_0= RULE_STRING )
                    // InternalKim.g:12147:5: lv_string_1_0= RULE_STRING
                    {
                    lv_string_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_1_0, grammarAccess.getLiteralOrIDAccess().getStringSTRINGTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIDRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_1_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:12164:3: ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) )
                    {
                    // InternalKim.g:12164:3: ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) )
                    // InternalKim.g:12165:4: ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) )
                    {
                    // InternalKim.g:12165:4: ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) )
                    // InternalKim.g:12166:5: (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' )
                    {
                    // InternalKim.g:12166:5: (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' )
                    int alt257=2;
                    int LA257_0 = input.LA(1);

                    if ( (LA257_0==26) ) {
                        alt257=1;
                    }
                    else if ( (LA257_0==27) ) {
                        alt257=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 257, 0, input);

                        throw nvae;
                    }
                    switch (alt257) {
                        case 1 :
                            // InternalKim.g:12167:6: lv_boolean_2_1= 'true'
                            {
                            lv_boolean_2_1=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_2_1, grammarAccess.getLiteralOrIDAccess().getBooleanTrueKeyword_2_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIDRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_2_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:12178:6: lv_boolean_2_2= 'false'
                            {
                            lv_boolean_2_2=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_2_2, grammarAccess.getLiteralOrIDAccess().getBooleanFalseKeyword_2_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIDRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_2_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:12192:3: ( (lv_id_3_0= RULE_ID ) )
                    {
                    // InternalKim.g:12192:3: ( (lv_id_3_0= RULE_ID ) )
                    // InternalKim.g:12193:4: (lv_id_3_0= RULE_ID )
                    {
                    // InternalKim.g:12193:4: (lv_id_3_0= RULE_ID )
                    // InternalKim.g:12194:5: lv_id_3_0= RULE_ID
                    {
                    lv_id_3_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_id_3_0, grammarAccess.getLiteralOrIDAccess().getIdIDTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIDRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"id",
                      						lv_id_3_0,
                      						"org.eclipse.xtext.common.Terminals.ID");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralOrID"


    // $ANTLR start "entryRuleLiteralOrIdOrComma"
    // InternalKim.g:12214:1: entryRuleLiteralOrIdOrComma returns [EObject current=null] : iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF ;
    public final EObject entryRuleLiteralOrIdOrComma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralOrIdOrComma = null;


        try {
            // InternalKim.g:12214:59: (iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF )
            // InternalKim.g:12215:2: iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralOrIdOrCommaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralOrIdOrComma=ruleLiteralOrIdOrComma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralOrIdOrComma; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralOrIdOrComma"


    // $ANTLR start "ruleLiteralOrIdOrComma"
    // InternalKim.g:12221:1: ruleLiteralOrIdOrComma returns [EObject current=null] : ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) ) ;
    public final EObject ruleLiteralOrIdOrComma() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_string_4_0=null;
        Token lv_boolean_5_1=null;
        Token lv_boolean_5_2=null;
        Token lv_id_6_0=null;
        Token lv_comma_7_0=null;
        EObject lv_from_0_0 = null;

        EObject lv_to_2_0 = null;

        EObject lv_number_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12227:2: ( ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) ) )
            // InternalKim.g:12228:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )
            {
            // InternalKim.g:12228:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )
            int alt260=6;
            alt260 = dfa260.predict(input);
            switch (alt260) {
                case 1 :
                    // InternalKim.g:12229:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:12229:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    // InternalKim.g:12230:4: ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    {
                    // InternalKim.g:12230:4: ( (lv_from_0_0= ruleNumber ) )
                    // InternalKim.g:12231:5: (lv_from_0_0= ruleNumber )
                    {
                    // InternalKim.g:12231:5: (lv_from_0_0= ruleNumber )
                    // InternalKim.g:12232:6: lv_from_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getFromNumberParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_23);
                    lv_from_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      						}
                      						set(
                      							current,
                      							"from",
                      							lv_from_0_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:12249:4: ( ( 'to' )=>otherlv_1= 'to' )
                    // InternalKim.g:12250:5: ( 'to' )=>otherlv_1= 'to'
                    {
                    otherlv_1=(Token)match(input,34,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getLiteralOrIdOrCommaAccess().getToKeyword_0_1());
                      				
                    }

                    }

                    // InternalKim.g:12256:4: ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    // InternalKim.g:12257:5: ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber )
                    {
                    // InternalKim.g:12261:5: (lv_to_2_0= ruleNumber )
                    // InternalKim.g:12262:6: lv_to_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getToNumberParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_to_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      						}
                      						set(
                      							current,
                      							"to",
                      							lv_to_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12281:3: ( (lv_number_3_0= ruleNumber ) )
                    {
                    // InternalKim.g:12281:3: ( (lv_number_3_0= ruleNumber ) )
                    // InternalKim.g:12282:4: (lv_number_3_0= ruleNumber )
                    {
                    // InternalKim.g:12282:4: (lv_number_3_0= ruleNumber )
                    // InternalKim.g:12283:5: lv_number_3_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getNumberNumberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_3_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					set(
                      						current,
                      						"number",
                      						lv_number_3_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:12301:3: ( (lv_string_4_0= RULE_STRING ) )
                    {
                    // InternalKim.g:12301:3: ( (lv_string_4_0= RULE_STRING ) )
                    // InternalKim.g:12302:4: (lv_string_4_0= RULE_STRING )
                    {
                    // InternalKim.g:12302:4: (lv_string_4_0= RULE_STRING )
                    // InternalKim.g:12303:5: lv_string_4_0= RULE_STRING
                    {
                    lv_string_4_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_4_0, grammarAccess.getLiteralOrIdOrCommaAccess().getStringSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_4_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:12320:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    {
                    // InternalKim.g:12320:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    // InternalKim.g:12321:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    {
                    // InternalKim.g:12321:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    // InternalKim.g:12322:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    {
                    // InternalKim.g:12322:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    int alt259=2;
                    int LA259_0 = input.LA(1);

                    if ( (LA259_0==26) ) {
                        alt259=1;
                    }
                    else if ( (LA259_0==27) ) {
                        alt259=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 259, 0, input);

                        throw nvae;
                    }
                    switch (alt259) {
                        case 1 :
                            // InternalKim.g:12323:6: lv_boolean_5_1= 'true'
                            {
                            lv_boolean_5_1=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_1, grammarAccess.getLiteralOrIdOrCommaAccess().getBooleanTrueKeyword_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:12334:6: lv_boolean_5_2= 'false'
                            {
                            lv_boolean_5_2=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_2, grammarAccess.getLiteralOrIdOrCommaAccess().getBooleanFalseKeyword_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:12348:3: ( (lv_id_6_0= RULE_ID ) )
                    {
                    // InternalKim.g:12348:3: ( (lv_id_6_0= RULE_ID ) )
                    // InternalKim.g:12349:4: (lv_id_6_0= RULE_ID )
                    {
                    // InternalKim.g:12349:4: (lv_id_6_0= RULE_ID )
                    // InternalKim.g:12350:5: lv_id_6_0= RULE_ID
                    {
                    lv_id_6_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_id_6_0, grammarAccess.getLiteralOrIdOrCommaAccess().getIdIDTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"id",
                      						lv_id_6_0,
                      						"org.eclipse.xtext.common.Terminals.ID");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:12367:3: ( (lv_comma_7_0= ',' ) )
                    {
                    // InternalKim.g:12367:3: ( (lv_comma_7_0= ',' ) )
                    // InternalKim.g:12368:4: (lv_comma_7_0= ',' )
                    {
                    // InternalKim.g:12368:4: (lv_comma_7_0= ',' )
                    // InternalKim.g:12369:5: lv_comma_7_0= ','
                    {
                    lv_comma_7_0=(Token)match(input,25,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_comma_7_0, grammarAccess.getLiteralOrIdOrCommaAccess().getCommaCommaKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(current, "comma", true, ",");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralOrIdOrComma"


    // $ANTLR start "entryRuleMetadata"
    // InternalKim.g:12385:1: entryRuleMetadata returns [EObject current=null] : iv_ruleMetadata= ruleMetadata EOF ;
    public final EObject entryRuleMetadata() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetadata = null;


        try {
            // InternalKim.g:12385:49: (iv_ruleMetadata= ruleMetadata EOF )
            // InternalKim.g:12386:2: iv_ruleMetadata= ruleMetadata EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetadataRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetadata=ruleMetadata();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetadata; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetadata"


    // $ANTLR start "ruleMetadata"
    // InternalKim.g:12392:1: ruleMetadata returns [EObject current=null] : ( () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}' ) ;
    public final EObject ruleMetadata() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_ids_2_2=null;
        Token lv_ids_2_4=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_ids_2_1 = null;

        AntlrDatatypeRuleToken lv_ids_2_3 = null;

        EObject lv_values_3_1 = null;

        EObject lv_values_3_2 = null;

        EObject lv_values_3_3 = null;



        	enterRule();

        try {
            // InternalKim.g:12398:2: ( ( () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}' ) )
            // InternalKim.g:12399:2: ( () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}' )
            {
            // InternalKim.g:12399:2: ( () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}' )
            // InternalKim.g:12400:3: () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}'
            {
            // InternalKim.g:12400:3: ()
            // InternalKim.g:12401:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMetadataAccess().getMetadataAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,191,FOLLOW_156); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMetadataAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:12414:3: ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )*
            loop263:
            do {
                int alt263=2;
                int LA263_0 = input.LA(1);

                if ( ((LA263_0>=RULE_LOWERCASE_ID && LA263_0<=RULE_STRING)||LA263_0==RULE_LOWERCASE_DASHID) ) {
                    alt263=1;
                }


                switch (alt263) {
            	case 1 :
            	    // InternalKim.g:12415:4: ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) )
            	    {
            	    // InternalKim.g:12415:4: ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) )
            	    // InternalKim.g:12416:5: ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) )
            	    {
            	    // InternalKim.g:12416:5: ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) )
            	    // InternalKim.g:12417:6: (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING )
            	    {
            	    // InternalKim.g:12417:6: (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING )
            	    int alt261=4;
            	    alt261 = dfa261.predict(input);
            	    switch (alt261) {
            	        case 1 :
            	            // InternalKim.g:12418:7: lv_ids_2_1= rulePathName
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getIdsPathNameParserRuleCall_2_0_0_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_157);
            	            lv_ids_2_1=rulePathName();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"ids",
            	              								lv_ids_2_1,
            	              								"org.integratedmodelling.kim.Kim.PathName");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:12434:7: lv_ids_2_2= RULE_LOWERCASE_ID
            	            {
            	            lv_ids_2_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_157); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_ids_2_2, grammarAccess.getMetadataAccess().getIdsLOWERCASE_IDTerminalRuleCall_2_0_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getMetadataRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"ids",
            	              								lv_ids_2_2,
            	              								"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              						
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:12449:7: lv_ids_2_3= rulePropertyId
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getIdsPropertyIdParserRuleCall_2_0_0_2());
            	              						
            	            }
            	            pushFollow(FOLLOW_157);
            	            lv_ids_2_3=rulePropertyId();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"ids",
            	              								lv_ids_2_3,
            	              								"org.integratedmodelling.kim.Kim.PropertyId");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // InternalKim.g:12465:7: lv_ids_2_4= RULE_STRING
            	            {
            	            lv_ids_2_4=(Token)match(input,RULE_STRING,FOLLOW_157); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_ids_2_4, grammarAccess.getMetadataAccess().getIdsSTRINGTerminalRuleCall_2_0_0_3());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getMetadataRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"ids",
            	              								lv_ids_2_4,
            	              								"org.eclipse.xtext.common.Terminals.STRING");
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalKim.g:12482:4: ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) )
            	    // InternalKim.g:12483:5: ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) )
            	    {
            	    // InternalKim.g:12483:5: ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) )
            	    // InternalKim.g:12484:6: (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList )
            	    {
            	    // InternalKim.g:12484:6: (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList )
            	    int alt262=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_STRING:
            	    case RULE_ID:
            	    case RULE_INT:
            	    case 26:
            	    case 27:
            	    case 232:
            	    case 233:
            	        {
            	        alt262=1;
            	        }
            	        break;
            	    case 191:
            	        {
            	        alt262=2;
            	        }
            	        break;
            	    case 36:
            	        {
            	        alt262=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 262, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt262) {
            	        case 1 :
            	            // InternalKim.g:12485:7: lv_values_3_1= ruleLiteralOrID
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getValuesLiteralOrIDParserRuleCall_2_1_0_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_156);
            	            lv_values_3_1=ruleLiteralOrID();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"values",
            	              								lv_values_3_1,
            	              								"org.integratedmodelling.kim.Kim.LiteralOrID");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:12501:7: lv_values_3_2= ruleMetadata
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getValuesMetadataParserRuleCall_2_1_0_1());
            	              						
            	            }
            	            pushFollow(FOLLOW_156);
            	            lv_values_3_2=ruleMetadata();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"values",
            	              								lv_values_3_2,
            	              								"org.integratedmodelling.kim.Kim.Metadata");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:12517:7: lv_values_3_3= ruleList
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getValuesListParserRuleCall_2_1_0_2());
            	              						
            	            }
            	            pushFollow(FOLLOW_156);
            	            lv_values_3_3=ruleList();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"values",
            	              								lv_values_3_3,
            	              								"org.integratedmodelling.kim.Kim.List");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop263;
                }
            } while (true);

            otherlv_4=(Token)match(input,120,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getMetadataAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadata"


    // $ANTLR start "entryRuleDocumentation"
    // InternalKim.g:12544:1: entryRuleDocumentation returns [EObject current=null] : iv_ruleDocumentation= ruleDocumentation EOF ;
    public final EObject entryRuleDocumentation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDocumentation = null;


        try {
            // InternalKim.g:12544:54: (iv_ruleDocumentation= ruleDocumentation EOF )
            // InternalKim.g:12545:2: iv_ruleDocumentation= ruleDocumentation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDocumentationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDocumentation=ruleDocumentation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDocumentation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDocumentation"


    // $ANTLR start "ruleDocumentation"
    // InternalKim.g:12551:1: ruleDocumentation returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) ) )* otherlv_4= '}' ) ;
    public final EObject ruleDocumentation() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_selectors_2_0 = null;

        EObject lv_values_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12557:2: ( ( () otherlv_1= '{' ( ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) ) )* otherlv_4= '}' ) )
            // InternalKim.g:12558:2: ( () otherlv_1= '{' ( ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) ) )* otherlv_4= '}' )
            {
            // InternalKim.g:12558:2: ( () otherlv_1= '{' ( ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) ) )* otherlv_4= '}' )
            // InternalKim.g:12559:3: () otherlv_1= '{' ( ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) ) )* otherlv_4= '}'
            {
            // InternalKim.g:12559:3: ()
            // InternalKim.g:12560:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDocumentationAccess().getMetadataAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,191,FOLLOW_158); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDocumentationAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:12573:3: ( ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) ) )*
            loop264:
            do {
                int alt264=2;
                int LA264_0 = input.LA(1);

                if ( (LA264_0==RULE_LOWERCASE_ID||LA264_0==RULE_LOWERCASE_DASHID||LA264_0==56) ) {
                    alt264=1;
                }


                switch (alt264) {
            	case 1 :
            	    // InternalKim.g:12574:4: ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) )
            	    {
            	    // InternalKim.g:12574:4: ( (lv_selectors_2_0= ruleDocSelector ) )
            	    // InternalKim.g:12575:5: (lv_selectors_2_0= ruleDocSelector )
            	    {
            	    // InternalKim.g:12575:5: (lv_selectors_2_0= ruleDocSelector )
            	    // InternalKim.g:12576:6: lv_selectors_2_0= ruleDocSelector
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDocumentationAccess().getSelectorsDocSelectorParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_159);
            	    lv_selectors_2_0=ruleDocSelector();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDocumentationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"selectors",
            	      							lv_selectors_2_0,
            	      							"org.integratedmodelling.kim.Kim.DocSelector");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKim.g:12593:4: ( (lv_values_3_0= ruleLiteralOrID ) )
            	    // InternalKim.g:12594:5: (lv_values_3_0= ruleLiteralOrID )
            	    {
            	    // InternalKim.g:12594:5: (lv_values_3_0= ruleLiteralOrID )
            	    // InternalKim.g:12595:6: lv_values_3_0= ruleLiteralOrID
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDocumentationAccess().getValuesLiteralOrIDParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_158);
            	    lv_values_3_0=ruleLiteralOrID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDocumentationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_3_0,
            	      							"org.integratedmodelling.kim.Kim.LiteralOrID");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop264;
                }
            } while (true);

            otherlv_4=(Token)match(input,120,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getDocumentationAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDocumentation"


    // $ANTLR start "entryRuleMap"
    // InternalKim.g:12621:1: entryRuleMap returns [EObject current=null] : iv_ruleMap= ruleMap EOF ;
    public final EObject entryRuleMap() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMap = null;


        try {
            // InternalKim.g:12621:44: (iv_ruleMap= ruleMap EOF )
            // InternalKim.g:12622:2: iv_ruleMap= ruleMap EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMap=ruleMap();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMap; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMap"


    // $ANTLR start "ruleMap"
    // InternalKim.g:12628:1: ruleMap returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleMap() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_entries_2_0 = null;

        EObject lv_entries_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12634:2: ( ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' ) )
            // InternalKim.g:12635:2: ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' )
            {
            // InternalKim.g:12635:2: ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' )
            // InternalKim.g:12636:3: () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}'
            {
            // InternalKim.g:12636:3: ()
            // InternalKim.g:12637:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMapAccess().getMapAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,191,FOLLOW_160); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:12650:3: ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )?
            int alt266=2;
            int LA266_0 = input.LA(1);

            if ( ((LA266_0>=RULE_LOWERCASE_ID && LA266_0<=RULE_STRING)||(LA266_0>=RULE_CAMELCASE_ID && LA266_0<=RULE_LOWERCASE_DASHID)||LA266_0==RULE_INT||(LA266_0>=26 && LA266_0<=27)||LA266_0==36||LA266_0==38||(LA266_0>=48 && LA266_0<=49)||LA266_0==91||(LA266_0>=112 && LA266_0<=113)||(LA266_0>=121 && LA266_0<=122)||(LA266_0>=124 && LA266_0<=136)||(LA266_0>=226 && LA266_0<=230)||(LA266_0>=232 && LA266_0<=233)) ) {
                alt266=1;
            }
            switch (alt266) {
                case 1 :
                    // InternalKim.g:12651:4: ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )*
                    {
                    // InternalKim.g:12651:4: ( (lv_entries_2_0= ruleMapEntry ) )
                    // InternalKim.g:12652:5: (lv_entries_2_0= ruleMapEntry )
                    {
                    // InternalKim.g:12652:5: (lv_entries_2_0= ruleMapEntry )
                    // InternalKim.g:12653:6: lv_entries_2_0= ruleMapEntry
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_161);
                    lv_entries_2_0=ruleMapEntry();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMapRule());
                      						}
                      						add(
                      							current,
                      							"entries",
                      							lv_entries_2_0,
                      							"org.integratedmodelling.kim.Kim.MapEntry");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:12670:4: ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )*
                    loop265:
                    do {
                        int alt265=2;
                        int LA265_0 = input.LA(1);

                        if ( (LA265_0==25) ) {
                            alt265=1;
                        }


                        switch (alt265) {
                    	case 1 :
                    	    // InternalKim.g:12671:5: ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) )
                    	    {
                    	    // InternalKim.g:12671:5: ( ( ',' )=>otherlv_3= ',' )
                    	    // InternalKim.g:12672:6: ( ',' )=>otherlv_3= ','
                    	    {
                    	    otherlv_3=(Token)match(input,25,FOLLOW_37); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_3, grammarAccess.getMapAccess().getCommaKeyword_2_1_0_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:12679:5: ( (lv_entries_4_0= ruleMapEntry ) )
                    	    // InternalKim.g:12680:6: (lv_entries_4_0= ruleMapEntry )
                    	    {
                    	    // InternalKim.g:12680:6: (lv_entries_4_0= ruleMapEntry )
                    	    // InternalKim.g:12681:7: lv_entries_4_0= ruleMapEntry
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_161);
                    	    lv_entries_4_0=ruleMapEntry();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMapRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"entries",
                    	      								lv_entries_4_0,
                    	      								"org.integratedmodelling.kim.Kim.MapEntry");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop265;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,120,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getMapAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMap"


    // $ANTLR start "entryRuleMapEntry"
    // InternalKim.g:12708:1: entryRuleMapEntry returns [EObject current=null] : iv_ruleMapEntry= ruleMapEntry EOF ;
    public final EObject entryRuleMapEntry() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapEntry = null;


        try {
            // InternalKim.g:12708:49: (iv_ruleMapEntry= ruleMapEntry EOF )
            // InternalKim.g:12709:2: iv_ruleMapEntry= ruleMapEntry EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapEntryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMapEntry=ruleMapEntry();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapEntry; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapEntry"


    // $ANTLR start "ruleMapEntry"
    // InternalKim.g:12715:1: ruleMapEntry returns [EObject current=null] : ( ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) ) ;
    public final EObject ruleMapEntry() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_classifier_0_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12721:2: ( ( ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) ) )
            // InternalKim.g:12722:2: ( ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) )
            {
            // InternalKim.g:12722:2: ( ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) )
            // InternalKim.g:12723:3: ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) )
            {
            // InternalKim.g:12723:3: ( (lv_classifier_0_0= ruleClassifierRHSWithId ) )
            // InternalKim.g:12724:4: (lv_classifier_0_0= ruleClassifierRHSWithId )
            {
            // InternalKim.g:12724:4: (lv_classifier_0_0= ruleClassifierRHSWithId )
            // InternalKim.g:12725:5: lv_classifier_0_0= ruleClassifierRHSWithId
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapEntryAccess().getClassifierClassifierRHSWithIdParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_80);
            lv_classifier_0_0=ruleClassifierRHSWithId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapEntryRule());
              					}
              					set(
              						current,
              						"classifier",
              						lv_classifier_0_0,
              						"org.integratedmodelling.kim.Kim.ClassifierRHSWithId");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,89,FOLLOW_162); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapEntryAccess().getColonKeyword_1());
              		
            }
            // InternalKim.g:12746:3: ( (lv_value_2_0= ruleValueWithIdAndConcept ) )
            // InternalKim.g:12747:4: (lv_value_2_0= ruleValueWithIdAndConcept )
            {
            // InternalKim.g:12747:4: (lv_value_2_0= ruleValueWithIdAndConcept )
            // InternalKim.g:12748:5: lv_value_2_0= ruleValueWithIdAndConcept
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapEntryAccess().getValueValueWithIdAndConceptParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapEntryRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapEntry"


    // $ANTLR start "entryRuleDocSelector"
    // InternalKim.g:12769:1: entryRuleDocSelector returns [EObject current=null] : iv_ruleDocSelector= ruleDocSelector EOF ;
    public final EObject entryRuleDocSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDocSelector = null;


        try {
            // InternalKim.g:12769:52: (iv_ruleDocSelector= ruleDocSelector EOF )
            // InternalKim.g:12770:2: iv_ruleDocSelector= ruleDocSelector EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDocSelectorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDocSelector=ruleDocSelector();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDocSelector; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDocSelector"


    // $ANTLR start "ruleDocSelector"
    // InternalKim.g:12776:1: ruleDocSelector returns [EObject current=null] : ( ( (lv_id_0_0= rulePropertyId ) ) | (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) ) ) ;
    public final EObject ruleDocSelector() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_definition_2_0=null;
        Token lv_initialization_3_0=null;
        Token lv_termination_4_0=null;
        Token lv_transition_5_0=null;
        AntlrDatatypeRuleToken lv_id_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12782:2: ( ( ( (lv_id_0_0= rulePropertyId ) ) | (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) ) ) )
            // InternalKim.g:12783:2: ( ( (lv_id_0_0= rulePropertyId ) ) | (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) ) )
            {
            // InternalKim.g:12783:2: ( ( (lv_id_0_0= rulePropertyId ) ) | (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) ) )
            int alt268=2;
            int LA268_0 = input.LA(1);

            if ( (LA268_0==RULE_LOWERCASE_ID||LA268_0==RULE_LOWERCASE_DASHID) ) {
                alt268=1;
            }
            else if ( (LA268_0==56) ) {
                alt268=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 268, 0, input);

                throw nvae;
            }
            switch (alt268) {
                case 1 :
                    // InternalKim.g:12784:3: ( (lv_id_0_0= rulePropertyId ) )
                    {
                    // InternalKim.g:12784:3: ( (lv_id_0_0= rulePropertyId ) )
                    // InternalKim.g:12785:4: (lv_id_0_0= rulePropertyId )
                    {
                    // InternalKim.g:12785:4: (lv_id_0_0= rulePropertyId )
                    // InternalKim.g:12786:5: lv_id_0_0= rulePropertyId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDocSelectorAccess().getIdPropertyIdParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_id_0_0=rulePropertyId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDocSelectorRule());
                      					}
                      					set(
                      						current,
                      						"id",
                      						lv_id_0_0,
                      						"org.integratedmodelling.kim.Kim.PropertyId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12804:3: (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) )
                    {
                    // InternalKim.g:12804:3: (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) )
                    // InternalKim.g:12805:4: otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) )
                    {
                    otherlv_1=(Token)match(input,56,FOLLOW_163); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDocSelectorAccess().getOnKeyword_1_0());
                      			
                    }
                    // InternalKim.g:12809:4: ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) )
                    int alt267=4;
                    switch ( input.LA(1) ) {
                    case 57:
                        {
                        alt267=1;
                        }
                        break;
                    case 61:
                        {
                        alt267=2;
                        }
                        break;
                    case 60:
                        {
                        alt267=3;
                        }
                        break;
                    case 192:
                        {
                        alt267=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 267, 0, input);

                        throw nvae;
                    }

                    switch (alt267) {
                        case 1 :
                            // InternalKim.g:12810:5: ( (lv_definition_2_0= 'definition' ) )
                            {
                            // InternalKim.g:12810:5: ( (lv_definition_2_0= 'definition' ) )
                            // InternalKim.g:12811:6: (lv_definition_2_0= 'definition' )
                            {
                            // InternalKim.g:12811:6: (lv_definition_2_0= 'definition' )
                            // InternalKim.g:12812:7: lv_definition_2_0= 'definition'
                            {
                            lv_definition_2_0=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_definition_2_0, grammarAccess.getDocSelectorAccess().getDefinitionDefinitionKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDocSelectorRule());
                              							}
                              							setWithLastConsumed(current, "definition", true, "definition");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:12825:5: ( (lv_initialization_3_0= 'initialization' ) )
                            {
                            // InternalKim.g:12825:5: ( (lv_initialization_3_0= 'initialization' ) )
                            // InternalKim.g:12826:6: (lv_initialization_3_0= 'initialization' )
                            {
                            // InternalKim.g:12826:6: (lv_initialization_3_0= 'initialization' )
                            // InternalKim.g:12827:7: lv_initialization_3_0= 'initialization'
                            {
                            lv_initialization_3_0=(Token)match(input,61,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_initialization_3_0, grammarAccess.getDocSelectorAccess().getInitializationInitializationKeyword_1_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDocSelectorRule());
                              							}
                              							setWithLastConsumed(current, "initialization", true, "initialization");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:12840:5: ( (lv_termination_4_0= 'termination' ) )
                            {
                            // InternalKim.g:12840:5: ( (lv_termination_4_0= 'termination' ) )
                            // InternalKim.g:12841:6: (lv_termination_4_0= 'termination' )
                            {
                            // InternalKim.g:12841:6: (lv_termination_4_0= 'termination' )
                            // InternalKim.g:12842:7: lv_termination_4_0= 'termination'
                            {
                            lv_termination_4_0=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_termination_4_0, grammarAccess.getDocSelectorAccess().getTerminationTerminationKeyword_1_1_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDocSelectorRule());
                              							}
                              							setWithLastConsumed(current, "termination", true, "termination");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:12855:5: ( (lv_transition_5_0= 'transition' ) )
                            {
                            // InternalKim.g:12855:5: ( (lv_transition_5_0= 'transition' ) )
                            // InternalKim.g:12856:6: (lv_transition_5_0= 'transition' )
                            {
                            // InternalKim.g:12856:6: (lv_transition_5_0= 'transition' )
                            // InternalKim.g:12857:7: lv_transition_5_0= 'transition'
                            {
                            lv_transition_5_0=(Token)match(input,192,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_transition_5_0, grammarAccess.getDocSelectorAccess().getTransitionTransitionKeyword_1_1_3_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDocSelectorRule());
                              							}
                              							setWithLastConsumed(current, "transition", true, "transition");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDocSelector"


    // $ANTLR start "entryRuleKeyValuePair"
    // InternalKim.g:12875:1: entryRuleKeyValuePair returns [EObject current=null] : iv_ruleKeyValuePair= ruleKeyValuePair EOF ;
    public final EObject entryRuleKeyValuePair() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyValuePair = null;


        try {
            // InternalKim.g:12875:53: (iv_ruleKeyValuePair= ruleKeyValuePair EOF )
            // InternalKim.g:12876:2: iv_ruleKeyValuePair= ruleKeyValuePair EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyValuePairRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKeyValuePair=ruleKeyValuePair();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyValuePair; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyValuePair"


    // $ANTLR start "ruleKeyValuePair"
    // InternalKim.g:12882:1: ruleKeyValuePair returns [EObject current=null] : ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) ) ;
    public final EObject ruleKeyValuePair() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_2=null;
        Token lv_interactive_1_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_0_1 = null;

        EObject lv_value_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12888:2: ( ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) ) )
            // InternalKim.g:12889:2: ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) )
            {
            // InternalKim.g:12889:2: ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) )
            // InternalKim.g:12890:3: ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) )
            {
            // InternalKim.g:12890:3: ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID ) ) )
            // InternalKim.g:12891:4: ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID ) )
            {
            // InternalKim.g:12891:4: ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID ) )
            // InternalKim.g:12892:5: (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID )
            {
            // InternalKim.g:12892:5: (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID )
            int alt269=2;
            int LA269_0 = input.LA(1);

            if ( (LA269_0==RULE_LOWERCASE_ID) ) {
                int LA269_1 = input.LA(2);

                if ( (synpred468_InternalKim()) ) {
                    alt269=1;
                }
                else if ( (true) ) {
                    alt269=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 269, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA269_0==RULE_LOWERCASE_DASHID) ) {
                alt269=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 269, 0, input);

                throw nvae;
            }
            switch (alt269) {
                case 1 :
                    // InternalKim.g:12893:6: lv_name_0_1= rulePathName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKeyValuePairAccess().getNamePathNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_164);
                    lv_name_0_1=rulePathName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_0_1,
                      							"org.integratedmodelling.kim.Kim.PathName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:12909:6: lv_name_0_2= RULE_LOWERCASE_ID
                    {
                    lv_name_0_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_164); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_2, grammarAccess.getKeyValuePairAccess().getNameLOWERCASE_IDTerminalRuleCall_0_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKeyValuePairRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_0_2,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalKim.g:12926:3: ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' )
            int alt270=2;
            int LA270_0 = input.LA(1);

            if ( (LA270_0==193) ) {
                alt270=1;
            }
            else if ( (LA270_0==91) ) {
                alt270=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 270, 0, input);

                throw nvae;
            }
            switch (alt270) {
                case 1 :
                    // InternalKim.g:12927:4: ( (lv_interactive_1_0= '?=' ) )
                    {
                    // InternalKim.g:12927:4: ( (lv_interactive_1_0= '?=' ) )
                    // InternalKim.g:12928:5: (lv_interactive_1_0= '?=' )
                    {
                    // InternalKim.g:12928:5: (lv_interactive_1_0= '?=' )
                    // InternalKim.g:12929:6: lv_interactive_1_0= '?='
                    {
                    lv_interactive_1_0=(Token)match(input,193,FOLLOW_162); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_interactive_1_0, grammarAccess.getKeyValuePairAccess().getInteractiveQuestionMarkEqualsSignKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKeyValuePairRule());
                      						}
                      						setWithLastConsumed(current, "interactive", true, "?=");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12942:4: otherlv_2= '='
                    {
                    otherlv_2=(Token)match(input,91,FOLLOW_162); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getKeyValuePairAccess().getEqualsSignKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:12947:3: ( (lv_value_3_0= ruleValueWithIdAndConcept ) )
            // InternalKim.g:12948:4: (lv_value_3_0= ruleValueWithIdAndConcept )
            {
            // InternalKim.g:12948:4: (lv_value_3_0= ruleValueWithIdAndConcept )
            // InternalKim.g:12949:5: lv_value_3_0= ruleValueWithIdAndConcept
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyValuePairAccess().getValueValueWithIdAndConceptParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_3_0=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_3_0,
              						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyValuePair"


    // $ANTLR start "entryRuleParameterList"
    // InternalKim.g:12970:1: entryRuleParameterList returns [EObject current=null] : iv_ruleParameterList= ruleParameterList EOF ;
    public final EObject entryRuleParameterList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterList = null;


        try {
            // InternalKim.g:12970:54: (iv_ruleParameterList= ruleParameterList EOF )
            // InternalKim.g:12971:2: iv_ruleParameterList= ruleParameterList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterList=ruleParameterList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterList"


    // $ANTLR start "ruleParameterList"
    // InternalKim.g:12977:1: ruleParameterList returns [EObject current=null] : ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ) ;
    public final EObject ruleParameterList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pairs_0_0 = null;

        EObject lv_pairs_2_0 = null;

        EObject lv_singleValue_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12983:2: ( ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ) )
            // InternalKim.g:12984:2: ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) )
            {
            // InternalKim.g:12984:2: ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) )
            int alt272=2;
            alt272 = dfa272.predict(input);
            switch (alt272) {
                case 1 :
                    // InternalKim.g:12985:3: ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* )
                    {
                    // InternalKim.g:12985:3: ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* )
                    // InternalKim.g:12986:4: ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )*
                    {
                    // InternalKim.g:12986:4: ( (lv_pairs_0_0= ruleKeyValuePair ) )
                    // InternalKim.g:12987:5: (lv_pairs_0_0= ruleKeyValuePair )
                    {
                    // InternalKim.g:12987:5: (lv_pairs_0_0= ruleKeyValuePair )
                    // InternalKim.g:12988:6: lv_pairs_0_0= ruleKeyValuePair
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_35);
                    lv_pairs_0_0=ruleKeyValuePair();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameterListRule());
                      						}
                      						add(
                      							current,
                      							"pairs",
                      							lv_pairs_0_0,
                      							"org.integratedmodelling.kim.Kim.KeyValuePair");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:13005:4: ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )*
                    loop271:
                    do {
                        int alt271=2;
                        int LA271_0 = input.LA(1);

                        if ( (LA271_0==25) ) {
                            alt271=1;
                        }


                        switch (alt271) {
                    	case 1 :
                    	    // InternalKim.g:13006:5: ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) )
                    	    {
                    	    // InternalKim.g:13006:5: ( ( ',' )=>otherlv_1= ',' )
                    	    // InternalKim.g:13007:6: ( ',' )=>otherlv_1= ','
                    	    {
                    	    otherlv_1=(Token)match(input,25,FOLLOW_24); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getCommaKeyword_0_1_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:13013:5: ( (lv_pairs_2_0= ruleKeyValuePair ) )
                    	    // InternalKim.g:13014:6: (lv_pairs_2_0= ruleKeyValuePair )
                    	    {
                    	    // InternalKim.g:13014:6: (lv_pairs_2_0= ruleKeyValuePair )
                    	    // InternalKim.g:13015:7: lv_pairs_2_0= ruleKeyValuePair
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_0_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_35);
                    	    lv_pairs_2_0=ruleKeyValuePair();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getParameterListRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"pairs",
                    	      								lv_pairs_2_0,
                    	      								"org.integratedmodelling.kim.Kim.KeyValuePair");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop271;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13035:3: ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) )
                    {
                    // InternalKim.g:13035:3: ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) )
                    // InternalKim.g:13036:4: (lv_singleValue_3_0= ruleValueWithIdAndConcept )
                    {
                    // InternalKim.g:13036:4: (lv_singleValue_3_0= ruleValueWithIdAndConcept )
                    // InternalKim.g:13037:5: lv_singleValue_3_0= ruleValueWithIdAndConcept
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getParameterListAccess().getSingleValueValueWithIdAndConceptParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_singleValue_3_0=ruleValueWithIdAndConcept();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getParameterListRule());
                      					}
                      					set(
                      						current,
                      						"singleValue",
                      						lv_singleValue_3_0,
                      						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterList"


    // $ANTLR start "entryRuleValueWithIdAndConcept"
    // InternalKim.g:13058:1: entryRuleValueWithIdAndConcept returns [EObject current=null] : iv_ruleValueWithIdAndConcept= ruleValueWithIdAndConcept EOF ;
    public final EObject entryRuleValueWithIdAndConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueWithIdAndConcept = null;


        try {
            // InternalKim.g:13058:62: (iv_ruleValueWithIdAndConcept= ruleValueWithIdAndConcept EOF )
            // InternalKim.g:13059:2: iv_ruleValueWithIdAndConcept= ruleValueWithIdAndConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueWithIdAndConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueWithIdAndConcept=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueWithIdAndConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueWithIdAndConcept"


    // $ANTLR start "ruleValueWithIdAndConcept"
    // InternalKim.g:13065:1: ruleValueWithIdAndConcept returns [EObject current=null] : ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_map_7_0= ruleMap ) ) | ( (lv_null_8_0= 'unknown' ) ) ) ;
    public final EObject ruleValueWithIdAndConcept() throws RecognitionException {
        EObject current = null;

        Token lv_expr_3_0=null;
        Token lv_id_4_2=null;
        Token lv_id_4_3=null;
        Token lv_id_4_4=null;
        Token lv_null_8_0=null;
        EObject lv_concept_0_0 = null;

        EObject lv_function_1_0 = null;

        EObject lv_literal_2_0 = null;

        AntlrDatatypeRuleToken lv_id_4_1 = null;

        EObject lv_list_5_0 = null;

        EObject lv_table_6_0 = null;

        EObject lv_map_7_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13071:2: ( ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_map_7_0= ruleMap ) ) | ( (lv_null_8_0= 'unknown' ) ) ) )
            // InternalKim.g:13072:2: ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_map_7_0= ruleMap ) ) | ( (lv_null_8_0= 'unknown' ) ) )
            {
            // InternalKim.g:13072:2: ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_map_7_0= ruleMap ) ) | ( (lv_null_8_0= 'unknown' ) ) )
            int alt274=9;
            alt274 = dfa274.predict(input);
            switch (alt274) {
                case 1 :
                    // InternalKim.g:13073:3: ( (lv_concept_0_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:13073:3: ( (lv_concept_0_0= ruleConceptDeclaration ) )
                    // InternalKim.g:13074:4: (lv_concept_0_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:13074:4: (lv_concept_0_0= ruleConceptDeclaration )
                    // InternalKim.g:13075:5: lv_concept_0_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getConceptConceptDeclarationParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_0_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_0_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13093:3: ( (lv_function_1_0= ruleFunction ) )
                    {
                    // InternalKim.g:13093:3: ( (lv_function_1_0= ruleFunction ) )
                    // InternalKim.g:13094:4: (lv_function_1_0= ruleFunction )
                    {
                    // InternalKim.g:13094:4: (lv_function_1_0= ruleFunction )
                    // InternalKim.g:13095:5: lv_function_1_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getFunctionFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_1_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_1_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:13113:3: ( (lv_literal_2_0= ruleLiteral ) )
                    {
                    // InternalKim.g:13113:3: ( (lv_literal_2_0= ruleLiteral ) )
                    // InternalKim.g:13114:4: (lv_literal_2_0= ruleLiteral )
                    {
                    // InternalKim.g:13114:4: (lv_literal_2_0= ruleLiteral )
                    // InternalKim.g:13115:5: lv_literal_2_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getLiteralLiteralParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_2_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_2_0,
                      						"org.integratedmodelling.kim.Kim.Literal");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:13133:3: ( (lv_expr_3_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:13133:3: ( (lv_expr_3_0= RULE_EXPR ) )
                    // InternalKim.g:13134:4: (lv_expr_3_0= RULE_EXPR )
                    {
                    // InternalKim.g:13134:4: (lv_expr_3_0= RULE_EXPR )
                    // InternalKim.g:13135:5: lv_expr_3_0= RULE_EXPR
                    {
                    lv_expr_3_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_3_0, grammarAccess.getValueWithIdAndConceptAccess().getExprEXPRTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_3_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:13152:3: ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:13152:3: ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:13153:4: ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:13153:4: ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:13154:5: (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:13154:5: (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID )
                    int alt273=4;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        int LA273_1 = input.LA(2);

                        if ( (synpred477_InternalKim()) ) {
                            alt273=1;
                        }
                        else if ( (synpred478_InternalKim()) ) {
                            alt273=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 273, 1, input);

                            throw nvae;
                        }
                        }
                        break;
                    case RULE_LOWERCASE_DASHID:
                        {
                        alt273=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt273=3;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt273=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 273, 0, input);

                        throw nvae;
                    }

                    switch (alt273) {
                        case 1 :
                            // InternalKim.g:13155:6: lv_id_4_1= rulePathName
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getIdPathNameParserRuleCall_4_0_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_id_4_1=rulePathName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						set(
                              							current,
                              							"id",
                              							lv_id_4_1,
                              							"org.integratedmodelling.kim.Kim.PathName");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:13171:6: lv_id_4_2= RULE_LOWERCASE_ID
                            {
                            lv_id_4_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_4_2, grammarAccess.getValueWithIdAndConceptAccess().getIdLOWERCASE_IDTerminalRuleCall_4_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_4_2,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:13186:6: lv_id_4_3= RULE_UPPERCASE_ID
                            {
                            lv_id_4_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_4_3, grammarAccess.getValueWithIdAndConceptAccess().getIdUPPERCASE_IDTerminalRuleCall_4_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_4_3,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:13201:6: lv_id_4_4= RULE_CAMELCASE_ID
                            {
                            lv_id_4_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_4_4, grammarAccess.getValueWithIdAndConceptAccess().getIdCAMELCASE_IDTerminalRuleCall_4_0_3());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_4_4,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:13219:3: ( (lv_list_5_0= ruleList ) )
                    {
                    // InternalKim.g:13219:3: ( (lv_list_5_0= ruleList ) )
                    // InternalKim.g:13220:4: (lv_list_5_0= ruleList )
                    {
                    // InternalKim.g:13220:4: (lv_list_5_0= ruleList )
                    // InternalKim.g:13221:5: lv_list_5_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getListListParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_5_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_5_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:13239:3: ( (lv_table_6_0= ruleLookupTable ) )
                    {
                    // InternalKim.g:13239:3: ( (lv_table_6_0= ruleLookupTable ) )
                    // InternalKim.g:13240:4: (lv_table_6_0= ruleLookupTable )
                    {
                    // InternalKim.g:13240:4: (lv_table_6_0= ruleLookupTable )
                    // InternalKim.g:13241:5: lv_table_6_0= ruleLookupTable
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getTableLookupTableParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_table_6_0=ruleLookupTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"table",
                      						lv_table_6_0,
                      						"org.integratedmodelling.kim.Kim.LookupTable");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:13259:3: ( (lv_map_7_0= ruleMap ) )
                    {
                    // InternalKim.g:13259:3: ( (lv_map_7_0= ruleMap ) )
                    // InternalKim.g:13260:4: (lv_map_7_0= ruleMap )
                    {
                    // InternalKim.g:13260:4: (lv_map_7_0= ruleMap )
                    // InternalKim.g:13261:5: lv_map_7_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getMapMapParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_map_7_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"map",
                      						lv_map_7_0,
                      						"org.integratedmodelling.kim.Kim.Map");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:13279:3: ( (lv_null_8_0= 'unknown' ) )
                    {
                    // InternalKim.g:13279:3: ( (lv_null_8_0= 'unknown' ) )
                    // InternalKim.g:13280:4: (lv_null_8_0= 'unknown' )
                    {
                    // InternalKim.g:13280:4: (lv_null_8_0= 'unknown' )
                    // InternalKim.g:13281:5: lv_null_8_0= 'unknown'
                    {
                    lv_null_8_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_8_0, grammarAccess.getValueWithIdAndConceptAccess().getNullUnknownKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					setWithLastConsumed(current, "null", true, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueWithIdAndConcept"


    // $ANTLR start "entryRuleValue"
    // InternalKim.g:13297:1: entryRuleValue returns [EObject current=null] : iv_ruleValue= ruleValue EOF ;
    public final EObject entryRuleValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValue = null;


        try {
            // InternalKim.g:13297:46: (iv_ruleValue= ruleValue EOF )
            // InternalKim.g:13298:2: iv_ruleValue= ruleValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValue=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValue"


    // $ANTLR start "ruleValue"
    // InternalKim.g:13304:1: ruleValue returns [EObject current=null] : ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_4_0= ruleList ) ) | ( (lv_table_5_0= ruleLookupTable ) ) | ( (lv_map_6_0= ruleMap ) ) | ( (lv_null_7_0= 'unknown' ) ) ) ;
    public final EObject ruleValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_2_0=null;
        Token lv_id_3_1=null;
        Token lv_id_3_2=null;
        Token lv_id_3_3=null;
        Token lv_null_7_0=null;
        EObject lv_literal_0_0 = null;

        EObject lv_function_1_0 = null;

        EObject lv_list_4_0 = null;

        EObject lv_table_5_0 = null;

        EObject lv_map_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13310:2: ( ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_4_0= ruleList ) ) | ( (lv_table_5_0= ruleLookupTable ) ) | ( (lv_map_6_0= ruleMap ) ) | ( (lv_null_7_0= 'unknown' ) ) ) )
            // InternalKim.g:13311:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_4_0= ruleList ) ) | ( (lv_table_5_0= ruleLookupTable ) ) | ( (lv_map_6_0= ruleMap ) ) | ( (lv_null_7_0= 'unknown' ) ) )
            {
            // InternalKim.g:13311:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_4_0= ruleList ) ) | ( (lv_table_5_0= ruleLookupTable ) ) | ( (lv_map_6_0= ruleMap ) ) | ( (lv_null_7_0= 'unknown' ) ) )
            int alt276=8;
            alt276 = dfa276.predict(input);
            switch (alt276) {
                case 1 :
                    // InternalKim.g:13312:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    {
                    // InternalKim.g:13312:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    // InternalKim.g:13313:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    {
                    // InternalKim.g:13313:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    // InternalKim.g:13314:5: lv_literal_0_0= ruleLiteralOrIdOrComma
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleLiteralOrIdOrComma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.integratedmodelling.kim.Kim.LiteralOrIdOrComma");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13332:3: ( (lv_function_1_0= ruleFunction ) )
                    {
                    // InternalKim.g:13332:3: ( (lv_function_1_0= ruleFunction ) )
                    // InternalKim.g:13333:4: (lv_function_1_0= ruleFunction )
                    {
                    // InternalKim.g:13333:4: (lv_function_1_0= ruleFunction )
                    // InternalKim.g:13334:5: lv_function_1_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getFunctionFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_1_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_1_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:13352:3: ( (lv_expr_2_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:13352:3: ( (lv_expr_2_0= RULE_EXPR ) )
                    // InternalKim.g:13353:4: (lv_expr_2_0= RULE_EXPR )
                    {
                    // InternalKim.g:13353:4: (lv_expr_2_0= RULE_EXPR )
                    // InternalKim.g:13354:5: lv_expr_2_0= RULE_EXPR
                    {
                    lv_expr_2_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_2_0, grammarAccess.getValueAccess().getExprEXPRTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_2_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:13371:3: ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:13371:3: ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:13372:4: ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:13372:4: ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:13373:5: (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:13373:5: (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID )
                    int alt275=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt275=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt275=2;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt275=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 275, 0, input);

                        throw nvae;
                    }

                    switch (alt275) {
                        case 1 :
                            // InternalKim.g:13374:6: lv_id_3_1= RULE_LOWERCASE_ID
                            {
                            lv_id_3_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_3_1, grammarAccess.getValueAccess().getIdLOWERCASE_IDTerminalRuleCall_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_3_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:13389:6: lv_id_3_2= RULE_UPPERCASE_ID
                            {
                            lv_id_3_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_3_2, grammarAccess.getValueAccess().getIdUPPERCASE_IDTerminalRuleCall_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_3_2,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:13404:6: lv_id_3_3= RULE_CAMELCASE_ID
                            {
                            lv_id_3_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_3_3, grammarAccess.getValueAccess().getIdCAMELCASE_IDTerminalRuleCall_3_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_3_3,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:13422:3: ( (lv_list_4_0= ruleList ) )
                    {
                    // InternalKim.g:13422:3: ( (lv_list_4_0= ruleList ) )
                    // InternalKim.g:13423:4: (lv_list_4_0= ruleList )
                    {
                    // InternalKim.g:13423:4: (lv_list_4_0= ruleList )
                    // InternalKim.g:13424:5: lv_list_4_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getListListParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_4_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_4_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:13442:3: ( (lv_table_5_0= ruleLookupTable ) )
                    {
                    // InternalKim.g:13442:3: ( (lv_table_5_0= ruleLookupTable ) )
                    // InternalKim.g:13443:4: (lv_table_5_0= ruleLookupTable )
                    {
                    // InternalKim.g:13443:4: (lv_table_5_0= ruleLookupTable )
                    // InternalKim.g:13444:5: lv_table_5_0= ruleLookupTable
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getTableLookupTableParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_table_5_0=ruleLookupTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"table",
                      						lv_table_5_0,
                      						"org.integratedmodelling.kim.Kim.LookupTable");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:13462:3: ( (lv_map_6_0= ruleMap ) )
                    {
                    // InternalKim.g:13462:3: ( (lv_map_6_0= ruleMap ) )
                    // InternalKim.g:13463:4: (lv_map_6_0= ruleMap )
                    {
                    // InternalKim.g:13463:4: (lv_map_6_0= ruleMap )
                    // InternalKim.g:13464:5: lv_map_6_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getMapMapParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_map_6_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"map",
                      						lv_map_6_0,
                      						"org.integratedmodelling.kim.Kim.Map");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:13482:3: ( (lv_null_7_0= 'unknown' ) )
                    {
                    // InternalKim.g:13482:3: ( (lv_null_7_0= 'unknown' ) )
                    // InternalKim.g:13483:4: (lv_null_7_0= 'unknown' )
                    {
                    // InternalKim.g:13483:4: (lv_null_7_0= 'unknown' )
                    // InternalKim.g:13484:5: lv_null_7_0= 'unknown'
                    {
                    lv_null_7_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_7_0, grammarAccess.getValueAccess().getNullUnknownKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueRule());
                      					}
                      					setWithLastConsumed(current, "null", true, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValue"


    // $ANTLR start "entryRuleFunction"
    // InternalKim.g:13500:1: entryRuleFunction returns [EObject current=null] : iv_ruleFunction= ruleFunction EOF ;
    public final EObject entryRuleFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunction = null;


        try {
            // InternalKim.g:13500:49: (iv_ruleFunction= ruleFunction EOF )
            // InternalKim.g:13501:2: iv_ruleFunction= ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunction=ruleFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalKim.g:13507:1: ruleFunction returns [EObject current=null] : ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' ) ;
    public final EObject ruleFunction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_parameters_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13513:2: ( ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' ) )
            // InternalKim.g:13514:2: ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )
            {
            // InternalKim.g:13514:2: ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )
            // InternalKim.g:13515:3: ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')'
            {
            // InternalKim.g:13515:3: ( (lv_name_0_0= rulePathName ) )
            // InternalKim.g:13516:4: (lv_name_0_0= rulePathName )
            {
            // InternalKim.g:13516:4: (lv_name_0_0= rulePathName )
            // InternalKim.g:13517:5: lv_name_0_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionAccess().getNamePathNameParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_41);
            lv_name_0_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,36,FOLLOW_154); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalKim.g:13538:3: ( (lv_parameters_2_0= ruleParameterList ) )?
            int alt277=2;
            int LA277_0 = input.LA(1);

            if ( ((LA277_0>=RULE_UPPERCASE_ID && LA277_0<=RULE_STRING)||(LA277_0>=RULE_EXPR && LA277_0<=RULE_LOWERCASE_DASHID)||LA277_0==RULE_INT||(LA277_0>=26 && LA277_0<=27)||LA277_0==36||(LA277_0>=49 && LA277_0<=50)||(LA277_0>=112 && LA277_0<=113)||(LA277_0>=121 && LA277_0<=122)||(LA277_0>=124 && LA277_0<=136)||LA277_0==191||(LA277_0>=232 && LA277_0<=233)) ) {
                alt277=1;
            }
            switch (alt277) {
                case 1 :
                    // InternalKim.g:13539:4: (lv_parameters_2_0= ruleParameterList )
                    {
                    // InternalKim.g:13539:4: (lv_parameters_2_0= ruleParameterList )
                    // InternalKim.g:13540:5: lv_parameters_2_0= ruleParameterList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterListParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_95);
                    lv_parameters_2_0=ruleParameterList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionRule());
                      					}
                      					set(
                      						current,
                      						"parameters",
                      						lv_parameters_2_0,
                      						"org.integratedmodelling.kim.Kim.ParameterList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "entryRuleCONCEPT_TYPE"
    // InternalKim.g:13565:1: entryRuleCONCEPT_TYPE returns [String current=null] : iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF ;
    public final String entryRuleCONCEPT_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCONCEPT_TYPE = null;


        try {
            // InternalKim.g:13565:52: (iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF )
            // InternalKim.g:13566:2: iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCONCEPT_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCONCEPT_TYPE=ruleCONCEPT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCONCEPT_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCONCEPT_TYPE"


    // $ANTLR start "ruleCONCEPT_TYPE"
    // InternalKim.g:13572:1: ruleCONCEPT_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE ) ;
    public final AntlrDatatypeRuleToken ruleCONCEPT_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_DECLARABLE_TYPE_1 = null;



        	enterRule();

        try {
            // InternalKim.g:13578:2: ( (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE ) )
            // InternalKim.g:13579:2: (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE )
            {
            // InternalKim.g:13579:2: (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE )
            int alt278=2;
            int LA278_0 = input.LA(1);

            if ( (LA278_0==194) ) {
                alt278=1;
            }
            else if ( (LA278_0==80||(LA278_0>=143 && LA278_0<=144)||LA278_0==165||(LA278_0>=178 && LA278_0<=181)||(LA278_0>=195 && LA278_0<=223)) ) {
                alt278=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 278, 0, input);

                throw nvae;
            }
            switch (alt278) {
                case 1 :
                    // InternalKim.g:13580:3: kw= 'quality'
                    {
                    kw=(Token)match(input,194,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCONCEPT_TYPEAccess().getQualityKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13586:3: this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCONCEPT_TYPEAccess().getDECLARABLE_TYPEParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DECLARABLE_TYPE_1=ruleDECLARABLE_TYPE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_DECLARABLE_TYPE_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCONCEPT_TYPE"


    // $ANTLR start "entryRuleDECLARABLE_TYPE"
    // InternalKim.g:13600:1: entryRuleDECLARABLE_TYPE returns [String current=null] : iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF ;
    public final String entryRuleDECLARABLE_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDECLARABLE_TYPE = null;


        try {
            // InternalKim.g:13600:55: (iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF )
            // InternalKim.g:13601:2: iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDECLARABLE_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDECLARABLE_TYPE=ruleDECLARABLE_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDECLARABLE_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDECLARABLE_TYPE"


    // $ANTLR start "ruleDECLARABLE_TYPE"
    // InternalKim.g:13607:1: ruleDECLARABLE_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT ) ;
    public final AntlrDatatypeRuleToken ruleDECLARABLE_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_EXTENSIVE_PROPERTY_6 = null;

        AntlrDatatypeRuleToken this_INTENSIVE_PROPERTY_7 = null;

        AntlrDatatypeRuleToken this_AGENT_TYPE_8 = null;

        AntlrDatatypeRuleToken this_TRAIT_9 = null;



        	enterRule();

        try {
            // InternalKim.g:13613:2: ( (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT ) )
            // InternalKim.g:13614:2: (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT )
            {
            // InternalKim.g:13614:2: (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT )
            int alt279=10;
            switch ( input.LA(1) ) {
            case 195:
                {
                alt279=1;
                }
                break;
            case 196:
                {
                alt279=2;
                }
                break;
            case 197:
                {
                alt279=3;
                }
                break;
            case 144:
                {
                alt279=4;
                }
                break;
            case 198:
                {
                alt279=5;
                }
                break;
            case 181:
                {
                alt279=6;
                }
                break;
            case 200:
            case 201:
            case 202:
            case 203:
            case 204:
            case 205:
            case 206:
            case 207:
                {
                alt279=7;
                }
                break;
            case 208:
            case 209:
            case 210:
            case 211:
            case 212:
            case 213:
            case 214:
            case 215:
            case 216:
            case 217:
            case 218:
            case 219:
            case 220:
                {
                alt279=8;
                }
                break;
            case 143:
            case 221:
            case 222:
            case 223:
                {
                alt279=9;
                }
                break;
            case 80:
            case 165:
            case 178:
            case 179:
            case 180:
            case 199:
                {
                alt279=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 279, 0, input);

                throw nvae;
            }

            switch (alt279) {
                case 1 :
                    // InternalKim.g:13615:3: kw= 'class'
                    {
                    kw=(Token)match(input,195,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getClassKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13621:3: kw= 'quantity'
                    {
                    kw=(Token)match(input,196,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getQuantityKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:13627:3: kw= 'configuration'
                    {
                    kw=(Token)match(input,197,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getConfigurationKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:13633:3: kw= 'relationship'
                    {
                    kw=(Token)match(input,144,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getRelationshipKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:13639:3: kw= 'bond'
                    {
                    kw=(Token)match(input,198,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getBondKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:13645:3: kw= 'extent'
                    {
                    kw=(Token)match(input,181,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getExtentKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:13651:3: this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getEXTENSIVE_PROPERTYParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EXTENSIVE_PROPERTY_6=ruleEXTENSIVE_PROPERTY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_EXTENSIVE_PROPERTY_6);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:13662:3: this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getINTENSIVE_PROPERTYParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_INTENSIVE_PROPERTY_7=ruleINTENSIVE_PROPERTY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_INTENSIVE_PROPERTY_7);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:13673:3: this_AGENT_TYPE_8= ruleAGENT_TYPE
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getAGENT_TYPEParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AGENT_TYPE_8=ruleAGENT_TYPE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_AGENT_TYPE_8);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:13684:3: this_TRAIT_9= ruleTRAIT
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getTRAITParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TRAIT_9=ruleTRAIT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_TRAIT_9);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDECLARABLE_TYPE"


    // $ANTLR start "entryRuleTRAIT"
    // InternalKim.g:13698:1: entryRuleTRAIT returns [String current=null] : iv_ruleTRAIT= ruleTRAIT EOF ;
    public final String entryRuleTRAIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTRAIT = null;


        try {
            // InternalKim.g:13698:45: (iv_ruleTRAIT= ruleTRAIT EOF )
            // InternalKim.g:13699:2: iv_ruleTRAIT= ruleTRAIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTRAITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTRAIT=ruleTRAIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTRAIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTRAIT"


    // $ANTLR start "ruleTRAIT"
    // InternalKim.g:13705:1: ruleTRAIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' ) ;
    public final AntlrDatatypeRuleToken ruleTRAIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:13711:2: ( (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' ) )
            // InternalKim.g:13712:2: (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' )
            {
            // InternalKim.g:13712:2: (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' )
            int alt280=6;
            switch ( input.LA(1) ) {
            case 199:
                {
                alt280=1;
                }
                break;
            case 179:
                {
                alt280=2;
                }
                break;
            case 178:
                {
                alt280=3;
                }
                break;
            case 165:
                {
                alt280=4;
                }
                break;
            case 180:
                {
                alt280=5;
                }
                break;
            case 80:
                {
                alt280=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 280, 0, input);

                throw nvae;
            }

            switch (alt280) {
                case 1 :
                    // InternalKim.g:13713:3: kw= 'ordering'
                    {
                    kw=(Token)match(input,199,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getOrderingKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13719:3: kw= 'attribute'
                    {
                    kw=(Token)match(input,179,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getAttributeKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:13725:3: kw= 'identity'
                    {
                    kw=(Token)match(input,178,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getIdentityKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:13731:3: kw= 'role'
                    {
                    kw=(Token)match(input,165,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getRoleKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:13737:3: kw= 'realm'
                    {
                    kw=(Token)match(input,180,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getRealmKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:13743:3: kw= 'domain'
                    {
                    kw=(Token)match(input,80,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getDomainKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTRAIT"


    // $ANTLR start "entryRuleEXTENSIVE_PROPERTY"
    // InternalKim.g:13752:1: entryRuleEXTENSIVE_PROPERTY returns [String current=null] : iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF ;
    public final String entryRuleEXTENSIVE_PROPERTY() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEXTENSIVE_PROPERTY = null;


        try {
            // InternalKim.g:13752:58: (iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF )
            // InternalKim.g:13753:2: iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEXTENSIVE_PROPERTYRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEXTENSIVE_PROPERTY=ruleEXTENSIVE_PROPERTY();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEXTENSIVE_PROPERTY.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEXTENSIVE_PROPERTY"


    // $ANTLR start "ruleEXTENSIVE_PROPERTY"
    // InternalKim.g:13759:1: ruleEXTENSIVE_PROPERTY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' ) ;
    public final AntlrDatatypeRuleToken ruleEXTENSIVE_PROPERTY() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:13765:2: ( (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' ) )
            // InternalKim.g:13766:2: (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' )
            {
            // InternalKim.g:13766:2: (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' )
            int alt281=8;
            switch ( input.LA(1) ) {
            case 200:
                {
                alt281=1;
                }
                break;
            case 201:
                {
                alt281=2;
                }
                break;
            case 202:
                {
                alt281=3;
                }
                break;
            case 203:
                {
                alt281=4;
                }
                break;
            case 204:
                {
                alt281=5;
                }
                break;
            case 205:
                {
                alt281=6;
                }
                break;
            case 206:
                {
                alt281=7;
                }
                break;
            case 207:
                {
                alt281=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 281, 0, input);

                throw nvae;
            }

            switch (alt281) {
                case 1 :
                    // InternalKim.g:13767:3: kw= 'amount'
                    {
                    kw=(Token)match(input,200,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getAmountKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13773:3: kw= 'length'
                    {
                    kw=(Token)match(input,201,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getLengthKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:13779:3: kw= 'mass'
                    {
                    kw=(Token)match(input,202,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getMassKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:13785:3: kw= 'volume'
                    {
                    kw=(Token)match(input,203,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getVolumeKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:13791:3: kw= 'weight'
                    {
                    kw=(Token)match(input,204,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getWeightKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:13797:3: kw= 'money'
                    {
                    kw=(Token)match(input,205,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getMoneyKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:13803:3: kw= 'duration'
                    {
                    kw=(Token)match(input,206,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getDurationKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:13809:3: kw= 'area'
                    {
                    kw=(Token)match(input,207,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getAreaKeyword_7());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEXTENSIVE_PROPERTY"


    // $ANTLR start "entryRuleINTENSIVE_PROPERTY"
    // InternalKim.g:13818:1: entryRuleINTENSIVE_PROPERTY returns [String current=null] : iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF ;
    public final String entryRuleINTENSIVE_PROPERTY() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleINTENSIVE_PROPERTY = null;


        try {
            // InternalKim.g:13818:58: (iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF )
            // InternalKim.g:13819:2: iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getINTENSIVE_PROPERTYRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleINTENSIVE_PROPERTY=ruleINTENSIVE_PROPERTY();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleINTENSIVE_PROPERTY.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleINTENSIVE_PROPERTY"


    // $ANTLR start "ruleINTENSIVE_PROPERTY"
    // InternalKim.g:13825:1: ruleINTENSIVE_PROPERTY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' ) ;
    public final AntlrDatatypeRuleToken ruleINTENSIVE_PROPERTY() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:13831:2: ( (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' ) )
            // InternalKim.g:13832:2: (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' )
            {
            // InternalKim.g:13832:2: (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' )
            int alt282=13;
            switch ( input.LA(1) ) {
            case 208:
                {
                alt282=1;
                }
                break;
            case 209:
                {
                alt282=2;
                }
                break;
            case 210:
                {
                alt282=3;
                }
                break;
            case 211:
                {
                alt282=4;
                }
                break;
            case 212:
                {
                alt282=5;
                }
                break;
            case 213:
                {
                alt282=6;
                }
                break;
            case 214:
                {
                alt282=7;
                }
                break;
            case 215:
                {
                alt282=8;
                }
                break;
            case 216:
                {
                alt282=9;
                }
                break;
            case 217:
                {
                alt282=10;
                }
                break;
            case 218:
                {
                alt282=11;
                }
                break;
            case 219:
                {
                alt282=12;
                }
                break;
            case 220:
                {
                alt282=13;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 282, 0, input);

                throw nvae;
            }

            switch (alt282) {
                case 1 :
                    // InternalKim.g:13833:3: kw= 'acceleration'
                    {
                    kw=(Token)match(input,208,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getAccelerationKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13839:3: kw= 'energy'
                    {
                    kw=(Token)match(input,209,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getEnergyKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:13845:3: kw= 'entropy'
                    {
                    kw=(Token)match(input,210,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getEntropyKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:13851:3: kw= 'priority'
                    {
                    kw=(Token)match(input,211,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getPriorityKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:13857:3: kw= 'electric-potential'
                    {
                    kw=(Token)match(input,212,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getElectricPotentialKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:13863:3: kw= 'charge'
                    {
                    kw=(Token)match(input,213,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getChargeKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:13869:3: kw= 'resistance'
                    {
                    kw=(Token)match(input,214,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getResistanceKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:13875:3: kw= 'resistivity'
                    {
                    kw=(Token)match(input,215,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getResistivityKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:13881:3: kw= 'pressure'
                    {
                    kw=(Token)match(input,216,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getPressureKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:13887:3: kw= 'angle'
                    {
                    kw=(Token)match(input,217,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getAngleKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalKim.g:13893:3: kw= 'velocity'
                    {
                    kw=(Token)match(input,218,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getVelocityKeyword_10());
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalKim.g:13899:3: kw= 'temperature'
                    {
                    kw=(Token)match(input,219,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getTemperatureKeyword_11());
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalKim.g:13905:3: kw= 'viscosity'
                    {
                    kw=(Token)match(input,220,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getViscosityKeyword_12());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleINTENSIVE_PROPERTY"


    // $ANTLR start "entryRuleAGENT_TYPE"
    // InternalKim.g:13914:1: entryRuleAGENT_TYPE returns [String current=null] : iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF ;
    public final String entryRuleAGENT_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAGENT_TYPE = null;


        try {
            // InternalKim.g:13914:50: (iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF )
            // InternalKim.g:13915:2: iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAGENT_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAGENT_TYPE=ruleAGENT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAGENT_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAGENT_TYPE"


    // $ANTLR start "ruleAGENT_TYPE"
    // InternalKim.g:13921:1: ruleAGENT_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' ) ;
    public final AntlrDatatypeRuleToken ruleAGENT_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:13927:2: ( (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' ) )
            // InternalKim.g:13928:2: (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' )
            {
            // InternalKim.g:13928:2: (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' )
            int alt283=4;
            switch ( input.LA(1) ) {
            case 221:
                {
                alt283=1;
                }
                break;
            case 222:
                {
                alt283=2;
                }
                break;
            case 143:
                {
                alt283=3;
                }
                break;
            case 223:
                {
                alt283=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 283, 0, input);

                throw nvae;
            }

            switch (alt283) {
                case 1 :
                    // InternalKim.g:13929:3: kw= 'thing'
                    {
                    kw=(Token)match(input,221,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getThingKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13935:3: kw= 'process'
                    {
                    kw=(Token)match(input,222,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getProcessKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:13941:3: kw= 'agent'
                    {
                    kw=(Token)match(input,143,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getAgentKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:13947:3: kw= 'event'
                    {
                    kw=(Token)match(input,223,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getEventKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAGENT_TYPE"


    // $ANTLR start "entryRulePROPERTY_TYPE"
    // InternalKim.g:13956:1: entryRulePROPERTY_TYPE returns [String current=null] : iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF ;
    public final String entryRulePROPERTY_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePROPERTY_TYPE = null;


        try {
            // InternalKim.g:13956:53: (iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF )
            // InternalKim.g:13957:2: iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPROPERTY_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePROPERTY_TYPE=rulePROPERTY_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePROPERTY_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePROPERTY_TYPE"


    // $ANTLR start "rulePROPERTY_TYPE"
    // InternalKim.g:13963:1: rulePROPERTY_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'functional' | kw= 'structural' ) ;
    public final AntlrDatatypeRuleToken rulePROPERTY_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:13969:2: ( (kw= 'functional' | kw= 'structural' ) )
            // InternalKim.g:13970:2: (kw= 'functional' | kw= 'structural' )
            {
            // InternalKim.g:13970:2: (kw= 'functional' | kw= 'structural' )
            int alt284=2;
            int LA284_0 = input.LA(1);

            if ( (LA284_0==224) ) {
                alt284=1;
            }
            else if ( (LA284_0==225) ) {
                alt284=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 284, 0, input);

                throw nvae;
            }
            switch (alt284) {
                case 1 :
                    // InternalKim.g:13971:3: kw= 'functional'
                    {
                    kw=(Token)match(input,224,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPROPERTY_TYPEAccess().getFunctionalKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13977:3: kw= 'structural'
                    {
                    kw=(Token)match(input,225,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPROPERTY_TYPEAccess().getStructuralKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePROPERTY_TYPE"


    // $ANTLR start "entryRuleSimpleObservableSemantics"
    // InternalKim.g:13986:1: entryRuleSimpleObservableSemantics returns [EObject current=null] : iv_ruleSimpleObservableSemantics= ruleSimpleObservableSemantics EOF ;
    public final EObject entryRuleSimpleObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:13990:2: (iv_ruleSimpleObservableSemantics= ruleSimpleObservableSemantics EOF )
            // InternalKim.g:13991:2: iv_ruleSimpleObservableSemantics= ruleSimpleObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleObservableSemantics=ruleSimpleObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleObservableSemantics"


    // $ANTLR start "ruleSimpleObservableSemantics"
    // InternalKim.g:14000:1: ruleSimpleObservableSemantics returns [EObject current=null] : ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleSimpleObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_13=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token lv_name_19_0=null;
        EObject lv_declaration_0_0 = null;

        EObject lv_by_3_0 = null;

        EObject lv_downTo_6_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_9_0 = null;

        EObject lv_unit_11_0 = null;

        EObject lv_currency_12_0 = null;

        EObject lv_unit_14_0 = null;

        EObject lv_from_15_0 = null;

        EObject lv_to_17_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:14009:2: ( ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:14010:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:14010:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:14011:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:14011:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:14012:4: (lv_declaration_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:14012:4: (lv_declaration_0_0= ruleConceptDeclaration )
            // InternalKim.g:14013:5: lv_declaration_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_165);
            lv_declaration_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:14030:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:14031:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:14031:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) )
            // InternalKim.g:14032:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());
            // InternalKim.g:14035:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* )
            // InternalKim.g:14036:6: ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )*
            {
            // InternalKim.g:14036:6: ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )*
            loop287:
            do {
                int alt287=7;
                alt287 = dfa287.predict(input);
                switch (alt287) {
            	case 1 :
            	    // InternalKim.g:14037:4: ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) )
            	    {
            	    // InternalKim.g:14037:4: ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:14038:5: {...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:14038:122: ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:14039:6: ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:14042:9: ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) )
            	    // InternalKim.g:14042:10: {...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:14042:19: (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) )
            	    // InternalKim.g:14042:20: otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) )
            	    {
            	    otherlv_2=(Token)match(input,97,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_2, grammarAccess.getSimpleObservableSemanticsAccess().getByKeyword_1_0_0());
            	      								
            	    }
            	    // InternalKim.g:14046:9: ( (lv_by_3_0= ruleConcept ) )
            	    // InternalKim.g:14047:10: (lv_by_3_0= ruleConcept )
            	    {
            	    // InternalKim.g:14047:10: (lv_by_3_0= ruleConcept )
            	    // InternalKim.g:14048:11: lv_by_3_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getByConceptParserRuleCall_1_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_165);
            	    lv_by_3_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"by",
            	      												lv_by_3_0,
            	      												"org.integratedmodelling.kim.Kim.Concept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:14071:4: ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) )
            	    {
            	    // InternalKim.g:14071:4: ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:14072:5: {...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:14072:122: ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:14073:6: ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:14076:9: ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) )
            	    // InternalKim.g:14076:10: {...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:14076:19: (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) )
            	    // InternalKim.g:14076:20: otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) )
            	    {
            	    otherlv_4=(Token)match(input,98,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_4, grammarAccess.getSimpleObservableSemanticsAccess().getDownKeyword_1_1_0());
            	      								
            	    }
            	    otherlv_5=(Token)match(input,34,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getSimpleObservableSemanticsAccess().getToKeyword_1_1_1());
            	      								
            	    }
            	    // InternalKim.g:14084:9: ( (lv_downTo_6_0= ruleConcept ) )
            	    // InternalKim.g:14085:10: (lv_downTo_6_0= ruleConcept )
            	    {
            	    // InternalKim.g:14085:10: (lv_downTo_6_0= ruleConcept )
            	    // InternalKim.g:14086:11: lv_downTo_6_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getDownToConceptParserRuleCall_1_1_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_165);
            	    lv_downTo_6_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"downTo",
            	      												lv_downTo_6_0,
            	      												"org.integratedmodelling.kim.Kim.Concept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:14109:4: ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:14109:4: ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:14110:5: {...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // InternalKim.g:14110:122: ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:14111:6: ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2);
            	    // InternalKim.g:14114:9: ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:14114:10: {...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:14114:19: (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) )
            	    // InternalKim.g:14114:20: otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) )
            	    {
            	    otherlv_7=(Token)match(input,33,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getSimpleObservableSemanticsAccess().getAccordingKeyword_1_2_0());
            	      								
            	    }
            	    otherlv_8=(Token)match(input,34,FOLLOW_24); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_8, grammarAccess.getSimpleObservableSemanticsAccess().getToKeyword_1_2_1());
            	      								
            	    }
            	    // InternalKim.g:14122:9: ( (lv_accordingTo_9_0= rulePropertyId ) )
            	    // InternalKim.g:14123:10: (lv_accordingTo_9_0= rulePropertyId )
            	    {
            	    // InternalKim.g:14123:10: (lv_accordingTo_9_0= rulePropertyId )
            	    // InternalKim.g:14124:11: lv_accordingTo_9_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_1_2_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_165);
            	    lv_accordingTo_9_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_9_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:14147:4: ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:14147:4: ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:14148:5: {...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // InternalKim.g:14148:122: ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:14149:6: ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3);
            	    // InternalKim.g:14152:9: ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:14152:10: {...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:14152:19: ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) )
            	    int alt286=2;
            	    int LA286_0 = input.LA(1);

            	    if ( (LA286_0==48) ) {
            	        alt286=1;
            	    }
            	    else if ( (LA286_0==99) ) {
            	        alt286=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 286, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt286) {
            	        case 1 :
            	            // InternalKim.g:14152:20: (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:14152:20: (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:14153:10: otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) )
            	            {
            	            otherlv_10=(Token)match(input,48,FOLLOW_99); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_10, grammarAccess.getSimpleObservableSemanticsAccess().getInKeyword_1_3_0_0());
            	              									
            	            }
            	            // InternalKim.g:14157:10: ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) )
            	            int alt285=2;
            	            switch ( input.LA(1) ) {
            	            case RULE_CAMELCASE_ID:
            	                {
            	                int LA285_1 = input.LA(2);

            	                if ( (synpred535_InternalKim()) ) {
            	                    alt285=1;
            	                }
            	                else if ( (true) ) {
            	                    alt285=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 285, 1, input);

            	                    throw nvae;
            	                }
            	                }
            	                break;
            	            case RULE_LOWERCASE_ID:
            	                {
            	                int LA285_2 = input.LA(2);

            	                if ( (LA285_2==EOF||LA285_2==RULE_INT||LA285_2==23||LA285_2==33||LA285_2==38||LA285_2==48||LA285_2==92||(LA285_2>=97 && LA285_2<=99)||LA285_2==102||(LA285_2>=232 && LA285_2<=233)||LA285_2==239) ) {
            	                    alt285=1;
            	                }
            	                else if ( (LA285_2==89||LA285_2==93) ) {
            	                    alt285=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 285, 2, input);

            	                    throw nvae;
            	                }
            	                }
            	                break;
            	            case EOF:
            	            case RULE_INT:
            	            case 23:
            	            case 33:
            	            case 36:
            	            case 38:
            	            case 48:
            	            case 92:
            	            case 97:
            	            case 98:
            	            case 99:
            	            case 102:
            	            case 232:
            	            case 233:
            	            case 239:
            	                {
            	                alt285=1;
            	                }
            	                break;
            	            case RULE_UPPERCASE_ID:
            	            case RULE_LOWERCASE_DASHID:
            	                {
            	                alt285=2;
            	                }
            	                break;
            	            default:
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 285, 0, input);

            	                throw nvae;
            	            }

            	            switch (alt285) {
            	                case 1 :
            	                    // InternalKim.g:14158:11: ( (lv_unit_11_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:14158:11: ( (lv_unit_11_0= ruleUnit ) )
            	                    // InternalKim.g:14159:12: (lv_unit_11_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:14159:12: (lv_unit_11_0= ruleUnit )
            	                    // InternalKim.g:14160:13: lv_unit_11_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_1_3_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_165);
            	                    lv_unit_11_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_11_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:14178:11: ( (lv_currency_12_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:14178:11: ( (lv_currency_12_0= ruleCurrency ) )
            	                    // InternalKim.g:14179:12: (lv_currency_12_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:14179:12: (lv_currency_12_0= ruleCurrency )
            	                    // InternalKim.g:14180:13: lv_currency_12_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_1_3_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_165);
            	                    lv_currency_12_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_12_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:14200:9: (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:14200:9: (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) )
            	            // InternalKim.g:14201:10: otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) )
            	            {
            	            otherlv_13=(Token)match(input,99,FOLLOW_166); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_13, grammarAccess.getSimpleObservableSemanticsAccess().getPerKeyword_1_3_1_0());
            	              									
            	            }
            	            // InternalKim.g:14205:10: ( (lv_unit_14_0= ruleUnit ) )
            	            // InternalKim.g:14206:11: (lv_unit_14_0= ruleUnit )
            	            {
            	            // InternalKim.g:14206:11: (lv_unit_14_0= ruleUnit )
            	            // InternalKim.g:14207:12: lv_unit_14_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_1_3_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_165);
            	            lv_unit_14_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_14_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:14231:4: ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:14231:4: ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:14232:5: {...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // InternalKim.g:14232:122: ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:14233:6: ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4);
            	    // InternalKim.g:14236:9: ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) )
            	    // InternalKim.g:14236:10: {...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:14236:19: ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) )
            	    // InternalKim.g:14236:20: ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:14236:20: ( (lv_from_15_0= ruleNumber ) )
            	    // InternalKim.g:14237:10: (lv_from_15_0= ruleNumber )
            	    {
            	    // InternalKim.g:14237:10: (lv_from_15_0= ruleNumber )
            	    // InternalKim.g:14238:11: lv_from_15_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getFromNumberParserRuleCall_1_4_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_23);
            	    lv_from_15_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_15_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_16=(Token)match(input,34,FOLLOW_39); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_16, grammarAccess.getSimpleObservableSemanticsAccess().getToKeyword_1_4_1());
            	      								
            	    }
            	    // InternalKim.g:14259:9: ( (lv_to_17_0= ruleNumber ) )
            	    // InternalKim.g:14260:10: (lv_to_17_0= ruleNumber )
            	    {
            	    // InternalKim.g:14260:10: (lv_to_17_0= ruleNumber )
            	    // InternalKim.g:14261:11: lv_to_17_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getToNumberParserRuleCall_1_4_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_165);
            	    lv_to_17_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_17_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:14284:4: ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) )
            	    {
            	    // InternalKim.g:14284:4: ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) )
            	    // InternalKim.g:14285:5: {...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // InternalKim.g:14285:122: ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) )
            	    // InternalKim.g:14286:6: ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5);
            	    // InternalKim.g:14289:9: ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) )
            	    // InternalKim.g:14289:10: {...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:14289:19: (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) )
            	    // InternalKim.g:14289:20: otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) )
            	    {
            	    otherlv_18=(Token)match(input,102,FOLLOW_62); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_18, grammarAccess.getSimpleObservableSemanticsAccess().getNamedKeyword_1_5_0());
            	      								
            	    }
            	    // InternalKim.g:14293:9: ( (lv_name_19_0= RULE_LOWERCASE_ID ) )
            	    // InternalKim.g:14294:10: (lv_name_19_0= RULE_LOWERCASE_ID )
            	    {
            	    // InternalKim.g:14294:10: (lv_name_19_0= RULE_LOWERCASE_ID )
            	    // InternalKim.g:14295:11: lv_name_19_0= RULE_LOWERCASE_ID
            	    {
            	    lv_name_19_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_165); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_name_19_0, grammarAccess.getSimpleObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_1_5_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"name",
            	      												lv_name_19_0,
            	      												"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop287;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleSimpleObservableSemantics"


    // $ANTLR start "entryRuleNamedObservableSemantics"
    // InternalKim.g:14331:1: entryRuleNamedObservableSemantics returns [EObject current=null] : iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF ;
    public final EObject entryRuleNamedObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedObservableSemantics = null;


        try {
            // InternalKim.g:14331:65: (iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF )
            // InternalKim.g:14332:2: iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedObservableSemantics=ruleNamedObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamedObservableSemantics"


    // $ANTLR start "ruleNamedObservableSemantics"
    // InternalKim.g:14338:1: ruleNamedObservableSemantics returns [EObject current=null] : ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) ) ) ) ;
    public final EObject ruleNamedObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_1=null;
        Token lv_name_2_2=null;
        EObject lv_declaration_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14344:2: ( ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) ) ) ) )
            // InternalKim.g:14345:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) ) ) )
            {
            // InternalKim.g:14345:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) ) ) )
            // InternalKim.g:14346:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) ) )
            {
            // InternalKim.g:14346:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:14347:4: (lv_declaration_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:14347:4: (lv_declaration_0_0= ruleConceptDeclaration )
            // InternalKim.g:14348:5: lv_declaration_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_167);
            lv_declaration_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,102,FOLLOW_81); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNamedObservableSemanticsAccess().getNamedKeyword_1());
              		
            }
            // InternalKim.g:14369:3: ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) ) )
            // InternalKim.g:14370:4: ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) )
            {
            // InternalKim.g:14370:4: ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) )
            // InternalKim.g:14371:5: (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID )
            {
            // InternalKim.g:14371:5: (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID )
            int alt288=2;
            int LA288_0 = input.LA(1);

            if ( (LA288_0==RULE_LOWERCASE_ID) ) {
                alt288=1;
            }
            else if ( (LA288_0==RULE_LOWERCASE_DASHID) ) {
                alt288=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 288, 0, input);

                throw nvae;
            }
            switch (alt288) {
                case 1 :
                    // InternalKim.g:14372:6: lv_name_2_1= RULE_LOWERCASE_ID
                    {
                    lv_name_2_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_1, grammarAccess.getNamedObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_1,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:14387:6: lv_name_2_2= RULE_LOWERCASE_DASHID
                    {
                    lv_name_2_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_2, grammarAccess.getNamedObservableSemanticsAccess().getNameLOWERCASE_DASHIDTerminalRuleCall_2_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_2,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_DASHID");
                      					
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedObservableSemantics"


    // $ANTLR start "entryRuleUnitElement"
    // InternalKim.g:14408:1: entryRuleUnitElement returns [EObject current=null] : iv_ruleUnitElement= ruleUnitElement EOF ;
    public final EObject entryRuleUnitElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnitElement = null;


        try {
            // InternalKim.g:14408:52: (iv_ruleUnitElement= ruleUnitElement EOF )
            // InternalKim.g:14409:2: iv_ruleUnitElement= ruleUnitElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnitElement=ruleUnitElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnitElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnitElement"


    // $ANTLR start "ruleUnitElement"
    // InternalKim.g:14415:1: ruleUnitElement returns [EObject current=null] : ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) ) ) | ( (lv_num_1_0= ruleNumber ) ) | (otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')' ) ) ;
    public final EObject ruleUnitElement() throws RecognitionException {
        EObject current = null;

        Token lv_id_0_1=null;
        Token lv_id_0_2=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_num_1_0 = null;

        EObject lv_unit_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14421:2: ( ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) ) ) | ( (lv_num_1_0= ruleNumber ) ) | (otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')' ) ) )
            // InternalKim.g:14422:2: ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) ) ) | ( (lv_num_1_0= ruleNumber ) ) | (otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')' ) )
            {
            // InternalKim.g:14422:2: ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) ) ) | ( (lv_num_1_0= ruleNumber ) ) | (otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')' ) )
            int alt290=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
            case RULE_CAMELCASE_ID:
                {
                alt290=1;
                }
                break;
            case RULE_INT:
            case 232:
            case 233:
                {
                alt290=2;
                }
                break;
            case 36:
                {
                alt290=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 290, 0, input);

                throw nvae;
            }

            switch (alt290) {
                case 1 :
                    // InternalKim.g:14423:3: ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) ) )
                    {
                    // InternalKim.g:14423:3: ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) ) )
                    // InternalKim.g:14424:4: ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) )
                    {
                    // InternalKim.g:14424:4: ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:14425:5: (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:14425:5: (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID )
                    int alt289=2;
                    int LA289_0 = input.LA(1);

                    if ( (LA289_0==RULE_CAMELCASE_ID) ) {
                        alt289=1;
                    }
                    else if ( (LA289_0==RULE_LOWERCASE_ID) ) {
                        alt289=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 289, 0, input);

                        throw nvae;
                    }
                    switch (alt289) {
                        case 1 :
                            // InternalKim.g:14426:6: lv_id_0_1= RULE_CAMELCASE_ID
                            {
                            lv_id_0_1=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_1, grammarAccess.getUnitElementAccess().getIdCAMELCASE_IDTerminalRuleCall_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_1,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14441:6: lv_id_0_2= RULE_LOWERCASE_ID
                            {
                            lv_id_0_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_2, grammarAccess.getUnitElementAccess().getIdLOWERCASE_IDTerminalRuleCall_0_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_2,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14459:3: ( (lv_num_1_0= ruleNumber ) )
                    {
                    // InternalKim.g:14459:3: ( (lv_num_1_0= ruleNumber ) )
                    // InternalKim.g:14460:4: (lv_num_1_0= ruleNumber )
                    {
                    // InternalKim.g:14460:4: (lv_num_1_0= ruleNumber )
                    // InternalKim.g:14461:5: lv_num_1_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnitElementAccess().getNumNumberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_1_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUnitElementRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_1_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:14479:3: (otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')' )
                    {
                    // InternalKim.g:14479:3: (otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')' )
                    // InternalKim.g:14480:4: otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,36,FOLLOW_168); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getUnitElementAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalKim.g:14484:4: ( (lv_unit_3_0= ruleUnit ) )
                    // InternalKim.g:14485:5: (lv_unit_3_0= ruleUnit )
                    {
                    // InternalKim.g:14485:5: (lv_unit_3_0= ruleUnit )
                    // InternalKim.g:14486:6: lv_unit_3_0= ruleUnit
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnitElementAccess().getUnitUnitParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_95);
                    lv_unit_3_0=ruleUnit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnitElementRule());
                      						}
                      						set(
                      							current,
                      							"unit",
                      							lv_unit_3_0,
                      							"org.integratedmodelling.kim.Kim.Unit");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getUnitElementAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitElement"


    // $ANTLR start "entryRuleREL_OPERATOR"
    // InternalKim.g:14512:1: entryRuleREL_OPERATOR returns [EObject current=null] : iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF ;
    public final EObject entryRuleREL_OPERATOR() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleREL_OPERATOR = null;


        try {
            // InternalKim.g:14512:53: (iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF )
            // InternalKim.g:14513:2: iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getREL_OPERATORRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleREL_OPERATOR=ruleREL_OPERATOR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleREL_OPERATOR; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleREL_OPERATOR"


    // $ANTLR start "ruleREL_OPERATOR"
    // InternalKim.g:14519:1: ruleREL_OPERATOR returns [EObject current=null] : ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) ) ;
    public final EObject ruleREL_OPERATOR() throws RecognitionException {
        EObject current = null;

        Token lv_gt_0_0=null;
        Token lv_lt_1_0=null;
        Token lv_eq_2_0=null;
        Token lv_ne_3_0=null;
        Token lv_le_4_0=null;
        Token lv_ge_5_0=null;


        	enterRule();

        try {
            // InternalKim.g:14525:2: ( ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) ) )
            // InternalKim.g:14526:2: ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) )
            {
            // InternalKim.g:14526:2: ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) )
            int alt291=6;
            switch ( input.LA(1) ) {
            case 226:
                {
                alt291=1;
                }
                break;
            case 227:
                {
                alt291=2;
                }
                break;
            case 91:
                {
                alt291=3;
                }
                break;
            case 228:
                {
                alt291=4;
                }
                break;
            case 229:
                {
                alt291=5;
                }
                break;
            case 230:
                {
                alt291=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 291, 0, input);

                throw nvae;
            }

            switch (alt291) {
                case 1 :
                    // InternalKim.g:14527:3: ( (lv_gt_0_0= '>' ) )
                    {
                    // InternalKim.g:14527:3: ( (lv_gt_0_0= '>' ) )
                    // InternalKim.g:14528:4: (lv_gt_0_0= '>' )
                    {
                    // InternalKim.g:14528:4: (lv_gt_0_0= '>' )
                    // InternalKim.g:14529:5: lv_gt_0_0= '>'
                    {
                    lv_gt_0_0=(Token)match(input,226,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_gt_0_0, grammarAccess.getREL_OPERATORAccess().getGtGreaterThanSignKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "gt", true, ">");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14542:3: ( (lv_lt_1_0= '<' ) )
                    {
                    // InternalKim.g:14542:3: ( (lv_lt_1_0= '<' ) )
                    // InternalKim.g:14543:4: (lv_lt_1_0= '<' )
                    {
                    // InternalKim.g:14543:4: (lv_lt_1_0= '<' )
                    // InternalKim.g:14544:5: lv_lt_1_0= '<'
                    {
                    lv_lt_1_0=(Token)match(input,227,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_lt_1_0, grammarAccess.getREL_OPERATORAccess().getLtLessThanSignKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "lt", true, "<");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:14557:3: ( (lv_eq_2_0= '=' ) )
                    {
                    // InternalKim.g:14557:3: ( (lv_eq_2_0= '=' ) )
                    // InternalKim.g:14558:4: (lv_eq_2_0= '=' )
                    {
                    // InternalKim.g:14558:4: (lv_eq_2_0= '=' )
                    // InternalKim.g:14559:5: lv_eq_2_0= '='
                    {
                    lv_eq_2_0=(Token)match(input,91,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_eq_2_0, grammarAccess.getREL_OPERATORAccess().getEqEqualsSignKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "eq", true, "=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:14572:3: ( (lv_ne_3_0= '!=' ) )
                    {
                    // InternalKim.g:14572:3: ( (lv_ne_3_0= '!=' ) )
                    // InternalKim.g:14573:4: (lv_ne_3_0= '!=' )
                    {
                    // InternalKim.g:14573:4: (lv_ne_3_0= '!=' )
                    // InternalKim.g:14574:5: lv_ne_3_0= '!='
                    {
                    lv_ne_3_0=(Token)match(input,228,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_ne_3_0, grammarAccess.getREL_OPERATORAccess().getNeExclamationMarkEqualsSignKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "ne", true, "!=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:14587:3: ( (lv_le_4_0= '<=' ) )
                    {
                    // InternalKim.g:14587:3: ( (lv_le_4_0= '<=' ) )
                    // InternalKim.g:14588:4: (lv_le_4_0= '<=' )
                    {
                    // InternalKim.g:14588:4: (lv_le_4_0= '<=' )
                    // InternalKim.g:14589:5: lv_le_4_0= '<='
                    {
                    lv_le_4_0=(Token)match(input,229,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_le_4_0, grammarAccess.getREL_OPERATORAccess().getLeLessThanSignEqualsSignKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "le", true, "<=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:14602:3: ( (lv_ge_5_0= '>=' ) )
                    {
                    // InternalKim.g:14602:3: ( (lv_ge_5_0= '>=' ) )
                    // InternalKim.g:14603:4: (lv_ge_5_0= '>=' )
                    {
                    // InternalKim.g:14603:4: (lv_ge_5_0= '>=' )
                    // InternalKim.g:14604:5: lv_ge_5_0= '>='
                    {
                    lv_ge_5_0=(Token)match(input,230,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_ge_5_0, grammarAccess.getREL_OPERATORAccess().getGeGreaterThanSignEqualsSignKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "ge", true, ">=");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleREL_OPERATOR"


    // $ANTLR start "entryRuleUnit"
    // InternalKim.g:14620:1: entryRuleUnit returns [EObject current=null] : iv_ruleUnit= ruleUnit EOF ;
    public final EObject entryRuleUnit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnit = null;


        try {
            // InternalKim.g:14620:45: (iv_ruleUnit= ruleUnit EOF )
            // InternalKim.g:14621:2: iv_ruleUnit= ruleUnit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnit=ruleUnit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnit"


    // $ANTLR start "ruleUnit"
    // InternalKim.g:14627:1: ruleUnit returns [EObject current=null] : ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* ) ;
    public final EObject ruleUnit() throws RecognitionException {
        EObject current = null;

        EObject lv_root_1_0 = null;

        Enumerator lv_connectors_2_0 = null;

        EObject lv_units_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14633:2: ( ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* ) )
            // InternalKim.g:14634:2: ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* )
            {
            // InternalKim.g:14634:2: ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* )
            // InternalKim.g:14635:3: () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )*
            {
            // InternalKim.g:14635:3: ()
            // InternalKim.g:14636:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getUnitAccess().getUnitAction_0(),
              					current);
              			
            }

            }

            // InternalKim.g:14645:3: ( (lv_root_1_0= ruleUnitElement ) )?
            int alt292=2;
            alt292 = dfa292.predict(input);
            switch (alt292) {
                case 1 :
                    // InternalKim.g:14646:4: (lv_root_1_0= ruleUnitElement )
                    {
                    // InternalKim.g:14646:4: (lv_root_1_0= ruleUnitElement )
                    // InternalKim.g:14647:5: lv_root_1_0= ruleUnitElement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnitAccess().getRootUnitElementParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_169);
                    lv_root_1_0=ruleUnitElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUnitRule());
                      					}
                      					set(
                      						current,
                      						"root",
                      						lv_root_1_0,
                      						"org.integratedmodelling.kim.Kim.UnitElement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:14664:3: ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )*
            loop293:
            do {
                int alt293=2;
                int LA293_0 = input.LA(1);

                if ( (LA293_0==38||LA293_0==92||LA293_0==239) ) {
                    alt293=1;
                }


                switch (alt293) {
            	case 1 :
            	    // InternalKim.g:14665:4: ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) )
            	    {
            	    // InternalKim.g:14665:4: ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) )
            	    // InternalKim.g:14666:5: ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) )
            	    {
            	    // InternalKim.g:14672:5: ( (lv_connectors_2_0= ruleUnitOp ) )
            	    // InternalKim.g:14673:6: (lv_connectors_2_0= ruleUnitOp )
            	    {
            	    // InternalKim.g:14673:6: (lv_connectors_2_0= ruleUnitOp )
            	    // InternalKim.g:14674:7: lv_connectors_2_0= ruleUnitOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getUnitAccess().getConnectorsUnitOpEnumRuleCall_2_0_0_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_170);
            	    lv_connectors_2_0=ruleUnitOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getUnitRule());
            	      							}
            	      							add(
            	      								current,
            	      								"connectors",
            	      								lv_connectors_2_0,
            	      								"org.integratedmodelling.kim.Kim.UnitOp");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }

            	    // InternalKim.g:14692:4: ( (lv_units_3_0= ruleUnitElement ) )
            	    // InternalKim.g:14693:5: (lv_units_3_0= ruleUnitElement )
            	    {
            	    // InternalKim.g:14693:5: (lv_units_3_0= ruleUnitElement )
            	    // InternalKim.g:14694:6: lv_units_3_0= ruleUnitElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getUnitAccess().getUnitsUnitElementParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_169);
            	    lv_units_3_0=ruleUnitElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getUnitRule());
            	      						}
            	      						add(
            	      							current,
            	      							"units",
            	      							lv_units_3_0,
            	      							"org.integratedmodelling.kim.Kim.UnitElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop293;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnit"


    // $ANTLR start "entryRuleCurrency"
    // InternalKim.g:14716:1: entryRuleCurrency returns [EObject current=null] : iv_ruleCurrency= ruleCurrency EOF ;
    public final EObject entryRuleCurrency() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCurrency = null;


        try {
            // InternalKim.g:14716:49: (iv_ruleCurrency= ruleCurrency EOF )
            // InternalKim.g:14717:2: iv_ruleCurrency= ruleCurrency EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCurrencyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCurrency=ruleCurrency();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCurrency; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCurrency"


    // $ANTLR start "ruleCurrency"
    // InternalKim.g:14723:1: ruleCurrency returns [EObject current=null] : ( ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ) | ( ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) ) ) ) ;
    public final EObject ruleCurrency() throws RecognitionException {
        EObject current = null;

        Token lv_id_0_0=null;
        Token otherlv_1=null;
        Token lv_year_2_0=null;
        Token lv_concept_3_1=null;
        AntlrDatatypeRuleToken lv_concept_3_2 = null;



        	enterRule();

        try {
            // InternalKim.g:14729:2: ( ( ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ) | ( ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) ) ) ) )
            // InternalKim.g:14730:2: ( ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ) | ( ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) ) ) )
            {
            // InternalKim.g:14730:2: ( ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ) | ( ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) ) ) )
            int alt295=2;
            int LA295_0 = input.LA(1);

            if ( (LA295_0==RULE_UPPERCASE_ID) ) {
                alt295=1;
            }
            else if ( (LA295_0==RULE_LOWERCASE_ID||(LA295_0>=RULE_CAMELCASE_ID && LA295_0<=RULE_LOWERCASE_DASHID)) ) {
                alt295=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 295, 0, input);

                throw nvae;
            }
            switch (alt295) {
                case 1 :
                    // InternalKim.g:14731:3: ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) )
                    {
                    // InternalKim.g:14731:3: ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) )
                    // InternalKim.g:14732:4: ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) )
                    {
                    // InternalKim.g:14732:4: ( (lv_id_0_0= RULE_UPPERCASE_ID ) )
                    // InternalKim.g:14733:5: (lv_id_0_0= RULE_UPPERCASE_ID )
                    {
                    // InternalKim.g:14733:5: (lv_id_0_0= RULE_UPPERCASE_ID )
                    // InternalKim.g:14734:6: lv_id_0_0= RULE_UPPERCASE_ID
                    {
                    lv_id_0_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_171); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_id_0_0, grammarAccess.getCurrencyAccess().getIdUPPERCASE_IDTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCurrencyRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"id",
                      							lv_id_0_0,
                      							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                      					
                    }

                    }


                    }

                    // InternalKim.g:14750:4: (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) )
                    // InternalKim.g:14751:5: otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) )
                    {
                    otherlv_1=(Token)match(input,231,FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getCurrencyAccess().getCommercialAtKeyword_0_1_0());
                      				
                    }
                    // InternalKim.g:14755:5: ( (lv_year_2_0= RULE_INT ) )
                    // InternalKim.g:14756:6: (lv_year_2_0= RULE_INT )
                    {
                    // InternalKim.g:14756:6: (lv_year_2_0= RULE_INT )
                    // InternalKim.g:14757:7: lv_year_2_0= RULE_INT
                    {
                    lv_year_2_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_year_2_0, grammarAccess.getCurrencyAccess().getYearINTTerminalRuleCall_0_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getCurrencyRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"year",
                      								lv_year_2_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14776:3: ( ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) ) )
                    {
                    // InternalKim.g:14776:3: ( ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) ) )
                    // InternalKim.g:14777:4: ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:14777:4: ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) )
                    // InternalKim.g:14778:5: (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId )
                    {
                    // InternalKim.g:14778:5: (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId )
                    int alt294=2;
                    int LA294_0 = input.LA(1);

                    if ( (LA294_0==RULE_CAMELCASE_ID) ) {
                        alt294=1;
                    }
                    else if ( (LA294_0==RULE_LOWERCASE_ID||LA294_0==RULE_LOWERCASE_DASHID) ) {
                        alt294=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 294, 0, input);

                        throw nvae;
                    }
                    switch (alt294) {
                        case 1 :
                            // InternalKim.g:14779:6: lv_concept_3_1= RULE_CAMELCASE_ID
                            {
                            lv_concept_3_1=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_concept_3_1, grammarAccess.getCurrencyAccess().getConceptCAMELCASE_IDTerminalRuleCall_1_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getCurrencyRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"concept",
                              							lv_concept_3_1,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14794:6: lv_concept_3_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getCurrencyAccess().getConceptNamespaceIdParserRuleCall_1_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_concept_3_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getCurrencyRule());
                              						}
                              						set(
                              							current,
                              							"concept",
                              							lv_concept_3_2,
                              							"org.integratedmodelling.kim.Kim.NamespaceId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCurrency"


    // $ANTLR start "entryRuleNumber"
    // InternalKim.g:14816:1: entryRuleNumber returns [EObject current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final EObject entryRuleNumber() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumber = null;


        try {
            // InternalKim.g:14816:47: (iv_ruleNumber= ruleNumber EOF )
            // InternalKim.g:14817:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalKim.g:14823:1: ruleNumber returns [EObject current=null] : ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) ) )? ) ;
    public final EObject ruleNumber() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_negative_1_0=null;
        Token lv_real_2_0=null;
        Token lv_decimal_3_0=null;
        Token lv_decimalPart_4_0=null;
        Token lv_exponential_5_1=null;
        Token lv_exponential_5_2=null;
        Token otherlv_6=null;
        Token lv_expNegative_7_0=null;
        Token lv_exp_8_0=null;


        	enterRule();

        try {
            // InternalKim.g:14829:2: ( ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) ) )? ) )
            // InternalKim.g:14830:2: ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) ) )? )
            {
            // InternalKim.g:14830:2: ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) ) )? )
            // InternalKim.g:14831:3: (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) ) )?
            {
            // InternalKim.g:14831:3: (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )?
            int alt296=3;
            int LA296_0 = input.LA(1);

            if ( (LA296_0==232) ) {
                alt296=1;
            }
            else if ( (LA296_0==233) ) {
                alt296=2;
            }
            switch (alt296) {
                case 1 :
                    // InternalKim.g:14832:4: otherlv_0= '+'
                    {
                    otherlv_0=(Token)match(input,232,FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getNumberAccess().getPlusSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:14837:4: ( (lv_negative_1_0= '-' ) )
                    {
                    // InternalKim.g:14837:4: ( (lv_negative_1_0= '-' ) )
                    // InternalKim.g:14838:5: (lv_negative_1_0= '-' )
                    {
                    // InternalKim.g:14838:5: (lv_negative_1_0= '-' )
                    // InternalKim.g:14839:6: lv_negative_1_0= '-'
                    {
                    lv_negative_1_0=(Token)match(input,233,FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_negative_1_0, grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNumberRule());
                      						}
                      						setWithLastConsumed(current, "negative", true, "-");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:14852:3: ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) )
            // InternalKim.g:14853:4: ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT )
            {
            // InternalKim.g:14857:4: (lv_real_2_0= RULE_INT )
            // InternalKim.g:14858:5: lv_real_2_0= RULE_INT
            {
            lv_real_2_0=(Token)match(input,RULE_INT,FOLLOW_172); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_real_2_0, grammarAccess.getNumberAccess().getRealINTTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getNumberRule());
              					}
              					setWithLastConsumed(
              						current,
              						"real",
              						lv_real_2_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            // InternalKim.g:14874:3: ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) ) )?
            int alt297=2;
            int LA297_0 = input.LA(1);

            if ( (LA297_0==93) && (synpred557_InternalKim())) {
                alt297=1;
            }
            switch (alt297) {
                case 1 :
                    // InternalKim.g:14875:4: ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) )
                    {
                    // InternalKim.g:14888:4: ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) )
                    // InternalKim.g:14889:5: ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) )
                    {
                    // InternalKim.g:14889:5: ( (lv_decimal_3_0= '.' ) )
                    // InternalKim.g:14890:6: (lv_decimal_3_0= '.' )
                    {
                    // InternalKim.g:14890:6: (lv_decimal_3_0= '.' )
                    // InternalKim.g:14891:7: lv_decimal_3_0= '.'
                    {
                    lv_decimal_3_0=(Token)match(input,93,FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_decimal_3_0, grammarAccess.getNumberAccess().getDecimalFullStopKeyword_2_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(current, "decimal", true, ".");
                      						
                    }

                    }


                    }

                    // InternalKim.g:14903:5: ( (lv_decimalPart_4_0= RULE_INT ) )
                    // InternalKim.g:14904:6: (lv_decimalPart_4_0= RULE_INT )
                    {
                    // InternalKim.g:14904:6: (lv_decimalPart_4_0= RULE_INT )
                    // InternalKim.g:14905:7: lv_decimalPart_4_0= RULE_INT
                    {
                    lv_decimalPart_4_0=(Token)match(input,RULE_INT,FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_decimalPart_4_0, grammarAccess.getNumberAccess().getDecimalPartINTTerminalRuleCall_2_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"decimalPart",
                      								lv_decimalPart_4_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:14923:3: ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) ) )?
            int alt300=2;
            int LA300_0 = input.LA(1);

            if ( (LA300_0==234) && (synpred561_InternalKim())) {
                alt300=1;
            }
            else if ( (LA300_0==235) && (synpred561_InternalKim())) {
                alt300=1;
            }
            switch (alt300) {
                case 1 :
                    // InternalKim.g:14924:4: ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) )
                    {
                    // InternalKim.g:14950:4: ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) )
                    // InternalKim.g:14951:5: ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) )
                    {
                    // InternalKim.g:14951:5: ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) )
                    // InternalKim.g:14952:6: ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) )
                    {
                    // InternalKim.g:14952:6: ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) )
                    // InternalKim.g:14953:7: (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' )
                    {
                    // InternalKim.g:14953:7: (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' )
                    int alt298=2;
                    int LA298_0 = input.LA(1);

                    if ( (LA298_0==234) ) {
                        alt298=1;
                    }
                    else if ( (LA298_0==235) ) {
                        alt298=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 298, 0, input);

                        throw nvae;
                    }
                    switch (alt298) {
                        case 1 :
                            // InternalKim.g:14954:8: lv_exponential_5_1= 'e'
                            {
                            lv_exponential_5_1=(Token)match(input,234,FOLLOW_39); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exponential_5_1, grammarAccess.getNumberAccess().getExponentialEKeyword_3_0_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "exponential", true, null);
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14965:8: lv_exponential_5_2= 'E'
                            {
                            lv_exponential_5_2=(Token)match(input,235,FOLLOW_39); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exponential_5_2, grammarAccess.getNumberAccess().getExponentialEKeyword_3_0_0_0_1());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "exponential", true, null);
                              							
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:14978:5: (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )?
                    int alt299=3;
                    int LA299_0 = input.LA(1);

                    if ( (LA299_0==232) ) {
                        alt299=1;
                    }
                    else if ( (LA299_0==233) ) {
                        alt299=2;
                    }
                    switch (alt299) {
                        case 1 :
                            // InternalKim.g:14979:6: otherlv_6= '+'
                            {
                            otherlv_6=(Token)match(input,232,FOLLOW_75); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_6, grammarAccess.getNumberAccess().getPlusSignKeyword_3_0_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14984:6: ( (lv_expNegative_7_0= '-' ) )
                            {
                            // InternalKim.g:14984:6: ( (lv_expNegative_7_0= '-' ) )
                            // InternalKim.g:14985:7: (lv_expNegative_7_0= '-' )
                            {
                            // InternalKim.g:14985:7: (lv_expNegative_7_0= '-' )
                            // InternalKim.g:14986:8: lv_expNegative_7_0= '-'
                            {
                            lv_expNegative_7_0=(Token)match(input,233,FOLLOW_75); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_expNegative_7_0, grammarAccess.getNumberAccess().getExpNegativeHyphenMinusKeyword_3_0_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "expNegative", true, "-");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:14999:5: ( (lv_exp_8_0= RULE_INT ) )
                    // InternalKim.g:15000:6: (lv_exp_8_0= RULE_INT )
                    {
                    // InternalKim.g:15000:6: (lv_exp_8_0= RULE_INT )
                    // InternalKim.g:15001:7: lv_exp_8_0= RULE_INT
                    {
                    lv_exp_8_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_exp_8_0, grammarAccess.getNumberAccess().getExpINTTerminalRuleCall_3_0_2_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"exp",
                      								lv_exp_8_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRulePathName"
    // InternalKim.g:15023:1: entryRulePathName returns [String current=null] : iv_rulePathName= rulePathName EOF ;
    public final String entryRulePathName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePathName = null;


        try {
            // InternalKim.g:15023:48: (iv_rulePathName= rulePathName EOF )
            // InternalKim.g:15024:2: iv_rulePathName= rulePathName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePathName=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePathName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePathName"


    // $ANTLR start "rulePathName"
    // InternalKim.g:15030:1: rulePathName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) )* ) ;
    public final AntlrDatatypeRuleToken rulePathName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_0=null;
        Token this_LOWERCASE_DASHID_1=null;
        Token kw=null;
        Token this_LOWERCASE_ID_3=null;
        Token this_LOWERCASE_DASHID_4=null;


        	enterRule();

        try {
            // InternalKim.g:15036:2: ( ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) )* ) )
            // InternalKim.g:15037:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) )* )
            {
            // InternalKim.g:15037:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) )* )
            // InternalKim.g:15038:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) )*
            {
            // InternalKim.g:15038:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID )
            int alt301=2;
            int LA301_0 = input.LA(1);

            if ( (LA301_0==RULE_LOWERCASE_ID) ) {
                alt301=1;
            }
            else if ( (LA301_0==RULE_LOWERCASE_DASHID) ) {
                alt301=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 301, 0, input);

                throw nvae;
            }
            switch (alt301) {
                case 1 :
                    // InternalKim.g:15039:4: this_LOWERCASE_ID_0= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_174); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15047:4: this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_1=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_174); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_1, grammarAccess.getPathNameAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:15055:3: (kw= '.' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) )*
            loop303:
            do {
                int alt303=2;
                int LA303_0 = input.LA(1);

                if ( (LA303_0==93) ) {
                    alt303=1;
                }


                switch (alt303) {
            	case 1 :
            	    // InternalKim.g:15056:4: kw= '.' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID )
            	    {
            	    kw=(Token)match(input,93,FOLLOW_81); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getPathNameAccess().getFullStopKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:15061:4: (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID )
            	    int alt302=2;
            	    int LA302_0 = input.LA(1);

            	    if ( (LA302_0==RULE_LOWERCASE_ID) ) {
            	        alt302=1;
            	    }
            	    else if ( (LA302_0==RULE_LOWERCASE_DASHID) ) {
            	        alt302=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 302, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt302) {
            	        case 1 :
            	            // InternalKim.g:15062:5: this_LOWERCASE_ID_3= RULE_LOWERCASE_ID
            	            {
            	            this_LOWERCASE_ID_3=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_174); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_ID_3);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_ID_3, grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_1_1_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:15070:5: this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID
            	            {
            	            this_LOWERCASE_DASHID_4=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_174); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_DASHID_4);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_DASHID_4, grammarAccess.getPathNameAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop303;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePathName"


    // $ANTLR start "entryRulePath"
    // InternalKim.g:15083:1: entryRulePath returns [String current=null] : iv_rulePath= rulePath EOF ;
    public final String entryRulePath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePath = null;


        try {
            // InternalKim.g:15083:44: (iv_rulePath= rulePath EOF )
            // InternalKim.g:15084:2: iv_rulePath= rulePath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePath=rulePath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePath"


    // $ANTLR start "rulePath"
    // InternalKim.g:15090:1: rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) )* ) ;
    public final AntlrDatatypeRuleToken rulePath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_0=null;
        Token this_LOWERCASE_DASHID_1=null;
        Token kw=null;
        Token this_LOWERCASE_ID_4=null;
        Token this_LOWERCASE_DASHID_5=null;


        	enterRule();

        try {
            // InternalKim.g:15096:2: ( ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) )* ) )
            // InternalKim.g:15097:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) )* )
            {
            // InternalKim.g:15097:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) )* )
            // InternalKim.g:15098:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) )*
            {
            // InternalKim.g:15098:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID )
            int alt304=2;
            int LA304_0 = input.LA(1);

            if ( (LA304_0==RULE_LOWERCASE_ID) ) {
                alt304=1;
            }
            else if ( (LA304_0==RULE_LOWERCASE_DASHID) ) {
                alt304=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 304, 0, input);

                throw nvae;
            }
            switch (alt304) {
                case 1 :
                    // InternalKim.g:15099:4: this_LOWERCASE_ID_0= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_175); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15107:4: this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_1=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_175); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_1, grammarAccess.getPathAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:15115:3: ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) )*
            loop307:
            do {
                int alt307=2;
                int LA307_0 = input.LA(1);

                if ( ((LA307_0>=92 && LA307_0<=93)) ) {
                    alt307=1;
                }


                switch (alt307) {
            	case 1 :
            	    // InternalKim.g:15116:4: (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID )
            	    {
            	    // InternalKim.g:15116:4: (kw= '.' | kw= '/' )
            	    int alt305=2;
            	    int LA305_0 = input.LA(1);

            	    if ( (LA305_0==93) ) {
            	        alt305=1;
            	    }
            	    else if ( (LA305_0==92) ) {
            	        alt305=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 305, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt305) {
            	        case 1 :
            	            // InternalKim.g:15117:5: kw= '.'
            	            {
            	            kw=(Token)match(input,93,FOLLOW_81); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getPathAccess().getFullStopKeyword_1_0_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:15123:5: kw= '/'
            	            {
            	            kw=(Token)match(input,92,FOLLOW_81); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getPathAccess().getSolidusKeyword_1_0_1());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    // InternalKim.g:15129:4: (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID )
            	    int alt306=2;
            	    int LA306_0 = input.LA(1);

            	    if ( (LA306_0==RULE_LOWERCASE_ID) ) {
            	        alt306=1;
            	    }
            	    else if ( (LA306_0==RULE_LOWERCASE_DASHID) ) {
            	        alt306=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 306, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt306) {
            	        case 1 :
            	            // InternalKim.g:15130:5: this_LOWERCASE_ID_4= RULE_LOWERCASE_ID
            	            {
            	            this_LOWERCASE_ID_4=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_175); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_ID_4);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_ID_4, grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_1_1_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:15138:5: this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID
            	            {
            	            this_LOWERCASE_DASHID_5=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_175); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_DASHID_5);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_DASHID_5, grammarAccess.getPathAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop307;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePath"


    // $ANTLR start "entryRuleNamespaceId"
    // InternalKim.g:15151:1: entryRuleNamespaceId returns [String current=null] : iv_ruleNamespaceId= ruleNamespaceId EOF ;
    public final String entryRuleNamespaceId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNamespaceId = null;


        try {
            // InternalKim.g:15151:51: (iv_ruleNamespaceId= ruleNamespaceId EOF )
            // InternalKim.g:15152:2: iv_ruleNamespaceId= ruleNamespaceId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespaceId=ruleNamespaceId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceId"


    // $ANTLR start "ruleNamespaceId"
    // InternalKim.g:15158:1: ruleNamespaceId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID ) ;
    public final AntlrDatatypeRuleToken ruleNamespaceId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_CAMELCASE_ID_2=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;



        	enterRule();

        try {
            // InternalKim.g:15164:2: ( (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID ) )
            // InternalKim.g:15165:2: (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID )
            {
            // InternalKim.g:15165:2: (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID )
            // InternalKim.g:15166:3: this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getNamespaceIdAccess().getPathNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_80);
            this_PathName_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,89,FOLLOW_144); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getNamespaceIdAccess().getColonKeyword_1());
              		
            }
            this_CAMELCASE_ID_2=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_CAMELCASE_ID_2);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_CAMELCASE_ID_2, grammarAccess.getNamespaceIdAccess().getCAMELCASE_IDTerminalRuleCall_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceId"


    // $ANTLR start "entryRulePropertyId"
    // InternalKim.g:15192:1: entryRulePropertyId returns [String current=null] : iv_rulePropertyId= rulePropertyId EOF ;
    public final String entryRulePropertyId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePropertyId = null;


        try {
            // InternalKim.g:15192:50: (iv_rulePropertyId= rulePropertyId EOF )
            // InternalKim.g:15193:2: iv_rulePropertyId= rulePropertyId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyId=rulePropertyId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePropertyId"


    // $ANTLR start "rulePropertyId"
    // InternalKim.g:15199:1: rulePropertyId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) ) ;
    public final AntlrDatatypeRuleToken rulePropertyId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_1=null;
        Token kw=null;
        Token this_LOWERCASE_ID_3=null;
        Token this_LOWERCASE_DASHID_4=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;



        	enterRule();

        try {
            // InternalKim.g:15205:2: ( ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) ) )
            // InternalKim.g:15206:2: ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) )
            {
            // InternalKim.g:15206:2: ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) )
            // InternalKim.g:15207:3: (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID )
            {
            // InternalKim.g:15207:3: (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID )
            int alt308=2;
            int LA308_0 = input.LA(1);

            if ( (LA308_0==RULE_LOWERCASE_ID) ) {
                int LA308_1 = input.LA(2);

                if ( (synpred572_InternalKim()) ) {
                    alt308=1;
                }
                else if ( (true) ) {
                    alt308=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 308, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA308_0==RULE_LOWERCASE_DASHID) ) {
                alt308=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 308, 0, input);

                throw nvae;
            }
            switch (alt308) {
                case 1 :
                    // InternalKim.g:15208:4: this_PathName_0= rulePathName
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPropertyIdAccess().getPathNameParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_80);
                    this_PathName_0=rulePathName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_PathName_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15219:4: this_LOWERCASE_ID_1= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_1, grammarAccess.getPropertyIdAccess().getLOWERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,89,FOLLOW_81); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getPropertyIdAccess().getColonKeyword_1());
              		
            }
            // InternalKim.g:15232:3: (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID )
            int alt309=2;
            int LA309_0 = input.LA(1);

            if ( (LA309_0==RULE_LOWERCASE_ID) ) {
                alt309=1;
            }
            else if ( (LA309_0==RULE_LOWERCASE_DASHID) ) {
                alt309=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 309, 0, input);

                throw nvae;
            }
            switch (alt309) {
                case 1 :
                    // InternalKim.g:15233:4: this_LOWERCASE_ID_3= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_3=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_3);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_3, grammarAccess.getPropertyIdAccess().getLOWERCASE_IDTerminalRuleCall_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15241:4: this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_4=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_4);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_4, grammarAccess.getPropertyIdAccess().getLOWERCASE_DASHIDTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePropertyId"


    // $ANTLR start "entryRuleVersionNumber"
    // InternalKim.g:15253:1: entryRuleVersionNumber returns [String current=null] : iv_ruleVersionNumber= ruleVersionNumber EOF ;
    public final String entryRuleVersionNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleVersionNumber = null;


        try {
            // InternalKim.g:15253:53: (iv_ruleVersionNumber= ruleVersionNumber EOF )
            // InternalKim.g:15254:2: iv_ruleVersionNumber= ruleVersionNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVersionNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVersionNumber=ruleVersionNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVersionNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVersionNumber"


    // $ANTLR start "ruleVersionNumber"
    // InternalKim.g:15260:1: ruleVersionNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? ) ;
    public final AntlrDatatypeRuleToken ruleVersionNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;
        Token kw=null;
        Token this_INT_2=null;
        Token this_INT_4=null;
        Token this_LOWERCASE_ID_6=null;
        Token this_UPPERCASE_ID_7=null;


        	enterRule();

        try {
            // InternalKim.g:15266:2: ( (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? ) )
            // InternalKim.g:15267:2: (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? )
            {
            // InternalKim.g:15267:2: (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? )
            // InternalKim.g:15268:3: this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )?
            {
            this_INT_0=(Token)match(input,RULE_INT,FOLLOW_176); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_0, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_0());
              		
            }
            // InternalKim.g:15275:3: (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )?
            int alt311=2;
            int LA311_0 = input.LA(1);

            if ( (LA311_0==93) ) {
                alt311=1;
            }
            switch (alt311) {
                case 1 :
                    // InternalKim.g:15276:4: kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )?
                    {
                    kw=(Token)match(input,93,FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_0());
                      			
                    }
                    this_INT_2=(Token)match(input,RULE_INT,FOLLOW_176); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_2, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_1());
                      			
                    }
                    // InternalKim.g:15288:4: (kw= '.' this_INT_4= RULE_INT )?
                    int alt310=2;
                    int LA310_0 = input.LA(1);

                    if ( (LA310_0==93) ) {
                        alt310=1;
                    }
                    switch (alt310) {
                        case 1 :
                            // InternalKim.g:15289:5: kw= '.' this_INT_4= RULE_INT
                            {
                            kw=(Token)match(input,93,FOLLOW_75); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_2_0());
                              				
                            }
                            this_INT_4=(Token)match(input,RULE_INT,FOLLOW_177); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_4);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_4, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKim.g:15303:3: (kw= '-' )?
            int alt312=2;
            int LA312_0 = input.LA(1);

            if ( (LA312_0==233) ) {
                alt312=1;
            }
            switch (alt312) {
                case 1 :
                    // InternalKim.g:15304:4: kw= '-'
                    {
                    kw=(Token)match(input,233,FOLLOW_178); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getHyphenMinusKeyword_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:15310:3: (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )?
            int alt313=3;
            int LA313_0 = input.LA(1);

            if ( (LA313_0==RULE_LOWERCASE_ID) ) {
                int LA313_1 = input.LA(2);

                if ( (synpred577_InternalKim()) ) {
                    alt313=1;
                }
            }
            else if ( (LA313_0==RULE_UPPERCASE_ID) ) {
                alt313=2;
            }
            switch (alt313) {
                case 1 :
                    // InternalKim.g:15311:4: this_LOWERCASE_ID_6= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_6=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_6);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_6, grammarAccess.getVersionNumberAccess().getLOWERCASE_IDTerminalRuleCall_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15319:4: this_UPPERCASE_ID_7= RULE_UPPERCASE_ID
                    {
                    this_UPPERCASE_ID_7=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UPPERCASE_ID_7);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UPPERCASE_ID_7, grammarAccess.getVersionNumberAccess().getUPPERCASE_IDTerminalRuleCall_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVersionNumber"


    // $ANTLR start "ruleDataType"
    // InternalKim.g:15331:1: ruleDataType returns [Enumerator current=null] : ( (enumLiteral_0= 'text' ) | (enumLiteral_1= 'integer' ) | (enumLiteral_2= 'float' ) | (enumLiteral_3= 'boolean' ) | (enumLiteral_4= 'date' ) ) ;
    public final Enumerator ruleDataType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;


        	enterRule();

        try {
            // InternalKim.g:15337:2: ( ( (enumLiteral_0= 'text' ) | (enumLiteral_1= 'integer' ) | (enumLiteral_2= 'float' ) | (enumLiteral_3= 'boolean' ) | (enumLiteral_4= 'date' ) ) )
            // InternalKim.g:15338:2: ( (enumLiteral_0= 'text' ) | (enumLiteral_1= 'integer' ) | (enumLiteral_2= 'float' ) | (enumLiteral_3= 'boolean' ) | (enumLiteral_4= 'date' ) )
            {
            // InternalKim.g:15338:2: ( (enumLiteral_0= 'text' ) | (enumLiteral_1= 'integer' ) | (enumLiteral_2= 'float' ) | (enumLiteral_3= 'boolean' ) | (enumLiteral_4= 'date' ) )
            int alt314=5;
            switch ( input.LA(1) ) {
            case 73:
                {
                alt314=1;
                }
                break;
            case 236:
                {
                alt314=2;
                }
                break;
            case 237:
                {
                alt314=3;
                }
                break;
            case 74:
                {
                alt314=4;
                }
                break;
            case 238:
                {
                alt314=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 314, 0, input);

                throw nvae;
            }

            switch (alt314) {
                case 1 :
                    // InternalKim.g:15339:3: (enumLiteral_0= 'text' )
                    {
                    // InternalKim.g:15339:3: (enumLiteral_0= 'text' )
                    // InternalKim.g:15340:4: enumLiteral_0= 'text'
                    {
                    enumLiteral_0=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataTypeAccess().getTEXTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDataTypeAccess().getTEXTEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:15347:3: (enumLiteral_1= 'integer' )
                    {
                    // InternalKim.g:15347:3: (enumLiteral_1= 'integer' )
                    // InternalKim.g:15348:4: enumLiteral_1= 'integer'
                    {
                    enumLiteral_1=(Token)match(input,236,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataTypeAccess().getINTEGEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDataTypeAccess().getINTEGEREnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:15355:3: (enumLiteral_2= 'float' )
                    {
                    // InternalKim.g:15355:3: (enumLiteral_2= 'float' )
                    // InternalKim.g:15356:4: enumLiteral_2= 'float'
                    {
                    enumLiteral_2=(Token)match(input,237,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataTypeAccess().getFLOATEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getDataTypeAccess().getFLOATEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:15363:3: (enumLiteral_3= 'boolean' )
                    {
                    // InternalKim.g:15363:3: (enumLiteral_3= 'boolean' )
                    // InternalKim.g:15364:4: enumLiteral_3= 'boolean'
                    {
                    enumLiteral_3=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataTypeAccess().getBOOLEANEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getDataTypeAccess().getBOOLEANEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:15371:3: (enumLiteral_4= 'date' )
                    {
                    // InternalKim.g:15371:3: (enumLiteral_4= 'date' )
                    // InternalKim.g:15372:4: enumLiteral_4= 'date'
                    {
                    enumLiteral_4=(Token)match(input,238,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataTypeAccess().getDATEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getDataTypeAccess().getDATEEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataType"


    // $ANTLR start "ruleUnitOp"
    // InternalKim.g:15382:1: ruleUnitOp returns [Enumerator current=null] : ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) ) ;
    public final Enumerator ruleUnitOp() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalKim.g:15388:2: ( ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) ) )
            // InternalKim.g:15389:2: ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) )
            {
            // InternalKim.g:15389:2: ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) )
            int alt315=3;
            switch ( input.LA(1) ) {
            case 92:
                {
                alt315=1;
                }
                break;
            case 239:
                {
                alt315=2;
                }
                break;
            case 38:
                {
                alt315=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 315, 0, input);

                throw nvae;
            }

            switch (alt315) {
                case 1 :
                    // InternalKim.g:15390:3: (enumLiteral_0= '/' )
                    {
                    // InternalKim.g:15390:3: (enumLiteral_0= '/' )
                    // InternalKim.g:15391:4: enumLiteral_0= '/'
                    {
                    enumLiteral_0=(Token)match(input,92,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:15398:3: (enumLiteral_1= '^' )
                    {
                    // InternalKim.g:15398:3: (enumLiteral_1= '^' )
                    // InternalKim.g:15399:4: enumLiteral_1= '^'
                    {
                    enumLiteral_1=(Token)match(input,239,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:15406:3: (enumLiteral_2= '*' )
                    {
                    // InternalKim.g:15406:3: (enumLiteral_2= '*' )
                    // InternalKim.g:15407:4: enumLiteral_2= '*'
                    {
                    enumLiteral_2=(Token)match(input,38,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitOp"

    // $ANTLR start synpred2_InternalKim
    public final void synpred2_InternalKim_fragment() throws RecognitionException {   
        EObject lv_namespace_1_0 = null;


        // InternalKim.g:110:5: ( (lv_namespace_1_0= ruleNamespace ) )
        // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
        {
        // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
        // InternalKim.g:111:6: lv_namespace_1_0= ruleNamespace
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getModelAccess().getNamespaceNamespaceParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_namespace_1_0=ruleNamespace();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred2_InternalKim

    // $ANTLR start synpred4_InternalKim
    public final void synpred4_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_conceptStatement_0_0 = null;


        // InternalKim.g:167:3: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) )
        // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
        {
        // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
        // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';'
        {
        // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) )
        // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
        {
        // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
        // InternalKim.g:170:6: lv_conceptStatement_0_0= ruleConceptStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getConceptStatementConceptStatementParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_conceptStatement_0_0=ruleConceptStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,19,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred4_InternalKim

    // $ANTLR start synpred5_InternalKim
    public final void synpred5_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_modelStatement_2_0 = null;


        // InternalKim.g:193:3: ( ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) )
        // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
        {
        // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
        // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';'
        {
        // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) )
        // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
        {
        // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
        // InternalKim.g:196:6: lv_modelStatement_2_0= ruleModelStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getModelStatementModelStatementParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_modelStatement_2_0=ruleModelStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,19,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalKim

    // $ANTLR start synpred6_InternalKim
    public final void synpred6_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_upperOntologyStatement_4_0 = null;


        // InternalKim.g:219:3: ( ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) )
        // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
        {
        // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
        // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';'
        {
        // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) )
        // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
        {
        // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
        // InternalKim.g:222:6: lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getUpperOntologyStatementUpperOntologyDefinitionParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_upperOntologyStatement_4_0=ruleUpperOntologyDefinition();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,19,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred6_InternalKim

    // $ANTLR start synpred7_InternalKim
    public final void synpred7_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        EObject lv_defineStatement_6_0 = null;


        // InternalKim.g:245:3: ( ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) )
        // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
        {
        // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
        // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';'
        {
        // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) )
        // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
        {
        // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
        // InternalKim.g:248:6: lv_defineStatement_6_0= ruleDefineStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getDefineStatementDefineStatementParserRuleCall_3_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_defineStatement_6_0=ruleDefineStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_7=(Token)match(input,19,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred7_InternalKim

    // $ANTLR start synpred10_InternalKim
    public final void synpred10_InternalKim_fragment() throws RecognitionException {   
        Token lv_inactive_3_0=null;

        // InternalKim.g:372:4: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )
        // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        {
        // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        // InternalKim.g:373:5: {...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred10_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:373:111: ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        // InternalKim.g:374:6: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:377:9: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        // InternalKim.g:377:10: {...}? => ( (lv_inactive_3_0= 'void' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred10_InternalKim", "true");
        }
        // InternalKim.g:377:19: ( (lv_inactive_3_0= 'void' ) )
        // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
        {
        // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
        // InternalKim.g:378:10: lv_inactive_3_0= 'void'
        {
        lv_inactive_3_0=(Token)match(input,20,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred10_InternalKim

    // $ANTLR start synpred11_InternalKim
    public final void synpred11_InternalKim_fragment() throws RecognitionException {   
        Token lv_private_4_0=null;

        // InternalKim.g:395:4: ( ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) ) )
        // InternalKim.g:395:4: ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) )
        {
        // InternalKim.g:395:4: ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) )
        // InternalKim.g:396:5: {...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred11_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:396:111: ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) )
        // InternalKim.g:397:6: ({...}? => ( (lv_private_4_0= 'private' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:400:9: ({...}? => ( (lv_private_4_0= 'private' ) ) )
        // InternalKim.g:400:10: {...}? => ( (lv_private_4_0= 'private' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred11_InternalKim", "true");
        }
        // InternalKim.g:400:19: ( (lv_private_4_0= 'private' ) )
        // InternalKim.g:400:20: (lv_private_4_0= 'private' )
        {
        // InternalKim.g:400:20: (lv_private_4_0= 'private' )
        // InternalKim.g:401:10: lv_private_4_0= 'private'
        {
        lv_private_4_0=(Token)match(input,21,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred11_InternalKim

    // $ANTLR start synpred12_InternalKim
    public final void synpred12_InternalKim_fragment() throws RecognitionException {   
        Token lv_inactive_3_0=null;
        Token lv_private_4_0=null;

        // InternalKim.g:366:4: ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) ) )* ) ) )
        // InternalKim.g:366:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) ) )* ) )
        {
        // InternalKim.g:366:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) ) )* ) )
        // InternalKim.g:367:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) ) )* )
        {
        getUnorderedGroupHelper().enter(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());
        // InternalKim.g:370:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) ) )* )
        // InternalKim.g:371:6: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) ) )*
        {
        // InternalKim.g:371:6: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) ) )*
        loop317:
        do {
            int alt317=3;
            int LA317_0 = input.LA(1);

            if ( LA317_0 == 20 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
                alt317=1;
            }
            else if ( LA317_0 == 21 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                alt317=2;
            }


            switch (alt317) {
        	case 1 :
        	    // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        	    {
        	    // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        	    // InternalKim.g:373:5: {...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred12_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)");
        	    }
        	    // InternalKim.g:373:111: ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        	    // InternalKim.g:374:6: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
        	    // InternalKim.g:377:9: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        	    // InternalKim.g:377:10: {...}? => ( (lv_inactive_3_0= 'void' ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred12_InternalKim", "true");
        	    }
        	    // InternalKim.g:377:19: ( (lv_inactive_3_0= 'void' ) )
        	    // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
        	    {
        	    // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
        	    // InternalKim.g:378:10: lv_inactive_3_0= 'void'
        	    {
        	    lv_inactive_3_0=(Token)match(input,20,FOLLOW_179); if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:395:4: ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) )
        	    {
        	    // InternalKim.g:395:4: ({...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) ) )
        	    // InternalKim.g:396:5: {...}? => ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred12_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)");
        	    }
        	    // InternalKim.g:396:111: ( ({...}? => ( (lv_private_4_0= 'private' ) ) ) )
        	    // InternalKim.g:397:6: ({...}? => ( (lv_private_4_0= 'private' ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
        	    // InternalKim.g:400:9: ({...}? => ( (lv_private_4_0= 'private' ) ) )
        	    // InternalKim.g:400:10: {...}? => ( (lv_private_4_0= 'private' ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred12_InternalKim", "true");
        	    }
        	    // InternalKim.g:400:19: ( (lv_private_4_0= 'private' ) )
        	    // InternalKim.g:400:20: (lv_private_4_0= 'private' )
        	    {
        	    // InternalKim.g:400:20: (lv_private_4_0= 'private' )
        	    // InternalKim.g:401:10: lv_private_4_0= 'private'
        	    {
        	    lv_private_4_0=(Token)match(input,21,FOLLOW_179); if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop317;
            }
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred12_InternalKim

    // $ANTLR start synpred17_InternalKim
    public final void synpred17_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_urns_1_0 = null;

        EObject lv_urns_3_0 = null;


        // InternalKim.g:643:5: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) )
        // InternalKim.g:643:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
        {
        // InternalKim.g:643:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
        // InternalKim.g:644:6: ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
        {
        // InternalKim.g:644:6: ( (lv_urns_1_0= ruleUrn ) )
        // InternalKim.g:645:7: (lv_urns_1_0= ruleUrn )
        {
        // InternalKim.g:645:7: (lv_urns_1_0= ruleUrn )
        // InternalKim.g:646:8: lv_urns_1_0= ruleUrn
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_0_0());
          							
        }
        pushFollow(FOLLOW_35);
        lv_urns_1_0=ruleUrn();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:663:6: (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
        loop319:
        do {
            int alt319=2;
            int LA319_0 = input.LA(1);

            if ( (LA319_0==25) ) {
                alt319=1;
            }


            switch (alt319) {
        	case 1 :
        	    // InternalKim.g:664:7: otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) )
        	    {
        	    otherlv_2=(Token)match(input,25,FOLLOW_13); if (state.failed) return ;
        	    // InternalKim.g:668:7: ( (lv_urns_3_0= ruleUrn ) )
        	    // InternalKim.g:669:8: (lv_urns_3_0= ruleUrn )
        	    {
        	    // InternalKim.g:669:8: (lv_urns_3_0= ruleUrn )
        	    // InternalKim.g:670:9: lv_urns_3_0= ruleUrn
        	    {
        	    if ( state.backtracking==0 ) {

        	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_1_1_0());
        	      								
        	    }
        	    pushFollow(FOLLOW_35);
        	    lv_urns_3_0=ruleUrn();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop319;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred17_InternalKim

    // $ANTLR start synpred22_InternalKim
    public final void synpred22_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_boolean_6_1=null;
        Token lv_boolean_6_2=null;
        Token otherlv_8=null;
        EObject lv_urns_1_0 = null;

        EObject lv_urns_3_0 = null;

        EObject lv_function_4_0 = null;

        EObject lv_number_5_0 = null;

        EObject lv_concept_7_0 = null;


        // InternalKim.g:642:4: ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )
        // InternalKim.g:642:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as'
        {
        // InternalKim.g:642:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) )
        int alt323=5;
        alt323 = dfa323.predict(input);
        switch (alt323) {
            case 1 :
                // InternalKim.g:643:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                {
                // InternalKim.g:643:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                // InternalKim.g:644:6: ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                {
                // InternalKim.g:644:6: ( (lv_urns_1_0= ruleUrn ) )
                // InternalKim.g:645:7: (lv_urns_1_0= ruleUrn )
                {
                // InternalKim.g:645:7: (lv_urns_1_0= ruleUrn )
                // InternalKim.g:646:8: lv_urns_1_0= ruleUrn
                {
                if ( state.backtracking==0 ) {

                  								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_0_0());
                  							
                }
                pushFollow(FOLLOW_12);
                lv_urns_1_0=ruleUrn();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:663:6: (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                loop321:
                do {
                    int alt321=2;
                    int LA321_0 = input.LA(1);

                    if ( (LA321_0==25) ) {
                        alt321=1;
                    }


                    switch (alt321) {
                	case 1 :
                	    // InternalKim.g:664:7: otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) )
                	    {
                	    otherlv_2=(Token)match(input,25,FOLLOW_13); if (state.failed) return ;
                	    // InternalKim.g:668:7: ( (lv_urns_3_0= ruleUrn ) )
                	    // InternalKim.g:669:8: (lv_urns_3_0= ruleUrn )
                	    {
                	    // InternalKim.g:669:8: (lv_urns_3_0= ruleUrn )
                	    // InternalKim.g:670:9: lv_urns_3_0= ruleUrn
                	    {
                	    if ( state.backtracking==0 ) {

                	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_1_1_0());
                	      								
                	    }
                	    pushFollow(FOLLOW_12);
                	    lv_urns_3_0=ruleUrn();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop321;
                    }
                } while (true);


                }


                }
                break;
            case 2 :
                // InternalKim.g:690:5: ( (lv_function_4_0= ruleFunction ) )
                {
                // InternalKim.g:690:5: ( (lv_function_4_0= ruleFunction ) )
                // InternalKim.g:691:6: (lv_function_4_0= ruleFunction )
                {
                // InternalKim.g:691:6: (lv_function_4_0= ruleFunction )
                // InternalKim.g:692:7: lv_function_4_0= ruleFunction
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getFunctionFunctionParserRuleCall_1_0_1_0());
                  						
                }
                pushFollow(FOLLOW_10);
                lv_function_4_0=ruleFunction();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalKim.g:710:5: ( (lv_number_5_0= ruleNumber ) )
                {
                // InternalKim.g:710:5: ( (lv_number_5_0= ruleNumber ) )
                // InternalKim.g:711:6: (lv_number_5_0= ruleNumber )
                {
                // InternalKim.g:711:6: (lv_number_5_0= ruleNumber )
                // InternalKim.g:712:7: lv_number_5_0= ruleNumber
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getNumberNumberParserRuleCall_1_0_2_0());
                  						
                }
                pushFollow(FOLLOW_10);
                lv_number_5_0=ruleNumber();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 4 :
                // InternalKim.g:730:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                {
                // InternalKim.g:730:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                // InternalKim.g:731:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                {
                // InternalKim.g:731:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                // InternalKim.g:732:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                {
                // InternalKim.g:732:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                int alt322=2;
                int LA322_0 = input.LA(1);

                if ( (LA322_0==26) ) {
                    alt322=1;
                }
                else if ( (LA322_0==27) ) {
                    alt322=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 322, 0, input);

                    throw nvae;
                }
                switch (alt322) {
                    case 1 :
                        // InternalKim.g:733:8: lv_boolean_6_1= 'true'
                        {
                        lv_boolean_6_1=(Token)match(input,26,FOLLOW_10); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:744:8: lv_boolean_6_2= 'false'
                        {
                        lv_boolean_6_2=(Token)match(input,27,FOLLOW_10); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }
                break;
            case 5 :
                // InternalKim.g:758:5: ( (lv_concept_7_0= ruleSimpleObservableSemantics ) )
                {
                // InternalKim.g:758:5: ( (lv_concept_7_0= ruleSimpleObservableSemantics ) )
                // InternalKim.g:759:6: (lv_concept_7_0= ruleSimpleObservableSemantics )
                {
                // InternalKim.g:759:6: (lv_concept_7_0= ruleSimpleObservableSemantics )
                // InternalKim.g:760:7: lv_concept_7_0= ruleSimpleObservableSemantics
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getConceptSimpleObservableSemanticsParserRuleCall_1_0_4_0());
                  						
                }
                pushFollow(FOLLOW_10);
                lv_concept_7_0=ruleSimpleObservableSemantics();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        otherlv_8=(Token)match(input,23,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred22_InternalKim

    // $ANTLR start synpred53_InternalKim
    public final void synpred53_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:1531:5: ( 'to' )
        // InternalKim.g:1531:6: 'to'
        {
        match(input,34,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred53_InternalKim

    // $ANTLR start synpred57_InternalKim
    public final void synpred57_InternalKim_fragment() throws RecognitionException {   
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;


        // InternalKim.g:1489:3: ( ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) )
        // InternalKim.g:1489:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        {
        // InternalKim.g:1489:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        // InternalKim.g:1490:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        {
        // InternalKim.g:1490:4: ( (lv_int0_2_0= ruleNumber ) )
        // InternalKim.g:1491:5: (lv_int0_2_0= ruleNumber )
        {
        // InternalKim.g:1491:5: (lv_int0_2_0= ruleNumber )
        // InternalKim.g:1492:6: lv_int0_2_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt0NumberParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_38);
        lv_int0_2_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1509:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
        int alt339=3;
        int LA339_0 = input.LA(1);

        if ( (LA339_0==46) ) {
            alt339=1;
        }
        else if ( (LA339_0==47) ) {
            alt339=2;
        }
        switch (alt339) {
            case 1 :
                // InternalKim.g:1510:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                {
                // InternalKim.g:1510:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                // InternalKim.g:1511:6: (lv_leftLimit_3_0= 'inclusive' )
                {
                // InternalKim.g:1511:6: (lv_leftLimit_3_0= 'inclusive' )
                // InternalKim.g:1512:7: lv_leftLimit_3_0= 'inclusive'
                {
                lv_leftLimit_3_0=(Token)match(input,46,FOLLOW_23); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1525:5: otherlv_4= 'exclusive'
                {
                otherlv_4=(Token)match(input,47,FOLLOW_23); if (state.failed) return ;

                }
                break;

        }

        // InternalKim.g:1530:4: ( ( 'to' )=>otherlv_5= 'to' )
        // InternalKim.g:1531:5: ( 'to' )=>otherlv_5= 'to'
        {
        otherlv_5=(Token)match(input,34,FOLLOW_39); if (state.failed) return ;

        }

        // InternalKim.g:1537:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
        // InternalKim.g:1538:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
        {
        // InternalKim.g:1542:5: (lv_int1_6_0= ruleNumber )
        // InternalKim.g:1543:6: lv_int1_6_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt1NumberParserRuleCall_1_3_0());
          					
        }
        pushFollow(FOLLOW_40);
        lv_int1_6_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1560:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        int alt340=3;
        int LA340_0 = input.LA(1);

        if ( (LA340_0==46) ) {
            alt340=1;
        }
        else if ( (LA340_0==47) ) {
            alt340=2;
        }
        switch (alt340) {
            case 1 :
                // InternalKim.g:1561:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                {
                // InternalKim.g:1561:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                // InternalKim.g:1562:6: (lv_rightLimit_7_0= 'inclusive' )
                {
                // InternalKim.g:1562:6: (lv_rightLimit_7_0= 'inclusive' )
                // InternalKim.g:1563:7: lv_rightLimit_7_0= 'inclusive'
                {
                lv_rightLimit_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1576:5: otherlv_8= 'exclusive'
                {
                otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred57_InternalKim

    // $ANTLR start synpred58_InternalKim
    public final void synpred58_InternalKim_fragment() throws RecognitionException {   
        EObject lv_num_9_0 = null;


        // InternalKim.g:1583:3: ( ( (lv_num_9_0= ruleNumber ) ) )
        // InternalKim.g:1583:3: ( (lv_num_9_0= ruleNumber ) )
        {
        // InternalKim.g:1583:3: ( (lv_num_9_0= ruleNumber ) )
        // InternalKim.g:1584:4: (lv_num_9_0= ruleNumber )
        {
        // InternalKim.g:1584:4: (lv_num_9_0= ruleNumber )
        // InternalKim.g:1585:5: lv_num_9_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSAccess().getNumNumberParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_num_9_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred58_InternalKim

    // $ANTLR start synpred61_InternalKim
    public final void synpred61_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_13_0 = null;


        // InternalKim.g:1648:3: ( ( (lv_concept_13_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:1648:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:1648:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        // InternalKim.g:1649:4: (lv_concept_13_0= ruleConceptDeclaration )
        {
        // InternalKim.g:1649:4: (lv_concept_13_0= ruleConceptDeclaration )
        // InternalKim.g:1650:5: lv_concept_13_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSAccess().getConceptConceptDeclarationParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_13_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred61_InternalKim

    // $ANTLR start synpred64_InternalKim
    public final void synpred64_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        EObject lv_toResolve_15_0 = null;

        EObject lv_toResolve_17_0 = null;


        // InternalKim.g:1668:3: ( (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) )
        // InternalKim.g:1668:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
        {
        // InternalKim.g:1668:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
        // InternalKim.g:1669:4: otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')'
        {
        otherlv_14=(Token)match(input,36,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:1673:4: ( (lv_toResolve_15_0= ruleConceptDeclaration ) )
        // InternalKim.g:1674:5: (lv_toResolve_15_0= ruleConceptDeclaration )
        {
        // InternalKim.g:1674:5: (lv_toResolve_15_0= ruleConceptDeclaration )
        // InternalKim.g:1675:6: lv_toResolve_15_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_1_0());
          					
        }
        pushFollow(FOLLOW_27);
        lv_toResolve_15_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1692:4: ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )*
        loop341:
        do {
            int alt341=2;
            int LA341_0 = input.LA(1);

            if ( (LA341_0==25) ) {
                alt341=1;
            }


            switch (alt341) {
        	case 1 :
        	    // InternalKim.g:1693:5: ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:1693:5: ( ( ',' )=>otherlv_16= ',' )
        	    // InternalKim.g:1694:6: ( ',' )=>otherlv_16= ','
        	    {
        	    otherlv_16=(Token)match(input,25,FOLLOW_21); if (state.failed) return ;

        	    }

        	    // InternalKim.g:1700:5: ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:1701:6: (lv_toResolve_17_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:1701:6: (lv_toResolve_17_0= ruleConceptDeclaration )
        	    // InternalKim.g:1702:7: lv_toResolve_17_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_2_1_0());
        	      						
        	    }
        	    pushFollow(FOLLOW_27);
        	    lv_toResolve_17_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop341;
            }
        } while (true);

        otherlv_18=(Token)match(input,39,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred64_InternalKim

    // $ANTLR start synpred71_InternalKim
    public final void synpred71_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:1889:5: ( 'to' )
        // InternalKim.g:1889:6: 'to'
        {
        match(input,34,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred71_InternalKim

    // $ANTLR start synpred75_InternalKim
    public final void synpred75_InternalKim_fragment() throws RecognitionException {   
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;


        // InternalKim.g:1847:3: ( ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) )
        // InternalKim.g:1847:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        {
        // InternalKim.g:1847:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        // InternalKim.g:1848:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        {
        // InternalKim.g:1848:4: ( (lv_int0_2_0= ruleNumber ) )
        // InternalKim.g:1849:5: (lv_int0_2_0= ruleNumber )
        {
        // InternalKim.g:1849:5: (lv_int0_2_0= ruleNumber )
        // InternalKim.g:1850:6: lv_int0_2_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getInt0NumberParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_38);
        lv_int0_2_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1867:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
        int alt343=3;
        int LA343_0 = input.LA(1);

        if ( (LA343_0==46) ) {
            alt343=1;
        }
        else if ( (LA343_0==47) ) {
            alt343=2;
        }
        switch (alt343) {
            case 1 :
                // InternalKim.g:1868:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                {
                // InternalKim.g:1868:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                // InternalKim.g:1869:6: (lv_leftLimit_3_0= 'inclusive' )
                {
                // InternalKim.g:1869:6: (lv_leftLimit_3_0= 'inclusive' )
                // InternalKim.g:1870:7: lv_leftLimit_3_0= 'inclusive'
                {
                lv_leftLimit_3_0=(Token)match(input,46,FOLLOW_23); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1883:5: otherlv_4= 'exclusive'
                {
                otherlv_4=(Token)match(input,47,FOLLOW_23); if (state.failed) return ;

                }
                break;

        }

        // InternalKim.g:1888:4: ( ( 'to' )=>otherlv_5= 'to' )
        // InternalKim.g:1889:5: ( 'to' )=>otherlv_5= 'to'
        {
        otherlv_5=(Token)match(input,34,FOLLOW_39); if (state.failed) return ;

        }

        // InternalKim.g:1895:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
        // InternalKim.g:1896:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
        {
        // InternalKim.g:1900:5: (lv_int1_6_0= ruleNumber )
        // InternalKim.g:1901:6: lv_int1_6_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getInt1NumberParserRuleCall_1_3_0());
          					
        }
        pushFollow(FOLLOW_40);
        lv_int1_6_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1918:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        int alt344=3;
        int LA344_0 = input.LA(1);

        if ( (LA344_0==46) ) {
            alt344=1;
        }
        else if ( (LA344_0==47) ) {
            alt344=2;
        }
        switch (alt344) {
            case 1 :
                // InternalKim.g:1919:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                {
                // InternalKim.g:1919:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                // InternalKim.g:1920:6: (lv_rightLimit_7_0= 'inclusive' )
                {
                // InternalKim.g:1920:6: (lv_rightLimit_7_0= 'inclusive' )
                // InternalKim.g:1921:7: lv_rightLimit_7_0= 'inclusive'
                {
                lv_rightLimit_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1934:5: otherlv_8= 'exclusive'
                {
                otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred75_InternalKim

    // $ANTLR start synpred76_InternalKim
    public final void synpred76_InternalKim_fragment() throws RecognitionException {   
        EObject lv_num_9_0 = null;


        // InternalKim.g:1941:3: ( ( (lv_num_9_0= ruleNumber ) ) )
        // InternalKim.g:1941:3: ( (lv_num_9_0= ruleNumber ) )
        {
        // InternalKim.g:1941:3: ( (lv_num_9_0= ruleNumber ) )
        // InternalKim.g:1942:4: (lv_num_9_0= ruleNumber )
        {
        // InternalKim.g:1942:4: (lv_num_9_0= ruleNumber )
        // InternalKim.g:1943:5: lv_num_9_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getNumNumberParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_num_9_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred76_InternalKim

    // $ANTLR start synpred79_InternalKim
    public final void synpred79_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_13_0 = null;


        // InternalKim.g:2006:3: ( ( (lv_concept_13_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:2006:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:2006:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        // InternalKim.g:2007:4: (lv_concept_13_0= ruleConceptDeclaration )
        {
        // InternalKim.g:2007:4: (lv_concept_13_0= ruleConceptDeclaration )
        // InternalKim.g:2008:5: lv_concept_13_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getConceptConceptDeclarationParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_13_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred79_InternalKim

    // $ANTLR start synpred80_InternalKim
    public final void synpred80_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_14_1=null;

        // InternalKim.g:2029:6: (lv_id_14_1= RULE_LOWERCASE_ID )
        // InternalKim.g:2029:6: lv_id_14_1= RULE_LOWERCASE_ID
        {
        lv_id_14_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred80_InternalKim

    // $ANTLR start synpred81_InternalKim
    public final void synpred81_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_14_1=null;
        AntlrDatatypeRuleToken lv_id_14_2 = null;


        // InternalKim.g:2026:3: ( ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) )
        // InternalKim.g:2026:3: ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) )
        {
        // InternalKim.g:2026:3: ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) )
        // InternalKim.g:2027:4: ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) )
        {
        // InternalKim.g:2027:4: ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) )
        // InternalKim.g:2028:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )
        {
        // InternalKim.g:2028:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )
        int alt345=2;
        int LA345_0 = input.LA(1);

        if ( (LA345_0==RULE_LOWERCASE_ID) ) {
            int LA345_1 = input.LA(2);

            if ( (LA345_1==EOF) ) {
                alt345=1;
            }
            else if ( (LA345_1==89||LA345_1==93) ) {
                alt345=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 345, 1, input);

                throw nvae;
            }
        }
        else if ( (LA345_0==RULE_LOWERCASE_DASHID) ) {
            alt345=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 345, 0, input);

            throw nvae;
        }
        switch (alt345) {
            case 1 :
                // InternalKim.g:2029:6: lv_id_14_1= RULE_LOWERCASE_ID
                {
                lv_id_14_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:2044:6: lv_id_14_2= rulePropertyId
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getIdPropertyIdParserRuleCall_6_0_1());
                  					
                }
                pushFollow(FOLLOW_2);
                lv_id_14_2=rulePropertyId();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred81_InternalKim

    // $ANTLR start synpred97_InternalKim
    public final void synpred97_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:2597:5: ( 'to' )
        // InternalKim.g:2597:6: 'to'
        {
        match(input,34,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred97_InternalKim

    // $ANTLR start synpred124_InternalKim
    public final void synpred124_InternalKim_fragment() throws RecognitionException {   
        EObject lv_parameters_19_0 = null;


        // InternalKim.g:3146:5: ( (lv_parameters_19_0= ruleList ) )
        // InternalKim.g:3146:5: (lv_parameters_19_0= ruleList )
        {
        // InternalKim.g:3146:5: (lv_parameters_19_0= ruleList )
        // InternalKim.g:3147:6: lv_parameters_19_0= ruleList
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getActionSpecificationAccess().getParametersListParserRuleCall_1_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_parameters_19_0=ruleList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred124_InternalKim

    // $ANTLR start synpred128_InternalKim
    public final void synpred128_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_0_0 = null;


        // InternalKim.g:3233:3: ( ( (lv_function_0_0= ruleFunction ) ) )
        // InternalKim.g:3233:3: ( (lv_function_0_0= ruleFunction ) )
        {
        // InternalKim.g:3233:3: ( (lv_function_0_0= ruleFunction ) )
        // InternalKim.g:3234:4: (lv_function_0_0= ruleFunction )
        {
        // InternalKim.g:3234:4: (lv_function_0_0= ruleFunction )
        // InternalKim.g:3235:5: lv_function_0_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionFunctionParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_0_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred128_InternalKim

    // $ANTLR start synpred150_InternalKim
    public final void synpred150_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:3722:5: ( ( ruleValue ) )
        // InternalKim.g:3722:6: ( ruleValue )
        {
        // InternalKim.g:3722:6: ( ruleValue )
        // InternalKim.g:3723:6: ruleValue
        {
        pushFollow(FOLLOW_2);
        ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred150_InternalKim

    // $ANTLR start synpred154_InternalKim
    public final void synpred154_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_1_0 = null;


        // InternalKim.g:3846:3: ( ( (lv_function_1_0= ruleFunction ) ) )
        // InternalKim.g:3846:3: ( (lv_function_1_0= ruleFunction ) )
        {
        // InternalKim.g:3846:3: ( (lv_function_1_0= ruleFunction ) )
        // InternalKim.g:3847:4: (lv_function_1_0= ruleFunction )
        {
        // InternalKim.g:3847:4: (lv_function_1_0= ruleFunction )
        // InternalKim.g:3848:5: lv_function_1_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getComputableValueAccess().getFunctionFunctionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_1_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred154_InternalKim

    // $ANTLR start synpred161_InternalKim
    public final void synpred161_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;

        // InternalKim.g:3943:3: ( ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:3943:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:3943:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:3944:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:3944:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        // InternalKim.g:3945:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:3945:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        int alt377=3;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            alt377=1;
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            alt377=2;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt377=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 377, 0, input);

            throw nvae;
        }

        switch (alt377) {
            case 1 :
                // InternalKim.g:3946:6: lv_id_5_1= RULE_LOWERCASE_ID
                {
                lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:3961:6: lv_id_5_2= RULE_UPPERCASE_ID
                {
                lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:3976:6: lv_id_5_3= RULE_CAMELCASE_ID
                {
                lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred161_InternalKim

    // $ANTLR start synpred175_InternalKim
    public final void synpred175_InternalKim_fragment() throws RecognitionException {   
        Token lv_private_3_0=null;

        // InternalKim.g:4353:4: ( ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )
        // InternalKim.g:4353:4: ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) )
        {
        // InternalKim.g:4353:4: ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) )
        // InternalKim.g:4354:5: {...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred175_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:4354:106: ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) )
        // InternalKim.g:4355:6: ({...}? => ( (lv_private_3_0= 'private' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:4358:9: ({...}? => ( (lv_private_3_0= 'private' ) ) )
        // InternalKim.g:4358:10: {...}? => ( (lv_private_3_0= 'private' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred175_InternalKim", "true");
        }
        // InternalKim.g:4358:19: ( (lv_private_3_0= 'private' ) )
        // InternalKim.g:4358:20: (lv_private_3_0= 'private' )
        {
        // InternalKim.g:4358:20: (lv_private_3_0= 'private' )
        // InternalKim.g:4359:10: lv_private_3_0= 'private'
        {
        lv_private_3_0=(Token)match(input,21,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred175_InternalKim

    // $ANTLR start synpred176_InternalKim
    public final void synpred176_InternalKim_fragment() throws RecognitionException {   
        Token lv_inactive_4_0=null;

        // InternalKim.g:4376:4: ( ({...}? => ( ({...}? => ( (lv_inactive_4_0= 'void' ) ) ) ) ) )
        // InternalKim.g:4376:4: ({...}? => ( ({...}? => ( (lv_inactive_4_0= 'void' ) ) ) ) )
        {
        // InternalKim.g:4376:4: ({...}? => ( ({...}? => ( (lv_inactive_4_0= 'void' ) ) ) ) )
        // InternalKim.g:4377:5: {...}? => ( ({...}? => ( (lv_inactive_4_0= 'void' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred176_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:4377:106: ( ({...}? => ( (lv_inactive_4_0= 'void' ) ) ) )
        // InternalKim.g:4378:6: ({...}? => ( (lv_inactive_4_0= 'void' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:4381:9: ({...}? => ( (lv_inactive_4_0= 'void' ) ) )
        // InternalKim.g:4381:10: {...}? => ( (lv_inactive_4_0= 'void' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred176_InternalKim", "true");
        }
        // InternalKim.g:4381:19: ( (lv_inactive_4_0= 'void' ) )
        // InternalKim.g:4381:20: (lv_inactive_4_0= 'void' )
        {
        // InternalKim.g:4381:20: (lv_inactive_4_0= 'void' )
        // InternalKim.g:4382:10: lv_inactive_4_0= 'void'
        {
        lv_inactive_4_0=(Token)match(input,20,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred176_InternalKim

    // $ANTLR start synpred182_InternalKim
    public final void synpred182_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_imported_12_0 = null;

        EObject lv_imported_14_0 = null;


        // InternalKim.g:4486:4: ( ({...}? => ( ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) ) ) ) )
        // InternalKim.g:4486:4: ({...}? => ( ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) ) ) )
        {
        // InternalKim.g:4486:4: ({...}? => ( ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) ) ) )
        // InternalKim.g:4487:5: {...}? => ( ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred182_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0)");
        }
        // InternalKim.g:4487:106: ( ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) ) )
        // InternalKim.g:4488:6: ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0);
        // InternalKim.g:4491:9: ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) )
        // InternalKim.g:4491:10: {...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred182_InternalKim", "true");
        }
        // InternalKim.g:4491:19: (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* )
        // InternalKim.g:4491:20: otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )*
        {
        otherlv_11=(Token)match(input,29,FOLLOW_67); if (state.failed) return ;
        // InternalKim.g:4495:9: ( (lv_imported_12_0= ruleImport ) )
        // InternalKim.g:4496:10: (lv_imported_12_0= ruleImport )
        {
        // InternalKim.g:4496:10: (lv_imported_12_0= ruleImport )
        // InternalKim.g:4497:11: lv_imported_12_0= ruleImport
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_0_1_0());
          										
        }
        pushFollow(FOLLOW_35);
        lv_imported_12_0=ruleImport();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4514:9: ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )*
        loop382:
        do {
            int alt382=2;
            int LA382_0 = input.LA(1);

            if ( (LA382_0==25) ) {
                alt382=1;
            }


            switch (alt382) {
        	case 1 :
        	    // InternalKim.g:4515:10: ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) )
        	    {
        	    // InternalKim.g:4515:10: ( ( ',' )=>otherlv_13= ',' )
        	    // InternalKim.g:4516:11: ( ',' )=>otherlv_13= ','
        	    {
        	    otherlv_13=(Token)match(input,25,FOLLOW_67); if (state.failed) return ;

        	    }

        	    // InternalKim.g:4522:10: ( (lv_imported_14_0= ruleImport ) )
        	    // InternalKim.g:4523:11: (lv_imported_14_0= ruleImport )
        	    {
        	    // InternalKim.g:4523:11: (lv_imported_14_0= ruleImport )
        	    // InternalKim.g:4524:12: lv_imported_14_0= ruleImport
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_0_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_35);
        	    lv_imported_14_0=ruleImport();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop382;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred182_InternalKim

    // $ANTLR start synpred184_InternalKim
    public final void synpred184_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_15=null;
        Token otherlv_17=null;
        EObject lv_owlImports_16_0 = null;

        EObject lv_owlImports_18_0 = null;


        // InternalKim.g:4548:4: ( ({...}? => ( ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) ) ) ) )
        // InternalKim.g:4548:4: ({...}? => ( ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) ) ) )
        {
        // InternalKim.g:4548:4: ({...}? => ( ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) ) ) )
        // InternalKim.g:4549:5: {...}? => ( ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred184_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1)");
        }
        // InternalKim.g:4549:106: ( ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) ) )
        // InternalKim.g:4550:6: ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1);
        // InternalKim.g:4553:9: ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) )
        // InternalKim.g:4553:10: {...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred184_InternalKim", "true");
        }
        // InternalKim.g:4553:19: (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* )
        // InternalKim.g:4553:20: otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )*
        {
        otherlv_15=(Token)match(input,78,FOLLOW_69); if (state.failed) return ;
        // InternalKim.g:4557:9: ( (lv_owlImports_16_0= ruleOwlImport ) )
        // InternalKim.g:4558:10: (lv_owlImports_16_0= ruleOwlImport )
        {
        // InternalKim.g:4558:10: (lv_owlImports_16_0= ruleOwlImport )
        // InternalKim.g:4559:11: lv_owlImports_16_0= ruleOwlImport
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_1_1_0());
          										
        }
        pushFollow(FOLLOW_35);
        lv_owlImports_16_0=ruleOwlImport();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4576:9: (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )*
        loop383:
        do {
            int alt383=2;
            int LA383_0 = input.LA(1);

            if ( (LA383_0==25) ) {
                alt383=1;
            }


            switch (alt383) {
        	case 1 :
        	    // InternalKim.g:4577:10: otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) )
        	    {
        	    otherlv_17=(Token)match(input,25,FOLLOW_69); if (state.failed) return ;
        	    // InternalKim.g:4581:10: ( (lv_owlImports_18_0= ruleOwlImport ) )
        	    // InternalKim.g:4582:11: (lv_owlImports_18_0= ruleOwlImport )
        	    {
        	    // InternalKim.g:4582:11: (lv_owlImports_18_0= ruleOwlImport )
        	    // InternalKim.g:4583:12: lv_owlImports_18_0= ruleOwlImport
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_1_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_35);
        	    lv_owlImports_18_0=ruleOwlImport();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop383;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred184_InternalKim

    // $ANTLR start synpred187_InternalKim
    public final void synpred187_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        Token otherlv_21=null;
        EObject lv_coverage_20_0 = null;

        EObject lv_coverage_22_0 = null;


        // InternalKim.g:4607:4: ( ({...}? => ( ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) ) ) ) )
        // InternalKim.g:4607:4: ({...}? => ( ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) ) ) )
        {
        // InternalKim.g:4607:4: ({...}? => ( ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) ) ) )
        // InternalKim.g:4608:5: {...}? => ( ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred187_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2)");
        }
        // InternalKim.g:4608:106: ( ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) ) )
        // InternalKim.g:4609:6: ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2);
        // InternalKim.g:4612:9: ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) )
        // InternalKim.g:4612:10: {...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred187_InternalKim", "true");
        }
        // InternalKim.g:4612:19: (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* )
        // InternalKim.g:4612:20: otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )*
        {
        otherlv_19=(Token)match(input,79,FOLLOW_24); if (state.failed) return ;
        // InternalKim.g:4616:9: ( (lv_coverage_20_0= ruleFunction ) )
        // InternalKim.g:4617:10: (lv_coverage_20_0= ruleFunction )
        {
        // InternalKim.g:4617:10: (lv_coverage_20_0= ruleFunction )
        // InternalKim.g:4618:11: lv_coverage_20_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_2_1_0());
          										
        }
        pushFollow(FOLLOW_35);
        lv_coverage_20_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4635:9: ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )*
        loop384:
        do {
            int alt384=2;
            int LA384_0 = input.LA(1);

            if ( (LA384_0==25) ) {
                alt384=1;
            }


            switch (alt384) {
        	case 1 :
        	    // InternalKim.g:4636:10: ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) )
        	    {
        	    // InternalKim.g:4636:10: ( ( ',' )=>otherlv_21= ',' )
        	    // InternalKim.g:4637:11: ( ',' )=>otherlv_21= ','
        	    {
        	    otherlv_21=(Token)match(input,25,FOLLOW_24); if (state.failed) return ;

        	    }

        	    // InternalKim.g:4643:10: ( (lv_coverage_22_0= ruleFunction ) )
        	    // InternalKim.g:4644:11: (lv_coverage_22_0= ruleFunction )
        	    {
        	    // InternalKim.g:4644:11: (lv_coverage_22_0= ruleFunction )
        	    // InternalKim.g:4645:12: lv_coverage_22_0= ruleFunction
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_2_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_35);
        	    lv_coverage_22_0=ruleFunction();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop384;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred187_InternalKim

    // $ANTLR start synpred189_InternalKim
    public final void synpred189_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token lv_rootDomain_25_0=null;
        EObject lv_domainConcept_26_0 = null;


        // InternalKim.g:4669:4: ( ({...}? => ( ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) ) ) ) )
        // InternalKim.g:4669:4: ({...}? => ( ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) ) ) )
        {
        // InternalKim.g:4669:4: ({...}? => ( ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:4670:5: {...}? => ( ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred189_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3)");
        }
        // InternalKim.g:4670:106: ( ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:4671:6: ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3);
        // InternalKim.g:4674:9: ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) )
        // InternalKim.g:4674:10: {...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred189_InternalKim", "true");
        }
        // InternalKim.g:4674:19: (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) )
        // InternalKim.g:4674:20: otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) )
        {
        otherlv_23=(Token)match(input,48,FOLLOW_70); if (state.failed) return ;
        otherlv_24=(Token)match(input,80,FOLLOW_71); if (state.failed) return ;
        // InternalKim.g:4682:9: ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) )
        int alt385=2;
        int LA385_0 = input.LA(1);

        if ( (LA385_0==81) ) {
            alt385=1;
        }
        else if ( (LA385_0==RULE_LOWERCASE_ID||(LA385_0>=RULE_CAMELCASE_ID && LA385_0<=RULE_LOWERCASE_DASHID)||LA385_0==36||(LA385_0>=112 && LA385_0<=113)||(LA385_0>=121 && LA385_0<=122)||(LA385_0>=124 && LA385_0<=136)) ) {
            alt385=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 385, 0, input);

            throw nvae;
        }
        switch (alt385) {
            case 1 :
                // InternalKim.g:4683:10: ( (lv_rootDomain_25_0= 'root' ) )
                {
                // InternalKim.g:4683:10: ( (lv_rootDomain_25_0= 'root' ) )
                // InternalKim.g:4684:11: (lv_rootDomain_25_0= 'root' )
                {
                // InternalKim.g:4684:11: (lv_rootDomain_25_0= 'root' )
                // InternalKim.g:4685:12: lv_rootDomain_25_0= 'root'
                {
                lv_rootDomain_25_0=(Token)match(input,81,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:4698:10: ( (lv_domainConcept_26_0= ruleConcept ) )
                {
                // InternalKim.g:4698:10: ( (lv_domainConcept_26_0= ruleConcept ) )
                // InternalKim.g:4699:11: (lv_domainConcept_26_0= ruleConcept )
                {
                // InternalKim.g:4699:11: (lv_domainConcept_26_0= ruleConcept )
                // InternalKim.g:4700:12: lv_domainConcept_26_0= ruleConcept
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getNamespaceAccess().getDomainConceptConceptParserRuleCall_5_3_2_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_domainConcept_26_0=ruleConcept();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred189_InternalKim

    // $ANTLR start synpred191_InternalKim
    public final void synpred191_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        AntlrDatatypeRuleToken lv_disjointNamespaces_29_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_31_0 = null;


        // InternalKim.g:4724:4: ( ({...}? => ( ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) ) ) ) )
        // InternalKim.g:4724:4: ({...}? => ( ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) ) ) )
        {
        // InternalKim.g:4724:4: ({...}? => ( ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) ) ) )
        // InternalKim.g:4725:5: {...}? => ( ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred191_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4)");
        }
        // InternalKim.g:4725:106: ( ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) ) )
        // InternalKim.g:4726:6: ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4);
        // InternalKim.g:4729:9: ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) )
        // InternalKim.g:4729:10: {...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred191_InternalKim", "true");
        }
        // InternalKim.g:4729:19: (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) )
        // InternalKim.g:4729:20: otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* )
        {
        otherlv_27=(Token)match(input,82,FOLLOW_72); if (state.failed) return ;
        otherlv_28=(Token)match(input,40,FOLLOW_24); if (state.failed) return ;
        // InternalKim.g:4737:9: ( (lv_disjointNamespaces_29_0= rulePathName ) )
        // InternalKim.g:4738:10: (lv_disjointNamespaces_29_0= rulePathName )
        {
        // InternalKim.g:4738:10: (lv_disjointNamespaces_29_0= rulePathName )
        // InternalKim.g:4739:11: lv_disjointNamespaces_29_0= rulePathName
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_4_2_0());
          										
        }
        pushFollow(FOLLOW_73);
        lv_disjointNamespaces_29_0=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4756:9: (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* )
        // InternalKim.g:4757:10: otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )*
        {
        otherlv_30=(Token)match(input,25,FOLLOW_180); if (state.failed) return ;
        // InternalKim.g:4761:10: ( (lv_disjointNamespaces_31_0= rulePathName ) )*
        loop386:
        do {
            int alt386=2;
            int LA386_0 = input.LA(1);

            if ( (LA386_0==RULE_LOWERCASE_ID||LA386_0==RULE_LOWERCASE_DASHID) ) {
                alt386=1;
            }


            switch (alt386) {
        	case 1 :
        	    // InternalKim.g:4762:11: (lv_disjointNamespaces_31_0= rulePathName )
        	    {
        	    // InternalKim.g:4762:11: (lv_disjointNamespaces_31_0= rulePathName )
        	    // InternalKim.g:4763:12: lv_disjointNamespaces_31_0= rulePathName
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_4_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_180);
        	    lv_disjointNamespaces_31_0=rulePathName();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop386;
            }
        } while (true);


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred191_InternalKim

    // $ANTLR start synpred192_InternalKim
    public final void synpred192_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_32=null;
        AntlrDatatypeRuleToken lv_version_33_0 = null;


        // InternalKim.g:4787:4: ( ({...}? => ( ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) ) ) ) )
        // InternalKim.g:4787:4: ({...}? => ( ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) ) ) )
        {
        // InternalKim.g:4787:4: ({...}? => ( ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) ) ) )
        // InternalKim.g:4788:5: {...}? => ( ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred192_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5)");
        }
        // InternalKim.g:4788:106: ( ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) ) )
        // InternalKim.g:4789:6: ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5);
        // InternalKim.g:4792:9: ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) )
        // InternalKim.g:4792:10: {...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred192_InternalKim", "true");
        }
        // InternalKim.g:4792:19: (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) )
        // InternalKim.g:4792:20: otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) )
        {
        otherlv_32=(Token)match(input,83,FOLLOW_75); if (state.failed) return ;
        // InternalKim.g:4796:9: ( (lv_version_33_0= ruleVersionNumber ) )
        // InternalKim.g:4797:10: (lv_version_33_0= ruleVersionNumber )
        {
        // InternalKim.g:4797:10: (lv_version_33_0= ruleVersionNumber )
        // InternalKim.g:4798:11: lv_version_33_0= ruleVersionNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getVersionVersionNumberParserRuleCall_5_5_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_version_33_0=ruleVersionNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred192_InternalKim

    // $ANTLR start synpred195_InternalKim
    public final void synpred195_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_35=null;
        Token otherlv_36=null;
        AntlrDatatypeRuleToken lv_lookupNamespace_37_0 = null;


        // InternalKim.g:4832:9: ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) )
        // InternalKim.g:4832:9: ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) )
        {
        // InternalKim.g:4832:9: ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) )
        // InternalKim.g:4833:10: {...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred195_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0)");
        }
        // InternalKim.g:4833:113: ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) )
        // InternalKim.g:4834:11: ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0);
        // InternalKim.g:4837:14: ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) )
        // InternalKim.g:4837:15: {...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred195_InternalKim", "true");
        }
        // InternalKim.g:4837:24: (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? )
        // InternalKim.g:4837:25: otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )?
        {
        otherlv_35=(Token)match(input,84,FOLLOW_181); if (state.failed) return ;
        // InternalKim.g:4841:14: (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )?
        int alt389=2;
        int LA389_0 = input.LA(1);

        if ( (LA389_0==85) ) {
            alt389=1;
        }
        switch (alt389) {
            case 1 :
                // InternalKim.g:4842:15: otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )*
                {
                otherlv_36=(Token)match(input,85,FOLLOW_180); if (state.failed) return ;
                // InternalKim.g:4846:15: ( (lv_lookupNamespace_37_0= rulePathName ) )*
                loop388:
                do {
                    int alt388=2;
                    int LA388_0 = input.LA(1);

                    if ( (LA388_0==RULE_LOWERCASE_ID||LA388_0==RULE_LOWERCASE_DASHID) ) {
                        alt388=1;
                    }


                    switch (alt388) {
                	case 1 :
                	    // InternalKim.g:4847:16: (lv_lookupNamespace_37_0= rulePathName )
                	    {
                	    // InternalKim.g:4847:16: (lv_lookupNamespace_37_0= rulePathName )
                	    // InternalKim.g:4848:17: lv_lookupNamespace_37_0= rulePathName
                	    {
                	    if ( state.backtracking==0 ) {

                	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_6_0_1_1_0());
                	      																
                	    }
                	    pushFollow(FOLLOW_180);
                	    lv_lookupNamespace_37_0=rulePathName();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }
                	    break;

                	default :
                	    break loop388;
                    }
                } while (true);


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred195_InternalKim

    // $ANTLR start synpred197_InternalKim
    public final void synpred197_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_38=null;
        AntlrDatatypeRuleToken lv_blacklistNamespace_39_0 = null;


        // InternalKim.g:4872:9: ( ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) )
        // InternalKim.g:4872:9: ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) )
        {
        // InternalKim.g:4872:9: ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) )
        // InternalKim.g:4873:10: {...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred197_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1)");
        }
        // InternalKim.g:4873:113: ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) )
        // InternalKim.g:4874:11: ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1);
        // InternalKim.g:4877:14: ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) )
        // InternalKim.g:4877:15: {...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred197_InternalKim", "true");
        }
        // InternalKim.g:4877:24: (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* )
        // InternalKim.g:4877:25: otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )*
        {
        otherlv_38=(Token)match(input,86,FOLLOW_180); if (state.failed) return ;
        // InternalKim.g:4881:14: ( (lv_blacklistNamespace_39_0= rulePathName ) )*
        loop390:
        do {
            int alt390=2;
            int LA390_0 = input.LA(1);

            if ( (LA390_0==RULE_LOWERCASE_ID||LA390_0==RULE_LOWERCASE_DASHID) ) {
                alt390=1;
            }


            switch (alt390) {
        	case 1 :
        	    // InternalKim.g:4882:15: (lv_blacklistNamespace_39_0= rulePathName )
        	    {
        	    // InternalKim.g:4882:15: (lv_blacklistNamespace_39_0= rulePathName )
        	    // InternalKim.g:4883:16: lv_blacklistNamespace_39_0= rulePathName
        	    {
        	    if ( state.backtracking==0 ) {

        	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_6_1_1_0());
        	      															
        	    }
        	    pushFollow(FOLLOW_180);
        	    lv_blacklistNamespace_39_0=rulePathName();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop390;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred197_InternalKim

    // $ANTLR start synpred198_InternalKim
    public final void synpred198_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_40=null;
        EObject lv_weights_41_0 = null;


        // InternalKim.g:4906:9: ( ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )
        // InternalKim.g:4906:9: ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) )
        {
        // InternalKim.g:4906:9: ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) )
        // InternalKim.g:4907:10: {...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred198_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2)");
        }
        // InternalKim.g:4907:113: ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) )
        // InternalKim.g:4908:11: ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2);
        // InternalKim.g:4911:14: ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) )
        // InternalKim.g:4911:15: {...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred198_InternalKim", "true");
        }
        // InternalKim.g:4911:24: (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) )
        // InternalKim.g:4911:25: otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) )
        {
        otherlv_40=(Token)match(input,29,FOLLOW_32); if (state.failed) return ;
        // InternalKim.g:4915:14: ( (lv_weights_41_0= ruleMetadata ) )
        // InternalKim.g:4916:15: (lv_weights_41_0= ruleMetadata )
        {
        // InternalKim.g:4916:15: (lv_weights_41_0= ruleMetadata )
        // InternalKim.g:4917:16: lv_weights_41_0= ruleMetadata
        {
        if ( state.backtracking==0 ) {

          																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMetadataParserRuleCall_5_6_2_1_0());
          															
        }
        pushFollow(FOLLOW_2);
        lv_weights_41_0=ruleMetadata();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred198_InternalKim

    // $ANTLR start synpred199_InternalKim
    public final void synpred199_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_35=null;
        Token otherlv_36=null;
        Token otherlv_38=null;
        Token otherlv_40=null;
        AntlrDatatypeRuleToken lv_lookupNamespace_37_0 = null;

        AntlrDatatypeRuleToken lv_blacklistNamespace_39_0 = null;

        EObject lv_weights_41_0 = null;


        // InternalKim.g:4821:4: ( ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )
        // InternalKim.g:4821:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
        {
        // InternalKim.g:4821:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
        // InternalKim.g:4822:5: {...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred199_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6)");
        }
        // InternalKim.g:4822:106: ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) )
        // InternalKim.g:4823:6: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6);
        // InternalKim.g:4826:9: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
        // InternalKim.g:4826:10: {...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred199_InternalKim", "true");
        }
        // InternalKim.g:4826:19: ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
        // InternalKim.g:4826:20: ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
        {
        // InternalKim.g:4826:20: ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
        // InternalKim.g:4827:10: ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
        {
        getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6());
        // InternalKim.g:4830:10: ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
        // InternalKim.g:4831:11: ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?
        {
        // InternalKim.g:4831:11: ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+
        int cnt394=0;
        loop394:
        do {
            int alt394=4;
            int LA394_0 = input.LA(1);

            if ( LA394_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0) ) {
                alt394=1;
            }
            else if ( LA394_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1) ) {
                alt394=2;
            }
            else if ( LA394_0 == 29 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2) ) {
                alt394=3;
            }


            switch (alt394) {
        	case 1 :
        	    // InternalKim.g:4832:9: ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) )
        	    {
        	    // InternalKim.g:4832:9: ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) )
        	    // InternalKim.g:4833:10: {...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred199_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0)");
        	    }
        	    // InternalKim.g:4833:113: ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) )
        	    // InternalKim.g:4834:11: ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0);
        	    // InternalKim.g:4837:14: ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) )
        	    // InternalKim.g:4837:15: {...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred199_InternalKim", "true");
        	    }
        	    // InternalKim.g:4837:24: (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? )
        	    // InternalKim.g:4837:25: otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )?
        	    {
        	    otherlv_35=(Token)match(input,84,FOLLOW_182); if (state.failed) return ;
        	    // InternalKim.g:4841:14: (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )?
        	    int alt392=2;
        	    int LA392_0 = input.LA(1);

        	    if ( (LA392_0==85) ) {
        	        alt392=1;
        	    }
        	    switch (alt392) {
        	        case 1 :
        	            // InternalKim.g:4842:15: otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )*
        	            {
        	            otherlv_36=(Token)match(input,85,FOLLOW_183); if (state.failed) return ;
        	            // InternalKim.g:4846:15: ( (lv_lookupNamespace_37_0= rulePathName ) )*
        	            loop391:
        	            do {
        	                int alt391=2;
        	                int LA391_0 = input.LA(1);

        	                if ( (LA391_0==RULE_LOWERCASE_ID||LA391_0==RULE_LOWERCASE_DASHID) ) {
        	                    alt391=1;
        	                }


        	                switch (alt391) {
        	            	case 1 :
        	            	    // InternalKim.g:4847:16: (lv_lookupNamespace_37_0= rulePathName )
        	            	    {
        	            	    // InternalKim.g:4847:16: (lv_lookupNamespace_37_0= rulePathName )
        	            	    // InternalKim.g:4848:17: lv_lookupNamespace_37_0= rulePathName
        	            	    {
        	            	    if ( state.backtracking==0 ) {

        	            	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_6_0_1_1_0());
        	            	      																
        	            	    }
        	            	    pushFollow(FOLLOW_183);
        	            	    lv_lookupNamespace_37_0=rulePathName();

        	            	    state._fsp--;
        	            	    if (state.failed) return ;

        	            	    }


        	            	    }
        	            	    break;

        	            	default :
        	            	    break loop391;
        	                }
        	            } while (true);


        	            }
        	            break;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:4872:9: ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) )
        	    {
        	    // InternalKim.g:4872:9: ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) )
        	    // InternalKim.g:4873:10: {...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred199_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1)");
        	    }
        	    // InternalKim.g:4873:113: ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) )
        	    // InternalKim.g:4874:11: ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1);
        	    // InternalKim.g:4877:14: ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) )
        	    // InternalKim.g:4877:15: {...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred199_InternalKim", "true");
        	    }
        	    // InternalKim.g:4877:24: (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* )
        	    // InternalKim.g:4877:25: otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )*
        	    {
        	    otherlv_38=(Token)match(input,86,FOLLOW_183); if (state.failed) return ;
        	    // InternalKim.g:4881:14: ( (lv_blacklistNamespace_39_0= rulePathName ) )*
        	    loop393:
        	    do {
        	        int alt393=2;
        	        int LA393_0 = input.LA(1);

        	        if ( (LA393_0==RULE_LOWERCASE_ID||LA393_0==RULE_LOWERCASE_DASHID) ) {
        	            alt393=1;
        	        }


        	        switch (alt393) {
        	    	case 1 :
        	    	    // InternalKim.g:4882:15: (lv_blacklistNamespace_39_0= rulePathName )
        	    	    {
        	    	    // InternalKim.g:4882:15: (lv_blacklistNamespace_39_0= rulePathName )
        	    	    // InternalKim.g:4883:16: lv_blacklistNamespace_39_0= rulePathName
        	    	    {
        	    	    if ( state.backtracking==0 ) {

        	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_6_1_1_0());
        	    	      															
        	    	    }
        	    	    pushFollow(FOLLOW_183);
        	    	    lv_blacklistNamespace_39_0=rulePathName();

        	    	    state._fsp--;
        	    	    if (state.failed) return ;

        	    	    }


        	    	    }
        	    	    break;

        	    	default :
        	    	    break loop393;
        	        }
        	    } while (true);


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 3 :
        	    // InternalKim.g:4906:9: ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) )
        	    {
        	    // InternalKim.g:4906:9: ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) )
        	    // InternalKim.g:4907:10: {...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred199_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2)");
        	    }
        	    // InternalKim.g:4907:113: ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) )
        	    // InternalKim.g:4908:11: ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2);
        	    // InternalKim.g:4911:14: ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) )
        	    // InternalKim.g:4911:15: {...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred199_InternalKim", "true");
        	    }
        	    // InternalKim.g:4911:24: (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) )
        	    // InternalKim.g:4911:25: otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) )
        	    {
        	    otherlv_40=(Token)match(input,29,FOLLOW_32); if (state.failed) return ;
        	    // InternalKim.g:4915:14: ( (lv_weights_41_0= ruleMetadata ) )
        	    // InternalKim.g:4916:15: (lv_weights_41_0= ruleMetadata )
        	    {
        	    // InternalKim.g:4916:15: (lv_weights_41_0= ruleMetadata )
        	    // InternalKim.g:4917:16: lv_weights_41_0= ruleMetadata
        	    {
        	    if ( state.backtracking==0 ) {

        	      																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMetadataParserRuleCall_5_6_2_1_0());
        	      															
        	    }
        	    pushFollow(FOLLOW_184);
        	    lv_weights_41_0=ruleMetadata();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt394 >= 1 ) break loop394;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(394, input);
                    throw eee;
            }
            cnt394++;
        } while (true);

        if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6()) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred199_InternalKim", "getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6())");
        }

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred199_InternalKim

    // $ANTLR start synpred235_InternalKim
    public final void synpred235_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_docstring_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        EObject lv_urn_1_0 = null;

        EObject lv_concept_3_0 = null;

        AntlrDatatypeRuleToken lv_parents_6_0 = null;

        AntlrDatatypeRuleToken lv_parents_8_0 = null;

        EObject lv_actions_9_0 = null;

        EObject lv_states_11_0 = null;

        EObject lv_states_13_0 = null;

        EObject lv_observations_16_0 = null;

        EObject lv_observations_20_0 = null;

        EObject lv_accessor_23_0 = null;


        // InternalKim.g:5642:3: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? ) ) ) ) )
        // InternalKim.g:5642:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? ) ) ) )
        {
        // InternalKim.g:5642:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? ) ) ) )
        // InternalKim.g:5643:4: {...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred235_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0)");
        }
        // InternalKim.g:5643:114: ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? ) ) )
        // InternalKim.g:5644:5: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0);
        // InternalKim.g:5647:8: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? ) )
        // InternalKim.g:5647:9: {...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred235_InternalKim", "true");
        }
        // InternalKim.g:5647:18: ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? )
        // InternalKim.g:5647:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )?
        {
        // InternalKim.g:5647:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?
        int alt406=2;
        alt406 = dfa406.predict(input);
        switch (alt406) {
            case 1 :
                // InternalKim.g:5648:9: ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as'
                {
                // InternalKim.g:5648:9: ( (lv_urn_1_0= ruleUrn ) )
                // InternalKim.g:5649:10: (lv_urn_1_0= ruleUrn )
                {
                // InternalKim.g:5649:10: (lv_urn_1_0= ruleUrn )
                // InternalKim.g:5650:11: lv_urn_1_0= ruleUrn
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getUrnUrnParserRuleCall_0_0_0_0());
                  										
                }
                pushFollow(FOLLOW_10);
                lv_urn_1_0=ruleUrn();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                otherlv_2=(Token)match(input,23,FOLLOW_21); if (state.failed) return ;

                }
                break;

        }

        // InternalKim.g:5672:8: ( (lv_concept_3_0= ruleNamedObservableSemantics ) )
        // InternalKim.g:5673:9: (lv_concept_3_0= ruleNamedObservableSemantics )
        {
        // InternalKim.g:5673:9: (lv_concept_3_0= ruleNamedObservableSemantics )
        // InternalKim.g:5674:10: lv_concept_3_0= ruleNamedObservableSemantics
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getConceptNamedObservableSemanticsParserRuleCall_0_1_0());
          									
        }
        pushFollow(FOLLOW_185);
        lv_concept_3_0=ruleNamedObservableSemantics();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:5691:8: ( (lv_docstring_4_0= RULE_STRING ) )?
        int alt407=2;
        int LA407_0 = input.LA(1);

        if ( (LA407_0==RULE_STRING) ) {
            alt407=1;
        }
        switch (alt407) {
            case 1 :
                // InternalKim.g:5692:9: (lv_docstring_4_0= RULE_STRING )
                {
                // InternalKim.g:5692:9: (lv_docstring_4_0= RULE_STRING )
                // InternalKim.g:5693:10: lv_docstring_4_0= RULE_STRING
                {
                lv_docstring_4_0=(Token)match(input,RULE_STRING,FOLLOW_186); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:5709:8: (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )?
        int alt409=2;
        int LA409_0 = input.LA(1);

        if ( (LA409_0==95) ) {
            alt409=1;
        }
        switch (alt409) {
            case 1 :
                // InternalKim.g:5710:9: otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
                {
                otherlv_5=(Token)match(input,95,FOLLOW_24); if (state.failed) return ;
                // InternalKim.g:5714:9: ( (lv_parents_6_0= rulePathName ) )
                // InternalKim.g:5715:10: (lv_parents_6_0= rulePathName )
                {
                // InternalKim.g:5715:10: (lv_parents_6_0= rulePathName )
                // InternalKim.g:5716:11: lv_parents_6_0= rulePathName
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_1_0());
                  										
                }
                pushFollow(FOLLOW_187);
                lv_parents_6_0=rulePathName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:5733:9: (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
                loop408:
                do {
                    int alt408=2;
                    int LA408_0 = input.LA(1);

                    if ( (LA408_0==25) ) {
                        alt408=1;
                    }


                    switch (alt408) {
                	case 1 :
                	    // InternalKim.g:5734:10: otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) )
                	    {
                	    otherlv_7=(Token)match(input,25,FOLLOW_24); if (state.failed) return ;
                	    // InternalKim.g:5738:10: ( (lv_parents_8_0= rulePathName ) )
                	    // InternalKim.g:5739:11: (lv_parents_8_0= rulePathName )
                	    {
                	    // InternalKim.g:5739:11: (lv_parents_8_0= rulePathName )
                	    // InternalKim.g:5740:12: lv_parents_8_0= rulePathName
                	    {
                	    if ( state.backtracking==0 ) {

                	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_2_1_0());
                	      											
                	    }
                	    pushFollow(FOLLOW_187);
                	    lv_parents_8_0=rulePathName();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop408;
                    }
                } while (true);


                }
                break;

        }

        // InternalKim.g:5759:8: ( (lv_actions_9_0= ruleActionSpecification ) )*
        loop410:
        do {
            int alt410=2;
            int LA410_0 = input.LA(1);

            if ( ((LA410_0>=54 && LA410_0<=56)) ) {
                alt410=1;
            }


            switch (alt410) {
        	case 1 :
        	    // InternalKim.g:5760:9: (lv_actions_9_0= ruleActionSpecification )
        	    {
        	    // InternalKim.g:5760:9: (lv_actions_9_0= ruleActionSpecification )
        	    // InternalKim.g:5761:10: lv_actions_9_0= ruleActionSpecification
        	    {
        	    if ( state.backtracking==0 ) {

        	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getActionsActionSpecificationParserRuleCall_0_4_0());
        	      									
        	    }
        	    pushFollow(FOLLOW_188);
        	    lv_actions_9_0=ruleActionSpecification();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop410;
            }
        } while (true);

        // InternalKim.g:5778:8: (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )?
        int alt412=2;
        int LA412_0 = input.LA(1);

        if ( (LA412_0==28) ) {
            alt412=1;
        }
        switch (alt412) {
            case 1 :
                // InternalKim.g:5779:9: otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
                {
                otherlv_10=(Token)match(input,28,FOLLOW_7); if (state.failed) return ;
                // InternalKim.g:5783:9: ( (lv_states_11_0= ruleObservableSemantics ) )
                // InternalKim.g:5784:10: (lv_states_11_0= ruleObservableSemantics )
                {
                // InternalKim.g:5784:10: (lv_states_11_0= ruleObservableSemantics )
                // InternalKim.g:5785:11: lv_states_11_0= ruleObservableSemantics
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_5_1_0());
                  										
                }
                pushFollow(FOLLOW_189);
                lv_states_11_0=ruleObservableSemantics();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:5802:9: (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
                loop411:
                do {
                    int alt411=2;
                    int LA411_0 = input.LA(1);

                    if ( (LA411_0==25) ) {
                        alt411=1;
                    }


                    switch (alt411) {
                	case 1 :
                	    // InternalKim.g:5803:10: otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) )
                	    {
                	    otherlv_12=(Token)match(input,25,FOLLOW_7); if (state.failed) return ;
                	    // InternalKim.g:5807:10: ( (lv_states_13_0= ruleObservableSemantics ) )
                	    // InternalKim.g:5808:11: (lv_states_13_0= ruleObservableSemantics )
                	    {
                	    // InternalKim.g:5808:11: (lv_states_13_0= ruleObservableSemantics )
                	    // InternalKim.g:5809:12: lv_states_13_0= ruleObservableSemantics
                	    {
                	    if ( state.backtracking==0 ) {

                	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_5_2_1_0());
                	      											
                	    }
                	    pushFollow(FOLLOW_189);
                	    lv_states_13_0=ruleObservableSemantics();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop411;
                    }
                } while (true);


                }
                break;

        }

        // InternalKim.g:5828:8: (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )?
        int alt414=2;
        int LA414_0 = input.LA(1);

        if ( (LA414_0==40) ) {
            alt414=1;
        }
        switch (alt414) {
            case 1 :
                // InternalKim.g:5829:9: otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
                {
                otherlv_14=(Token)match(input,40,FOLLOW_41); if (state.failed) return ;
                // InternalKim.g:5833:9: (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' )
                // InternalKim.g:5834:10: otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')'
                {
                otherlv_15=(Token)match(input,36,FOLLOW_94); if (state.failed) return ;
                // InternalKim.g:5838:10: ( (lv_observations_16_0= ruleObserveStatementBody ) )
                // InternalKim.g:5839:11: (lv_observations_16_0= ruleObserveStatementBody )
                {
                // InternalKim.g:5839:11: (lv_observations_16_0= ruleObserveStatementBody )
                // InternalKim.g:5840:12: lv_observations_16_0= ruleObserveStatementBody
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_6_1_1_0());
                  											
                }
                pushFollow(FOLLOW_95);
                lv_observations_16_0=ruleObserveStatementBody();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                otherlv_17=(Token)match(input,39,FOLLOW_190); if (state.failed) return ;

                }

                // InternalKim.g:5862:9: (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
                loop413:
                do {
                    int alt413=2;
                    int LA413_0 = input.LA(1);

                    if ( (LA413_0==25) ) {
                        alt413=1;
                    }


                    switch (alt413) {
                	case 1 :
                	    // InternalKim.g:5863:10: otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')'
                	    {
                	    otherlv_18=(Token)match(input,25,FOLLOW_41); if (state.failed) return ;
                	    otherlv_19=(Token)match(input,36,FOLLOW_94); if (state.failed) return ;
                	    // InternalKim.g:5871:10: ( (lv_observations_20_0= ruleObserveStatementBody ) )
                	    // InternalKim.g:5872:11: (lv_observations_20_0= ruleObserveStatementBody )
                	    {
                	    // InternalKim.g:5872:11: (lv_observations_20_0= ruleObserveStatementBody )
                	    // InternalKim.g:5873:12: lv_observations_20_0= ruleObserveStatementBody
                	    {
                	    if ( state.backtracking==0 ) {

                	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_6_2_2_0());
                	      											
                	    }
                	    pushFollow(FOLLOW_95);
                	    lv_observations_20_0=ruleObserveStatementBody();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }

                	    otherlv_21=(Token)match(input,39,FOLLOW_190); if (state.failed) return ;

                	    }
                	    break;

                	default :
                	    break loop413;
                    }
                } while (true);


                }
                break;

        }

        // InternalKim.g:5896:8: (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )?
        int alt416=2;
        int LA416_0 = input.LA(1);

        if ( (LA416_0==29) ) {
            alt416=1;
        }
        switch (alt416) {
            case 1 :
                // InternalKim.g:5897:9: otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )?
                {
                otherlv_22=(Token)match(input,29,FOLLOW_180); if (state.failed) return ;
                // InternalKim.g:5901:9: ( (lv_accessor_23_0= ruleFunction ) )?
                int alt415=2;
                int LA415_0 = input.LA(1);

                if ( (LA415_0==RULE_LOWERCASE_ID||LA415_0==RULE_LOWERCASE_DASHID) ) {
                    alt415=1;
                }
                switch (alt415) {
                    case 1 :
                        // InternalKim.g:5902:10: (lv_accessor_23_0= ruleFunction )
                        {
                        // InternalKim.g:5902:10: (lv_accessor_23_0= ruleFunction )
                        // InternalKim.g:5903:11: lv_accessor_23_0= ruleFunction
                        {
                        if ( state.backtracking==0 ) {

                          											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getAccessorFunctionParserRuleCall_0_7_1_0());
                          										
                        }
                        pushFollow(FOLLOW_2);
                        lv_accessor_23_0=ruleFunction();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        break;

                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred235_InternalKim

    // $ANTLR start synpred236_InternalKim
    public final void synpred236_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_24=null;
        Token otherlv_25=null;
        EObject lv_metadata_26_0 = null;


        // InternalKim.g:5933:9: (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )
        // InternalKim.g:5933:9: otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) )
        {
        otherlv_24=(Token)match(input,40,FOLLOW_31); if (state.failed) return ;
        otherlv_25=(Token)match(input,41,FOLLOW_32); if (state.failed) return ;
        // InternalKim.g:5941:9: ( (lv_metadata_26_0= ruleMetadata ) )
        // InternalKim.g:5942:10: (lv_metadata_26_0= ruleMetadata )
        {
        // InternalKim.g:5942:10: (lv_metadata_26_0= ruleMetadata )
        // InternalKim.g:5943:11: lv_metadata_26_0= ruleMetadata
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getMetadataMetadataParserRuleCall_1_0_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_metadata_26_0=ruleMetadata();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred236_InternalKim

    // $ANTLR start synpred237_InternalKim
    public final void synpred237_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_27=null;
        Token otherlv_28=null;
        EObject lv_documentation_29_0 = null;


        // InternalKim.g:5962:9: (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )
        // InternalKim.g:5962:9: otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) )
        {
        otherlv_27=(Token)match(input,40,FOLLOW_34); if (state.failed) return ;
        otherlv_28=(Token)match(input,42,FOLLOW_32); if (state.failed) return ;
        // InternalKim.g:5970:9: ( (lv_documentation_29_0= ruleMetadata ) )
        // InternalKim.g:5971:10: (lv_documentation_29_0= ruleMetadata )
        {
        // InternalKim.g:5971:10: (lv_documentation_29_0= ruleMetadata )
        // InternalKim.g:5972:11: lv_documentation_29_0= ruleMetadata
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getDocumentationMetadataParserRuleCall_1_1_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_documentation_29_0=ruleMetadata();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred237_InternalKim

    // $ANTLR start synpred238_InternalKim
    public final void synpred238_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        EObject lv_metadata_26_0 = null;

        EObject lv_documentation_29_0 = null;


        // InternalKim.g:5927:3: ( ({...}? => ( ({...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? ) ) ) ) )
        // InternalKim.g:5927:3: ({...}? => ( ({...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? ) ) ) )
        {
        // InternalKim.g:5927:3: ({...}? => ( ({...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? ) ) ) )
        // InternalKim.g:5928:4: {...}? => ( ({...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred238_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1)");
        }
        // InternalKim.g:5928:114: ( ({...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? ) ) )
        // InternalKim.g:5929:5: ({...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1);
        // InternalKim.g:5932:8: ({...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? ) )
        // InternalKim.g:5932:9: {...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred238_InternalKim", "true");
        }
        // InternalKim.g:5932:18: ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? )
        // InternalKim.g:5932:19: (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )?
        {
        // InternalKim.g:5932:19: (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )?
        int alt417=2;
        int LA417_0 = input.LA(1);

        if ( (LA417_0==40) ) {
            int LA417_1 = input.LA(2);

            if ( (LA417_1==41) ) {
                alt417=1;
            }
        }
        switch (alt417) {
            case 1 :
                // InternalKim.g:5933:9: otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) )
                {
                otherlv_24=(Token)match(input,40,FOLLOW_31); if (state.failed) return ;
                otherlv_25=(Token)match(input,41,FOLLOW_32); if (state.failed) return ;
                // InternalKim.g:5941:9: ( (lv_metadata_26_0= ruleMetadata ) )
                // InternalKim.g:5942:10: (lv_metadata_26_0= ruleMetadata )
                {
                // InternalKim.g:5942:10: (lv_metadata_26_0= ruleMetadata )
                // InternalKim.g:5943:11: lv_metadata_26_0= ruleMetadata
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getMetadataMetadataParserRuleCall_1_0_2_0());
                  										
                }
                pushFollow(FOLLOW_33);
                lv_metadata_26_0=ruleMetadata();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:5961:8: (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )?
        int alt418=2;
        int LA418_0 = input.LA(1);

        if ( (LA418_0==40) ) {
            alt418=1;
        }
        switch (alt418) {
            case 1 :
                // InternalKim.g:5962:9: otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) )
                {
                otherlv_27=(Token)match(input,40,FOLLOW_34); if (state.failed) return ;
                otherlv_28=(Token)match(input,42,FOLLOW_32); if (state.failed) return ;
                // InternalKim.g:5970:9: ( (lv_documentation_29_0= ruleMetadata ) )
                // InternalKim.g:5971:10: (lv_documentation_29_0= ruleMetadata )
                {
                // InternalKim.g:5971:10: (lv_documentation_29_0= ruleMetadata )
                // InternalKim.g:5972:11: lv_documentation_29_0= ruleMetadata
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getDocumentationMetadataParserRuleCall_1_1_2_0());
                  										
                }
                pushFollow(FOLLOW_2);
                lv_documentation_29_0=ruleMetadata();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred238_InternalKim

    // $ANTLR start synpred239_InternalKim
    public final void synpred239_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_value_0_0 = null;


        // InternalKim.g:6036:4: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )
        // InternalKim.g:6036:4: ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as'
        {
        // InternalKim.g:6036:4: ( (lv_value_0_0= ruleValue ) )
        // InternalKim.g:6037:5: (lv_value_0_0= ruleValue )
        {
        // InternalKim.g:6037:5: (lv_value_0_0= ruleValue )
        // InternalKim.g:6038:6: lv_value_0_0= ruleValue
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueValueParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_10);
        lv_value_0_0=ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,23,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred239_InternalKim

    // $ANTLR start synpred241_InternalKim
    public final void synpred241_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_by_6_0 = null;


        // InternalKim.g:6100:4: ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:6100:4: ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) )
        {
        // InternalKim.g:6100:4: ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:6101:5: {...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred241_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:6101:116: ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) )
        // InternalKim.g:6102:6: ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:6105:9: ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) )
        // InternalKim.g:6105:10: {...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred241_InternalKim", "true");
        }
        // InternalKim.g:6105:19: (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) )
        // InternalKim.g:6105:20: otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) )
        {
        otherlv_5=(Token)match(input,97,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:6109:9: ( (lv_by_6_0= ruleConcept ) )
        // InternalKim.g:6110:10: (lv_by_6_0= ruleConcept )
        {
        // InternalKim.g:6110:10: (lv_by_6_0= ruleConcept )
        // InternalKim.g:6111:11: lv_by_6_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getByConceptParserRuleCall_3_0_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_by_6_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred241_InternalKim

    // $ANTLR start synpred242_InternalKim
    public final void synpred242_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_downTo_9_0 = null;


        // InternalKim.g:6134:4: ( ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:6134:4: ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) )
        {
        // InternalKim.g:6134:4: ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:6135:5: {...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred242_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:6135:116: ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) )
        // InternalKim.g:6136:6: ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:6139:9: ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) )
        // InternalKim.g:6139:10: {...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred242_InternalKim", "true");
        }
        // InternalKim.g:6139:19: (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) )
        // InternalKim.g:6139:20: otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) )
        {
        otherlv_7=(Token)match(input,98,FOLLOW_23); if (state.failed) return ;
        otherlv_8=(Token)match(input,34,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:6147:9: ( (lv_downTo_9_0= ruleConcept ) )
        // InternalKim.g:6148:10: (lv_downTo_9_0= ruleConcept )
        {
        // InternalKim.g:6148:10: (lv_downTo_9_0= ruleConcept )
        // InternalKim.g:6149:11: lv_downTo_9_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDownToConceptParserRuleCall_3_1_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_downTo_9_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred242_InternalKim

    // $ANTLR start synpred243_InternalKim
    public final void synpred243_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        EObject lv_role_11_0 = null;


        // InternalKim.g:6172:4: ( ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:6172:4: ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) )
        {
        // InternalKim.g:6172:4: ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:6173:5: {...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred243_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:6173:116: ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) )
        // InternalKim.g:6174:6: ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:6177:9: ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) )
        // InternalKim.g:6177:10: {...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred243_InternalKim", "true");
        }
        // InternalKim.g:6177:19: (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) )
        // InternalKim.g:6177:20: otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) )
        {
        otherlv_10=(Token)match(input,23,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:6181:9: ( (lv_role_11_0= ruleConcept ) )
        // InternalKim.g:6182:10: (lv_role_11_0= ruleConcept )
        {
        // InternalKim.g:6182:10: (lv_role_11_0= ruleConcept )
        // InternalKim.g:6183:11: lv_role_11_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getRoleConceptParserRuleCall_3_2_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_role_11_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred243_InternalKim

    // $ANTLR start synpred244_InternalKim
    public final void synpred244_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        Token otherlv_13=null;
        AntlrDatatypeRuleToken lv_accordingTo_14_0 = null;


        // InternalKim.g:6206:4: ( ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:6206:4: ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:6206:4: ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:6207:5: {...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred244_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:6207:116: ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:6208:6: ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:6211:9: ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) )
        // InternalKim.g:6211:10: {...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred244_InternalKim", "true");
        }
        // InternalKim.g:6211:19: (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) )
        // InternalKim.g:6211:20: otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) )
        {
        otherlv_12=(Token)match(input,33,FOLLOW_23); if (state.failed) return ;
        otherlv_13=(Token)match(input,34,FOLLOW_24); if (state.failed) return ;
        // InternalKim.g:6219:9: ( (lv_accordingTo_14_0= rulePropertyId ) )
        // InternalKim.g:6220:10: (lv_accordingTo_14_0= rulePropertyId )
        {
        // InternalKim.g:6220:10: (lv_accordingTo_14_0= rulePropertyId )
        // InternalKim.g:6221:11: lv_accordingTo_14_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_3_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_14_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred244_InternalKim

    // $ANTLR start synpred245_InternalKim
    public final void synpred245_InternalKim_fragment() throws RecognitionException {   
        EObject lv_unit_16_0 = null;


        // InternalKim.g:6255:11: ( ( (lv_unit_16_0= ruleUnit ) ) )
        // InternalKim.g:6255:11: ( (lv_unit_16_0= ruleUnit ) )
        {
        // InternalKim.g:6255:11: ( (lv_unit_16_0= ruleUnit ) )
        // InternalKim.g:6256:12: (lv_unit_16_0= ruleUnit )
        {
        // InternalKim.g:6256:12: (lv_unit_16_0= ruleUnit )
        // InternalKim.g:6257:13: lv_unit_16_0= ruleUnit
        {
        if ( state.backtracking==0 ) {

          													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_4_0_1_0_0());
          												
        }
        pushFollow(FOLLOW_2);
        lv_unit_16_0=ruleUnit();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred245_InternalKim

    // $ANTLR start synpred247_InternalKim
    public final void synpred247_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_15=null;
        Token otherlv_18=null;
        EObject lv_unit_16_0 = null;

        EObject lv_currency_17_0 = null;

        EObject lv_unit_19_0 = null;


        // InternalKim.g:6244:4: ( ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:6244:4: ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:6244:4: ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:6245:5: {...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred247_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
        }
        // InternalKim.g:6245:116: ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:6246:6: ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4);
        // InternalKim.g:6249:9: ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) )
        // InternalKim.g:6249:10: {...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred247_InternalKim", "true");
        }
        // InternalKim.g:6249:19: ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) )
        int alt421=2;
        int LA421_0 = input.LA(1);

        if ( (LA421_0==48) ) {
            alt421=1;
        }
        else if ( (LA421_0==99) ) {
            alt421=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 421, 0, input);

            throw nvae;
        }
        switch (alt421) {
            case 1 :
                // InternalKim.g:6249:20: (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:6249:20: (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) )
                // InternalKim.g:6250:10: otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) )
                {
                otherlv_15=(Token)match(input,48,FOLLOW_99); if (state.failed) return ;
                // InternalKim.g:6254:10: ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) )
                int alt420=2;
                switch ( input.LA(1) ) {
                case RULE_CAMELCASE_ID:
                    {
                    int LA420_1 = input.LA(2);

                    if ( (synpred245_InternalKim()) ) {
                        alt420=1;
                    }
                    else if ( (true) ) {
                        alt420=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 420, 1, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_LOWERCASE_ID:
                    {
                    int LA420_2 = input.LA(2);

                    if ( (LA420_2==EOF||LA420_2==38||LA420_2==92||LA420_2==239) ) {
                        alt420=1;
                    }
                    else if ( (LA420_2==89||LA420_2==93) ) {
                        alt420=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 420, 2, input);

                        throw nvae;
                    }
                    }
                    break;
                case EOF:
                case RULE_INT:
                case 36:
                case 38:
                case 92:
                case 232:
                case 233:
                case 239:
                    {
                    alt420=1;
                    }
                    break;
                case RULE_UPPERCASE_ID:
                case RULE_LOWERCASE_DASHID:
                    {
                    alt420=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 420, 0, input);

                    throw nvae;
                }

                switch (alt420) {
                    case 1 :
                        // InternalKim.g:6255:11: ( (lv_unit_16_0= ruleUnit ) )
                        {
                        // InternalKim.g:6255:11: ( (lv_unit_16_0= ruleUnit ) )
                        // InternalKim.g:6256:12: (lv_unit_16_0= ruleUnit )
                        {
                        // InternalKim.g:6256:12: (lv_unit_16_0= ruleUnit )
                        // InternalKim.g:6257:13: lv_unit_16_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_4_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_16_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:6275:11: ( (lv_currency_17_0= ruleCurrency ) )
                        {
                        // InternalKim.g:6275:11: ( (lv_currency_17_0= ruleCurrency ) )
                        // InternalKim.g:6276:12: (lv_currency_17_0= ruleCurrency )
                        {
                        // InternalKim.g:6276:12: (lv_currency_17_0= ruleCurrency )
                        // InternalKim.g:6277:13: lv_currency_17_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_4_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_17_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:6297:9: (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) )
                {
                // InternalKim.g:6297:9: (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) )
                // InternalKim.g:6298:10: otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) )
                {
                otherlv_18=(Token)match(input,99,FOLLOW_191); if (state.failed) return ;
                // InternalKim.g:6302:10: ( (lv_unit_19_0= ruleUnit ) )
                // InternalKim.g:6303:11: (lv_unit_19_0= ruleUnit )
                {
                // InternalKim.g:6303:11: (lv_unit_19_0= ruleUnit )
                // InternalKim.g:6304:12: lv_unit_19_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_4_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_19_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred247_InternalKim

    // $ANTLR start synpred249_InternalKim
    public final void synpred249_InternalKim_fragment() throws RecognitionException {   
        Token lv_optional_20_0=null;
        Token otherlv_21=null;

        // InternalKim.g:6328:4: ( ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) )
        // InternalKim.g:6328:4: ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) )
        {
        // InternalKim.g:6328:4: ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) )
        // InternalKim.g:6329:5: {...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred249_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
        }
        // InternalKim.g:6329:116: ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) )
        // InternalKim.g:6330:6: ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5);
        // InternalKim.g:6333:9: ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) )
        // InternalKim.g:6333:10: {...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred249_InternalKim", "true");
        }
        // InternalKim.g:6333:19: ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' )
        int alt422=2;
        int LA422_0 = input.LA(1);

        if ( (LA422_0==100) ) {
            alt422=1;
        }
        else if ( (LA422_0==101) ) {
            alt422=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 422, 0, input);

            throw nvae;
        }
        switch (alt422) {
            case 1 :
                // InternalKim.g:6333:20: ( (lv_optional_20_0= 'optional' ) )
                {
                // InternalKim.g:6333:20: ( (lv_optional_20_0= 'optional' ) )
                // InternalKim.g:6334:10: (lv_optional_20_0= 'optional' )
                {
                // InternalKim.g:6334:10: (lv_optional_20_0= 'optional' )
                // InternalKim.g:6335:11: lv_optional_20_0= 'optional'
                {
                lv_optional_20_0=(Token)match(input,100,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:6348:9: otherlv_21= 'required'
                {
                otherlv_21=(Token)match(input,101,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred249_InternalKim

    // $ANTLR start synpred250_InternalKim
    public final void synpred250_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        EObject lv_from_22_0 = null;

        EObject lv_to_24_0 = null;


        // InternalKim.g:6358:4: ( ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:6358:4: ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:6358:4: ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:6359:5: {...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred250_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6)");
        }
        // InternalKim.g:6359:116: ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) )
        // InternalKim.g:6360:6: ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6);
        // InternalKim.g:6363:9: ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) )
        // InternalKim.g:6363:10: {...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred250_InternalKim", "true");
        }
        // InternalKim.g:6363:19: ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) )
        // InternalKim.g:6363:20: ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) )
        {
        // InternalKim.g:6363:20: ( (lv_from_22_0= ruleNumber ) )
        // InternalKim.g:6364:10: (lv_from_22_0= ruleNumber )
        {
        // InternalKim.g:6364:10: (lv_from_22_0= ruleNumber )
        // InternalKim.g:6365:11: lv_from_22_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getFromNumberParserRuleCall_3_6_0_0());
          										
        }
        pushFollow(FOLLOW_23);
        lv_from_22_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_23=(Token)match(input,34,FOLLOW_39); if (state.failed) return ;
        // InternalKim.g:6386:9: ( (lv_to_24_0= ruleNumber ) )
        // InternalKim.g:6387:10: (lv_to_24_0= ruleNumber )
        {
        // InternalKim.g:6387:10: (lv_to_24_0= ruleNumber )
        // InternalKim.g:6388:11: lv_to_24_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getToNumberParserRuleCall_3_6_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_24_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred250_InternalKim

    // $ANTLR start synpred251_InternalKim
    public final void synpred251_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_25=null;
        Token lv_name_26_0=null;

        // InternalKim.g:6411:4: ( ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )
        // InternalKim.g:6411:4: ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) )
        {
        // InternalKim.g:6411:4: ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) )
        // InternalKim.g:6412:5: {...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred251_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7)");
        }
        // InternalKim.g:6412:116: ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) )
        // InternalKim.g:6413:6: ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7);
        // InternalKim.g:6416:9: ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) )
        // InternalKim.g:6416:10: {...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred251_InternalKim", "true");
        }
        // InternalKim.g:6416:19: (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) )
        // InternalKim.g:6416:20: otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) )
        {
        otherlv_25=(Token)match(input,102,FOLLOW_62); if (state.failed) return ;
        // InternalKim.g:6420:9: ( (lv_name_26_0= RULE_LOWERCASE_ID ) )
        // InternalKim.g:6421:10: (lv_name_26_0= RULE_LOWERCASE_ID )
        {
        // InternalKim.g:6421:10: (lv_name_26_0= RULE_LOWERCASE_ID )
        // InternalKim.g:6422:11: lv_name_26_0= RULE_LOWERCASE_ID
        {
        lv_name_26_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred251_InternalKim

    // $ANTLR start synpred252_InternalKim
    public final void synpred252_InternalKim_fragment() throws RecognitionException {   
        Token lv_modelReference_0_1=null;

        // InternalKim.g:6476:6: (lv_modelReference_0_1= RULE_LOWERCASE_ID )
        // InternalKim.g:6476:6: lv_modelReference_0_1= RULE_LOWERCASE_ID
        {
        lv_modelReference_0_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred252_InternalKim

    // $ANTLR start synpred254_InternalKim
    public final void synpred254_InternalKim_fragment() throws RecognitionException {   
        EObject lv_main_0_0 = null;


        // InternalKim.g:6559:4: ( (lv_main_0_0= ruleConcept ) )
        // InternalKim.g:6559:4: (lv_main_0_0= ruleConcept )
        {
        // InternalKim.g:6559:4: (lv_main_0_0= ruleConcept )
        // InternalKim.g:6560:5: lv_main_0_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMainConceptParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_main_0_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred254_InternalKim

    // $ANTLR start synpred255_InternalKim
    public final void synpred255_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_inherency_3_0 = null;


        // InternalKim.g:6584:4: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6584:4: ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6584:4: ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6585:5: {...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred255_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:6585:115: ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6586:6: ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:6589:9: ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6589:10: {...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred255_InternalKim", "true");
        }
        // InternalKim.g:6589:19: (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6589:20: otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_2=(Token)match(input,103,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:6593:9: ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6594:10: (lv_inherency_3_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6594:10: (lv_inherency_3_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6595:11: lv_inherency_3_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_1_0_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_inherency_3_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred255_InternalKim

    // $ANTLR start synpred256_InternalKim
    public final void synpred256_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_motivation_5_0 = null;


        // InternalKim.g:6618:4: ( ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6618:4: ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6618:4: ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6619:5: {...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred256_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:6619:115: ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6620:6: ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:6623:9: ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6623:10: {...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred256_InternalKim", "true");
        }
        // InternalKim.g:6623:19: (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6623:20: otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_4=(Token)match(input,104,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:6627:9: ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6628:10: (lv_motivation_5_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6628:10: (lv_motivation_5_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6629:11: lv_motivation_5_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_1_1_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_motivation_5_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred256_InternalKim

    // $ANTLR start synpred257_InternalKim
    public final void synpred257_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_6=null;
        EObject lv_compresent_7_0 = null;


        // InternalKim.g:6652:4: ( ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6652:4: ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6652:4: ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6653:5: {...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred257_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2)");
        }
        // InternalKim.g:6653:115: ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6654:6: ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2);
        // InternalKim.g:6657:9: ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6657:10: {...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred257_InternalKim", "true");
        }
        // InternalKim.g:6657:19: (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6657:20: otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_6=(Token)match(input,40,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:6661:9: ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6662:10: (lv_compresent_7_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6662:10: (lv_compresent_7_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6663:11: lv_compresent_7_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_1_2_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_compresent_7_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred257_InternalKim

    // $ANTLR start synpred258_InternalKim
    public final void synpred258_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token otherlv_9=null;
        EObject lv_causant_10_0 = null;


        // InternalKim.g:6686:4: ( ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6686:4: ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6686:4: ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6687:5: {...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred258_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3)");
        }
        // InternalKim.g:6687:115: ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6688:6: ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3);
        // InternalKim.g:6691:9: ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6691:10: {...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred258_InternalKim", "true");
        }
        // InternalKim.g:6691:19: (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6691:20: otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_8=(Token)match(input,105,FOLLOW_103); if (state.failed) return ;
        otherlv_9=(Token)match(input,97,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:6699:9: ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6700:10: (lv_causant_10_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6700:10: (lv_causant_10_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6701:11: lv_causant_10_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_1_3_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_causant_10_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred258_InternalKim

    // $ANTLR start synpred259_InternalKim
    public final void synpred259_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_11=null;
        Token otherlv_12=null;
        EObject lv_adjacent_13_0 = null;


        // InternalKim.g:6724:4: ( ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6724:4: ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6724:4: ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6725:5: {...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred259_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4)");
        }
        // InternalKim.g:6725:115: ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6726:6: ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4);
        // InternalKim.g:6729:9: ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6729:10: {...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred259_InternalKim", "true");
        }
        // InternalKim.g:6729:19: (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6729:20: otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_11=(Token)match(input,106,FOLLOW_23); if (state.failed) return ;
        otherlv_12=(Token)match(input,34,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:6737:9: ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6738:10: (lv_adjacent_13_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6738:10: (lv_adjacent_13_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6739:11: lv_adjacent_13_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_1_4_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_adjacent_13_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred259_InternalKim

    // $ANTLR start synpred260_InternalKim
    public final void synpred260_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token otherlv_15=null;
        EObject lv_container_16_0 = null;


        // InternalKim.g:6762:4: ( ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6762:4: ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6762:4: ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6763:5: {...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred260_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5)");
        }
        // InternalKim.g:6763:115: ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6764:6: ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5);
        // InternalKim.g:6767:9: ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6767:10: {...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred260_InternalKim", "true");
        }
        // InternalKim.g:6767:19: (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6767:20: otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_14=(Token)match(input,107,FOLLOW_104); if (state.failed) return ;
        otherlv_15=(Token)match(input,48,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:6775:9: ( (lv_container_16_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6776:10: (lv_container_16_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6776:10: (lv_container_16_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6777:11: lv_container_16_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_1_5_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_container_16_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred260_InternalKim

    // $ANTLR start synpred261_InternalKim
    public final void synpred261_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_17=null;
        EObject lv_contained_18_0 = null;


        // InternalKim.g:6800:4: ( ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6800:4: ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6800:4: ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6801:5: {...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred261_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6)");
        }
        // InternalKim.g:6801:115: ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6802:6: ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6);
        // InternalKim.g:6805:9: ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6805:10: {...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred261_InternalKim", "true");
        }
        // InternalKim.g:6805:19: (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6805:20: otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_17=(Token)match(input,108,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:6809:9: ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6810:10: (lv_contained_18_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6810:10: (lv_contained_18_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6811:11: lv_contained_18_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_1_6_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_contained_18_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred261_InternalKim

    // $ANTLR start synpred262_InternalKim
    public final void synpred262_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        EObject lv_caused_20_0 = null;


        // InternalKim.g:6834:4: ( ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6834:4: ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6834:4: ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6835:5: {...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred262_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7)");
        }
        // InternalKim.g:6835:115: ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6836:6: ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7);
        // InternalKim.g:6839:9: ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6839:10: {...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred262_InternalKim", "true");
        }
        // InternalKim.g:6839:19: (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6839:20: otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_19=(Token)match(input,109,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:6843:9: ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6844:10: (lv_caused_20_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6844:10: (lv_caused_20_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6845:11: lv_caused_20_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_1_7_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_caused_20_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred262_InternalKim

    // $ANTLR start synpred263_InternalKim
    public final void synpred263_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_21=null;
        EObject lv_during_22_0 = null;


        // InternalKim.g:6868:4: ( ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6868:4: ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6868:4: ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6869:5: {...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred263_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8)");
        }
        // InternalKim.g:6869:115: ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6870:6: ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8);
        // InternalKim.g:6873:9: ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6873:10: {...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred263_InternalKim", "true");
        }
        // InternalKim.g:6873:19: (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6873:20: otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_21=(Token)match(input,110,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:6877:9: ( (lv_during_22_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6878:10: (lv_during_22_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6878:10: (lv_during_22_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6879:11: lv_during_22_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getDuringSimpleConceptDeclarationParserRuleCall_1_8_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_during_22_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred263_InternalKim

    // $ANTLR start synpred264_InternalKim
    public final void synpred264_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        EObject lv_context_24_0 = null;


        // InternalKim.g:6902:4: ( ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6902:4: ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6902:4: ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6903:5: {...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred264_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9)");
        }
        // InternalKim.g:6903:115: ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6904:6: ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9);
        // InternalKim.g:6907:9: ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6907:10: {...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred264_InternalKim", "true");
        }
        // InternalKim.g:6907:19: (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6907:20: otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_23=(Token)match(input,111,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:6911:9: ( (lv_context_24_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6912:10: (lv_context_24_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6912:10: (lv_context_24_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6913:11: lv_context_24_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContextSimpleConceptDeclarationParserRuleCall_1_9_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_context_24_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred264_InternalKim

    // $ANTLR start synpred265_InternalKim
    public final void synpred265_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        EObject lv_inherency_3_0 = null;

        EObject lv_motivation_5_0 = null;

        EObject lv_compresent_7_0 = null;

        EObject lv_causant_10_0 = null;

        EObject lv_adjacent_13_0 = null;

        EObject lv_container_16_0 = null;

        EObject lv_contained_18_0 = null;

        EObject lv_caused_20_0 = null;

        EObject lv_during_22_0 = null;

        EObject lv_context_24_0 = null;


        // InternalKim.g:6578:4: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )
        // InternalKim.g:6578:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
        {
        // InternalKim.g:6578:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
        // InternalKim.g:6579:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
        {
        getUnorderedGroupHelper().enter(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
        // InternalKim.g:6582:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
        // InternalKim.g:6583:6: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
        {
        // InternalKim.g:6583:6: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
        loop424:
        do {
            int alt424=11;
            alt424 = dfa424.predict(input);
            switch (alt424) {
        	case 1 :
        	    // InternalKim.g:6584:4: ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:6584:4: ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:6585:5: {...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred265_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0)");
        	    }
        	    // InternalKim.g:6585:115: ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:6586:6: ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0);
        	    // InternalKim.g:6589:9: ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:6589:10: {...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred265_InternalKim", "true");
        	    }
        	    // InternalKim.g:6589:19: (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:6589:20: otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_2=(Token)match(input,103,FOLLOW_21); if (state.failed) return ;
        	    // InternalKim.g:6593:9: ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:6594:10: (lv_inherency_3_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:6594:10: (lv_inherency_3_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:6595:11: lv_inherency_3_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_1_0_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_102);
        	    lv_inherency_3_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:6618:4: ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:6618:4: ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:6619:5: {...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred265_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1)");
        	    }
        	    // InternalKim.g:6619:115: ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:6620:6: ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1);
        	    // InternalKim.g:6623:9: ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:6623:10: {...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred265_InternalKim", "true");
        	    }
        	    // InternalKim.g:6623:19: (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:6623:20: otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_4=(Token)match(input,104,FOLLOW_21); if (state.failed) return ;
        	    // InternalKim.g:6627:9: ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:6628:10: (lv_motivation_5_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:6628:10: (lv_motivation_5_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:6629:11: lv_motivation_5_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_1_1_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_102);
        	    lv_motivation_5_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 3 :
        	    // InternalKim.g:6652:4: ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:6652:4: ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:6653:5: {...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred265_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2)");
        	    }
        	    // InternalKim.g:6653:115: ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:6654:6: ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2);
        	    // InternalKim.g:6657:9: ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:6657:10: {...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred265_InternalKim", "true");
        	    }
        	    // InternalKim.g:6657:19: (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:6657:20: otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_6=(Token)match(input,40,FOLLOW_21); if (state.failed) return ;
        	    // InternalKim.g:6661:9: ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:6662:10: (lv_compresent_7_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:6662:10: (lv_compresent_7_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:6663:11: lv_compresent_7_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_1_2_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_102);
        	    lv_compresent_7_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 4 :
        	    // InternalKim.g:6686:4: ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:6686:4: ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:6687:5: {...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred265_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3)");
        	    }
        	    // InternalKim.g:6687:115: ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:6688:6: ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3);
        	    // InternalKim.g:6691:9: ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:6691:10: {...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred265_InternalKim", "true");
        	    }
        	    // InternalKim.g:6691:19: (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:6691:20: otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_8=(Token)match(input,105,FOLLOW_103); if (state.failed) return ;
        	    otherlv_9=(Token)match(input,97,FOLLOW_21); if (state.failed) return ;
        	    // InternalKim.g:6699:9: ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:6700:10: (lv_causant_10_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:6700:10: (lv_causant_10_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:6701:11: lv_causant_10_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_1_3_2_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_102);
        	    lv_causant_10_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 5 :
        	    // InternalKim.g:6724:4: ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:6724:4: ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:6725:5: {...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred265_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4)");
        	    }
        	    // InternalKim.g:6725:115: ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:6726:6: ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4);
        	    // InternalKim.g:6729:9: ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:6729:10: {...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred265_InternalKim", "true");
        	    }
        	    // InternalKim.g:6729:19: (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:6729:20: otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_11=(Token)match(input,106,FOLLOW_23); if (state.failed) return ;
        	    otherlv_12=(Token)match(input,34,FOLLOW_21); if (state.failed) return ;
        	    // InternalKim.g:6737:9: ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:6738:10: (lv_adjacent_13_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:6738:10: (lv_adjacent_13_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:6739:11: lv_adjacent_13_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_1_4_2_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_102);
        	    lv_adjacent_13_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 6 :
        	    // InternalKim.g:6762:4: ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:6762:4: ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:6763:5: {...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred265_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5)");
        	    }
        	    // InternalKim.g:6763:115: ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:6764:6: ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5);
        	    // InternalKim.g:6767:9: ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:6767:10: {...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred265_InternalKim", "true");
        	    }
        	    // InternalKim.g:6767:19: (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:6767:20: otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_14=(Token)match(input,107,FOLLOW_104); if (state.failed) return ;
        	    otherlv_15=(Token)match(input,48,FOLLOW_21); if (state.failed) return ;
        	    // InternalKim.g:6775:9: ( (lv_container_16_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:6776:10: (lv_container_16_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:6776:10: (lv_container_16_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:6777:11: lv_container_16_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_1_5_2_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_102);
        	    lv_container_16_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 7 :
        	    // InternalKim.g:6800:4: ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:6800:4: ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:6801:5: {...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred265_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6)");
        	    }
        	    // InternalKim.g:6801:115: ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:6802:6: ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6);
        	    // InternalKim.g:6805:9: ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:6805:10: {...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred265_InternalKim", "true");
        	    }
        	    // InternalKim.g:6805:19: (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:6805:20: otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_17=(Token)match(input,108,FOLLOW_21); if (state.failed) return ;
        	    // InternalKim.g:6809:9: ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:6810:10: (lv_contained_18_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:6810:10: (lv_contained_18_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:6811:11: lv_contained_18_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_1_6_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_102);
        	    lv_contained_18_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 8 :
        	    // InternalKim.g:6834:4: ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:6834:4: ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:6835:5: {...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred265_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7)");
        	    }
        	    // InternalKim.g:6835:115: ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:6836:6: ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7);
        	    // InternalKim.g:6839:9: ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:6839:10: {...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred265_InternalKim", "true");
        	    }
        	    // InternalKim.g:6839:19: (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:6839:20: otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_19=(Token)match(input,109,FOLLOW_21); if (state.failed) return ;
        	    // InternalKim.g:6843:9: ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:6844:10: (lv_caused_20_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:6844:10: (lv_caused_20_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:6845:11: lv_caused_20_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_1_7_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_102);
        	    lv_caused_20_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 9 :
        	    // InternalKim.g:6868:4: ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:6868:4: ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:6869:5: {...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred265_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8)");
        	    }
        	    // InternalKim.g:6869:115: ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:6870:6: ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8);
        	    // InternalKim.g:6873:9: ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:6873:10: {...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred265_InternalKim", "true");
        	    }
        	    // InternalKim.g:6873:19: (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:6873:20: otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_21=(Token)match(input,110,FOLLOW_21); if (state.failed) return ;
        	    // InternalKim.g:6877:9: ( (lv_during_22_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:6878:10: (lv_during_22_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:6878:10: (lv_during_22_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:6879:11: lv_during_22_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getDuringSimpleConceptDeclarationParserRuleCall_1_8_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_102);
        	    lv_during_22_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 10 :
        	    // InternalKim.g:6902:4: ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:6902:4: ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:6903:5: {...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred265_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9)");
        	    }
        	    // InternalKim.g:6903:115: ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:6904:6: ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9);
        	    // InternalKim.g:6907:9: ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:6907:10: {...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred265_InternalKim", "true");
        	    }
        	    // InternalKim.g:6907:19: (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:6907:20: otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_23=(Token)match(input,111,FOLLOW_21); if (state.failed) return ;
        	    // InternalKim.g:6911:9: ( (lv_context_24_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:6912:10: (lv_context_24_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:6912:10: (lv_context_24_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:6913:11: lv_context_24_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContextSimpleConceptDeclarationParserRuleCall_1_9_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_102);
        	    lv_context_24_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop424;
            }
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred265_InternalKim

    // $ANTLR start synpred314_InternalKim
    public final void synpred314_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_39=null;
        EObject lv_other_40_0 = null;


        // InternalKim.g:8339:5: ( ( ( 'in' )=>otherlv_39= 'in' ) ( (lv_other_40_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:8339:5: ( ( 'in' )=>otherlv_39= 'in' ) ( (lv_other_40_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:8339:5: ( ( 'in' )=>otherlv_39= 'in' )
        // InternalKim.g:8340:6: ( 'in' )=>otherlv_39= 'in'
        {
        otherlv_39=(Token)match(input,48,FOLLOW_21); if (state.failed) return ;

        }

        // InternalKim.g:8346:5: ( (lv_other_40_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8347:6: (lv_other_40_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8347:6: (lv_other_40_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8348:7: lv_other_40_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_10_3_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_other_40_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred314_InternalKim

    // $ANTLR start synpred319_InternalKim
    public final void synpred319_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_49=null;
        EObject lv_other_50_0 = null;


        // InternalKim.g:8473:5: ( ( ( 'over' )=>otherlv_49= 'over' ) ( (lv_other_50_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:8473:5: ( ( 'over' )=>otherlv_49= 'over' ) ( (lv_other_50_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:8473:5: ( ( 'over' )=>otherlv_49= 'over' )
        // InternalKim.g:8474:6: ( 'over' )=>otherlv_49= 'over'
        {
        otherlv_49=(Token)match(input,55,FOLLOW_21); if (state.failed) return ;

        }

        // InternalKim.g:8480:5: ( (lv_other_50_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8481:6: (lv_other_50_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8481:6: (lv_other_50_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8482:7: lv_other_50_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_12_3_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_other_50_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred319_InternalKim

    // $ANTLR start synpred322_InternalKim
    public final void synpred322_InternalKim_fragment() throws RecognitionException {   
        Token lv_operators_1_0=null;
        EObject lv_operands_2_0 = null;


        // InternalKim.g:8630:4: ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )
        // InternalKim.g:8630:4: ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) )
        {
        // InternalKim.g:8630:4: ( (lv_operators_1_0= 'or' ) )
        // InternalKim.g:8631:5: (lv_operators_1_0= 'or' )
        {
        // InternalKim.g:8631:5: (lv_operators_1_0= 'or' )
        // InternalKim.g:8632:6: lv_operators_1_0= 'or'
        {
        lv_operators_1_0=(Token)match(input,137,FOLLOW_21); if (state.failed) return ;

        }


        }

        // InternalKim.g:8644:4: ( (lv_operands_2_0= ruleFactor ) )
        // InternalKim.g:8645:5: (lv_operands_2_0= ruleFactor )
        {
        // InternalKim.g:8645:5: (lv_operands_2_0= ruleFactor )
        // InternalKim.g:8646:6: lv_operands_2_0= ruleFactor
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTermAccess().getOperandsFactorParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_operands_2_0=ruleFactor();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred322_InternalKim

    // $ANTLR start synpred324_InternalKim
    public final void synpred324_InternalKim_fragment() throws RecognitionException {   
        Token lv_operators_1_1=null;
        Token lv_operators_1_2=null;
        EObject lv_operands_2_0 = null;


        // InternalKim.g:8695:4: ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )
        // InternalKim.g:8695:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) )
        {
        // InternalKim.g:8695:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) )
        // InternalKim.g:8696:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
        {
        // InternalKim.g:8696:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
        // InternalKim.g:8697:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
        {
        // InternalKim.g:8697:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
        int alt448=2;
        int LA448_0 = input.LA(1);

        if ( (LA448_0==138) ) {
            alt448=1;
        }
        else if ( (LA448_0==139) ) {
            alt448=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 448, 0, input);

            throw nvae;
        }
        switch (alt448) {
            case 1 :
                // InternalKim.g:8698:7: lv_operators_1_1= 'and'
                {
                lv_operators_1_1=(Token)match(input,138,FOLLOW_21); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:8709:7: lv_operators_1_2= 'follows'
                {
                lv_operators_1_2=(Token)match(input,139,FOLLOW_21); if (state.failed) return ;

                }
                break;

        }


        }


        }

        // InternalKim.g:8722:4: ( (lv_operands_2_0= ruleTerm ) )
        // InternalKim.g:8723:5: (lv_operands_2_0= ruleTerm )
        {
        // InternalKim.g:8723:5: (lv_operands_2_0= ruleTerm )
        // InternalKim.g:8724:6: lv_operands_2_0= ruleTerm
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFactorAccess().getOperandsTermParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_operands_2_0=ruleTerm();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred324_InternalKim

    // $ANTLR start synpred326_InternalKim
    public final void synpred326_InternalKim_fragment() throws RecognitionException {   
        EObject lv_main_1_0 = null;


        // InternalKim.g:8780:4: ( (lv_main_1_0= ruleConcept ) )
        // InternalKim.g:8780:4: (lv_main_1_0= ruleConcept )
        {
        // InternalKim.g:8780:4: (lv_main_1_0= ruleConcept )
        // InternalKim.g:8781:5: lv_main_1_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_main_1_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred326_InternalKim

    // $ANTLR start synpred336_InternalKim
    public final void synpred336_InternalKim_fragment() throws RecognitionException {   
        Token lv_abstract_2_0=null;

        // InternalKim.g:9095:4: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) )
        // InternalKim.g:9095:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
        {
        // InternalKim.g:9095:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
        // InternalKim.g:9096:5: {...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred336_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:9096:113: ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
        // InternalKim.g:9097:6: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:9100:9: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
        // InternalKim.g:9100:10: {...}? => ( (lv_abstract_2_0= 'abstract' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred336_InternalKim", "true");
        }
        // InternalKim.g:9100:19: ( (lv_abstract_2_0= 'abstract' ) )
        // InternalKim.g:9100:20: (lv_abstract_2_0= 'abstract' )
        {
        // InternalKim.g:9100:20: (lv_abstract_2_0= 'abstract' )
        // InternalKim.g:9101:10: lv_abstract_2_0= 'abstract'
        {
        lv_abstract_2_0=(Token)match(input,145,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred336_InternalKim

    // $ANTLR start synpred337_InternalKim
    public final void synpred337_InternalKim_fragment() throws RecognitionException {   
        Token lv_deniable_3_0=null;

        // InternalKim.g:9118:4: ( ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) )
        // InternalKim.g:9118:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
        {
        // InternalKim.g:9118:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
        // InternalKim.g:9119:5: {...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred337_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:9119:113: ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
        // InternalKim.g:9120:6: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:9123:9: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
        // InternalKim.g:9123:10: {...}? => ( (lv_deniable_3_0= 'deniable' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred337_InternalKim", "true");
        }
        // InternalKim.g:9123:19: ( (lv_deniable_3_0= 'deniable' ) )
        // InternalKim.g:9123:20: (lv_deniable_3_0= 'deniable' )
        {
        // InternalKim.g:9123:20: (lv_deniable_3_0= 'deniable' )
        // InternalKim.g:9124:10: lv_deniable_3_0= 'deniable'
        {
        lv_deniable_3_0=(Token)match(input,146,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred337_InternalKim

    // $ANTLR start synpred338_InternalKim
    public final void synpred338_InternalKim_fragment() throws RecognitionException {   
        Token lv_subjective_4_0=null;

        // InternalKim.g:9141:4: ( ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) )
        // InternalKim.g:9141:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
        {
        // InternalKim.g:9141:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
        // InternalKim.g:9142:5: {...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred338_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2)");
        }
        // InternalKim.g:9142:113: ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
        // InternalKim.g:9143:6: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2);
        // InternalKim.g:9146:9: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
        // InternalKim.g:9146:10: {...}? => ( (lv_subjective_4_0= 'subjective' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred338_InternalKim", "true");
        }
        // InternalKim.g:9146:19: ( (lv_subjective_4_0= 'subjective' ) )
        // InternalKim.g:9146:20: (lv_subjective_4_0= 'subjective' )
        {
        // InternalKim.g:9146:20: (lv_subjective_4_0= 'subjective' )
        // InternalKim.g:9147:10: lv_subjective_4_0= 'subjective'
        {
        lv_subjective_4_0=(Token)match(input,147,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred338_InternalKim

    // $ANTLR start synpred342_InternalKim
    public final void synpred342_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;


        // InternalKim.g:9229:11: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )
        // InternalKim.g:9229:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
        {
        // InternalKim.g:9229:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
        // InternalKim.g:9230:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred342_InternalKim

    // $ANTLR start synpred343_InternalKim
    public final void synpred343_InternalKim_fragment() throws RecognitionException {   
        Token lv_agentSpecifier_5_1=null;
        Token lv_agentSpecifier_5_2=null;
        Token lv_agentSpecifier_5_3=null;
        AntlrDatatypeRuleToken lv_propertySpecifiers_6_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;


        // InternalKim.g:9164:4: ( ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )
        // InternalKim.g:9164:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) )
        {
        // InternalKim.g:9164:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) )
        // InternalKim.g:9165:5: {...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred343_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3)");
        }
        // InternalKim.g:9165:113: ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) )
        // InternalKim.g:9166:6: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3);
        // InternalKim.g:9169:9: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) )
        // InternalKim.g:9169:10: {...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred343_InternalKim", "true");
        }
        // InternalKim.g:9169:19: ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) )
        int alt459=2;
        int LA459_0 = input.LA(1);

        if ( ((LA459_0>=140 && LA459_0<=142)) ) {
            alt459=1;
        }
        else if ( ((LA459_0>=224 && LA459_0<=225)) ) {
            alt459=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 459, 0, input);

            throw nvae;
        }
        switch (alt459) {
            case 1 :
                // InternalKim.g:9169:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
                {
                // InternalKim.g:9169:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
                // InternalKim.g:9170:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
                {
                // InternalKim.g:9170:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
                // InternalKim.g:9171:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
                {
                // InternalKim.g:9171:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
                int alt457=3;
                switch ( input.LA(1) ) {
                case 140:
                    {
                    alt457=1;
                    }
                    break;
                case 141:
                    {
                    alt457=2;
                    }
                    break;
                case 142:
                    {
                    alt457=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 457, 0, input);

                    throw nvae;
                }

                switch (alt457) {
                    case 1 :
                        // InternalKim.g:9172:12: lv_agentSpecifier_5_1= 'deliberative'
                        {
                        lv_agentSpecifier_5_1=(Token)match(input,140,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:9183:12: lv_agentSpecifier_5_2= 'interactive'
                        {
                        lv_agentSpecifier_5_2=(Token)match(input,141,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // InternalKim.g:9194:12: lv_agentSpecifier_5_3= 'reactive'
                        {
                        lv_agentSpecifier_5_3=(Token)match(input,142,FOLLOW_2); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:9208:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
                {
                // InternalKim.g:9208:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
                // InternalKim.g:9209:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
                {
                // InternalKim.g:9209:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) )
                // InternalKim.g:9210:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
                {
                // InternalKim.g:9210:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
                // InternalKim.g:9211:12: lv_propertySpecifiers_6_0= rulePROPERTY_TYPE
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_0_0());
                  											
                }
                pushFollow(FOLLOW_192);
                lv_propertySpecifiers_6_0=rulePROPERTY_TYPE();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:9228:10: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
                loop458:
                do {
                    int alt458=2;
                    int LA458_0 = input.LA(1);

                    if ( ((LA458_0>=224 && LA458_0<=225)) ) {
                        alt458=1;
                    }


                    switch (alt458) {
                	case 1 :
                	    // InternalKim.g:9229:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
                	    {
                	    // InternalKim.g:9229:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
                	    // InternalKim.g:9230:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
                	    {
                	    if ( state.backtracking==0 ) {

                	      												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
                	      											
                	    }
                	    pushFollow(FOLLOW_192);
                	    lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }
                	    break;

                	default :
                	    break loop458;
                    }
                } while (true);


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred343_InternalKim

    // $ANTLR start synpred352_InternalKim
    public final void synpred352_InternalKim_fragment() throws RecognitionException {   
        Token lv_docstring_11_0=null;

        // InternalKim.g:9538:4: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:9538:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
        {
        // InternalKim.g:9538:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
        // InternalKim.g:9539:5: {...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred352_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:9539:117: ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
        // InternalKim.g:9540:6: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:9543:9: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
        // InternalKim.g:9543:10: {...}? => ( (lv_docstring_11_0= RULE_STRING ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred352_InternalKim", "true");
        }
        // InternalKim.g:9543:19: ( (lv_docstring_11_0= RULE_STRING ) )
        // InternalKim.g:9543:20: (lv_docstring_11_0= RULE_STRING )
        {
        // InternalKim.g:9543:20: (lv_docstring_11_0= RULE_STRING )
        // InternalKim.g:9544:10: lv_docstring_11_0= RULE_STRING
        {
        lv_docstring_11_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred352_InternalKim

    // $ANTLR start synpred359_InternalKim
    public final void synpred359_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        Token lv_coreConcept_13_0=null;
        Token lv_alias_14_0=null;
        Token lv_nothing_15_0=null;
        Token lv_connectors_17_1=null;
        Token lv_connectors_17_2=null;
        Token lv_connectors_17_3=null;
        EObject lv_parents_16_0 = null;

        EObject lv_parents_18_0 = null;


        // InternalKim.g:9565:4: ( ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) )
        // InternalKim.g:9565:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        {
        // InternalKim.g:9565:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:9566:5: {...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred359_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:9566:117: ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:9567:6: ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:9570:9: ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:9570:10: {...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred359_InternalKim", "true");
        }
        // InternalKim.g:9570:19: ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:9570:20: ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
        {
        // InternalKim.g:9570:20: ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) )
        int alt467=2;
        int LA467_0 = input.LA(1);

        if ( (LA467_0==148) ) {
            alt467=1;
        }
        else if ( (LA467_0==150) ) {
            alt467=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 467, 0, input);

            throw nvae;
        }
        switch (alt467) {
            case 1 :
                // InternalKim.g:9571:10: (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? )
                {
                // InternalKim.g:9571:10: (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? )
                // InternalKim.g:9572:11: otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )?
                {
                otherlv_12=(Token)match(input,148,FOLLOW_128); if (state.failed) return ;
                // InternalKim.g:9576:11: ( (lv_coreConcept_13_0= 'core' ) )?
                int alt466=2;
                int LA466_0 = input.LA(1);

                if ( (LA466_0==149) ) {
                    alt466=1;
                }
                switch (alt466) {
                    case 1 :
                        // InternalKim.g:9577:12: (lv_coreConcept_13_0= 'core' )
                        {
                        // InternalKim.g:9577:12: (lv_coreConcept_13_0= 'core' )
                        // InternalKim.g:9578:13: lv_coreConcept_13_0= 'core'
                        {
                        lv_coreConcept_13_0=(Token)match(input,149,FOLLOW_129); if (state.failed) return ;

                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:9592:10: ( (lv_alias_14_0= 'equals' ) )
                {
                // InternalKim.g:9592:10: ( (lv_alias_14_0= 'equals' ) )
                // InternalKim.g:9593:11: (lv_alias_14_0= 'equals' )
                {
                // InternalKim.g:9593:11: (lv_alias_14_0= 'equals' )
                // InternalKim.g:9594:12: lv_alias_14_0= 'equals'
                {
                lv_alias_14_0=(Token)match(input,150,FOLLOW_129); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:9607:9: ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
        int alt470=2;
        int LA470_0 = input.LA(1);

        if ( (LA470_0==151) ) {
            alt470=1;
        }
        else if ( (LA470_0==RULE_LOWERCASE_ID||(LA470_0>=RULE_CAMELCASE_ID && LA470_0<=RULE_LOWERCASE_DASHID)||LA470_0==36||(LA470_0>=112 && LA470_0<=113)||(LA470_0>=121 && LA470_0<=122)||(LA470_0>=124 && LA470_0<=136)) ) {
            alt470=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 470, 0, input);

            throw nvae;
        }
        switch (alt470) {
            case 1 :
                // InternalKim.g:9608:10: ( (lv_nothing_15_0= 'nothing' ) )
                {
                // InternalKim.g:9608:10: ( (lv_nothing_15_0= 'nothing' ) )
                // InternalKim.g:9609:11: (lv_nothing_15_0= 'nothing' )
                {
                // InternalKim.g:9609:11: (lv_nothing_15_0= 'nothing' )
                // InternalKim.g:9610:12: lv_nothing_15_0= 'nothing'
                {
                lv_nothing_15_0=(Token)match(input,151,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:9623:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
                {
                // InternalKim.g:9623:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
                // InternalKim.g:9624:11: ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
                {
                // InternalKim.g:9624:11: ( (lv_parents_16_0= ruleConceptDeclaration ) )
                // InternalKim.g:9625:12: (lv_parents_16_0= ruleConceptDeclaration )
                {
                // InternalKim.g:9625:12: (lv_parents_16_0= ruleConceptDeclaration )
                // InternalKim.g:9626:13: lv_parents_16_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_0_0());
                  												
                }
                pushFollow(FOLLOW_193);
                lv_parents_16_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:9643:11: ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
                loop469:
                do {
                    int alt469=2;
                    int LA469_0 = input.LA(1);

                    if ( (LA469_0==25||(LA469_0>=137 && LA469_0<=138)) ) {
                        alt469=1;
                    }


                    switch (alt469) {
                	case 1 :
                	    // InternalKim.g:9644:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) )
                	    {
                	    // InternalKim.g:9644:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) )
                	    // InternalKim.g:9645:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
                	    {
                	    // InternalKim.g:9645:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
                	    // InternalKim.g:9646:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
                	    {
                	    // InternalKim.g:9646:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
                	    int alt468=3;
                	    switch ( input.LA(1) ) {
                	    case 25:
                	        {
                	        alt468=1;
                	        }
                	        break;
                	    case 137:
                	        {
                	        alt468=2;
                	        }
                	        break;
                	    case 138:
                	        {
                	        alt468=3;
                	        }
                	        break;
                	    default:
                	        if (state.backtracking>0) {state.failed=true; return ;}
                	        NoViableAltException nvae =
                	            new NoViableAltException("", 468, 0, input);

                	        throw nvae;
                	    }

                	    switch (alt468) {
                	        case 1 :
                	            // InternalKim.g:9647:15: lv_connectors_17_1= ','
                	            {
                	            lv_connectors_17_1=(Token)match(input,25,FOLLOW_21); if (state.failed) return ;

                	            }
                	            break;
                	        case 2 :
                	            // InternalKim.g:9658:15: lv_connectors_17_2= 'or'
                	            {
                	            lv_connectors_17_2=(Token)match(input,137,FOLLOW_21); if (state.failed) return ;

                	            }
                	            break;
                	        case 3 :
                	            // InternalKim.g:9669:15: lv_connectors_17_3= 'and'
                	            {
                	            lv_connectors_17_3=(Token)match(input,138,FOLLOW_21); if (state.failed) return ;

                	            }
                	            break;

                	    }


                	    }


                	    }

                	    // InternalKim.g:9682:12: ( (lv_parents_18_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:9683:13: (lv_parents_18_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:9683:13: (lv_parents_18_0= ruleConceptDeclaration )
                	    // InternalKim.g:9684:14: lv_parents_18_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      														newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_1_1_0());
                	      													
                	    }
                	    pushFollow(FOLLOW_193);
                	    lv_parents_18_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop469;
                    }
                } while (true);


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred359_InternalKim

    // $ANTLR start synpred363_InternalKim
    public final void synpred363_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token lv_specific_23_0=null;
        Token otherlv_25=null;
        EObject lv_contextualizedTraits_20_0 = null;

        EObject lv_contextualizedTraits_22_0 = null;

        EObject lv_contextualizesTraits_24_0 = null;

        EObject lv_contextualizesTraits_26_0 = null;


        // InternalKim.g:9710:4: ( ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:9710:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        // InternalKim.g:9710:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:9711:5: {...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred363_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:9711:117: ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:9712:6: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:9715:9: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:9715:10: {...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred363_InternalKim", "true");
        }
        // InternalKim.g:9715:19: ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
        int alt474=2;
        int LA474_0 = input.LA(1);

        if ( (LA474_0==152) ) {
            alt474=1;
        }
        else if ( (LA474_0==153) ) {
            alt474=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 474, 0, input);

            throw nvae;
        }
        switch (alt474) {
            case 1 :
                // InternalKim.g:9715:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
                {
                // InternalKim.g:9715:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
                // InternalKim.g:9716:10: otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
                {
                otherlv_19=(Token)match(input,152,FOLLOW_7); if (state.failed) return ;
                // InternalKim.g:9720:10: ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) )
                // InternalKim.g:9721:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
                {
                // InternalKim.g:9721:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
                // InternalKim.g:9722:12: lv_contextualizedTraits_20_0= ruleObservableSemantics
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_1_0());
                  											
                }
                pushFollow(FOLLOW_35);
                lv_contextualizedTraits_20_0=ruleObservableSemantics();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:9739:10: (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
                loop472:
                do {
                    int alt472=2;
                    int LA472_0 = input.LA(1);

                    if ( (LA472_0==25) ) {
                        alt472=1;
                    }


                    switch (alt472) {
                	case 1 :
                	    // InternalKim.g:9740:11: otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
                	    {
                	    otherlv_21=(Token)match(input,25,FOLLOW_7); if (state.failed) return ;
                	    // InternalKim.g:9744:11: ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
                	    // InternalKim.g:9745:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
                	    {
                	    // InternalKim.g:9745:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
                	    // InternalKim.g:9746:13: lv_contextualizedTraits_22_0= ruleObservableSemantics
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_35);
                	    lv_contextualizedTraits_22_0=ruleObservableSemantics();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop472;
                    }
                } while (true);


                }


                }
                break;
            case 2 :
                // InternalKim.g:9766:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
                {
                // InternalKim.g:9766:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
                // InternalKim.g:9767:10: ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
                {
                // InternalKim.g:9767:10: ( (lv_specific_23_0= 'exposing' ) )
                // InternalKim.g:9768:11: (lv_specific_23_0= 'exposing' )
                {
                // InternalKim.g:9768:11: (lv_specific_23_0= 'exposing' )
                // InternalKim.g:9769:12: lv_specific_23_0= 'exposing'
                {
                lv_specific_23_0=(Token)match(input,153,FOLLOW_21); if (state.failed) return ;

                }


                }

                // InternalKim.g:9781:10: ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) )
                // InternalKim.g:9782:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
                {
                // InternalKim.g:9782:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
                // InternalKim.g:9783:12: lv_contextualizesTraits_24_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_1_0());
                  											
                }
                pushFollow(FOLLOW_35);
                lv_contextualizesTraits_24_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:9800:10: (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
                loop473:
                do {
                    int alt473=2;
                    int LA473_0 = input.LA(1);

                    if ( (LA473_0==25) ) {
                        alt473=1;
                    }


                    switch (alt473) {
                	case 1 :
                	    // InternalKim.g:9801:11: otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_25=(Token)match(input,25,FOLLOW_21); if (state.failed) return ;
                	    // InternalKim.g:9805:11: ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:9806:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:9806:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
                	    // InternalKim.g:9807:13: lv_contextualizesTraits_26_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_35);
                	    lv_contextualizesTraits_26_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop473;
                    }
                } while (true);


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred363_InternalKim

    // $ANTLR start synpred365_InternalKim
    public final void synpred365_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_definedAuthority_29_0=null;
        EObject lv_upperConcept_30_0 = null;


        // InternalKim.g:9832:4: ( ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) )
        // InternalKim.g:9832:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
        {
        // InternalKim.g:9832:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:9833:5: {...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred365_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:9833:117: ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:9834:6: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:9837:9: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
        // InternalKim.g:9837:10: {...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred365_InternalKim", "true");
        }
        // InternalKim.g:9837:19: (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
        // InternalKim.g:9837:20: otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
        {
        otherlv_27=(Token)match(input,154,FOLLOW_132); if (state.failed) return ;
        // InternalKim.g:9841:9: ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
        int alt475=2;
        int LA475_0 = input.LA(1);

        if ( (LA475_0==155) ) {
            alt475=1;
        }
        else if ( (LA475_0==RULE_LOWERCASE_ID||(LA475_0>=RULE_CAMELCASE_ID && LA475_0<=RULE_LOWERCASE_DASHID)||LA475_0==36||(LA475_0>=112 && LA475_0<=113)||(LA475_0>=121 && LA475_0<=122)||(LA475_0>=124 && LA475_0<=136)) ) {
            alt475=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 475, 0, input);

            throw nvae;
        }
        switch (alt475) {
            case 1 :
                // InternalKim.g:9842:10: (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) )
                {
                // InternalKim.g:9842:10: (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) )
                // InternalKim.g:9843:11: otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) )
                {
                otherlv_28=(Token)match(input,155,FOLLOW_133); if (state.failed) return ;
                // InternalKim.g:9847:11: ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) )
                // InternalKim.g:9848:12: (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH )
                {
                // InternalKim.g:9848:12: (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH )
                // InternalKim.g:9849:13: lv_definedAuthority_29_0= RULE_UPPERCASE_PATH
                {
                lv_definedAuthority_29_0=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return ;

                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:9867:10: ( (lv_upperConcept_30_0= ruleConcept ) )
                {
                // InternalKim.g:9867:10: ( (lv_upperConcept_30_0= ruleConcept ) )
                // InternalKim.g:9868:11: (lv_upperConcept_30_0= ruleConcept )
                {
                // InternalKim.g:9868:11: (lv_upperConcept_30_0= ruleConcept )
                // InternalKim.g:9869:12: lv_upperConcept_30_0= ruleConcept
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getUpperConceptConceptParserRuleCall_3_3_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_upperConcept_30_0=ruleConcept();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred365_InternalKim

    // $ANTLR start synpred367_InternalKim
    public final void synpred367_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_31=null;
        Token otherlv_33=null;
        EObject lv_requirements_32_0 = null;

        EObject lv_requirements_34_0 = null;


        // InternalKim.g:9893:4: ( ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) )
        // InternalKim.g:9893:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
        {
        // InternalKim.g:9893:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
        // InternalKim.g:9894:5: {...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred367_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4)");
        }
        // InternalKim.g:9894:117: ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
        // InternalKim.g:9895:6: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4);
        // InternalKim.g:9898:9: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
        // InternalKim.g:9898:10: {...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred367_InternalKim", "true");
        }
        // InternalKim.g:9898:19: (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
        // InternalKim.g:9898:20: otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
        {
        otherlv_31=(Token)match(input,156,FOLLOW_134); if (state.failed) return ;
        // InternalKim.g:9902:9: ( (lv_requirements_32_0= ruleIdentityRequirement ) )
        // InternalKim.g:9903:10: (lv_requirements_32_0= ruleIdentityRequirement )
        {
        // InternalKim.g:9903:10: (lv_requirements_32_0= ruleIdentityRequirement )
        // InternalKim.g:9904:11: lv_requirements_32_0= ruleIdentityRequirement
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_1_0());
          										
        }
        pushFollow(FOLLOW_35);
        lv_requirements_32_0=ruleIdentityRequirement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:9921:9: (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
        loop476:
        do {
            int alt476=2;
            int LA476_0 = input.LA(1);

            if ( (LA476_0==25) ) {
                alt476=1;
            }


            switch (alt476) {
        	case 1 :
        	    // InternalKim.g:9922:10: otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) )
        	    {
        	    otherlv_33=(Token)match(input,25,FOLLOW_134); if (state.failed) return ;
        	    // InternalKim.g:9926:10: ( (lv_requirements_34_0= ruleIdentityRequirement ) )
        	    // InternalKim.g:9927:11: (lv_requirements_34_0= ruleIdentityRequirement )
        	    {
        	    // InternalKim.g:9927:11: (lv_requirements_34_0= ruleIdentityRequirement )
        	    // InternalKim.g:9928:12: lv_requirements_34_0= ruleIdentityRequirement
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_35);
        	    lv_requirements_34_0=ruleIdentityRequirement();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop476;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred367_InternalKim

    // $ANTLR start synpred368_InternalKim
    public final void synpred368_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_35=null;
        EObject lv_describedQuality_36_0 = null;


        // InternalKim.g:9952:4: ( ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9952:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9952:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9953:5: {...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred368_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5)");
        }
        // InternalKim.g:9953:117: ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9954:6: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5);
        // InternalKim.g:9957:9: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:9957:10: {...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred368_InternalKim", "true");
        }
        // InternalKim.g:9957:19: (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:9957:20: otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
        {
        otherlv_35=(Token)match(input,157,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:9961:9: ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
        // InternalKim.g:9962:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9962:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
        // InternalKim.g:9963:11: lv_describedQuality_36_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedQualityConceptDeclarationParserRuleCall_3_5_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedQuality_36_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred368_InternalKim

    // $ANTLR start synpred369_InternalKim
    public final void synpred369_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_37=null;
        Token otherlv_38=null;
        EObject lv_describedProportionality_39_0 = null;


        // InternalKim.g:9986:4: ( ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9986:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9986:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9987:5: {...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred369_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6)");
        }
        // InternalKim.g:9987:117: ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9988:6: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6);
        // InternalKim.g:9991:9: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:9991:10: {...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred369_InternalKim", "true");
        }
        // InternalKim.g:9991:19: (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:9991:20: otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
        {
        otherlv_37=(Token)match(input,158,FOLLOW_72); if (state.failed) return ;
        otherlv_38=(Token)match(input,40,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:9999:9: ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
        // InternalKim.g:10000:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
        {
        // InternalKim.g:10000:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
        // InternalKim.g:10001:11: lv_describedProportionality_39_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedProportionalityConceptDeclarationParserRuleCall_3_6_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedProportionality_39_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred369_InternalKim

    // $ANTLR start synpred370_InternalKim
    public final void synpred370_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_40=null;
        Token otherlv_41=null;
        EObject lv_describedInverseProportionalityQuality_42_0 = null;


        // InternalKim.g:10024:4: ( ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:10024:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:10024:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:10025:5: {...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred370_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7)");
        }
        // InternalKim.g:10025:117: ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:10026:6: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7);
        // InternalKim.g:10029:9: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:10029:10: {...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred370_InternalKim", "true");
        }
        // InternalKim.g:10029:19: (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:10029:20: otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
        {
        otherlv_40=(Token)match(input,159,FOLLOW_72); if (state.failed) return ;
        otherlv_41=(Token)match(input,40,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:10037:9: ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
        // InternalKim.g:10038:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
        {
        // InternalKim.g:10038:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
        // InternalKim.g:10039:11: lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedInverseProportionalityQualityConceptDeclarationParserRuleCall_3_7_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedInverseProportionalityQuality_42_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred370_InternalKim

    // $ANTLR start synpred371_InternalKim
    public final void synpred371_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_43=null;
        EObject lv_describedNonzeroQuality_44_0 = null;


        // InternalKim.g:10062:4: ( ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:10062:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:10062:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:10063:5: {...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred371_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8)");
        }
        // InternalKim.g:10063:117: ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:10064:6: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8);
        // InternalKim.g:10067:9: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:10067:10: {...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred371_InternalKim", "true");
        }
        // InternalKim.g:10067:19: (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:10067:20: otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
        {
        otherlv_43=(Token)match(input,160,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:10071:9: ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
        // InternalKim.g:10072:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
        {
        // InternalKim.g:10072:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
        // InternalKim.g:10073:11: lv_describedNonzeroQuality_44_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedNonzeroQualityConceptDeclarationParserRuleCall_3_8_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedNonzeroQuality_44_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred371_InternalKim

    // $ANTLR start synpred372_InternalKim
    public final void synpred372_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_45=null;
        EObject lv_classifiesQuality_46_0 = null;


        // InternalKim.g:10096:4: ( ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:10096:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:10096:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:10097:5: {...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred372_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9)");
        }
        // InternalKim.g:10097:117: ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:10098:6: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9);
        // InternalKim.g:10101:9: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:10101:10: {...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred372_InternalKim", "true");
        }
        // InternalKim.g:10101:19: (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:10101:20: otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
        {
        otherlv_45=(Token)match(input,161,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:10105:9: ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
        // InternalKim.g:10106:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
        {
        // InternalKim.g:10106:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
        // InternalKim.g:10107:11: lv_classifiesQuality_46_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getClassifiesQualityConceptDeclarationParserRuleCall_3_9_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_classifiesQuality_46_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred372_InternalKim

    // $ANTLR start synpred373_InternalKim
    public final void synpred373_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_47=null;
        EObject lv_discretizesQuality_48_0 = null;


        // InternalKim.g:10130:4: ( ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:10130:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:10130:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:10131:5: {...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred373_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10)");
        }
        // InternalKim.g:10131:118: ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:10132:6: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10);
        // InternalKim.g:10135:9: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:10135:10: {...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred373_InternalKim", "true");
        }
        // InternalKim.g:10135:19: (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:10135:20: otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
        {
        otherlv_47=(Token)match(input,162,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:10139:9: ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
        // InternalKim.g:10140:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
        {
        // InternalKim.g:10140:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
        // InternalKim.g:10141:11: lv_discretizesQuality_48_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDiscretizesQualityConceptDeclarationParserRuleCall_3_10_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_discretizesQuality_48_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred373_InternalKim

    // $ANTLR start synpred375_InternalKim
    public final void synpred375_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_49=null;
        Token otherlv_51=null;
        EObject lv_actuallyInheritedTraits_50_0 = null;

        EObject lv_actuallyInheritedTraits_52_0 = null;


        // InternalKim.g:10164:4: ( ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:10164:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:10164:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:10165:5: {...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred375_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11)");
        }
        // InternalKim.g:10165:118: ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:10166:6: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11);
        // InternalKim.g:10169:9: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:10169:10: {...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred375_InternalKim", "true");
        }
        // InternalKim.g:10169:19: (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:10169:20: otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_49=(Token)match(input,163,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:10173:9: ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) )
        // InternalKim.g:10174:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
        {
        // InternalKim.g:10174:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
        // InternalKim.g:10175:11: lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_1_0());
          										
        }
        pushFollow(FOLLOW_35);
        lv_actuallyInheritedTraits_50_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10192:9: (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
        loop477:
        do {
            int alt477=2;
            int LA477_0 = input.LA(1);

            if ( (LA477_0==25) ) {
                alt477=1;
            }


            switch (alt477) {
        	case 1 :
        	    // InternalKim.g:10193:10: otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_51=(Token)match(input,25,FOLLOW_21); if (state.failed) return ;
        	    // InternalKim.g:10197:10: ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:10198:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:10198:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
        	    // InternalKim.g:10199:12: lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_35);
        	    lv_actuallyInheritedTraits_52_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop477;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred375_InternalKim

    // $ANTLR start synpred380_InternalKim
    public final void synpred380_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token otherlv_60=null;
        Token otherlv_62=null;
        Token otherlv_64=null;
        EObject lv_roles_55_0 = null;

        EObject lv_roles_57_0 = null;

        EObject lv_targetObservables_59_0 = null;

        EObject lv_targetObservables_61_0 = null;

        EObject lv_restrictedObservables_63_0 = null;

        EObject lv_restrictedObservables_65_0 = null;


        // InternalKim.g:10223:4: ( ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:10223:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        // InternalKim.g:10223:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:10224:5: {...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred380_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12)");
        }
        // InternalKim.g:10224:118: ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:10225:6: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12);
        // InternalKim.g:10228:9: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:10228:10: {...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred380_InternalKim", "true");
        }
        // InternalKim.g:10228:19: (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:10228:20: otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
        {
        otherlv_53=(Token)match(input,164,FOLLOW_135); if (state.failed) return ;
        otherlv_54=(Token)match(input,165,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:10236:9: ( (lv_roles_55_0= ruleConceptDeclaration ) )
        // InternalKim.g:10237:10: (lv_roles_55_0= ruleConceptDeclaration )
        {
        // InternalKim.g:10237:10: (lv_roles_55_0= ruleConceptDeclaration )
        // InternalKim.g:10238:11: lv_roles_55_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_2_0());
          										
        }
        pushFollow(FOLLOW_136);
        lv_roles_55_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10255:9: (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )*
        loop479:
        do {
            int alt479=2;
            int LA479_0 = input.LA(1);

            if ( (LA479_0==25) ) {
                alt479=1;
            }


            switch (alt479) {
        	case 1 :
        	    // InternalKim.g:10256:10: otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_56=(Token)match(input,25,FOLLOW_21); if (state.failed) return ;
        	    // InternalKim.g:10260:10: ( (lv_roles_57_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:10261:11: (lv_roles_57_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:10261:11: (lv_roles_57_0= ruleConceptDeclaration )
        	    // InternalKim.g:10262:12: lv_roles_57_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_136);
        	    lv_roles_57_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop479;
            }
        } while (true);

        // InternalKim.g:10280:9: (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )?
        int alt481=2;
        int LA481_0 = input.LA(1);

        if ( (LA481_0==166) ) {
            alt481=1;
        }
        switch (alt481) {
            case 1 :
                // InternalKim.g:10281:10: otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
                {
                otherlv_58=(Token)match(input,166,FOLLOW_21); if (state.failed) return ;
                // InternalKim.g:10285:10: ( (lv_targetObservables_59_0= ruleConceptDeclaration ) )
                // InternalKim.g:10286:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
                {
                // InternalKim.g:10286:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
                // InternalKim.g:10287:12: lv_targetObservables_59_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_1_0());
                  											
                }
                pushFollow(FOLLOW_137);
                lv_targetObservables_59_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:10304:10: (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
                loop480:
                do {
                    int alt480=2;
                    int LA480_0 = input.LA(1);

                    if ( (LA480_0==25) ) {
                        alt480=1;
                    }


                    switch (alt480) {
                	case 1 :
                	    // InternalKim.g:10305:11: otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_60=(Token)match(input,25,FOLLOW_21); if (state.failed) return ;
                	    // InternalKim.g:10309:11: ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:10310:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:10310:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
                	    // InternalKim.g:10311:13: lv_targetObservables_61_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_137);
                	    lv_targetObservables_61_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop480;
                    }
                } while (true);


                }
                break;

        }

        // InternalKim.g:10330:9: (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:10331:10: otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_62=(Token)match(input,48,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:10335:10: ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) )
        // InternalKim.g:10336:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
        {
        // InternalKim.g:10336:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
        // InternalKim.g:10337:12: lv_restrictedObservables_63_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_1_0());
          											
        }
        pushFollow(FOLLOW_35);
        lv_restrictedObservables_63_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10354:10: (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
        loop482:
        do {
            int alt482=2;
            int LA482_0 = input.LA(1);

            if ( (LA482_0==25) ) {
                alt482=1;
            }


            switch (alt482) {
        	case 1 :
        	    // InternalKim.g:10355:11: otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_64=(Token)match(input,25,FOLLOW_21); if (state.failed) return ;
        	    // InternalKim.g:10359:11: ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:10360:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:10360:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
        	    // InternalKim.g:10361:13: lv_restrictedObservables_65_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_2_1_0());
        	      												
        	    }
        	    pushFollow(FOLLOW_35);
        	    lv_restrictedObservables_65_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop482;
            }
        } while (true);


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred380_InternalKim

    // $ANTLR start synpred384_InternalKim
    public final void synpred384_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_66=null;
        Token otherlv_68=null;
        Token otherlv_70=null;
        Token otherlv_72=null;
        EObject lv_conferredTraits_67_0 = null;

        EObject lv_conferredTraits_69_0 = null;

        EObject lv_conferredTargets_71_0 = null;

        EObject lv_conferredTargets_73_0 = null;


        // InternalKim.g:10386:4: ( ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) )
        // InternalKim.g:10386:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
        {
        // InternalKim.g:10386:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
        // InternalKim.g:10387:5: {...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred384_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13)");
        }
        // InternalKim.g:10387:118: ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
        // InternalKim.g:10388:6: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13);
        // InternalKim.g:10391:9: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
        // InternalKim.g:10391:10: {...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred384_InternalKim", "true");
        }
        // InternalKim.g:10391:19: (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
        // InternalKim.g:10391:20: otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
        {
        otherlv_66=(Token)match(input,167,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:10395:9: ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) )
        // InternalKim.g:10396:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
        {
        // InternalKim.g:10396:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
        // InternalKim.g:10397:11: lv_conferredTraits_67_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_1_0());
          										
        }
        pushFollow(FOLLOW_194);
        lv_conferredTraits_67_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10414:9: (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )*
        loop484:
        do {
            int alt484=2;
            int LA484_0 = input.LA(1);

            if ( (LA484_0==25) ) {
                alt484=1;
            }


            switch (alt484) {
        	case 1 :
        	    // InternalKim.g:10415:10: otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_68=(Token)match(input,25,FOLLOW_21); if (state.failed) return ;
        	    // InternalKim.g:10419:10: ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:10420:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:10420:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
        	    // InternalKim.g:10421:12: lv_conferredTraits_69_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_194);
        	    lv_conferredTraits_69_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop484;
            }
        } while (true);

        // InternalKim.g:10439:9: (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
        int alt486=2;
        int LA486_0 = input.LA(1);

        if ( (LA486_0==34) ) {
            alt486=1;
        }
        switch (alt486) {
            case 1 :
                // InternalKim.g:10440:10: otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
                {
                otherlv_70=(Token)match(input,34,FOLLOW_21); if (state.failed) return ;
                // InternalKim.g:10444:10: ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) )
                // InternalKim.g:10445:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
                {
                // InternalKim.g:10445:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
                // InternalKim.g:10446:12: lv_conferredTargets_71_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_1_0());
                  											
                }
                pushFollow(FOLLOW_35);
                lv_conferredTargets_71_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:10463:10: (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
                loop485:
                do {
                    int alt485=2;
                    int LA485_0 = input.LA(1);

                    if ( (LA485_0==25) ) {
                        alt485=1;
                    }


                    switch (alt485) {
                	case 1 :
                	    // InternalKim.g:10464:11: otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_72=(Token)match(input,25,FOLLOW_21); if (state.failed) return ;
                	    // InternalKim.g:10468:11: ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:10469:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:10469:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
                	    // InternalKim.g:10470:13: lv_conferredTargets_73_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_35);
                	    lv_conferredTargets_73_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop485;
                    }
                } while (true);


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred384_InternalKim

    // $ANTLR start synpred387_InternalKim
    public final void synpred387_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_74=null;
        Token lv_constituent_75_0=null;
        Token lv_constitutes_76_0=null;
        Token lv_partOf_77_0=null;
        EObject lv_whole_78_0 = null;


        // InternalKim.g:10495:4: ( ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:10495:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:10495:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:10496:5: {...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred387_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14)");
        }
        // InternalKim.g:10496:118: ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:10497:6: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14);
        // InternalKim.g:10500:9: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:10500:10: {...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred387_InternalKim", "true");
        }
        // InternalKim.g:10500:19: ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:10500:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:10500:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) )
        int alt487=3;
        switch ( input.LA(1) ) {
        case 168:
            {
            alt487=1;
            }
            break;
        case 169:
            {
            alt487=2;
            }
            break;
        case 170:
            {
            alt487=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 487, 0, input);

            throw nvae;
        }

        switch (alt487) {
            case 1 :
                // InternalKim.g:10501:10: otherlv_74= 'part'
                {
                otherlv_74=(Token)match(input,168,FOLLOW_112); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:10506:10: ( (lv_constituent_75_0= 'constituent' ) )
                {
                // InternalKim.g:10506:10: ( (lv_constituent_75_0= 'constituent' ) )
                // InternalKim.g:10507:11: (lv_constituent_75_0= 'constituent' )
                {
                // InternalKim.g:10507:11: (lv_constituent_75_0= 'constituent' )
                // InternalKim.g:10508:12: lv_constituent_75_0= 'constituent'
                {
                lv_constituent_75_0=(Token)match(input,169,FOLLOW_112); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalKim.g:10521:10: ( (lv_constitutes_76_0= 'consists' ) )
                {
                // InternalKim.g:10521:10: ( (lv_constitutes_76_0= 'consists' ) )
                // InternalKim.g:10522:11: (lv_constitutes_76_0= 'consists' )
                {
                // InternalKim.g:10522:11: (lv_constitutes_76_0= 'consists' )
                // InternalKim.g:10523:12: lv_constitutes_76_0= 'consists'
                {
                lv_constitutes_76_0=(Token)match(input,170,FOLLOW_112); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:10536:9: ( (lv_partOf_77_0= 'of' ) )
        // InternalKim.g:10537:10: (lv_partOf_77_0= 'of' )
        {
        // InternalKim.g:10537:10: (lv_partOf_77_0= 'of' )
        // InternalKim.g:10538:11: lv_partOf_77_0= 'of'
        {
        lv_partOf_77_0=(Token)match(input,103,FOLLOW_21); if (state.failed) return ;

        }


        }

        // InternalKim.g:10550:9: ( (lv_whole_78_0= ruleConceptDeclaration ) )
        // InternalKim.g:10551:10: (lv_whole_78_0= ruleConceptDeclaration )
        {
        // InternalKim.g:10551:10: (lv_whole_78_0= ruleConceptDeclaration )
        // InternalKim.g:10552:11: lv_whole_78_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getWholeConceptDeclarationParserRuleCall_3_14_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_whole_78_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred387_InternalKim

    // $ANTLR start synpred389_InternalKim
    public final void synpred389_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_79=null;
        Token otherlv_81=null;
        EObject lv_creates_80_0 = null;

        EObject lv_creates_82_0 = null;


        // InternalKim.g:10575:4: ( ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:10575:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:10575:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:10576:5: {...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred389_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15)");
        }
        // InternalKim.g:10576:118: ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:10577:6: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15);
        // InternalKim.g:10580:9: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:10580:10: {...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred389_InternalKim", "true");
        }
        // InternalKim.g:10580:19: (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:10580:20: otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_79=(Token)match(input,171,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:10584:9: ( (lv_creates_80_0= ruleConceptDeclaration ) )
        // InternalKim.g:10585:10: (lv_creates_80_0= ruleConceptDeclaration )
        {
        // InternalKim.g:10585:10: (lv_creates_80_0= ruleConceptDeclaration )
        // InternalKim.g:10586:11: lv_creates_80_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_1_0());
          										
        }
        pushFollow(FOLLOW_35);
        lv_creates_80_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10603:9: (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
        loop488:
        do {
            int alt488=2;
            int LA488_0 = input.LA(1);

            if ( (LA488_0==25) ) {
                alt488=1;
            }


            switch (alt488) {
        	case 1 :
        	    // InternalKim.g:10604:10: otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_81=(Token)match(input,25,FOLLOW_21); if (state.failed) return ;
        	    // InternalKim.g:10608:10: ( (lv_creates_82_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:10609:11: (lv_creates_82_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:10609:11: (lv_creates_82_0= ruleConceptDeclaration )
        	    // InternalKim.g:10610:12: lv_creates_82_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_35);
        	    lv_creates_82_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop488;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred389_InternalKim

    // $ANTLR start synpred391_InternalKim
    public final void synpred391_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_83=null;
        Token otherlv_84=null;
        Token otherlv_86=null;
        EObject lv_traitTargets_85_0 = null;

        EObject lv_traitTargets_87_0 = null;


        // InternalKim.g:10634:4: ( ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) )
        // InternalKim.g:10634:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
        {
        // InternalKim.g:10634:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
        // InternalKim.g:10635:5: {...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred391_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16)");
        }
        // InternalKim.g:10635:118: ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
        // InternalKim.g:10636:6: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16);
        // InternalKim.g:10639:9: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
        // InternalKim.g:10639:10: {...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred391_InternalKim", "true");
        }
        // InternalKim.g:10639:19: (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
        // InternalKim.g:10639:20: otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
        {
        otherlv_83=(Token)match(input,172,FOLLOW_23); if (state.failed) return ;
        otherlv_84=(Token)match(input,34,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:10647:9: ( (lv_traitTargets_85_0= ruleApplicableTarget ) )
        // InternalKim.g:10648:10: (lv_traitTargets_85_0= ruleApplicableTarget )
        {
        // InternalKim.g:10648:10: (lv_traitTargets_85_0= ruleApplicableTarget )
        // InternalKim.g:10649:11: lv_traitTargets_85_0= ruleApplicableTarget
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_2_0());
          										
        }
        pushFollow(FOLLOW_35);
        lv_traitTargets_85_0=ruleApplicableTarget();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10666:9: (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
        loop489:
        do {
            int alt489=2;
            int LA489_0 = input.LA(1);

            if ( (LA489_0==25) ) {
                alt489=1;
            }


            switch (alt489) {
        	case 1 :
        	    // InternalKim.g:10667:10: otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
        	    {
        	    otherlv_86=(Token)match(input,25,FOLLOW_21); if (state.failed) return ;
        	    // InternalKim.g:10671:10: ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
        	    // InternalKim.g:10672:11: (lv_traitTargets_87_0= ruleApplicableTarget )
        	    {
        	    // InternalKim.g:10672:11: (lv_traitTargets_87_0= ruleApplicableTarget )
        	    // InternalKim.g:10673:12: lv_traitTargets_87_0= ruleApplicableTarget
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_35);
        	    lv_traitTargets_87_0=ruleApplicableTarget();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop489;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred391_InternalKim

    // $ANTLR start synpred395_InternalKim
    public final void synpred395_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_88=null;
        Token otherlv_90=null;
        Token otherlv_92=null;
        Token otherlv_94=null;
        EObject lv_domains_89_0 = null;

        EObject lv_ranges_91_0 = null;

        EObject lv_domains_93_0 = null;

        EObject lv_ranges_95_0 = null;


        // InternalKim.g:10697:4: ( ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:10697:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:10697:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:10698:5: {...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred395_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17)");
        }
        // InternalKim.g:10698:118: ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:10699:6: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17);
        // InternalKim.g:10702:9: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
        // InternalKim.g:10702:10: {...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred395_InternalKim", "true");
        }
        // InternalKim.g:10702:19: (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
        // InternalKim.g:10702:20: otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
        {
        otherlv_88=(Token)match(input,173,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:10706:9: ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:10707:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:10707:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:10708:11: lv_domains_89_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_1_0());
          										
        }
        pushFollow(FOLLOW_23);
        lv_domains_89_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10725:9: ( ( 'to' )=>otherlv_90= 'to' )
        // InternalKim.g:10726:10: ( 'to' )=>otherlv_90= 'to'
        {
        otherlv_90=(Token)match(input,34,FOLLOW_21); if (state.failed) return ;

        }

        // InternalKim.g:10732:9: ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:10733:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:10733:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:10734:11: lv_ranges_91_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_3_0());
          										
        }
        pushFollow(FOLLOW_35);
        lv_ranges_91_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10751:9: (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
        loop490:
        do {
            int alt490=2;
            int LA490_0 = input.LA(1);

            if ( (LA490_0==25) ) {
                alt490=1;
            }


            switch (alt490) {
        	case 1 :
        	    // InternalKim.g:10752:10: otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_92=(Token)match(input,25,FOLLOW_21); if (state.failed) return ;
        	    // InternalKim.g:10756:10: ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:10757:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:10757:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:10758:12: lv_domains_93_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_4_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_23);
        	    lv_domains_93_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    // InternalKim.g:10775:10: ( ( 'to' )=>otherlv_94= 'to' )
        	    // InternalKim.g:10776:11: ( 'to' )=>otherlv_94= 'to'
        	    {
        	    otherlv_94=(Token)match(input,34,FOLLOW_21); if (state.failed) return ;

        	    }

        	    // InternalKim.g:10782:10: ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:10783:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:10783:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:10784:12: lv_ranges_95_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_4_3_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_35);
        	    lv_ranges_95_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop490;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred395_InternalKim

    // $ANTLR start synpred396_InternalKim
    public final void synpred396_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_96=null;
        Token otherlv_97=null;
        EObject lv_inverse_98_0 = null;


        // InternalKim.g:10808:4: ( ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:10808:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:10808:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:10809:5: {...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred396_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18)");
        }
        // InternalKim.g:10809:118: ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:10810:6: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18);
        // InternalKim.g:10813:9: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:10813:10: {...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred396_InternalKim", "true");
        }
        // InternalKim.g:10813:19: (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:10813:20: otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) )
        {
        otherlv_96=(Token)match(input,174,FOLLOW_112); if (state.failed) return ;
        otherlv_97=(Token)match(input,103,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:10821:9: ( (lv_inverse_98_0= ruleConceptDeclaration ) )
        // InternalKim.g:10822:10: (lv_inverse_98_0= ruleConceptDeclaration )
        {
        // InternalKim.g:10822:10: (lv_inverse_98_0= ruleConceptDeclaration )
        // InternalKim.g:10823:11: lv_inverse_98_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getInverseConceptDeclarationParserRuleCall_3_18_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_inverse_98_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred396_InternalKim

    // $ANTLR start synpred398_InternalKim
    public final void synpred398_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_99=null;
        Token otherlv_101=null;
        EObject lv_qualitiesAffected_100_0 = null;

        EObject lv_qualitiesAffected_102_0 = null;


        // InternalKim.g:10846:4: ( ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:10846:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:10846:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:10847:5: {...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred398_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19)");
        }
        // InternalKim.g:10847:118: ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:10848:6: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19);
        // InternalKim.g:10851:9: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:10851:10: {...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred398_InternalKim", "true");
        }
        // InternalKim.g:10851:19: (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:10851:20: otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_99=(Token)match(input,175,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:10855:9: ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) )
        // InternalKim.g:10856:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
        {
        // InternalKim.g:10856:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
        // InternalKim.g:10857:11: lv_qualitiesAffected_100_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_1_0());
          										
        }
        pushFollow(FOLLOW_35);
        lv_qualitiesAffected_100_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10874:9: (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
        loop491:
        do {
            int alt491=2;
            int LA491_0 = input.LA(1);

            if ( (LA491_0==25) ) {
                alt491=1;
            }


            switch (alt491) {
        	case 1 :
        	    // InternalKim.g:10875:10: otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_101=(Token)match(input,25,FOLLOW_21); if (state.failed) return ;
        	    // InternalKim.g:10879:10: ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:10880:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:10880:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
        	    // InternalKim.g:10881:12: lv_qualitiesAffected_102_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_35);
        	    lv_qualitiesAffected_102_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop491;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred398_InternalKim

    // $ANTLR start synpred401_InternalKim
    public final void synpred401_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_103=null;
        Token lv_disjoint_104_0=null;
        Token otherlv_105=null;
        Token otherlv_107=null;
        EObject lv_children_106_0 = null;

        EObject lv_children_108_0 = null;


        // InternalKim.g:10905:4: ( ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) )
        // InternalKim.g:10905:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
        {
        // InternalKim.g:10905:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
        // InternalKim.g:10906:5: {...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred401_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20)");
        }
        // InternalKim.g:10906:118: ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
        // InternalKim.g:10907:6: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20);
        // InternalKim.g:10910:9: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
        // InternalKim.g:10910:10: {...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred401_InternalKim", "true");
        }
        // InternalKim.g:10910:19: (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
        // InternalKim.g:10910:20: otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
        {
        otherlv_103=(Token)match(input,164,FOLLOW_139); if (state.failed) return ;
        // InternalKim.g:10914:9: ( (lv_disjoint_104_0= 'disjoint' ) )?
        int alt492=2;
        int LA492_0 = input.LA(1);

        if ( (LA492_0==82) ) {
            alt492=1;
        }
        switch (alt492) {
            case 1 :
                // InternalKim.g:10915:10: (lv_disjoint_104_0= 'disjoint' )
                {
                // InternalKim.g:10915:10: (lv_disjoint_104_0= 'disjoint' )
                // InternalKim.g:10916:11: lv_disjoint_104_0= 'disjoint'
                {
                lv_disjoint_104_0=(Token)match(input,82,FOLLOW_140); if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_105=(Token)match(input,176,FOLLOW_141); if (state.failed) return ;
        // InternalKim.g:10932:9: ( (lv_children_106_0= ruleChildConcept ) )
        // InternalKim.g:10933:10: (lv_children_106_0= ruleChildConcept )
        {
        // InternalKim.g:10933:10: (lv_children_106_0= ruleChildConcept )
        // InternalKim.g:10934:11: lv_children_106_0= ruleChildConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_3_0());
          										
        }
        pushFollow(FOLLOW_35);
        lv_children_106_0=ruleChildConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10951:9: (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
        loop493:
        do {
            int alt493=2;
            int LA493_0 = input.LA(1);

            if ( (LA493_0==25) ) {
                alt493=1;
            }


            switch (alt493) {
        	case 1 :
        	    // InternalKim.g:10952:10: otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) )
        	    {
        	    otherlv_107=(Token)match(input,25,FOLLOW_141); if (state.failed) return ;
        	    // InternalKim.g:10956:10: ( (lv_children_108_0= ruleChildConcept ) )
        	    // InternalKim.g:10957:11: (lv_children_108_0= ruleChildConcept )
        	    {
        	    // InternalKim.g:10957:11: (lv_children_108_0= ruleChildConcept )
        	    // InternalKim.g:10958:12: lv_children_108_0= ruleChildConcept
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_4_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_35);
        	    lv_children_108_0=ruleChildConcept();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop493;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred401_InternalKim

    // $ANTLR start synpred402_InternalKim
    public final void synpred402_InternalKim_fragment() throws RecognitionException {   
        EObject lv_restrictions_109_0 = null;


        // InternalKim.g:10987:10: ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )
        // InternalKim.g:10987:10: {...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred402_InternalKim", "true");
        }
        // InternalKim.g:10987:19: ( (lv_restrictions_109_0= ruleRestrictionStatement ) )
        // InternalKim.g:10987:20: (lv_restrictions_109_0= ruleRestrictionStatement )
        {
        // InternalKim.g:10987:20: (lv_restrictions_109_0= ruleRestrictionStatement )
        // InternalKim.g:10988:10: lv_restrictions_109_0= ruleRestrictionStatement
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictionsRestrictionStatementParserRuleCall_3_21_0());
          									
        }
        pushFollow(FOLLOW_2);
        lv_restrictions_109_0=ruleRestrictionStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred402_InternalKim

    // $ANTLR start synpred403_InternalKim
    public final void synpred403_InternalKim_fragment() throws RecognitionException {   
        EObject lv_restrictions_109_0 = null;


        // InternalKim.g:10982:4: ( ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) )
        // InternalKim.g:10982:4: ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) )
        {
        // InternalKim.g:10982:4: ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) )
        // InternalKim.g:10983:5: {...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred403_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21)");
        }
        // InternalKim.g:10983:118: ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ )
        // InternalKim.g:10984:6: ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21);
        // InternalKim.g:10987:9: ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+
        int cnt494=0;
        loop494:
        do {
            int alt494=2;
            int LA494_0 = input.LA(1);

            if ( (LA494_0==182) && ((true))) {
                alt494=1;
            }
            else if ( (LA494_0==164) && ((true))) {
                alt494=1;
            }
            else if ( (LA494_0==183) && ((true))) {
                alt494=1;
            }
            else if ( (LA494_0==184) && ((true))) {
                alt494=1;
            }


            switch (alt494) {
        	case 1 :
        	    // InternalKim.g:10987:10: {...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred403_InternalKim", "true");
        	    }
        	    // InternalKim.g:10987:19: ( (lv_restrictions_109_0= ruleRestrictionStatement ) )
        	    // InternalKim.g:10987:20: (lv_restrictions_109_0= ruleRestrictionStatement )
        	    {
        	    // InternalKim.g:10987:20: (lv_restrictions_109_0= ruleRestrictionStatement )
        	    // InternalKim.g:10988:10: lv_restrictions_109_0= ruleRestrictionStatement
        	    {
        	    if ( state.backtracking==0 ) {

        	      										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictionsRestrictionStatementParserRuleCall_3_21_0());
        	      									
        	    }
        	    pushFollow(FOLLOW_195);
        	    lv_restrictions_109_0=ruleRestrictionStatement();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt494 >= 1 ) break loop494;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(494, input);
                    throw eee;
            }
            cnt494++;
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred403_InternalKim

    // $ANTLR start synpred404_InternalKim
    public final void synpred404_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_110=null;
        Token otherlv_111=null;
        EObject lv_metadata_112_0 = null;


        // InternalKim.g:11010:4: ( ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )
        // InternalKim.g:11010:4: ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) )
        {
        // InternalKim.g:11010:4: ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) )
        // InternalKim.g:11011:5: {...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred404_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22)");
        }
        // InternalKim.g:11011:118: ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) )
        // InternalKim.g:11012:6: ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22);
        // InternalKim.g:11015:9: ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) )
        // InternalKim.g:11015:10: {...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred404_InternalKim", "true");
        }
        // InternalKim.g:11015:19: (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) )
        // InternalKim.g:11015:20: otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) )
        {
        otherlv_110=(Token)match(input,40,FOLLOW_31); if (state.failed) return ;
        otherlv_111=(Token)match(input,41,FOLLOW_32); if (state.failed) return ;
        // InternalKim.g:11023:9: ( (lv_metadata_112_0= ruleMetadata ) )
        // InternalKim.g:11024:10: (lv_metadata_112_0= ruleMetadata )
        {
        // InternalKim.g:11024:10: (lv_metadata_112_0= ruleMetadata )
        // InternalKim.g:11025:11: lv_metadata_112_0= ruleMetadata
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getMetadataMetadataParserRuleCall_3_22_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_metadata_112_0=ruleMetadata();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred404_InternalKim

    // $ANTLR start synpred426_InternalKim
    public final void synpred426_InternalKim_fragment() throws RecognitionException {   
        Token lv_none_1_0=null;

        // InternalKim.g:11662:4: ( ( (lv_none_1_0= 'no' ) ) )
        // InternalKim.g:11662:4: ( (lv_none_1_0= 'no' ) )
        {
        // InternalKim.g:11662:4: ( (lv_none_1_0= 'no' ) )
        // InternalKim.g:11663:5: (lv_none_1_0= 'no' )
        {
        // InternalKim.g:11663:5: (lv_none_1_0= 'no' )
        // InternalKim.g:11664:6: lv_none_1_0= 'no'
        {
        lv_none_1_0=(Token)match(input,122,FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred426_InternalKim

    // $ANTLR start synpred454_InternalKim
    public final void synpred454_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_ids_2_1 = null;


        // InternalKim.g:12418:7: (lv_ids_2_1= rulePathName )
        // InternalKim.g:12418:7: lv_ids_2_1= rulePathName
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getMetadataAccess().getIdsPathNameParserRuleCall_2_0_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_ids_2_1=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred454_InternalKim

    // $ANTLR start synpred455_InternalKim
    public final void synpred455_InternalKim_fragment() throws RecognitionException {   
        Token lv_ids_2_2=null;

        // InternalKim.g:12434:7: (lv_ids_2_2= RULE_LOWERCASE_ID )
        // InternalKim.g:12434:7: lv_ids_2_2= RULE_LOWERCASE_ID
        {
        lv_ids_2_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred455_InternalKim

    // $ANTLR start synpred468_InternalKim
    public final void synpred468_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_name_0_1 = null;


        // InternalKim.g:12893:6: (lv_name_0_1= rulePathName )
        // InternalKim.g:12893:6: lv_name_0_1= rulePathName
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getKeyValuePairAccess().getNamePathNameParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_name_0_1=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred468_InternalKim

    // $ANTLR start synpred473_InternalKim
    public final void synpred473_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_0_0 = null;


        // InternalKim.g:13073:3: ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:13073:3: ( (lv_concept_0_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:13073:3: ( (lv_concept_0_0= ruleConceptDeclaration ) )
        // InternalKim.g:13074:4: (lv_concept_0_0= ruleConceptDeclaration )
        {
        // InternalKim.g:13074:4: (lv_concept_0_0= ruleConceptDeclaration )
        // InternalKim.g:13075:5: lv_concept_0_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getConceptConceptDeclarationParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_0_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred473_InternalKim

    // $ANTLR start synpred474_InternalKim
    public final void synpred474_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_1_0 = null;


        // InternalKim.g:13093:3: ( ( (lv_function_1_0= ruleFunction ) ) )
        // InternalKim.g:13093:3: ( (lv_function_1_0= ruleFunction ) )
        {
        // InternalKim.g:13093:3: ( (lv_function_1_0= ruleFunction ) )
        // InternalKim.g:13094:4: (lv_function_1_0= ruleFunction )
        {
        // InternalKim.g:13094:4: (lv_function_1_0= ruleFunction )
        // InternalKim.g:13095:5: lv_function_1_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getFunctionFunctionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_1_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred474_InternalKim

    // $ANTLR start synpred477_InternalKim
    public final void synpred477_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_id_4_1 = null;


        // InternalKim.g:13155:6: (lv_id_4_1= rulePathName )
        // InternalKim.g:13155:6: lv_id_4_1= rulePathName
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getIdPathNameParserRuleCall_4_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_id_4_1=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred477_InternalKim

    // $ANTLR start synpred478_InternalKim
    public final void synpred478_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_4_2=null;

        // InternalKim.g:13171:6: (lv_id_4_2= RULE_LOWERCASE_ID )
        // InternalKim.g:13171:6: lv_id_4_2= RULE_LOWERCASE_ID
        {
        lv_id_4_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred478_InternalKim

    // $ANTLR start synpred480_InternalKim
    public final void synpred480_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_4_2=null;
        Token lv_id_4_3=null;
        Token lv_id_4_4=null;
        AntlrDatatypeRuleToken lv_id_4_1 = null;


        // InternalKim.g:13152:3: ( ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:13152:3: ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:13152:3: ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:13153:4: ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:13153:4: ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) )
        // InternalKim.g:13154:5: (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:13154:5: (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID )
        int alt512=4;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            int LA512_1 = input.LA(2);

            if ( (synpred477_InternalKim()) ) {
                alt512=1;
            }
            else if ( (synpred478_InternalKim()) ) {
                alt512=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 512, 1, input);

                throw nvae;
            }
            }
            break;
        case RULE_LOWERCASE_DASHID:
            {
            alt512=1;
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            alt512=3;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt512=4;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 512, 0, input);

            throw nvae;
        }

        switch (alt512) {
            case 1 :
                // InternalKim.g:13155:6: lv_id_4_1= rulePathName
                {
                pushFollow(FOLLOW_2);
                lv_id_4_1=rulePathName();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:13171:6: lv_id_4_2= RULE_LOWERCASE_ID
                {
                lv_id_4_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:13186:6: lv_id_4_3= RULE_UPPERCASE_ID
                {
                lv_id_4_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 4 :
                // InternalKim.g:13201:6: lv_id_4_4= RULE_CAMELCASE_ID
                {
                lv_id_4_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred480_InternalKim

    // $ANTLR start synpred481_InternalKim
    public final void synpred481_InternalKim_fragment() throws RecognitionException {   
        EObject lv_list_5_0 = null;


        // InternalKim.g:13219:3: ( ( (lv_list_5_0= ruleList ) ) )
        // InternalKim.g:13219:3: ( (lv_list_5_0= ruleList ) )
        {
        // InternalKim.g:13219:3: ( (lv_list_5_0= ruleList ) )
        // InternalKim.g:13220:4: (lv_list_5_0= ruleList )
        {
        // InternalKim.g:13220:4: (lv_list_5_0= ruleList )
        // InternalKim.g:13221:5: lv_list_5_0= ruleList
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getListListParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_list_5_0=ruleList();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred481_InternalKim

    // $ANTLR start synpred485_InternalKim
    public final void synpred485_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_1_0 = null;


        // InternalKim.g:13332:3: ( ( (lv_function_1_0= ruleFunction ) ) )
        // InternalKim.g:13332:3: ( (lv_function_1_0= ruleFunction ) )
        {
        // InternalKim.g:13332:3: ( (lv_function_1_0= ruleFunction ) )
        // InternalKim.g:13333:4: (lv_function_1_0= ruleFunction )
        {
        // InternalKim.g:13333:4: (lv_function_1_0= ruleFunction )
        // InternalKim.g:13334:5: lv_function_1_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueAccess().getFunctionFunctionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_1_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred485_InternalKim

    // $ANTLR start synpred489_InternalKim
    public final void synpred489_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_3_1=null;
        Token lv_id_3_2=null;
        Token lv_id_3_3=null;

        // InternalKim.g:13371:3: ( ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:13371:3: ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:13371:3: ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:13372:4: ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:13372:4: ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) )
        // InternalKim.g:13373:5: (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:13373:5: (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID )
        int alt513=3;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            alt513=1;
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            alt513=2;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt513=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 513, 0, input);

            throw nvae;
        }

        switch (alt513) {
            case 1 :
                // InternalKim.g:13374:6: lv_id_3_1= RULE_LOWERCASE_ID
                {
                lv_id_3_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:13389:6: lv_id_3_2= RULE_UPPERCASE_ID
                {
                lv_id_3_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:13404:6: lv_id_3_3= RULE_CAMELCASE_ID
                {
                lv_id_3_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred489_InternalKim

    // $ANTLR start synpred532_InternalKim
    public final void synpred532_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_by_3_0 = null;


        // InternalKim.g:14037:4: ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:14037:4: ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) )
        {
        // InternalKim.g:14037:4: ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:14038:5: {...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred532_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:14038:122: ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) )
        // InternalKim.g:14039:6: ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:14042:9: ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) )
        // InternalKim.g:14042:10: {...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred532_InternalKim", "true");
        }
        // InternalKim.g:14042:19: (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) )
        // InternalKim.g:14042:20: otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) )
        {
        otherlv_2=(Token)match(input,97,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:14046:9: ( (lv_by_3_0= ruleConcept ) )
        // InternalKim.g:14047:10: (lv_by_3_0= ruleConcept )
        {
        // InternalKim.g:14047:10: (lv_by_3_0= ruleConcept )
        // InternalKim.g:14048:11: lv_by_3_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getByConceptParserRuleCall_1_0_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_by_3_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred532_InternalKim

    // $ANTLR start synpred533_InternalKim
    public final void synpred533_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_downTo_6_0 = null;


        // InternalKim.g:14071:4: ( ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:14071:4: ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) )
        {
        // InternalKim.g:14071:4: ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:14072:5: {...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred533_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:14072:122: ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) )
        // InternalKim.g:14073:6: ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:14076:9: ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) )
        // InternalKim.g:14076:10: {...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred533_InternalKim", "true");
        }
        // InternalKim.g:14076:19: (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) )
        // InternalKim.g:14076:20: otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) )
        {
        otherlv_4=(Token)match(input,98,FOLLOW_23); if (state.failed) return ;
        otherlv_5=(Token)match(input,34,FOLLOW_21); if (state.failed) return ;
        // InternalKim.g:14084:9: ( (lv_downTo_6_0= ruleConcept ) )
        // InternalKim.g:14085:10: (lv_downTo_6_0= ruleConcept )
        {
        // InternalKim.g:14085:10: (lv_downTo_6_0= ruleConcept )
        // InternalKim.g:14086:11: lv_downTo_6_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getDownToConceptParserRuleCall_1_1_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_downTo_6_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred533_InternalKim

    // $ANTLR start synpred534_InternalKim
    public final void synpred534_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_accordingTo_9_0 = null;


        // InternalKim.g:14109:4: ( ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:14109:4: ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:14109:4: ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:14110:5: {...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred534_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2)");
        }
        // InternalKim.g:14110:122: ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:14111:6: ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2);
        // InternalKim.g:14114:9: ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) )
        // InternalKim.g:14114:10: {...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred534_InternalKim", "true");
        }
        // InternalKim.g:14114:19: (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) )
        // InternalKim.g:14114:20: otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) )
        {
        otherlv_7=(Token)match(input,33,FOLLOW_23); if (state.failed) return ;
        otherlv_8=(Token)match(input,34,FOLLOW_24); if (state.failed) return ;
        // InternalKim.g:14122:9: ( (lv_accordingTo_9_0= rulePropertyId ) )
        // InternalKim.g:14123:10: (lv_accordingTo_9_0= rulePropertyId )
        {
        // InternalKim.g:14123:10: (lv_accordingTo_9_0= rulePropertyId )
        // InternalKim.g:14124:11: lv_accordingTo_9_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_1_2_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_9_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred534_InternalKim

    // $ANTLR start synpred535_InternalKim
    public final void synpred535_InternalKim_fragment() throws RecognitionException {   
        EObject lv_unit_11_0 = null;


        // InternalKim.g:14158:11: ( ( (lv_unit_11_0= ruleUnit ) ) )
        // InternalKim.g:14158:11: ( (lv_unit_11_0= ruleUnit ) )
        {
        // InternalKim.g:14158:11: ( (lv_unit_11_0= ruleUnit ) )
        // InternalKim.g:14159:12: (lv_unit_11_0= ruleUnit )
        {
        // InternalKim.g:14159:12: (lv_unit_11_0= ruleUnit )
        // InternalKim.g:14160:13: lv_unit_11_0= ruleUnit
        {
        if ( state.backtracking==0 ) {

          													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_1_3_0_1_0_0());
          												
        }
        pushFollow(FOLLOW_2);
        lv_unit_11_0=ruleUnit();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred535_InternalKim

    // $ANTLR start synpred537_InternalKim
    public final void synpred537_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        Token otherlv_13=null;
        EObject lv_unit_11_0 = null;

        EObject lv_currency_12_0 = null;

        EObject lv_unit_14_0 = null;


        // InternalKim.g:14147:4: ( ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:14147:4: ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:14147:4: ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:14148:5: {...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred537_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3)");
        }
        // InternalKim.g:14148:122: ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:14149:6: ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3);
        // InternalKim.g:14152:9: ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) )
        // InternalKim.g:14152:10: {...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred537_InternalKim", "true");
        }
        // InternalKim.g:14152:19: ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) )
        int alt516=2;
        int LA516_0 = input.LA(1);

        if ( (LA516_0==48) ) {
            alt516=1;
        }
        else if ( (LA516_0==99) ) {
            alt516=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 516, 0, input);

            throw nvae;
        }
        switch (alt516) {
            case 1 :
                // InternalKim.g:14152:20: (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:14152:20: (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) )
                // InternalKim.g:14153:10: otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) )
                {
                otherlv_10=(Token)match(input,48,FOLLOW_99); if (state.failed) return ;
                // InternalKim.g:14157:10: ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) )
                int alt515=2;
                switch ( input.LA(1) ) {
                case RULE_CAMELCASE_ID:
                    {
                    int LA515_1 = input.LA(2);

                    if ( (synpred535_InternalKim()) ) {
                        alt515=1;
                    }
                    else if ( (true) ) {
                        alt515=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 515, 1, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_LOWERCASE_ID:
                    {
                    int LA515_2 = input.LA(2);

                    if ( (LA515_2==EOF||LA515_2==38||LA515_2==92||LA515_2==239) ) {
                        alt515=1;
                    }
                    else if ( (LA515_2==89||LA515_2==93) ) {
                        alt515=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 515, 2, input);

                        throw nvae;
                    }
                    }
                    break;
                case EOF:
                case RULE_INT:
                case 36:
                case 38:
                case 92:
                case 232:
                case 233:
                case 239:
                    {
                    alt515=1;
                    }
                    break;
                case RULE_UPPERCASE_ID:
                case RULE_LOWERCASE_DASHID:
                    {
                    alt515=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 515, 0, input);

                    throw nvae;
                }

                switch (alt515) {
                    case 1 :
                        // InternalKim.g:14158:11: ( (lv_unit_11_0= ruleUnit ) )
                        {
                        // InternalKim.g:14158:11: ( (lv_unit_11_0= ruleUnit ) )
                        // InternalKim.g:14159:12: (lv_unit_11_0= ruleUnit )
                        {
                        // InternalKim.g:14159:12: (lv_unit_11_0= ruleUnit )
                        // InternalKim.g:14160:13: lv_unit_11_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_1_3_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_11_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:14178:11: ( (lv_currency_12_0= ruleCurrency ) )
                        {
                        // InternalKim.g:14178:11: ( (lv_currency_12_0= ruleCurrency ) )
                        // InternalKim.g:14179:12: (lv_currency_12_0= ruleCurrency )
                        {
                        // InternalKim.g:14179:12: (lv_currency_12_0= ruleCurrency )
                        // InternalKim.g:14180:13: lv_currency_12_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_1_3_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_12_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:14200:9: (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) )
                {
                // InternalKim.g:14200:9: (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) )
                // InternalKim.g:14201:10: otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) )
                {
                otherlv_13=(Token)match(input,99,FOLLOW_191); if (state.failed) return ;
                // InternalKim.g:14205:10: ( (lv_unit_14_0= ruleUnit ) )
                // InternalKim.g:14206:11: (lv_unit_14_0= ruleUnit )
                {
                // InternalKim.g:14206:11: (lv_unit_14_0= ruleUnit )
                // InternalKim.g:14207:12: lv_unit_14_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_1_3_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_14_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred537_InternalKim

    // $ANTLR start synpred538_InternalKim
    public final void synpred538_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_16=null;
        EObject lv_from_15_0 = null;

        EObject lv_to_17_0 = null;


        // InternalKim.g:14231:4: ( ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:14231:4: ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:14231:4: ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:14232:5: {...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred538_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4)");
        }
        // InternalKim.g:14232:122: ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) )
        // InternalKim.g:14233:6: ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4);
        // InternalKim.g:14236:9: ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) )
        // InternalKim.g:14236:10: {...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred538_InternalKim", "true");
        }
        // InternalKim.g:14236:19: ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) )
        // InternalKim.g:14236:20: ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) )
        {
        // InternalKim.g:14236:20: ( (lv_from_15_0= ruleNumber ) )
        // InternalKim.g:14237:10: (lv_from_15_0= ruleNumber )
        {
        // InternalKim.g:14237:10: (lv_from_15_0= ruleNumber )
        // InternalKim.g:14238:11: lv_from_15_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getFromNumberParserRuleCall_1_4_0_0());
          										
        }
        pushFollow(FOLLOW_23);
        lv_from_15_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_16=(Token)match(input,34,FOLLOW_39); if (state.failed) return ;
        // InternalKim.g:14259:9: ( (lv_to_17_0= ruleNumber ) )
        // InternalKim.g:14260:10: (lv_to_17_0= ruleNumber )
        {
        // InternalKim.g:14260:10: (lv_to_17_0= ruleNumber )
        // InternalKim.g:14261:11: lv_to_17_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getToNumberParserRuleCall_1_4_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_17_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred538_InternalKim

    // $ANTLR start synpred539_InternalKim
    public final void synpred539_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_18=null;
        Token lv_name_19_0=null;

        // InternalKim.g:14284:4: ( ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )
        // InternalKim.g:14284:4: ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) )
        {
        // InternalKim.g:14284:4: ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) )
        // InternalKim.g:14285:5: {...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred539_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5)");
        }
        // InternalKim.g:14285:122: ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) )
        // InternalKim.g:14286:6: ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5);
        // InternalKim.g:14289:9: ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) )
        // InternalKim.g:14289:10: {...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred539_InternalKim", "true");
        }
        // InternalKim.g:14289:19: (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) )
        // InternalKim.g:14289:20: otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) )
        {
        otherlv_18=(Token)match(input,102,FOLLOW_62); if (state.failed) return ;
        // InternalKim.g:14293:9: ( (lv_name_19_0= RULE_LOWERCASE_ID ) )
        // InternalKim.g:14294:10: (lv_name_19_0= RULE_LOWERCASE_ID )
        {
        // InternalKim.g:14294:10: (lv_name_19_0= RULE_LOWERCASE_ID )
        // InternalKim.g:14295:11: lv_name_19_0= RULE_LOWERCASE_ID
        {
        lv_name_19_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred539_InternalKim

    // $ANTLR start synpred549_InternalKim
    public final void synpred549_InternalKim_fragment() throws RecognitionException {   
        EObject lv_root_1_0 = null;


        // InternalKim.g:14646:4: ( (lv_root_1_0= ruleUnitElement ) )
        // InternalKim.g:14646:4: (lv_root_1_0= ruleUnitElement )
        {
        // InternalKim.g:14646:4: (lv_root_1_0= ruleUnitElement )
        // InternalKim.g:14647:5: lv_root_1_0= ruleUnitElement
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getUnitAccess().getRootUnitElementParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_root_1_0=ruleUnitElement();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred549_InternalKim

    // $ANTLR start synpred556_InternalKim
    public final void synpred556_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:14853:4: ( ( RULE_INT ) )
        // InternalKim.g:14853:5: ( RULE_INT )
        {
        // InternalKim.g:14853:5: ( RULE_INT )
        // InternalKim.g:14854:5: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred556_InternalKim

    // $ANTLR start synpred557_InternalKim
    public final void synpred557_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:14875:4: ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )
        // InternalKim.g:14875:5: ( ( ( '.' ) ) ( ( RULE_INT ) ) )
        {
        // InternalKim.g:14875:5: ( ( ( '.' ) ) ( ( RULE_INT ) ) )
        // InternalKim.g:14876:5: ( ( '.' ) ) ( ( RULE_INT ) )
        {
        // InternalKim.g:14876:5: ( ( '.' ) )
        // InternalKim.g:14877:6: ( '.' )
        {
        // InternalKim.g:14877:6: ( '.' )
        // InternalKim.g:14878:7: '.'
        {
        match(input,93,FOLLOW_75); if (state.failed) return ;

        }


        }

        // InternalKim.g:14881:5: ( ( RULE_INT ) )
        // InternalKim.g:14882:6: ( RULE_INT )
        {
        // InternalKim.g:14882:6: ( RULE_INT )
        // InternalKim.g:14883:7: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred557_InternalKim

    // $ANTLR start synpred561_InternalKim
    public final void synpred561_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:14924:4: ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )
        // InternalKim.g:14924:5: ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) )
        {
        // InternalKim.g:14924:5: ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) )
        // InternalKim.g:14925:5: ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) )
        {
        // InternalKim.g:14925:5: ( ( ( 'e' | 'E' ) ) )
        // InternalKim.g:14926:6: ( ( 'e' | 'E' ) )
        {
        // InternalKim.g:14926:6: ( ( 'e' | 'E' ) )
        // InternalKim.g:14927:7: ( 'e' | 'E' )
        {
        if ( (input.LA(1)>=234 && input.LA(1)<=235) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }

        // InternalKim.g:14934:5: ( '+' | ( ( '-' ) ) )?
        int alt518=3;
        int LA518_0 = input.LA(1);

        if ( (LA518_0==232) ) {
            alt518=1;
        }
        else if ( (LA518_0==233) ) {
            alt518=2;
        }
        switch (alt518) {
            case 1 :
                // InternalKim.g:14935:6: '+'
                {
                match(input,232,FOLLOW_75); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:14937:6: ( ( '-' ) )
                {
                // InternalKim.g:14937:6: ( ( '-' ) )
                // InternalKim.g:14938:7: ( '-' )
                {
                // InternalKim.g:14938:7: ( '-' )
                // InternalKim.g:14939:8: '-'
                {
                match(input,233,FOLLOW_75); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:14943:5: ( ( RULE_INT ) )
        // InternalKim.g:14944:6: ( RULE_INT )
        {
        // InternalKim.g:14944:6: ( RULE_INT )
        // InternalKim.g:14945:7: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred561_InternalKim

    // $ANTLR start synpred572_InternalKim
    public final void synpred572_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken this_PathName_0 = null;


        // InternalKim.g:15208:4: (this_PathName_0= rulePathName )
        // InternalKim.g:15208:4: this_PathName_0= rulePathName
        {
        if ( state.backtracking==0 ) {

          				newCompositeNode(grammarAccess.getPropertyIdAccess().getPathNameParserRuleCall_0_0());
          			
        }
        pushFollow(FOLLOW_2);
        this_PathName_0=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred572_InternalKim

    // $ANTLR start synpred577_InternalKim
    public final void synpred577_InternalKim_fragment() throws RecognitionException {   
        Token this_LOWERCASE_ID_6=null;

        // InternalKim.g:15311:4: (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID )
        // InternalKim.g:15311:4: this_LOWERCASE_ID_6= RULE_LOWERCASE_ID
        {
        this_LOWERCASE_ID_6=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred577_InternalKim

    // Delegated rules

    public final boolean synpred22_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred314_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred314_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred161_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred161_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred398_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred398_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred359_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred359_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred395_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred395_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred319_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred319_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred352_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred352_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred396_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred396_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred391_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred391_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred128_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred128_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred236_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred236_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred235_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred235_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred243_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred243_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred242_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred242_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred244_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred244_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred241_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred241_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred556_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred556_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred557_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred557_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred198_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred198_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred197_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred197_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred124_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred124_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred154_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred154_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred549_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred549_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred199_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred199_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred367_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred367_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred324_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred324_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred389_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred389_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred150_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred150_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred365_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred365_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred369_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred369_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred539_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred539_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred192_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred192_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred322_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred322_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred326_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred326_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred387_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred387_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred175_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred175_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred342_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred342_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred363_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred363_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred384_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred384_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred343_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred343_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred195_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred195_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred380_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred380_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred402_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred402_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred247_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred247_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred403_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred403_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred245_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred245_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred468_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred468_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred191_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred191_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred426_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred426_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred404_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred404_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred489_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred489_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred401_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred401_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred249_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred249_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred481_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred481_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred485_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred485_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred480_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred480_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred368_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred368_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred336_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred336_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred337_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred337_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred182_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred182_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred373_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred373_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred338_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred338_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred184_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred184_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred375_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred375_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred370_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred370_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred372_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred372_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred258_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred258_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred561_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred561_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred257_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred257_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred80_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred80_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred371_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred371_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred256_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred256_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred255_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred255_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred264_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred264_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred254_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred254_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred261_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred261_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred265_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred265_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred251_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred251_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred262_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred262_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred252_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred252_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred263_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred263_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred534_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred534_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred535_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred535_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred189_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred189_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred176_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred176_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred250_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred250_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred537_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred537_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred187_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred187_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred538_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred538_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred260_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred260_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred75_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred75_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred577_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred577_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred533_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred533_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred532_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred532_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred572_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred572_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred478_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred478_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred237_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred237_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred477_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred477_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred259_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred259_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred455_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred455_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred238_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred238_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred239_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred239_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred454_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred454_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred473_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred473_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred474_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred474_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA4 dfa4 = new DFA4(this);
    protected DFA15 dfa15 = new DFA15(this);
    protected DFA14 dfa14 = new DFA14(this);
    protected DFA42 dfa42 = new DFA42(this);
    protected DFA47 dfa47 = new DFA47(this);
    protected DFA46 dfa46 = new DFA46(this);
    protected DFA50 dfa50 = new DFA50(this);
    protected DFA59 dfa59 = new DFA59(this);
    protected DFA67 dfa67 = new DFA67(this);
    protected DFA84 dfa84 = new DFA84(this);
    protected DFA91 dfa91 = new DFA91(this);
    protected DFA95 dfa95 = new DFA95(this);
    protected DFA111 dfa111 = new DFA111(this);
    protected DFA145 dfa145 = new DFA145(this);
    protected DFA132 dfa132 = new DFA132(this);
    protected DFA141 dfa141 = new DFA141(this);
    protected DFA146 dfa146 = new DFA146(this);
    protected DFA151 dfa151 = new DFA151(this);
    protected DFA148 dfa148 = new DFA148(this);
    protected DFA153 dfa153 = new DFA153(this);
    protected DFA154 dfa154 = new DFA154(this);
    protected DFA156 dfa156 = new DFA156(this);
    protected DFA155 dfa155 = new DFA155(this);
    protected DFA185 dfa185 = new DFA185(this);
    protected DFA190 dfa190 = new DFA190(this);
    protected DFA191 dfa191 = new DFA191(this);
    protected DFA197 dfa197 = new DFA197(this);
    protected DFA232 dfa232 = new DFA232(this);
    protected DFA256 dfa256 = new DFA256(this);
    protected DFA260 dfa260 = new DFA260(this);
    protected DFA261 dfa261 = new DFA261(this);
    protected DFA272 dfa272 = new DFA272(this);
    protected DFA274 dfa274 = new DFA274(this);
    protected DFA276 dfa276 = new DFA276(this);
    protected DFA287 dfa287 = new DFA287(this);
    protected DFA292 dfa292 = new DFA292(this);
    protected DFA323 dfa323 = new DFA323(this);
    protected DFA406 dfa406 = new DFA406(this);
    protected DFA424 dfa424 = new DFA424(this);
    static final String dfa_1s = "\75\uffff";
    static final String dfa_2s = "\1\7\74\uffff";
    static final String dfa_3s = "\1\16\3\0\71\uffff";
    static final String dfa_4s = "\1\u00e1\3\0\71\uffff";
    static final String dfa_5s = "\4\uffff\1\1\2\uffff\1\2\65\uffff";
    static final String dfa_6s = "\1\uffff\1\0\1\1\1\2\71\uffff}>";
    static final String[] dfa_7s = {
            "\1\1\5\uffff\1\3\1\2\1\7\57\uffff\5\7\3\4\2\uffff\1\7\15\uffff\1\7\55\uffff\10\7\21\uffff\1\7\14\uffff\4\7\14\uffff\40\7",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "109:4: ( (lv_namespace_1_0= ruleNamespace ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA1_1 = input.LA(1);

                         
                        int index1_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index1_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA1_2 = input.LA(1);

                         
                        int index1_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index1_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA1_3 = input.LA(1);

                         
                        int index1_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index1_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 1, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\72\uffff";
    static final String dfa_9s = "\1\16\1\0\60\uffff\1\0\7\uffff";
    static final String dfa_10s = "\1\u00e1\1\0\60\uffff\1\0\7\uffff";
    static final String dfa_11s = "\2\uffff\1\1\55\uffff\1\2\6\uffff\1\4\1\5\1\3";
    static final String dfa_12s = "\1\uffff\1\0\60\uffff\1\1\7\uffff}>";
    static final String[] dfa_13s = {
            "\1\1\5\uffff\2\60\1\67\57\uffff\1\62\4\60\5\uffff\1\2\15\uffff\1\70\55\uffff\10\2\21\uffff\1\2\14\uffff\4\2\14\uffff\40\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA4_1 = input.LA(1);

                         
                        int index4_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalKim()) ) {s = 2;}

                        else if ( (synpred5_InternalKim()) ) {s = 48;}

                        else if ( (synpred7_InternalKim()) ) {s = 55;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index4_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA4_50 = input.LA(1);

                         
                        int index4_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalKim()) ) {s = 48;}

                        else if ( (synpred6_InternalKim()) ) {s = 57;}

                         
                        input.seek(index4_50);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 4, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\45\uffff";
    static final String dfa_15s = "\1\4\1\uffff\33\0\10\uffff";
    static final String dfa_16s = "\1\u00e9\1\uffff\33\0\10\uffff";
    static final String dfa_17s = "\1\uffff\1\1\33\uffff\1\2\7\uffff";
    static final String dfa_18s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\10\uffff}>";
    static final String[] dfa_19s = {
            "\1\35\1\2\1\4\1\uffff\1\35\1\5\1\3\1\35\1\10\14\uffff\1\35\1\11\1\12\10\uffff\1\34\14\uffff\2\35\45\uffff\1\1\7\uffff\1\35\17\uffff\1\15\1\16\7\uffff\1\13\1\14\1\uffff\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\66\uffff\1\35\50\uffff\1\6\1\7",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA15 extends DFA {

        public DFA15(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 15;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "641:3: ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA15_2 = input.LA(1);

                         
                        int index15_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA15_3 = input.LA(1);

                         
                        int index15_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA15_4 = input.LA(1);

                         
                        int index15_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA15_5 = input.LA(1);

                         
                        int index15_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA15_6 = input.LA(1);

                         
                        int index15_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA15_7 = input.LA(1);

                         
                        int index15_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA15_8 = input.LA(1);

                         
                        int index15_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA15_9 = input.LA(1);

                         
                        int index15_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA15_10 = input.LA(1);

                         
                        int index15_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA15_11 = input.LA(1);

                         
                        int index15_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA15_12 = input.LA(1);

                         
                        int index15_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA15_13 = input.LA(1);

                         
                        int index15_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA15_14 = input.LA(1);

                         
                        int index15_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA15_15 = input.LA(1);

                         
                        int index15_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA15_16 = input.LA(1);

                         
                        int index15_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA15_17 = input.LA(1);

                         
                        int index15_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA15_18 = input.LA(1);

                         
                        int index15_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA15_19 = input.LA(1);

                         
                        int index15_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA15_20 = input.LA(1);

                         
                        int index15_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA15_21 = input.LA(1);

                         
                        int index15_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA15_22 = input.LA(1);

                         
                        int index15_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA15_23 = input.LA(1);

                         
                        int index15_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA15_24 = input.LA(1);

                         
                        int index15_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_24);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA15_25 = input.LA(1);

                         
                        int index15_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_25);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA15_26 = input.LA(1);

                         
                        int index15_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_26);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA15_27 = input.LA(1);

                         
                        int index15_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA15_28 = input.LA(1);

                         
                        int index15_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index15_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 15, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_20s = "\17\uffff";
    static final String dfa_21s = "\1\5\1\uffff\2\27\1\0\3\uffff\2\5\1\uffff\1\27\1\44\1\5\1\44";
    static final String dfa_22s = "\1\u00e9\1\uffff\2\135\1\0\3\uffff\2\12\1\uffff\2\135\1\12\1\135";
    static final String dfa_23s = "\1\uffff\1\1\3\uffff\1\3\1\4\1\5\2\uffff\1\2\4\uffff";
    static final String dfa_24s = "\4\uffff\1\0\12\uffff}>";
    static final String[] dfa_25s = {
            "\1\2\1\1\2\uffff\1\4\1\3\1\uffff\1\5\15\uffff\2\6\10\uffff\1\7\63\uffff\1\1\27\uffff\2\7\7\uffff\2\7\1\uffff\15\7\137\uffff\2\5",
            "",
            "\1\1\1\uffff\1\1\12\uffff\1\12\20\uffff\1\1\43\uffff\1\11\2\uffff\1\1\1\10",
            "\1\1\1\uffff\1\1\12\uffff\1\12\20\uffff\1\1\43\uffff\1\11\2\uffff\1\1\1\10",
            "\1\uffff",
            "",
            "",
            "",
            "\1\13\4\uffff\1\14",
            "\1\1\3\uffff\1\7\1\1",
            "",
            "\1\1\1\uffff\1\1\12\uffff\1\12\20\uffff\1\1\43\uffff\1\11\3\uffff\1\15",
            "\1\12\64\uffff\1\11\3\uffff\1\15",
            "\1\16\4\uffff\1\14",
            "\1\12\64\uffff\1\11\3\uffff\1\15"
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA14 extends DFA {

        public DFA14(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 14;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "642:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA14_4 = input.LA(1);

                         
                        int index14_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index14_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 14, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_26s = "\50\uffff";
    static final String dfa_27s = "\1\5\2\uffff\3\0\26\uffff\1\0\13\uffff";
    static final String dfa_28s = "\1\u00e9\2\uffff\3\0\26\uffff\1\0\13\uffff";
    static final String dfa_29s = "\1\uffff\1\1\4\uffff\1\4\1\5\1\6\24\uffff\1\10\5\uffff\1\11\1\12\1\2\1\3\1\7";
    static final String dfa_30s = "\3\uffff\1\0\1\1\1\2\26\uffff\1\3\13\uffff}>";
    static final String[] dfa_31s = {
            "\1\10\1\7\2\uffff\2\10\1\uffff\1\5\15\uffff\2\1\10\uffff\1\34\1\uffff\1\44\11\uffff\1\6\1\43\51\uffff\1\35\24\uffff\2\10\7\uffff\2\10\1\uffff\15\10\131\uffff\5\35\1\uffff\1\3\1\4",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA42 extends DFA {

        public DFA42(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 42;
            this.eot = dfa_26;
            this.eof = dfa_26;
            this.min = dfa_27;
            this.max = dfa_28;
            this.accept = dfa_29;
            this.special = dfa_30;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "1456:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA42_3 = input.LA(1);

                         
                        int index42_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalKim()) ) {s = 37;}

                        else if ( (synpred58_InternalKim()) ) {s = 38;}

                         
                        input.seek(index42_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA42_4 = input.LA(1);

                         
                        int index42_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalKim()) ) {s = 37;}

                        else if ( (synpred58_InternalKim()) ) {s = 38;}

                         
                        input.seek(index42_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA42_5 = input.LA(1);

                         
                        int index42_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalKim()) ) {s = 37;}

                        else if ( (synpred58_InternalKim()) ) {s = 38;}

                         
                        input.seek(index42_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA42_28 = input.LA(1);

                         
                        int index42_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalKim()) ) {s = 8;}

                        else if ( (synpred64_InternalKim()) ) {s = 39;}

                         
                        input.seek(index42_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 42, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_32s = "\1\5\2\uffff\3\0\5\uffff\2\0\33\uffff";
    static final String dfa_33s = "\1\u00e9\2\uffff\3\0\5\uffff\2\0\33\uffff";
    static final String dfa_34s = "\3\uffff\1\0\1\1\1\2\5\uffff\1\3\1\4\33\uffff}>";
    static final String[] dfa_35s = {
            "\1\13\1\7\2\uffff\1\10\1\14\1\uffff\1\5\15\uffff\2\1\10\uffff\1\10\1\uffff\1\44\11\uffff\1\6\1\43\51\uffff\1\35\24\uffff\2\10\7\uffff\2\10\1\uffff\15\10\131\uffff\5\35\1\uffff\1\3\1\4",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final char[] dfa_33 = DFA.unpackEncodedStringToUnsignedChars(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[][] dfa_35 = unpackEncodedStringArray(dfa_35s);

    class DFA47 extends DFA {

        public DFA47(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 47;
            this.eot = dfa_26;
            this.eof = dfa_26;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_29;
            this.special = dfa_34;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "1814:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA47_3 = input.LA(1);

                         
                        int index47_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalKim()) ) {s = 37;}

                        else if ( (synpred76_InternalKim()) ) {s = 38;}

                         
                        input.seek(index47_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA47_4 = input.LA(1);

                         
                        int index47_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalKim()) ) {s = 37;}

                        else if ( (synpred76_InternalKim()) ) {s = 38;}

                         
                        input.seek(index47_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA47_5 = input.LA(1);

                         
                        int index47_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalKim()) ) {s = 37;}

                        else if ( (synpred76_InternalKim()) ) {s = 38;}

                         
                        input.seek(index47_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA47_11 = input.LA(1);

                         
                        int index47_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalKim()) ) {s = 8;}

                        else if ( (synpred81_InternalKim()) ) {s = 39;}

                         
                        input.seek(index47_11);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA47_12 = input.LA(1);

                         
                        int index47_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalKim()) ) {s = 8;}

                        else if ( (synpred81_InternalKim()) ) {s = 39;}

                         
                        input.seek(index47_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 47, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_36s = "\13\uffff";
    static final String dfa_37s = "\1\uffff\1\3\3\uffff\2\10\1\uffff\1\12\2\uffff";
    static final String dfa_38s = "\1\5\1\131\2\uffff\1\4\2\31\1\4\2\0\1\uffff";
    static final String dfa_39s = "\1\12\1\135\2\uffff\1\u00e9\2\170\1\u00e9\2\0\1\uffff";
    static final String dfa_40s = "\2\uffff\1\2\1\1\6\uffff\1\1";
    static final String dfa_41s = "\11\uffff\1\0\1\uffff}>";
    static final String[] dfa_42s = {
            "\1\1\4\uffff\1\2",
            "\1\4\3\uffff\1\2",
            "",
            "",
            "\1\3\1\5\1\3\1\uffff\2\3\1\6\1\uffff\1\3\15\uffff\2\3\10\uffff\1\3\14\uffff\2\3\75\uffff\2\3\7\uffff\2\3\1\uffff\15\3\66\uffff\1\3\50\uffff\2\3",
            "\1\3\12\uffff\1\3\64\uffff\1\7\3\uffff\1\3\32\uffff\1\3",
            "\1\3\12\uffff\1\3\64\uffff\1\7\3\uffff\1\3\32\uffff\1\3",
            "\3\2\1\uffff\1\2\1\11\1\2\1\uffff\1\2\15\uffff\2\2\10\uffff\1\2\14\uffff\2\2\75\uffff\2\2\7\uffff\2\2\1\uffff\15\2\66\uffff\1\2\50\uffff\2\2",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final char[] dfa_38 = DFA.unpackEncodedStringToUnsignedChars(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[][] dfa_42 = unpackEncodedStringArray(dfa_42s);

    class DFA46 extends DFA {

        public DFA46(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 46;
            this.eot = dfa_36;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "2028:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA46_9 = input.LA(1);

                         
                        int index46_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalKim()) ) {s = 3;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index46_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 46, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_43s = "\10\uffff";
    static final String dfa_44s = "\2\uffff\1\3\4\uffff\1\3";
    static final String dfa_45s = "\1\5\2\7\2\uffff\1\5\2\7";
    static final String dfa_46s = "\1\u00e9\1\135\1\70\2\uffff\1\u00e9\1\135\1\70";
    static final String dfa_47s = "\3\uffff\1\2\1\1\3\uffff";
    static final String dfa_48s = "\10\uffff}>";
    static final String[] dfa_49s = {
            "\1\1\1\2\1\uffff\3\3\1\uffff\1\3\15\uffff\2\3\10\uffff\1\3\1\uffff\1\3\11\uffff\2\3\3\uffff\1\3\45\uffff\1\3\24\uffff\2\3\7\uffff\2\3\1\uffff\15\3\131\uffff\5\3\1\uffff\2\3",
            "\1\4\54\uffff\1\4\44\uffff\1\3\3\uffff\1\3",
            "\1\4\13\uffff\1\3\5\uffff\1\3\16\uffff\1\3\12\uffff\1\3\1\5\1\uffff\3\3",
            "",
            "",
            "\1\6\1\7\1\uffff\3\3\1\uffff\1\3\15\uffff\2\3\10\uffff\1\3\1\uffff\1\3\11\uffff\2\3\3\uffff\1\3\45\uffff\1\3\24\uffff\2\3\7\uffff\2\3\1\uffff\15\3\131\uffff\5\3\1\uffff\2\3",
            "\1\4\54\uffff\1\4\44\uffff\1\3\3\uffff\1\3",
            "\1\4\13\uffff\1\3\5\uffff\1\3\16\uffff\1\3\12\uffff\1\3\1\5\1\uffff\3\3"
    };

    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final char[] dfa_45 = DFA.unpackEncodedStringToUnsignedChars(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[][] dfa_49 = unpackEncodedStringArray(dfa_49s);

    class DFA50 extends DFA {

        public DFA50(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 50;
            this.eot = dfa_43;
            this.eof = dfa_44;
            this.min = dfa_45;
            this.max = dfa_46;
            this.accept = dfa_47;
            this.special = dfa_48;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "2277:3: ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )?";
        }
    }
    static final String dfa_50s = "\26\uffff";
    static final String dfa_51s = "\4\uffff\1\21\15\uffff\1\21\2\uffff\1\21";
    static final String dfa_52s = "\1\5\1\uffff\2\14\1\23\10\uffff\3\14\2\uffff\1\23\2\14\1\23";
    static final String dfa_53s = "\1\u00e9\1\uffff\2\14\1\u00eb\10\uffff\1\14\2\u00e9\2\uffff\1\u00eb\2\14\1\70";
    static final String dfa_54s = "\1\uffff\1\1\3\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\3\uffff\1\2\1\3\4\uffff";
    static final String dfa_55s = "\26\uffff}>";
    static final String[] dfa_56s = {
            "\1\7\1\6\1\uffff\1\11\2\7\1\uffff\1\4\15\uffff\2\1\10\uffff\1\7\1\uffff\1\13\11\uffff\1\5\1\12\3\uffff\1\14\45\uffff\1\10\24\uffff\2\7\7\uffff\2\7\1\uffff\15\7\131\uffff\5\10\1\uffff\1\2\1\3",
            "",
            "\1\4",
            "\1\4",
            "\1\21\5\uffff\1\21\10\uffff\1\20\5\uffff\1\21\5\uffff\2\20\3\uffff\2\21\1\uffff\3\21\44\uffff\1\15\u008c\uffff\1\16\1\17",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\22",
            "\1\25\u00db\uffff\1\23\1\24",
            "\1\25\u00db\uffff\1\23\1\24",
            "",
            "",
            "\1\21\5\uffff\1\21\10\uffff\1\20\5\uffff\1\21\5\uffff\2\20\3\uffff\2\21\1\uffff\3\21\u00b1\uffff\1\16\1\17",
            "\1\25",
            "\1\25",
            "\1\21\5\uffff\1\21\10\uffff\1\20\5\uffff\1\21\5\uffff\2\20\3\uffff\2\21\1\uffff\3\21"
    };

    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final char[] dfa_52 = DFA.unpackEncodedStringToUnsignedChars(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[][] dfa_56 = unpackEncodedStringArray(dfa_56s);

    class DFA59 extends DFA {

        public DFA59(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 59;
            this.eot = dfa_50;
            this.eof = dfa_51;
            this.min = dfa_52;
            this.max = dfa_53;
            this.accept = dfa_54;
            this.special = dfa_55;
            this.transition = dfa_56;
        }
        public String getDescription() {
            return "2522:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_expr_16_0= RULE_EXPR ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) | ( (lv_anything_19_0= '#' ) ) )";
        }
    }
    static final String dfa_57s = "\47\uffff";
    static final String dfa_58s = "\1\2\46\uffff";
    static final String dfa_59s = "\1\5\1\0\45\uffff";
    static final String dfa_60s = "\1\u0088\1\0\45\uffff";
    static final String dfa_61s = "\2\uffff\1\2\43\uffff\1\1";
    static final String dfa_62s = "\1\uffff\1\0\45\uffff}>";
    static final String[] dfa_63s = {
            "\2\2\2\uffff\2\2\10\uffff\1\2\10\uffff\2\2\6\uffff\1\1\2\uffff\2\2\15\uffff\3\2\7\uffff\5\2\23\uffff\1\2\27\uffff\2\2\7\uffff\2\2\1\uffff\15\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[][] dfa_63 = unpackEncodedStringArray(dfa_63s);

    class DFA67 extends DFA {

        public DFA67(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 67;
            this.eot = dfa_57;
            this.eof = dfa_58;
            this.min = dfa_59;
            this.max = dfa_60;
            this.accept = dfa_61;
            this.special = dfa_62;
            this.transition = dfa_63;
        }
        public String getDescription() {
            return "3145:4: ( (lv_parameters_19_0= ruleList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA67_1 = input.LA(1);

                         
                        int index67_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred124_InternalKim()) ) {s = 38;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index67_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 67, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_64s = "\55\uffff";
    static final String dfa_65s = "\1\22\54\uffff";
    static final String dfa_66s = "\1\4\3\uffff\1\0\3\uffff\3\0\2\uffff\2\0\36\uffff";
    static final String dfa_67s = "\1\u00e9\3\uffff\1\0\3\uffff\3\0\2\uffff\2\0\36\uffff";
    static final String dfa_68s = "\1\uffff\3\1\1\uffff\3\1\3\uffff\2\1\2\uffff\3\1\1\2\32\uffff";
    static final String dfa_69s = "\1\0\3\uffff\1\1\3\uffff\1\2\1\3\1\4\2\uffff\1\5\1\6\36\uffff}>";
    static final String[] dfa_70s = {
            "\1\14\1\11\1\4\1\uffff\1\13\1\15\1\12\1\7\1\3\6\uffff\1\22\5\uffff\1\10\1\5\1\6\2\22\6\uffff\1\16\2\uffff\2\22\10\uffff\1\21\1\17\3\uffff\3\22\37\uffff\1\22\27\uffff\2\22\7\uffff\2\22\1\uffff\15\22\66\uffff\1\20\50\uffff\1\1\1\2",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[][] dfa_70 = unpackEncodedStringArray(dfa_70s);

    class DFA84 extends DFA {

        public DFA84(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 84;
            this.eot = dfa_64;
            this.eof = dfa_65;
            this.min = dfa_66;
            this.max = dfa_67;
            this.accept = dfa_68;
            this.special = dfa_69;
            this.transition = dfa_70;
        }
        public String getDescription() {
            return "3721:4: ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA84_0 = input.LA(1);

                         
                        int index84_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA84_0==232) && (synpred150_InternalKim())) {s = 1;}

                        else if ( (LA84_0==233) && (synpred150_InternalKim())) {s = 2;}

                        else if ( (LA84_0==RULE_INT) && (synpred150_InternalKim())) {s = 3;}

                        else if ( (LA84_0==RULE_STRING) ) {s = 4;}

                        else if ( (LA84_0==26) && (synpred150_InternalKim())) {s = 5;}

                        else if ( (LA84_0==27) && (synpred150_InternalKim())) {s = 6;}

                        else if ( (LA84_0==RULE_ID) && (synpred150_InternalKim())) {s = 7;}

                        else if ( (LA84_0==25) ) {s = 8;}

                        else if ( (LA84_0==RULE_LOWERCASE_ID) ) {s = 9;}

                        else if ( (LA84_0==RULE_LOWERCASE_DASHID) ) {s = 10;}

                        else if ( (LA84_0==RULE_EXPR) && (synpred150_InternalKim())) {s = 11;}

                        else if ( (LA84_0==RULE_UPPERCASE_ID) && (synpred150_InternalKim())) {s = 12;}

                        else if ( (LA84_0==RULE_CAMELCASE_ID) ) {s = 13;}

                        else if ( (LA84_0==36) ) {s = 14;}

                        else if ( (LA84_0==50) && (synpred150_InternalKim())) {s = 15;}

                        else if ( (LA84_0==191) && (synpred150_InternalKim())) {s = 16;}

                        else if ( (LA84_0==49) && (synpred150_InternalKim())) {s = 17;}

                        else if ( (LA84_0==EOF||LA84_0==19||(LA84_0>=28 && LA84_0<=29)||(LA84_0>=39 && LA84_0<=40)||(LA84_0>=54 && LA84_0<=56)||LA84_0==88||(LA84_0>=112 && LA84_0<=113)||(LA84_0>=121 && LA84_0<=122)||(LA84_0>=124 && LA84_0<=136)) ) {s = 18;}

                         
                        input.seek(index84_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA84_4 = input.LA(1);

                         
                        int index84_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index84_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA84_8 = input.LA(1);

                         
                        int index84_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index84_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA84_9 = input.LA(1);

                         
                        int index84_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index84_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA84_10 = input.LA(1);

                         
                        int index84_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index84_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA84_13 = input.LA(1);

                         
                        int index84_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index84_13);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA84_14 = input.LA(1);

                         
                        int index84_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index84_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 84, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_71s = "\20\uffff";
    static final String dfa_72s = "\1\4\10\uffff\1\0\6\uffff";
    static final String dfa_73s = "\1\u00e9\10\uffff\1\0\6\uffff";
    static final String dfa_74s = "\1\uffff\1\1\10\uffff\1\2\1\3\1\4\1\uffff\1\5\1\6";
    static final String dfa_75s = "\11\uffff\1\0\6\uffff}>";
    static final String[] dfa_76s = {
            "\1\14\1\11\1\1\1\uffff\1\13\1\14\1\12\2\1\14\uffff\3\1\10\uffff\1\16\14\uffff\1\17\u00b6\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final char[] dfa_72 = DFA.unpackEncodedStringToUnsignedChars(dfa_72s);
    static final char[] dfa_73 = DFA.unpackEncodedStringToUnsignedChars(dfa_73s);
    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final short[] dfa_75 = DFA.unpackEncodedString(dfa_75s);
    static final short[][] dfa_76 = unpackEncodedStringArray(dfa_76s);

    class DFA91 extends DFA {

        public DFA91(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 91;
            this.eot = dfa_71;
            this.eof = dfa_71;
            this.min = dfa_72;
            this.max = dfa_73;
            this.accept = dfa_74;
            this.special = dfa_75;
            this.transition = dfa_76;
        }
        public String getDescription() {
            return "3825:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA91_9 = input.LA(1);

                         
                        int index91_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalKim()) ) {s = 10;}

                        else if ( (synpred161_InternalKim()) ) {s = 12;}

                         
                        input.seek(index91_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 91, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_77s = "\11\uffff";
    static final String dfa_78s = "\1\5\2\44\2\uffff\1\5\1\uffff\2\44";
    static final String dfa_79s = "\1\130\2\135\2\uffff\1\12\1\uffff\2\135";
    static final String dfa_80s = "\3\uffff\1\2\1\3\1\uffff\1\1\2\uffff";
    static final String dfa_81s = "\11\uffff}>";
    static final String[] dfa_82s = {
            "\1\1\2\uffff\1\3\1\uffff\1\2\115\uffff\1\4",
            "\1\6\64\uffff\1\4\3\uffff\1\5",
            "\1\6\64\uffff\1\4\3\uffff\1\5",
            "",
            "",
            "\1\7\4\uffff\1\10",
            "",
            "\1\6\64\uffff\1\4\3\uffff\1\5",
            "\1\6\64\uffff\1\4\3\uffff\1\5"
    };

    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final char[] dfa_78 = DFA.unpackEncodedStringToUnsignedChars(dfa_78s);
    static final char[] dfa_79 = DFA.unpackEncodedStringToUnsignedChars(dfa_79s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[][] dfa_82 = unpackEncodedStringArray(dfa_82s);

    class DFA95 extends DFA {

        public DFA95(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 95;
            this.eot = dfa_77;
            this.eof = dfa_77;
            this.min = dfa_78;
            this.max = dfa_79;
            this.accept = dfa_80;
            this.special = dfa_81;
            this.transition = dfa_82;
        }
        public String getDescription() {
            return "4108:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) )";
        }
    }
    static final String dfa_83s = "\1\23\1\uffff\1\5\14\uffff";
    static final String dfa_84s = "\1\126\1\uffff\1\u00bf\14\uffff";
    static final String dfa_85s = "\1\uffff\1\10\1\uffff\1\2\1\3\1\4\1\5\1\6\3\7\4\1";
    static final String dfa_86s = "\1\1\1\uffff\1\0\14\uffff}>";
    static final String[] dfa_87s = {
            "\1\1\11\uffff\1\2\12\uffff\1\1\7\uffff\1\5\35\uffff\1\3\1\4\2\uffff\1\6\1\7\1\10\1\uffff\1\11",
            "",
            "\1\15\4\uffff\1\16\31\uffff\1\13\1\uffff\1\14\u0098\uffff\1\12",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_83 = DFA.unpackEncodedStringToUnsignedChars(dfa_83s);
    static final char[] dfa_84 = DFA.unpackEncodedStringToUnsignedChars(dfa_84s);
    static final short[] dfa_85 = DFA.unpackEncodedString(dfa_85s);
    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final short[][] dfa_87 = unpackEncodedStringArray(dfa_87s);

    class DFA111 extends DFA {

        public DFA111(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 111;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_86;
            this.transition = dfa_87;
        }
        public String getDescription() {
            return "()* loopback of 4485:6: ( ({...}? => ( ({...}? => (otherlv_11= 'using' ( (lv_imported_12_0= ruleImport ) ) ( ( ( ',' )=>otherlv_13= ',' ) ( (lv_imported_14_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'imports' ( (lv_owlImports_16_0= ruleOwlImport ) ) (otherlv_17= ',' ( (lv_owlImports_18_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'covering' ( (lv_coverage_20_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_coverage_22_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'in' otherlv_24= 'domain' ( ( (lv_rootDomain_25_0= 'root' ) ) | ( (lv_domainConcept_26_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'disjoint' otherlv_28= 'with' ( (lv_disjointNamespaces_29_0= rulePathName ) ) (otherlv_30= ',' ( (lv_disjointNamespaces_31_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'version' ( (lv_version_33_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_35= 'resolve' (otherlv_36= 'from' ( (lv_lookupNamespace_37_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'outside' ( (lv_blacklistNamespace_39_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'using' ( (lv_weights_41_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA111_2 = input.LA(1);

                         
                        int index111_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA111_2 == 191 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {s = 10;}

                        else if ( LA111_2 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {s = 11;}

                        else if ( LA111_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {s = 12;}

                        else if ( LA111_2 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {s = 13;}

                        else if ( LA111_2 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {s = 14;}

                         
                        input.seek(index111_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA111_0 = input.LA(1);

                         
                        int index111_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA111_0==19||LA111_0==40) ) {s = 1;}

                        else if ( (LA111_0==29) ) {s = 2;}

                        else if ( LA111_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 3;}

                        else if ( LA111_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {s = 4;}

                        else if ( LA111_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {s = 5;}

                        else if ( LA111_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {s = 6;}

                        else if ( LA111_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {s = 7;}

                        else if ( LA111_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {s = 8;}

                        else if ( LA111_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {s = 9;}

                         
                        input.seek(index111_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 111, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_88s = "\36\uffff";
    static final String dfa_89s = "\1\2\35\uffff";
    static final String dfa_90s = "\1\5\32\0\3\uffff";
    static final String dfa_91s = "\1\u0088\32\0\3\uffff";
    static final String dfa_92s = "\33\uffff\1\2\1\3\1\1";
    static final String dfa_93s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\3\uffff}>";
    static final String[] dfa_94s = {
            "\1\5\1\7\2\uffff\1\10\1\6\10\uffff\1\1\20\uffff\1\32\2\uffff\1\3\1\33\57\uffff\1\4\27\uffff\1\13\1\14\7\uffff\1\11\1\12\1\uffff\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final short[] dfa_89 = DFA.unpackEncodedString(dfa_89s);
    static final char[] dfa_90 = DFA.unpackEncodedStringToUnsignedChars(dfa_90s);
    static final char[] dfa_91 = DFA.unpackEncodedStringToUnsignedChars(dfa_91s);
    static final short[] dfa_92 = DFA.unpackEncodedString(dfa_92s);
    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final short[][] dfa_94 = unpackEncodedStringArray(dfa_94s);

    class DFA145 extends DFA {

        public DFA145(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 145;
            this.eot = dfa_88;
            this.eof = dfa_89;
            this.min = dfa_90;
            this.max = dfa_91;
            this.accept = dfa_92;
            this.special = dfa_93;
            this.transition = dfa_94;
        }
        public String getDescription() {
            return "()+ loopback of 5641:5: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )? (otherlv_22= 'using' ( (lv_accessor_23_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_24= 'with' otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )? (otherlv_27= 'with' otherlv_28= 'documentation' ( (lv_documentation_29_0= ruleMetadata ) ) )? ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA145_0 = input.LA(1);

                         
                        int index145_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA145_0==19) ) {s = 1;}

                        else if ( (LA145_0==EOF) ) {s = 2;}

                        else if ( (LA145_0==39) ) {s = 3;}

                        else if ( (LA145_0==88) ) {s = 4;}

                        else if ( (LA145_0==RULE_LOWERCASE_ID) ) {s = 5;}

                        else if ( (LA145_0==RULE_LOWERCASE_DASHID) ) {s = 6;}

                        else if ( (LA145_0==RULE_STRING) ) {s = 7;}

                        else if ( (LA145_0==RULE_CAMELCASE_ID) ) {s = 8;}

                        else if ( (LA145_0==121) ) {s = 9;}

                        else if ( (LA145_0==122) ) {s = 10;}

                        else if ( (LA145_0==112) ) {s = 11;}

                        else if ( (LA145_0==113) ) {s = 12;}

                        else if ( (LA145_0==124) ) {s = 13;}

                        else if ( (LA145_0==125) ) {s = 14;}

                        else if ( (LA145_0==126) ) {s = 15;}

                        else if ( (LA145_0==127) ) {s = 16;}

                        else if ( (LA145_0==128) ) {s = 17;}

                        else if ( (LA145_0==129) ) {s = 18;}

                        else if ( (LA145_0==130) ) {s = 19;}

                        else if ( (LA145_0==131) ) {s = 20;}

                        else if ( (LA145_0==132) ) {s = 21;}

                        else if ( (LA145_0==133) ) {s = 22;}

                        else if ( (LA145_0==134) ) {s = 23;}

                        else if ( (LA145_0==135) ) {s = 24;}

                        else if ( (LA145_0==136) ) {s = 25;}

                        else if ( (LA145_0==36) ) {s = 26;}

                        else if ( LA145_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index145_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA145_1 = input.LA(1);

                         
                        int index145_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 28;}

                         
                        input.seek(index145_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA145_2 = input.LA(1);

                         
                        int index145_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 28;}

                         
                        input.seek(index145_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA145_3 = input.LA(1);

                         
                        int index145_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 28;}

                         
                        input.seek(index145_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA145_4 = input.LA(1);

                         
                        int index145_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred235_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index145_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA145_5 = input.LA(1);

                         
                        int index145_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred235_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index145_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA145_6 = input.LA(1);

                         
                        int index145_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred235_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index145_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA145_7 = input.LA(1);

                         
                        int index145_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred235_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index145_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA145_8 = input.LA(1);

                         
                        int index145_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred235_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index145_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA145_9 = input.LA(1);

                         
                        int index145_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred235_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index145_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA145_10 = input.LA(1);

                         
                        int index145_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred235_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index145_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA145_11 = input.LA(1);

                         
                        int index145_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred235_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index145_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA145_12 = input.LA(1);

                         
                        int index145_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred235_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index145_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA145_13 = input.LA(1);

                         
                        int index145_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred235_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index145_13);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA145_14 = input.LA(1);

                         
                        int index145_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred235_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index145_14);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA145_15 = input.LA(1);

                         
                        int index145_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred235_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index145_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA145_16 = input.LA(1);

                         
                        int index145_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred235_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index145_16);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA145_17 = input.LA(1);

                         
                        int index145_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred235_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index145_17);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA145_18 = input.LA(1);

                         
                        int index145_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred235_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index145_18);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA145_19 = input.LA(1);

                         
                        int index145_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred235_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index145_19);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA145_20 = input.LA(1);

                         
                        int index145_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred235_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index145_20);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA145_21 = input.LA(1);

                         
                        int index145_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred235_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index145_21);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA145_22 = input.LA(1);

                         
                        int index145_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred235_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index145_22);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA145_23 = input.LA(1);

                         
                        int index145_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred235_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index145_23);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA145_24 = input.LA(1);

                         
                        int index145_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred235_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index145_24);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA145_25 = input.LA(1);

                         
                        int index145_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred235_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index145_25);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA145_26 = input.LA(1);

                         
                        int index145_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred235_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index145_26);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 145, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_95s = "\14\uffff";
    static final String dfa_96s = "\1\5\1\uffff\2\27\1\5\1\uffff\2\5\1\27\1\131\1\5\1\131";
    static final String dfa_97s = "\1\u0088\1\uffff\2\135\1\u0088\1\uffff\2\12\2\135\1\12\1\135";
    static final String dfa_98s = "\1\uffff\1\1\3\uffff\1\2\6\uffff";
    static final String dfa_99s = "\14\uffff}>";
    static final String[] dfa_100s = {
            "\1\2\1\1\2\uffff\1\4\1\3\31\uffff\1\5\63\uffff\1\1\27\uffff\2\5\7\uffff\2\5\1\uffff\15\5",
            "",
            "\1\1\35\uffff\1\1\43\uffff\1\7\2\uffff\1\1\1\6",
            "\1\1\35\uffff\1\1\43\uffff\1\7\2\uffff\1\1\1\6",
            "\1\5\3\uffff\2\5\14\uffff\1\1\14\uffff\1\5\3\uffff\1\5\14\uffff\1\1\46\uffff\2\1\10\uffff\14\5\7\uffff\20\5",
            "",
            "\1\10\4\uffff\1\11",
            "\1\1\3\uffff\1\5\1\1",
            "\1\1\35\uffff\1\1\43\uffff\1\7\3\uffff\1\12",
            "\1\7\3\uffff\1\12",
            "\1\13\4\uffff\1\11",
            "\1\7\3\uffff\1\12"
    };

    static final short[] dfa_95 = DFA.unpackEncodedString(dfa_95s);
    static final char[] dfa_96 = DFA.unpackEncodedStringToUnsignedChars(dfa_96s);
    static final char[] dfa_97 = DFA.unpackEncodedStringToUnsignedChars(dfa_97s);
    static final short[] dfa_98 = DFA.unpackEncodedString(dfa_98s);
    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final short[][] dfa_100 = unpackEncodedStringArray(dfa_100s);

    class DFA132 extends DFA {

        public DFA132(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 132;
            this.eot = dfa_95;
            this.eof = dfa_95;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "5647:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?";
        }
    }
    static final String dfa_101s = "\12\uffff";
    static final String dfa_102s = "\1\3\11\uffff";
    static final String dfa_103s = "\1\5\2\27\1\uffff\1\5\1\uffff\1\27\1\44\1\5\1\44";
    static final String dfa_104s = "\1\u0088\2\135\1\uffff\1\12\1\uffff\2\135\1\12\1\135";
    static final String dfa_105s = "\3\uffff\1\2\1\uffff\1\1\4\uffff";
    static final String dfa_106s = "\12\uffff}>";
    static final String[] dfa_107s = {
            "\1\1\1\3\2\uffff\1\3\1\2\10\uffff\1\3\20\uffff\1\3\2\uffff\2\3\57\uffff\1\3\27\uffff\2\3\7\uffff\2\3\1\uffff\15\3",
            "\1\3\14\uffff\1\5\20\uffff\1\3\43\uffff\1\3\2\uffff\1\3\1\4",
            "\1\3\14\uffff\1\5\20\uffff\1\3\43\uffff\1\3\2\uffff\1\3\1\4",
            "",
            "\1\6\4\uffff\1\7",
            "",
            "\1\3\14\uffff\1\5\20\uffff\1\3\43\uffff\1\3\3\uffff\1\10",
            "\1\5\64\uffff\1\3\3\uffff\1\10",
            "\1\11\4\uffff\1\7",
            "\1\5\64\uffff\1\3\3\uffff\1\10"
    };

    static final short[] dfa_101 = DFA.unpackEncodedString(dfa_101s);
    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final char[] dfa_103 = DFA.unpackEncodedStringToUnsignedChars(dfa_103s);
    static final char[] dfa_104 = DFA.unpackEncodedStringToUnsignedChars(dfa_104s);
    static final short[] dfa_105 = DFA.unpackEncodedString(dfa_105s);
    static final short[] dfa_106 = DFA.unpackEncodedString(dfa_106s);
    static final short[][] dfa_107 = unpackEncodedStringArray(dfa_107s);

    class DFA141 extends DFA {

        public DFA141(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 141;
            this.eot = dfa_101;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_106;
            this.transition = dfa_107;
        }
        public String getDescription() {
            return "5901:9: ( (lv_accessor_23_0= ruleFunction ) )?";
        }
    }
    static final String dfa_108s = "\44\uffff";
    static final String dfa_109s = "\1\4\10\uffff\2\0\2\uffff\2\0\25\uffff";
    static final String dfa_110s = "\1\u00e9\10\uffff\2\0\2\uffff\2\0\25\uffff";
    static final String dfa_111s = "\1\uffff\1\1\20\uffff\1\2\21\uffff";
    static final String dfa_112s = "\11\uffff\1\0\1\1\2\uffff\1\2\1\3\25\uffff}>";
    static final String[] dfa_113s = {
            "\1\1\1\11\1\1\1\uffff\1\1\1\15\1\12\2\1\14\uffff\3\1\10\uffff\1\16\14\uffff\2\1\55\uffff\1\22\17\uffff\2\22\7\uffff\2\22\1\uffff\15\22\66\uffff\1\1\50\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_108 = DFA.unpackEncodedString(dfa_108s);
    static final char[] dfa_109 = DFA.unpackEncodedStringToUnsignedChars(dfa_109s);
    static final char[] dfa_110 = DFA.unpackEncodedStringToUnsignedChars(dfa_110s);
    static final short[] dfa_111 = DFA.unpackEncodedString(dfa_111s);
    static final short[] dfa_112 = DFA.unpackEncodedString(dfa_112s);
    static final short[][] dfa_113 = unpackEncodedStringArray(dfa_113s);

    class DFA146 extends DFA {

        public DFA146(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 146;
            this.eot = dfa_108;
            this.eof = dfa_108;
            this.min = dfa_109;
            this.max = dfa_110;
            this.accept = dfa_111;
            this.special = dfa_112;
            this.transition = dfa_113;
        }
        public String getDescription() {
            return "6035:3: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA146_9 = input.LA(1);

                         
                        int index146_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred239_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index146_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA146_10 = input.LA(1);

                         
                        int index146_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred239_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index146_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA146_13 = input.LA(1);

                         
                        int index146_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred239_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index146_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA146_14 = input.LA(1);

                         
                        int index146_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred239_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index146_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 146, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_114s = "\131\uffff";
    static final String dfa_115s = "\1\1\15\uffff\1\17\112\uffff";
    static final String dfa_116s = "\1\5\1\uffff\1\5\13\uffff\1\5\112\uffff";
    static final String dfa_117s = "\1\u00e9\1\uffff\1\12\13\uffff\1\u00e9\112\uffff";
    static final String dfa_118s = "\1\uffff\1\11\1\uffff\1\1\1\2\1\3\1\4\2\5\2\6\3\7\1\uffff\112\10";
    static final String dfa_119s = "\1\0\15\uffff\1\1\112\uffff}>";
    static final String[] dfa_120s = {
            "\2\1\2\uffff\2\1\1\uffff\1\15\6\uffff\1\1\3\uffff\1\5\1\uffff\1\1\2\uffff\4\1\1\uffff\1\6\1\uffff\2\1\2\uffff\2\1\7\uffff\1\7\5\uffff\3\1\37\uffff\1\1\10\uffff\1\3\1\4\1\10\1\11\1\12\1\2\11\uffff\2\1\7\uffff\2\1\1\uffff\15\1\13\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\11\1\2\uffff\11\1\6\uffff\3\1\57\uffff\1\13\1\14",
            "",
            "\1\16\4\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\36\1\21\2\uffff\1\40\1\37\1\uffff\1\130\6\uffff\1\33\3\uffff\1\120\1\uffff\1\20\2\uffff\1\22\1\23\1\24\1\25\1\uffff\1\121\1\uffff\1\26\1\62\2\uffff\1\34\1\32\7\uffff\1\122\5\uffff\1\27\1\30\1\31\37\uffff\1\35\1\1\3\uffff\1\1\3\uffff\1\116\1\117\1\123\1\124\1\125\1\63\11\uffff\1\43\1\44\7\uffff\1\41\1\42\1\uffff\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\13\uffff\1\64\1\uffff\1\65\1\uffff\1\66\1\67\1\70\1\uffff\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\2\uffff\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\1\112\6\uffff\1\113\1\114\1\115\57\uffff\1\126\1\127",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_114 = DFA.unpackEncodedString(dfa_114s);
    static final short[] dfa_115 = DFA.unpackEncodedString(dfa_115s);
    static final char[] dfa_116 = DFA.unpackEncodedStringToUnsignedChars(dfa_116s);
    static final char[] dfa_117 = DFA.unpackEncodedStringToUnsignedChars(dfa_117s);
    static final short[] dfa_118 = DFA.unpackEncodedString(dfa_118s);
    static final short[] dfa_119 = DFA.unpackEncodedString(dfa_119s);
    static final short[][] dfa_120 = unpackEncodedStringArray(dfa_120s);

    class DFA151 extends DFA {

        public DFA151(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 151;
            this.eot = dfa_114;
            this.eof = dfa_115;
            this.min = dfa_116;
            this.max = dfa_117;
            this.accept = dfa_118;
            this.special = dfa_119;
            this.transition = dfa_120;
        }
        public String getDescription() {
            return "()* loopback of 6099:6: ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA151_0 = input.LA(1);

                         
                        int index151_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA151_0==EOF||(LA151_0>=RULE_LOWERCASE_ID && LA151_0<=RULE_STRING)||(LA151_0>=RULE_CAMELCASE_ID && LA151_0<=RULE_LOWERCASE_DASHID)||LA151_0==19||LA151_0==25||(LA151_0>=28 && LA151_0<=31)||(LA151_0>=35 && LA151_0<=36)||(LA151_0>=39 && LA151_0<=40)||(LA151_0>=54 && LA151_0<=56)||LA151_0==88||(LA151_0>=112 && LA151_0<=113)||(LA151_0>=121 && LA151_0<=122)||(LA151_0>=124 && LA151_0<=136)||LA151_0==148||LA151_0==150||(LA151_0>=152 && LA151_0<=154)||(LA151_0>=156 && LA151_0<=164)||(LA151_0>=167 && LA151_0<=175)||(LA151_0>=182 && LA151_0<=184)) ) {s = 1;}

                        else if ( (LA151_0==102) ) {s = 2;}

                        else if ( LA151_0 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {s = 3;}

                        else if ( LA151_0 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA151_0 == 23 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 5;}

                        else if ( LA151_0 == 33 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 6;}

                        else if ( LA151_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 7;}

                        else if ( LA151_0 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 8;}

                        else if ( LA151_0 == 100 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 9;}

                        else if ( LA151_0 == 101 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 10;}

                        else if ( LA151_0 == 232 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {s = 11;}

                        else if ( LA151_0 == 233 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {s = 12;}

                        else if ( LA151_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {s = 13;}

                         
                        input.seek(index151_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA151_14 = input.LA(1);

                         
                        int index151_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA151_14==89||LA151_14==93) ) {s = 1;}

                        else if ( LA151_14 == EOF && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 15;}

                        else if ( LA151_14 == 25 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 16;}

                        else if ( LA151_14 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 17;}

                        else if ( LA151_14 == 28 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 18;}

                        else if ( LA151_14 == 29 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 19;}

                        else if ( LA151_14 == 30 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 20;}

                        else if ( LA151_14 == 31 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 21;}

                        else if ( LA151_14 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 22;}

                        else if ( LA151_14 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 23;}

                        else if ( LA151_14 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 24;}

                        else if ( LA151_14 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 25;}

                        else if ( LA151_14 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 26;}

                        else if ( LA151_14 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 27;}

                        else if ( LA151_14 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 28;}

                        else if ( LA151_14 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 29;}

                        else if ( LA151_14 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 30;}

                        else if ( LA151_14 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 31;}

                        else if ( LA151_14 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 32;}

                        else if ( LA151_14 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 33;}

                        else if ( LA151_14 == 122 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 34;}

                        else if ( LA151_14 == 112 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 35;}

                        else if ( LA151_14 == 113 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 36;}

                        else if ( LA151_14 == 124 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 37;}

                        else if ( LA151_14 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 38;}

                        else if ( LA151_14 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 39;}

                        else if ( LA151_14 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 40;}

                        else if ( LA151_14 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 41;}

                        else if ( LA151_14 == 129 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 42;}

                        else if ( LA151_14 == 130 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 43;}

                        else if ( LA151_14 == 131 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 44;}

                        else if ( LA151_14 == 132 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 45;}

                        else if ( LA151_14 == 133 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 46;}

                        else if ( LA151_14 == 134 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 47;}

                        else if ( LA151_14 == 135 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 48;}

                        else if ( LA151_14 == 136 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 49;}

                        else if ( LA151_14 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 50;}

                        else if ( LA151_14 == 102 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 51;}

                        else if ( LA151_14 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 52;}

                        else if ( LA151_14 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 53;}

                        else if ( LA151_14 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 54;}

                        else if ( LA151_14 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 55;}

                        else if ( LA151_14 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 56;}

                        else if ( LA151_14 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 57;}

                        else if ( LA151_14 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 58;}

                        else if ( LA151_14 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 59;}

                        else if ( LA151_14 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 60;}

                        else if ( LA151_14 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 61;}

                        else if ( LA151_14 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 62;}

                        else if ( LA151_14 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 63;}

                        else if ( LA151_14 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 64;}

                        else if ( LA151_14 == 164 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 65;}

                        else if ( LA151_14 == 167 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 66;}

                        else if ( LA151_14 == 168 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 67;}

                        else if ( LA151_14 == 169 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 68;}

                        else if ( LA151_14 == 170 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 69;}

                        else if ( LA151_14 == 171 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 70;}

                        else if ( LA151_14 == 172 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 71;}

                        else if ( LA151_14 == 173 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 72;}

                        else if ( LA151_14 == 174 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 73;}

                        else if ( LA151_14 == 175 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 74;}

                        else if ( LA151_14 == 182 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 75;}

                        else if ( LA151_14 == 183 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 76;}

                        else if ( LA151_14 == 184 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 77;}

                        else if ( LA151_14 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 78;}

                        else if ( LA151_14 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 79;}

                        else if ( LA151_14 == 23 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 80;}

                        else if ( LA151_14 == 33 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 81;}

                        else if ( LA151_14 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 82;}

                        else if ( LA151_14 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 83;}

                        else if ( LA151_14 == 100 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 84;}

                        else if ( LA151_14 == 101 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 85;}

                        else if ( LA151_14 == 232 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 86;}

                        else if ( LA151_14 == 233 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 87;}

                        else if ( LA151_14 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 88;}

                         
                        input.seek(index151_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 151, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_121s = "\15\uffff";
    static final String dfa_122s = "\1\3\1\uffff\1\3\12\uffff";
    static final String dfa_123s = "\1\4\1\0\1\5\1\uffff\1\27\1\uffff\2\5\1\27\1\131\1\0\1\5\1\131";
    static final String dfa_124s = "\1\u00ef\1\0\1\u00ef\1\uffff\1\135\1\uffff\2\12\2\135\1\0\1\12\1\135";
    static final String dfa_125s = "\3\uffff\1\1\1\uffff\1\2\7\uffff";
    static final String dfa_126s = "\1\uffff\1\1\10\uffff\1\0\2\uffff}>";
    static final String[] dfa_127s = {
            "\1\5\1\2\1\3\2\uffff\1\1\1\4\1\uffff\1\3\6\uffff\1\3\3\uffff\1\3\1\uffff\1\3\2\uffff\4\3\1\uffff\1\3\1\uffff\2\3\1\uffff\3\3\7\uffff\1\3\5\uffff\3\3\37\uffff\1\3\3\uffff\1\3\4\uffff\6\3\11\uffff\2\3\7\uffff\2\3\1\uffff\15\3\13\uffff\1\3\1\uffff\1\3\1\uffff\3\3\1\uffff\11\3\2\uffff\11\3\6\uffff\3\3\57\uffff\2\3\5\uffff\1\3",
            "\1\uffff",
            "\2\3\2\uffff\2\3\1\uffff\1\3\6\uffff\1\3\3\uffff\1\3\1\uffff\1\3\2\uffff\4\3\1\uffff\1\3\1\uffff\2\3\1\uffff\3\3\7\uffff\1\3\4\uffff\4\3\37\uffff\1\3\1\7\2\uffff\1\3\1\6\3\uffff\6\3\11\uffff\2\3\7\uffff\2\3\1\uffff\15\3\13\uffff\1\3\1\uffff\1\3\1\uffff\3\3\1\uffff\11\3\2\uffff\11\3\6\uffff\3\3\57\uffff\2\3\5\uffff\1\3",
            "",
            "\1\3\35\uffff\1\3\43\uffff\1\7\2\uffff\1\3\1\6",
            "",
            "\1\10\4\uffff\1\11",
            "\1\3\3\uffff\1\12\1\3",
            "\1\3\35\uffff\1\3\43\uffff\1\7\3\uffff\1\13",
            "\1\7\3\uffff\1\13",
            "\1\uffff",
            "\1\14\4\uffff\1\11",
            "\1\7\3\uffff\1\13"
    };

    static final short[] dfa_121 = DFA.unpackEncodedString(dfa_121s);
    static final short[] dfa_122 = DFA.unpackEncodedString(dfa_122s);
    static final char[] dfa_123 = DFA.unpackEncodedStringToUnsignedChars(dfa_123s);
    static final char[] dfa_124 = DFA.unpackEncodedStringToUnsignedChars(dfa_124s);
    static final short[] dfa_125 = DFA.unpackEncodedString(dfa_125s);
    static final short[] dfa_126 = DFA.unpackEncodedString(dfa_126s);
    static final short[][] dfa_127 = unpackEncodedStringArray(dfa_127s);

    class DFA148 extends DFA {

        public DFA148(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 148;
            this.eot = dfa_121;
            this.eof = dfa_122;
            this.min = dfa_123;
            this.max = dfa_124;
            this.accept = dfa_125;
            this.special = dfa_126;
            this.transition = dfa_127;
        }
        public String getDescription() {
            return "6254:10: ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA148_10 = input.LA(1);

                         
                        int index148_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_InternalKim()) ) {s = 3;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index148_10);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA148_1 = input.LA(1);

                         
                        int index148_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_InternalKim()) ) {s = 3;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index148_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 148, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_128s = "\1\uffff\2\4\3\uffff\2\4";
    static final String dfa_129s = "\1\4\2\23\2\uffff\1\5\2\23";
    static final String dfa_130s = "\1\u00e9\2\135\2\uffff\1\12\2\135";
    static final String[] dfa_131s = {
            "\1\3\1\1\1\3\1\uffff\2\3\1\2\2\3\14\uffff\3\3\10\uffff\1\3\14\uffff\2\3\55\uffff\1\3\17\uffff\2\3\7\uffff\2\3\1\uffff\15\3\66\uffff\1\3\50\uffff\2\3",
            "\1\4\3\uffff\1\3\1\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\3\3\uffff\1\4\15\uffff\3\4\40\uffff\1\3\3\uffff\1\5",
            "\1\4\5\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\3\3\uffff\1\4\15\uffff\3\4\40\uffff\1\3\3\uffff\1\5",
            "",
            "",
            "\1\6\4\uffff\1\7",
            "\1\4\5\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\3\3\uffff\1\4\15\uffff\3\4\40\uffff\1\3\3\uffff\1\5",
            "\1\4\5\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\3\3\uffff\1\4\15\uffff\3\4\40\uffff\1\3\3\uffff\1\5"
    };
    static final short[] dfa_128 = DFA.unpackEncodedString(dfa_128s);
    static final char[] dfa_129 = DFA.unpackEncodedStringToUnsignedChars(dfa_129s);
    static final char[] dfa_130 = DFA.unpackEncodedStringToUnsignedChars(dfa_130s);
    static final short[][] dfa_131 = unpackEncodedStringArray(dfa_131s);

    class DFA153 extends DFA {

        public DFA153(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 153;
            this.eot = dfa_43;
            this.eof = dfa_128;
            this.min = dfa_129;
            this.max = dfa_130;
            this.accept = dfa_47;
            this.special = dfa_48;
            this.transition = dfa_131;
        }
        public String getDescription() {
            return "6472:2: ( ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) ) | ( (lv_observable_1_0= ruleObservableSemantics ) ) )";
        }
    }
    static final String dfa_132s = "\150\uffff";
    static final String dfa_133s = "\1\1\147\uffff";
    static final String dfa_134s = "\1\5\31\uffff\1\0\10\uffff\2\0\1\uffff\22\0\60\uffff";
    static final String dfa_135s = "\1\u00e9\31\uffff\1\0\10\uffff\2\0\1\uffff\22\0\60\uffff";
    static final String dfa_136s = "\1\uffff\1\2\145\uffff\1\1";
    static final String dfa_137s = "\32\uffff\1\0\10\uffff\1\1\1\2\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\60\uffff}>";
    static final String[] dfa_138s = {
            "\1\43\1\1\2\uffff\1\46\1\44\1\uffff\1\1\6\uffff\1\1\3\uffff\1\1\1\uffff\1\1\2\uffff\4\1\1\uffff\3\1\1\32\2\uffff\2\1\2\uffff\3\1\2\uffff\1\1\2\uffff\2\1\1\uffff\3\1\7\uffff\5\1\23\uffff\2\1\7\uffff\17\1\1\51\1\52\6\uffff\1\1\1\47\1\50\1\uffff\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\3\1\10\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\11\1\1\uffff\12\1\1\uffff\1\1\4\uffff\3\1\5\uffff\1\1\51\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_132 = DFA.unpackEncodedString(dfa_132s);
    static final short[] dfa_133 = DFA.unpackEncodedString(dfa_133s);
    static final char[] dfa_134 = DFA.unpackEncodedStringToUnsignedChars(dfa_134s);
    static final char[] dfa_135 = DFA.unpackEncodedStringToUnsignedChars(dfa_135s);
    static final short[] dfa_136 = DFA.unpackEncodedString(dfa_136s);
    static final short[] dfa_137 = DFA.unpackEncodedString(dfa_137s);
    static final short[][] dfa_138 = unpackEncodedStringArray(dfa_138s);

    class DFA154 extends DFA {

        public DFA154(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 154;
            this.eot = dfa_132;
            this.eof = dfa_133;
            this.min = dfa_134;
            this.max = dfa_135;
            this.accept = dfa_136;
            this.special = dfa_137;
            this.transition = dfa_138;
        }
        public String getDescription() {
            return "()+ loopback of 6558:3: ( (lv_main_0_0= ruleConcept ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA154_26 = input.LA(1);

                         
                        int index154_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_26);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA154_35 = input.LA(1);

                         
                        int index154_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_35);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA154_36 = input.LA(1);

                         
                        int index154_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_36);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA154_38 = input.LA(1);

                         
                        int index154_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_38);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA154_39 = input.LA(1);

                         
                        int index154_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_39);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA154_40 = input.LA(1);

                         
                        int index154_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_40);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA154_41 = input.LA(1);

                         
                        int index154_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_41);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA154_42 = input.LA(1);

                         
                        int index154_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_42);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA154_43 = input.LA(1);

                         
                        int index154_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_43);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA154_44 = input.LA(1);

                         
                        int index154_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_44);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA154_45 = input.LA(1);

                         
                        int index154_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_45);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA154_46 = input.LA(1);

                         
                        int index154_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_46);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA154_47 = input.LA(1);

                         
                        int index154_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_47);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA154_48 = input.LA(1);

                         
                        int index154_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_48);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA154_49 = input.LA(1);

                         
                        int index154_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_49);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA154_50 = input.LA(1);

                         
                        int index154_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_50);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA154_51 = input.LA(1);

                         
                        int index154_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_51);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA154_52 = input.LA(1);

                         
                        int index154_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_52);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA154_53 = input.LA(1);

                         
                        int index154_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_53);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA154_54 = input.LA(1);

                         
                        int index154_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_54);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA154_55 = input.LA(1);

                         
                        int index154_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_55);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 154, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_139s = "\1\24\147\uffff";
    static final String dfa_140s = "\1\5\2\uffff\1\0\7\uffff\134\0\1\uffff";
    static final String dfa_141s = "\1\u00e9\2\uffff\1\0\7\uffff\134\0\1\uffff";
    static final String dfa_142s = "\1\uffff\1\1\145\uffff\1\2";
    static final String dfa_143s = "\3\uffff\1\0\7\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\uffff}>";
    static final String[] dfa_144s = {
            "\1\43\1\45\2\uffff\1\46\1\44\1\uffff\1\101\6\uffff\1\23\3\uffff\1\72\1\uffff\1\16\2\uffff\1\40\1\41\1\103\1\104\1\uffff\1\73\1\143\1\17\1\32\2\uffff\1\25\1\3\2\uffff\1\13\1\14\1\15\2\uffff\1\31\2\uffff\1\30\1\27\1\uffff\1\20\1\21\1\22\7\uffff\1\33\1\34\1\35\1\36\1\37\23\uffff\1\42\1\26\7\uffff\1\70\1\71\1\74\1\75\1\76\1\102\11\1\1\51\1\52\6\uffff\1\146\1\47\1\50\1\uffff\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\141\1\137\1\140\10\uffff\1\105\1\uffff\1\106\1\uffff\1\107\1\110\1\111\1\uffff\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\121\1\122\1\uffff\1\142\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\uffff\1\144\4\uffff\1\134\1\135\1\136\5\uffff\1\145\51\uffff\1\77\1\100",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final short[] dfa_139 = DFA.unpackEncodedString(dfa_139s);
    static final char[] dfa_140 = DFA.unpackEncodedStringToUnsignedChars(dfa_140s);
    static final char[] dfa_141 = DFA.unpackEncodedStringToUnsignedChars(dfa_141s);
    static final short[] dfa_142 = DFA.unpackEncodedString(dfa_142s);
    static final short[] dfa_143 = DFA.unpackEncodedString(dfa_143s);
    static final short[][] dfa_144 = unpackEncodedStringArray(dfa_144s);

    class DFA156 extends DFA {

        public DFA156(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 156;
            this.eot = dfa_132;
            this.eof = dfa_139;
            this.min = dfa_140;
            this.max = dfa_141;
            this.accept = dfa_142;
            this.special = dfa_143;
            this.transition = dfa_144;
        }
        public String getDescription() {
            return "6577:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA156_3 = input.LA(1);

                         
                        int index156_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA156_11 = input.LA(1);

                         
                        int index156_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_11);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA156_12 = input.LA(1);

                         
                        int index156_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_12);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA156_13 = input.LA(1);

                         
                        int index156_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA156_14 = input.LA(1);

                         
                        int index156_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_14);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA156_15 = input.LA(1);

                         
                        int index156_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_15);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA156_16 = input.LA(1);

                         
                        int index156_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_16);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA156_17 = input.LA(1);

                         
                        int index156_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_17);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA156_18 = input.LA(1);

                         
                        int index156_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_18);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA156_19 = input.LA(1);

                         
                        int index156_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_19);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA156_20 = input.LA(1);

                         
                        int index156_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_20);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA156_21 = input.LA(1);

                         
                        int index156_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_21);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA156_22 = input.LA(1);

                         
                        int index156_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_22);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA156_23 = input.LA(1);

                         
                        int index156_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_23);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA156_24 = input.LA(1);

                         
                        int index156_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_24);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA156_25 = input.LA(1);

                         
                        int index156_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_25);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA156_26 = input.LA(1);

                         
                        int index156_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_26);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA156_27 = input.LA(1);

                         
                        int index156_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_27);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA156_28 = input.LA(1);

                         
                        int index156_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_28);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA156_29 = input.LA(1);

                         
                        int index156_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_29);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA156_30 = input.LA(1);

                         
                        int index156_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_30);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA156_31 = input.LA(1);

                         
                        int index156_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_31);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA156_32 = input.LA(1);

                         
                        int index156_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_32);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA156_33 = input.LA(1);

                         
                        int index156_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_33);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA156_34 = input.LA(1);

                         
                        int index156_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_34);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA156_35 = input.LA(1);

                         
                        int index156_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_35);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA156_36 = input.LA(1);

                         
                        int index156_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_36);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA156_37 = input.LA(1);

                         
                        int index156_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_37);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA156_38 = input.LA(1);

                         
                        int index156_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_38);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA156_39 = input.LA(1);

                         
                        int index156_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_39);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA156_40 = input.LA(1);

                         
                        int index156_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_40);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA156_41 = input.LA(1);

                         
                        int index156_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_41);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA156_42 = input.LA(1);

                         
                        int index156_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_42);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA156_43 = input.LA(1);

                         
                        int index156_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_43);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA156_44 = input.LA(1);

                         
                        int index156_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_44);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA156_45 = input.LA(1);

                         
                        int index156_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_45);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA156_46 = input.LA(1);

                         
                        int index156_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_46);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA156_47 = input.LA(1);

                         
                        int index156_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_47);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA156_48 = input.LA(1);

                         
                        int index156_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_48);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA156_49 = input.LA(1);

                         
                        int index156_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_49);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA156_50 = input.LA(1);

                         
                        int index156_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_50);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA156_51 = input.LA(1);

                         
                        int index156_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_51);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA156_52 = input.LA(1);

                         
                        int index156_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_52);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA156_53 = input.LA(1);

                         
                        int index156_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_53);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA156_54 = input.LA(1);

                         
                        int index156_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_54);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA156_55 = input.LA(1);

                         
                        int index156_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_55);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA156_56 = input.LA(1);

                         
                        int index156_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_56);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA156_57 = input.LA(1);

                         
                        int index156_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_57);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA156_58 = input.LA(1);

                         
                        int index156_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_58);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA156_59 = input.LA(1);

                         
                        int index156_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_59);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA156_60 = input.LA(1);

                         
                        int index156_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_60);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA156_61 = input.LA(1);

                         
                        int index156_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_61);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA156_62 = input.LA(1);

                         
                        int index156_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_62);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA156_63 = input.LA(1);

                         
                        int index156_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_63);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA156_64 = input.LA(1);

                         
                        int index156_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_64);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA156_65 = input.LA(1);

                         
                        int index156_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_65);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA156_66 = input.LA(1);

                         
                        int index156_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_66);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA156_67 = input.LA(1);

                         
                        int index156_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_67);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA156_68 = input.LA(1);

                         
                        int index156_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_68);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA156_69 = input.LA(1);

                         
                        int index156_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_69);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA156_70 = input.LA(1);

                         
                        int index156_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_70);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA156_71 = input.LA(1);

                         
                        int index156_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_71);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA156_72 = input.LA(1);

                         
                        int index156_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_72);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA156_73 = input.LA(1);

                         
                        int index156_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_73);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA156_74 = input.LA(1);

                         
                        int index156_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_74);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA156_75 = input.LA(1);

                         
                        int index156_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_75);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA156_76 = input.LA(1);

                         
                        int index156_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_76);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA156_77 = input.LA(1);

                         
                        int index156_77 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_77);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA156_78 = input.LA(1);

                         
                        int index156_78 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_78);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA156_79 = input.LA(1);

                         
                        int index156_79 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_79);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA156_80 = input.LA(1);

                         
                        int index156_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_80);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA156_81 = input.LA(1);

                         
                        int index156_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_81);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA156_82 = input.LA(1);

                         
                        int index156_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_82);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA156_83 = input.LA(1);

                         
                        int index156_83 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_83);
                        if ( s>=0 ) return s;
                        break;
                    case 74 : 
                        int LA156_84 = input.LA(1);

                         
                        int index156_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_84);
                        if ( s>=0 ) return s;
                        break;
                    case 75 : 
                        int LA156_85 = input.LA(1);

                         
                        int index156_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_85);
                        if ( s>=0 ) return s;
                        break;
                    case 76 : 
                        int LA156_86 = input.LA(1);

                         
                        int index156_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_86);
                        if ( s>=0 ) return s;
                        break;
                    case 77 : 
                        int LA156_87 = input.LA(1);

                         
                        int index156_87 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_87);
                        if ( s>=0 ) return s;
                        break;
                    case 78 : 
                        int LA156_88 = input.LA(1);

                         
                        int index156_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_88);
                        if ( s>=0 ) return s;
                        break;
                    case 79 : 
                        int LA156_89 = input.LA(1);

                         
                        int index156_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_89);
                        if ( s>=0 ) return s;
                        break;
                    case 80 : 
                        int LA156_90 = input.LA(1);

                         
                        int index156_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_90);
                        if ( s>=0 ) return s;
                        break;
                    case 81 : 
                        int LA156_91 = input.LA(1);

                         
                        int index156_91 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_91);
                        if ( s>=0 ) return s;
                        break;
                    case 82 : 
                        int LA156_92 = input.LA(1);

                         
                        int index156_92 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_92);
                        if ( s>=0 ) return s;
                        break;
                    case 83 : 
                        int LA156_93 = input.LA(1);

                         
                        int index156_93 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_93);
                        if ( s>=0 ) return s;
                        break;
                    case 84 : 
                        int LA156_94 = input.LA(1);

                         
                        int index156_94 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_94);
                        if ( s>=0 ) return s;
                        break;
                    case 85 : 
                        int LA156_95 = input.LA(1);

                         
                        int index156_95 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_95);
                        if ( s>=0 ) return s;
                        break;
                    case 86 : 
                        int LA156_96 = input.LA(1);

                         
                        int index156_96 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_96);
                        if ( s>=0 ) return s;
                        break;
                    case 87 : 
                        int LA156_97 = input.LA(1);

                         
                        int index156_97 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_97);
                        if ( s>=0 ) return s;
                        break;
                    case 88 : 
                        int LA156_98 = input.LA(1);

                         
                        int index156_98 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_98);
                        if ( s>=0 ) return s;
                        break;
                    case 89 : 
                        int LA156_99 = input.LA(1);

                         
                        int index156_99 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_99);
                        if ( s>=0 ) return s;
                        break;
                    case 90 : 
                        int LA156_100 = input.LA(1);

                         
                        int index156_100 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_100);
                        if ( s>=0 ) return s;
                        break;
                    case 91 : 
                        int LA156_101 = input.LA(1);

                         
                        int index156_101 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_101);
                        if ( s>=0 ) return s;
                        break;
                    case 92 : 
                        int LA156_102 = input.LA(1);

                         
                        int index156_102 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 103;}

                         
                        input.seek(index156_102);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 156, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_145s = "\1\5\10\uffff\1\0\136\uffff";
    static final String dfa_146s = "\1\u00e9\10\uffff\1\0\136\uffff";
    static final String dfa_147s = "\1\uffff\1\13\134\uffff\1\1\1\2\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\3";
    static final String dfa_148s = "\1\0\10\uffff\1\1\136\uffff}>";
    static final String[] dfa_149s = {
            "\2\1\2\uffff\2\1\1\uffff\1\1\6\uffff\1\1\3\uffff\1\1\1\uffff\1\1\2\uffff\4\1\1\uffff\4\1\2\uffff\1\1\1\11\2\uffff\3\1\2\uffff\1\1\2\uffff\2\1\1\uffff\3\1\7\uffff\5\1\23\uffff\2\1\7\uffff\6\1\1\136\1\137\1\140\1\141\1\142\1\143\1\144\1\145\1\146\2\1\6\uffff\3\1\1\uffff\20\1\10\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\11\1\1\uffff\12\1\1\uffff\1\1\4\uffff\3\1\5\uffff\1\1\51\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_145 = DFA.unpackEncodedStringToUnsignedChars(dfa_145s);
    static final char[] dfa_146 = DFA.unpackEncodedStringToUnsignedChars(dfa_146s);
    static final short[] dfa_147 = DFA.unpackEncodedString(dfa_147s);
    static final short[] dfa_148 = DFA.unpackEncodedString(dfa_148s);
    static final short[][] dfa_149 = unpackEncodedStringArray(dfa_149s);

    class DFA155 extends DFA {

        public DFA155(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 155;
            this.eot = dfa_132;
            this.eof = dfa_133;
            this.min = dfa_145;
            this.max = dfa_146;
            this.accept = dfa_147;
            this.special = dfa_148;
            this.transition = dfa_149;
        }
        public String getDescription() {
            return "()* loopback of 6583:6: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA155_0 = input.LA(1);

                         
                        int index155_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA155_0==EOF||(LA155_0>=RULE_LOWERCASE_ID && LA155_0<=RULE_STRING)||(LA155_0>=RULE_CAMELCASE_ID && LA155_0<=RULE_LOWERCASE_DASHID)||LA155_0==RULE_INT||LA155_0==19||LA155_0==23||LA155_0==25||(LA155_0>=28 && LA155_0<=31)||(LA155_0>=33 && LA155_0<=36)||LA155_0==39||(LA155_0>=43 && LA155_0<=45)||LA155_0==48||(LA155_0>=51 && LA155_0<=52)||(LA155_0>=54 && LA155_0<=56)||(LA155_0>=64 && LA155_0<=68)||(LA155_0>=88 && LA155_0<=89)||(LA155_0>=97 && LA155_0<=102)||(LA155_0>=112 && LA155_0<=113)||(LA155_0>=120 && LA155_0<=122)||(LA155_0>=124 && LA155_0<=139)||LA155_0==148||LA155_0==150||(LA155_0>=152 && LA155_0<=154)||(LA155_0>=156 && LA155_0<=164)||(LA155_0>=166 && LA155_0<=175)||LA155_0==177||(LA155_0>=182 && LA155_0<=184)||LA155_0==190||(LA155_0>=232 && LA155_0<=233)) ) {s = 1;}

                        else if ( (LA155_0==40) ) {s = 9;}

                        else if ( LA155_0 == 103 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {s = 94;}

                        else if ( LA155_0 == 104 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {s = 95;}

                        else if ( LA155_0 == 105 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {s = 96;}

                        else if ( LA155_0 == 106 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {s = 97;}

                        else if ( LA155_0 == 107 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {s = 98;}

                        else if ( LA155_0 == 108 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {s = 99;}

                        else if ( LA155_0 == 109 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {s = 100;}

                        else if ( LA155_0 == 110 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {s = 101;}

                        else if ( LA155_0 == 111 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {s = 102;}

                         
                        input.seek(index155_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA155_9 = input.LA(1);

                         
                        int index155_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred257_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index155_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 155, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_150s = "\30\uffff";
    static final String dfa_151s = "\1\1\27\uffff";
    static final String dfa_152s = "\1\5\1\uffff\25\0\1\uffff";
    static final String dfa_153s = "\1\u00e9\1\uffff\25\0\1\uffff";
    static final String dfa_154s = "\1\uffff\1\2\25\uffff\1\1";
    static final String dfa_155s = "\2\uffff\1\4\1\6\1\23\1\21\1\0\1\7\1\24\1\3\1\1\1\2\1\22\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\10\1\11\1\5\1\uffff}>";
    static final String[] dfa_156s = {
            "\1\3\1\1\2\uffff\1\5\1\4\1\uffff\1\1\6\uffff\1\1\3\uffff\1\1\1\uffff\1\1\2\uffff\4\1\1\uffff\3\1\1\2\2\uffff\2\1\2\uffff\3\1\2\uffff\1\1\2\uffff\2\1\1\uffff\3\1\7\uffff\5\1\11\uffff\2\1\2\uffff\3\1\1\uffff\1\1\1\uffff\2\1\7\uffff\17\1\1\10\1\11\6\uffff\1\1\1\6\1\7\1\uffff\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\3\1\10\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\11\1\1\uffff\12\1\1\uffff\1\1\4\uffff\3\1\5\uffff\1\1\51\uffff\2\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_150 = DFA.unpackEncodedString(dfa_150s);
    static final short[] dfa_151 = DFA.unpackEncodedString(dfa_151s);
    static final char[] dfa_152 = DFA.unpackEncodedStringToUnsignedChars(dfa_152s);
    static final char[] dfa_153 = DFA.unpackEncodedStringToUnsignedChars(dfa_153s);
    static final short[] dfa_154 = DFA.unpackEncodedString(dfa_154s);
    static final short[] dfa_155 = DFA.unpackEncodedString(dfa_155s);
    static final short[][] dfa_156 = unpackEncodedStringArray(dfa_156s);

    class DFA185 extends DFA {

        public DFA185(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 185;
            this.eot = dfa_150;
            this.eof = dfa_151;
            this.min = dfa_152;
            this.max = dfa_153;
            this.accept = dfa_154;
            this.special = dfa_155;
            this.transition = dfa_156;
        }
        public String getDescription() {
            return "()+ loopback of 8779:3: ( (lv_main_1_0= ruleConcept ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA185_6 = input.LA(1);

                         
                        int index185_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred326_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index185_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA185_10 = input.LA(1);

                         
                        int index185_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred326_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index185_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA185_11 = input.LA(1);

                         
                        int index185_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred326_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index185_11);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA185_9 = input.LA(1);

                         
                        int index185_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred326_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index185_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA185_2 = input.LA(1);

                         
                        int index185_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred326_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index185_2);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA185_22 = input.LA(1);

                         
                        int index185_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred326_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index185_22);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA185_3 = input.LA(1);

                         
                        int index185_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred326_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index185_3);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA185_7 = input.LA(1);

                         
                        int index185_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred326_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index185_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA185_20 = input.LA(1);

                         
                        int index185_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred326_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index185_20);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA185_21 = input.LA(1);

                         
                        int index185_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred326_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index185_21);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA185_13 = input.LA(1);

                         
                        int index185_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred326_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index185_13);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA185_14 = input.LA(1);

                         
                        int index185_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred326_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index185_14);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA185_15 = input.LA(1);

                         
                        int index185_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred326_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index185_15);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA185_16 = input.LA(1);

                         
                        int index185_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred326_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index185_16);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA185_17 = input.LA(1);

                         
                        int index185_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred326_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index185_17);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA185_18 = input.LA(1);

                         
                        int index185_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred326_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index185_18);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA185_19 = input.LA(1);

                         
                        int index185_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred326_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index185_19);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA185_5 = input.LA(1);

                         
                        int index185_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred326_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index185_5);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA185_12 = input.LA(1);

                         
                        int index185_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred326_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index185_12);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA185_4 = input.LA(1);

                         
                        int index185_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred326_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index185_4);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA185_8 = input.LA(1);

                         
                        int index185_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred326_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index185_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 185, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_157s = "\1\5\2\131\2\5\2\131\2\uffff";
    static final String dfa_158s = "\1\12\2\135\2\12\2\135\2\uffff";
    static final String dfa_159s = "\7\uffff\1\1\1\2";
    static final String[] dfa_160s = {
            "\1\1\4\uffff\1\2",
            "\1\4\3\uffff\1\3",
            "\1\4\3\uffff\1\3",
            "\1\5\4\uffff\1\6",
            "\1\10\3\uffff\1\7\1\10",
            "\1\4\3\uffff\1\3",
            "\1\4\3\uffff\1\3",
            "",
            ""
    };
    static final char[] dfa_157 = DFA.unpackEncodedStringToUnsignedChars(dfa_157s);
    static final char[] dfa_158 = DFA.unpackEncodedStringToUnsignedChars(dfa_158s);
    static final short[] dfa_159 = DFA.unpackEncodedString(dfa_159s);
    static final short[][] dfa_160 = unpackEncodedStringArray(dfa_160s);

    class DFA190 extends DFA {

        public DFA190(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 190;
            this.eot = dfa_77;
            this.eof = dfa_77;
            this.min = dfa_157;
            this.max = dfa_158;
            this.accept = dfa_159;
            this.special = dfa_81;
            this.transition = dfa_160;
        }
        public String getDescription() {
            return "8940:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )";
        }
    }
    static final String dfa_161s = "\7\uffff\1\2\1\1";
    static final short[] dfa_161 = DFA.unpackEncodedString(dfa_161s);

    class DFA191 extends DFA {

        public DFA191(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 191;
            this.eot = dfa_77;
            this.eof = dfa_77;
            this.min = dfa_157;
            this.max = dfa_158;
            this.accept = dfa_161;
            this.special = dfa_81;
            this.transition = dfa_160;
        }
        public String getDescription() {
            return "9003:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )";
        }
    }
    static final String dfa_162s = "\1\120\11\uffff";
    static final String dfa_163s = "\1\u00e1\11\uffff";
    static final String dfa_164s = "\1\uffff\1\5\1\1\1\2\1\3\5\4";
    static final String dfa_165s = "\1\0\11\uffff}>";
    static final String[] dfa_166s = {
            "\1\1\73\uffff\1\5\1\6\1\7\2\1\1\2\1\3\1\4\21\uffff\1\1\14\uffff\4\1\14\uffff\36\1\1\10\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_162 = DFA.unpackEncodedStringToUnsignedChars(dfa_162s);
    static final char[] dfa_163 = DFA.unpackEncodedStringToUnsignedChars(dfa_163s);
    static final short[] dfa_164 = DFA.unpackEncodedString(dfa_164s);
    static final short[] dfa_165 = DFA.unpackEncodedString(dfa_165s);
    static final short[][] dfa_166 = unpackEncodedStringArray(dfa_166s);

    class DFA197 extends DFA {

        public DFA197(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 197;
            this.eot = dfa_101;
            this.eof = dfa_101;
            this.min = dfa_162;
            this.max = dfa_163;
            this.accept = dfa_164;
            this.special = dfa_165;
            this.transition = dfa_166;
        }
        public String getDescription() {
            return "()* loopback of 9094:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA197_0 = input.LA(1);

                         
                        int index197_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA197_0==80||(LA197_0>=143 && LA197_0<=144)||LA197_0==165||(LA197_0>=178 && LA197_0<=181)||(LA197_0>=194 && LA197_0<=223)) ) {s = 1;}

                        else if ( LA197_0 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA197_0 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA197_0 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA197_0 == 140 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA197_0 == 141 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 6;}

                        else if ( LA197_0 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( LA197_0 == 224 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 8;}

                        else if ( LA197_0 == 225 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 9;}

                         
                        input.seek(index197_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 197, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_167s = "\76\uffff";
    static final String dfa_168s = "\1\1\75\uffff";
    static final String dfa_169s = "\1\6\17\uffff\1\5\55\uffff";
    static final String dfa_170s = "\1\u00b8\17\uffff\1\u00ee\55\uffff";
    static final String dfa_171s = "\1\uffff\1\30\1\1\2\2\2\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\uffff\1\16\3\17\1\20\1\21\1\22\1\23\1\24\3\26\1\27\2\25\1\15\35\26";
    static final String dfa_172s = "\1\1\17\uffff\1\0\55\uffff}>";
    static final String[] dfa_173s = {
            "\1\2\14\uffff\1\1\23\uffff\1\1\1\35\75\uffff\1\1\55\uffff\1\3\1\uffff\1\4\1\uffff\1\5\1\6\1\7\1\uffff\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\2\uffff\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\6\uffff\1\32\1\33\1\34",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\47\3\uffff\1\46\1\50\31\uffff\1\70\44\uffff\1\71\1\74\7\uffff\1\36\35\uffff\1\51\1\52\7\uffff\1\45\1\42\1\uffff\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\34\uffff\1\40\12\uffff\1\37\10\uffff\1\41\1\43\1\44\60\uffff\1\72\1\73\1\75",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_167 = DFA.unpackEncodedString(dfa_167s);
    static final short[] dfa_168 = DFA.unpackEncodedString(dfa_168s);
    static final char[] dfa_169 = DFA.unpackEncodedStringToUnsignedChars(dfa_169s);
    static final char[] dfa_170 = DFA.unpackEncodedStringToUnsignedChars(dfa_170s);
    static final short[] dfa_171 = DFA.unpackEncodedString(dfa_171s);
    static final short[] dfa_172 = DFA.unpackEncodedString(dfa_172s);
    static final short[][] dfa_173 = unpackEncodedStringArray(dfa_173s);

    class DFA232 extends DFA {

        public DFA232(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 232;
            this.eot = dfa_167;
            this.eof = dfa_168;
            this.min = dfa_169;
            this.max = dfa_170;
            this.accept = dfa_171;
            this.special = dfa_172;
            this.transition = dfa_173;
        }
        public String getDescription() {
            return "()* loopback of 9537:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA232_16 = input.LA(1);

                         
                        int index232_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA232_16 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {s = 30;}

                        else if ( LA232_16 == 176 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {s = 31;}

                        else if ( LA232_16 == 165 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {s = 32;}

                        else if ( LA232_16 == 185 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 33;}

                        else if ( LA232_16 == 122 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 34;}

                        else if ( LA232_16 == 186 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 35;}

                        else if ( LA232_16 == 187 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 36;}

                        else if ( LA232_16 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 37;}

                        else if ( LA232_16 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 38;}

                        else if ( LA232_16 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 39;}

                        else if ( LA232_16 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 40;}

                        else if ( LA232_16 == 112 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 41;}

                        else if ( LA232_16 == 113 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 42;}

                        else if ( LA232_16 == 124 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 43;}

                        else if ( LA232_16 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 44;}

                        else if ( LA232_16 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 45;}

                        else if ( LA232_16 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 46;}

                        else if ( LA232_16 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 47;}

                        else if ( LA232_16 == 129 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 48;}

                        else if ( LA232_16 == 130 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 49;}

                        else if ( LA232_16 == 131 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 50;}

                        else if ( LA232_16 == 132 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 51;}

                        else if ( LA232_16 == 133 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 52;}

                        else if ( LA232_16 == 134 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 53;}

                        else if ( LA232_16 == 135 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 54;}

                        else if ( LA232_16 == 136 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 55;}

                        else if ( LA232_16 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 56;}

                        else if ( LA232_16 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 57;}

                        else if ( LA232_16 == 236 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 58;}

                        else if ( LA232_16 == 237 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 59;}

                        else if ( LA232_16 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 60;}

                        else if ( LA232_16 == 238 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 61;}

                         
                        input.seek(index232_16);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA232_0 = input.LA(1);

                         
                        int index232_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA232_0==EOF||LA232_0==19||LA232_0==39||LA232_0==102) ) {s = 1;}

                        else if ( LA232_0 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {s = 2;}

                        else if ( LA232_0 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {s = 3;}

                        else if ( LA232_0 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA232_0 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {s = 5;}

                        else if ( LA232_0 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {s = 6;}

                        else if ( LA232_0 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {s = 7;}

                        else if ( LA232_0 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {s = 8;}

                        else if ( LA232_0 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {s = 9;}

                        else if ( LA232_0 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {s = 10;}

                        else if ( LA232_0 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {s = 11;}

                        else if ( LA232_0 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {s = 12;}

                        else if ( LA232_0 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {s = 13;}

                        else if ( LA232_0 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {s = 14;}

                        else if ( LA232_0 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {s = 15;}

                        else if ( (LA232_0==164) ) {s = 16;}

                        else if ( LA232_0 == 167 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {s = 17;}

                        else if ( LA232_0 == 168 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {s = 18;}

                        else if ( LA232_0 == 169 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {s = 19;}

                        else if ( LA232_0 == 170 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {s = 20;}

                        else if ( LA232_0 == 171 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {s = 21;}

                        else if ( LA232_0 == 172 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {s = 22;}

                        else if ( LA232_0 == 173 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {s = 23;}

                        else if ( LA232_0 == 174 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {s = 24;}

                        else if ( LA232_0 == 175 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {s = 25;}

                        else if ( LA232_0 == 182 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 26;}

                        else if ( LA232_0 == 183 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 27;}

                        else if ( LA232_0 == 184 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 28;}

                        else if ( LA232_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 29;}

                         
                        input.seek(index232_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 232, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_174s = "\3\uffff\1\11\7\uffff\1\11\2\uffff\1\11";
    static final String dfa_175s = "\1\6\2\14\1\31\2\uffff\3\14\2\uffff\1\31\2\14\1\31";
    static final String dfa_176s = "\1\u00e9\2\14\1\u00eb\2\uffff\1\14\2\u00e9\2\uffff\1\u00eb\2\14\1\170";
    static final String dfa_177s = "\4\uffff\1\3\1\4\3\uffff\1\2\1\1\4\uffff";
    static final String dfa_178s = "\17\uffff}>";
    static final String[] dfa_179s = {
            "\1\4\5\uffff\1\3\15\uffff\2\5\u00cc\uffff\1\1\1\2",
            "\1\3",
            "\1\3",
            "\1\11\10\uffff\1\12\4\uffff\1\11\65\uffff\1\6\12\uffff\1\11\17\uffff\1\11\161\uffff\1\7\1\10",
            "",
            "",
            "\1\13",
            "\1\16\u00db\uffff\1\14\1\15",
            "\1\16\u00db\uffff\1\14\1\15",
            "",
            "",
            "\1\11\10\uffff\1\12\4\uffff\1\11\100\uffff\1\11\17\uffff\1\11\161\uffff\1\7\1\10",
            "\1\16",
            "\1\16",
            "\1\11\10\uffff\1\12\4\uffff\1\11\100\uffff\1\11\17\uffff\1\11"
    };
    static final short[] dfa_174 = DFA.unpackEncodedString(dfa_174s);
    static final char[] dfa_175 = DFA.unpackEncodedStringToUnsignedChars(dfa_175s);
    static final char[] dfa_176 = DFA.unpackEncodedStringToUnsignedChars(dfa_176s);
    static final short[] dfa_177 = DFA.unpackEncodedString(dfa_177s);
    static final short[] dfa_178 = DFA.unpackEncodedString(dfa_178s);
    static final short[][] dfa_179 = unpackEncodedStringArray(dfa_179s);

    class DFA256 extends DFA {

        public DFA256(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 256;
            this.eot = dfa_20;
            this.eof = dfa_174;
            this.min = dfa_175;
            this.max = dfa_176;
            this.accept = dfa_177;
            this.special = dfa_178;
            this.transition = dfa_179;
        }
        public String getDescription() {
            return "11987:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )";
        }
    }
    static final String dfa_180s = "\21\uffff";
    static final String dfa_181s = "\3\uffff\1\13\11\uffff\1\13\2\uffff\1\13";
    static final String dfa_182s = "\1\6\2\14\1\4\4\uffff\3\14\2\uffff\1\4\2\14\1\4";
    static final String dfa_183s = "\1\u00e9\2\14\1\u00eb\4\uffff\1\14\2\u00e9\2\uffff\1\u00eb\2\14\1\u00e9";
    static final String dfa_184s = "\4\uffff\1\3\1\4\1\5\1\6\3\uffff\1\2\1\1\4\uffff";
    static final String dfa_185s = "\21\uffff}>";
    static final String[] dfa_186s = {
            "\1\4\4\uffff\1\6\1\3\14\uffff\1\7\2\5\u00cc\uffff\1\1\1\2",
            "\1\3",
            "\1\3",
            "\3\13\1\uffff\5\13\6\uffff\1\13\3\uffff\1\13\1\uffff\5\13\4\uffff\1\14\1\uffff\1\13\2\uffff\2\13\3\uffff\2\13\3\uffff\2\13\3\uffff\3\13\37\uffff\1\13\4\uffff\1\10\22\uffff\2\13\7\uffff\2\13\1\uffff\15\13\66\uffff\1\13\50\uffff\2\13\1\11\1\12",
            "",
            "",
            "",
            "",
            "\1\15",
            "\1\20\u00db\uffff\1\16\1\17",
            "\1\20\u00db\uffff\1\16\1\17",
            "",
            "",
            "\3\13\1\uffff\5\13\6\uffff\1\13\3\uffff\1\13\1\uffff\5\13\4\uffff\1\14\1\uffff\1\13\2\uffff\2\13\3\uffff\2\13\3\uffff\2\13\3\uffff\3\13\37\uffff\1\13\27\uffff\2\13\7\uffff\2\13\1\uffff\15\13\66\uffff\1\13\50\uffff\2\13\1\11\1\12",
            "\1\20",
            "\1\20",
            "\3\13\1\uffff\5\13\6\uffff\1\13\3\uffff\1\13\1\uffff\5\13\4\uffff\1\14\1\uffff\1\13\2\uffff\2\13\3\uffff\2\13\3\uffff\2\13\3\uffff\3\13\37\uffff\1\13\27\uffff\2\13\7\uffff\2\13\1\uffff\15\13\66\uffff\1\13\50\uffff\2\13"
    };

    static final short[] dfa_180 = DFA.unpackEncodedString(dfa_180s);
    static final short[] dfa_181 = DFA.unpackEncodedString(dfa_181s);
    static final char[] dfa_182 = DFA.unpackEncodedStringToUnsignedChars(dfa_182s);
    static final char[] dfa_183 = DFA.unpackEncodedStringToUnsignedChars(dfa_183s);
    static final short[] dfa_184 = DFA.unpackEncodedString(dfa_184s);
    static final short[] dfa_185 = DFA.unpackEncodedString(dfa_185s);
    static final short[][] dfa_186 = unpackEncodedStringArray(dfa_186s);

    class DFA260 extends DFA {

        public DFA260(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 260;
            this.eot = dfa_180;
            this.eof = dfa_181;
            this.min = dfa_182;
            this.max = dfa_183;
            this.accept = dfa_184;
            this.special = dfa_185;
            this.transition = dfa_186;
        }
        public String getDescription() {
            return "12228:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )";
        }
    }
    static final String dfa_187s = "\1\5\1\131\1\6\4\uffff\1\5\2\6";
    static final String dfa_188s = "\1\12\1\135\1\u00e9\4\uffff\1\12\2\u00e9";
    static final String dfa_189s = "\3\uffff\1\4\1\3\1\1\1\2\3\uffff";
    static final String dfa_190s = "\1\uffff\1\0\10\uffff}>";
    static final String[] dfa_191s = {
            "\1\1\1\3\3\uffff\1\2",
            "\1\4\3\uffff\1\4",
            "\1\5\4\uffff\2\5\15\uffff\2\5\10\uffff\1\5\64\uffff\1\4\3\uffff\1\7\141\uffff\1\5\50\uffff\2\5",
            "",
            "",
            "",
            "",
            "\1\10\4\uffff\1\11",
            "\1\5\4\uffff\2\5\15\uffff\2\5\10\uffff\1\5\64\uffff\1\4\3\uffff\1\7\141\uffff\1\5\50\uffff\2\5",
            "\1\5\4\uffff\2\5\15\uffff\2\5\10\uffff\1\5\64\uffff\1\4\3\uffff\1\7\141\uffff\1\5\50\uffff\2\5"
    };
    static final char[] dfa_187 = DFA.unpackEncodedStringToUnsignedChars(dfa_187s);
    static final char[] dfa_188 = DFA.unpackEncodedStringToUnsignedChars(dfa_188s);
    static final short[] dfa_189 = DFA.unpackEncodedString(dfa_189s);
    static final short[] dfa_190 = DFA.unpackEncodedString(dfa_190s);
    static final short[][] dfa_191 = unpackEncodedStringArray(dfa_191s);

    class DFA261 extends DFA {

        public DFA261(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 261;
            this.eot = dfa_101;
            this.eof = dfa_101;
            this.min = dfa_187;
            this.max = dfa_188;
            this.accept = dfa_189;
            this.special = dfa_190;
            this.transition = dfa_191;
        }
        public String getDescription() {
            return "12417:6: (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA261_1 = input.LA(1);

                         
                        int index261_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA261_1==89||LA261_1==93) ) {s = 4;}

                        else if ( (synpred454_InternalKim()) ) {s = 5;}

                        else if ( (synpred455_InternalKim()) ) {s = 6;}

                         
                        input.seek(index261_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 261, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_192s = "\1\uffff\2\3\3\uffff\2\3";
    static final String dfa_193s = "\1\4\2\44\2\uffff\1\5\2\44";
    static final String dfa_194s = "\1\u00e9\2\u00c1\2\uffff\1\12\2\u00c1";
    static final String[] dfa_195s = {
            "\1\3\1\1\1\3\1\uffff\2\3\1\2\1\uffff\1\3\15\uffff\2\3\10\uffff\1\3\14\uffff\2\3\75\uffff\2\3\7\uffff\2\3\1\uffff\15\3\66\uffff\1\3\50\uffff\2\3",
            "\1\3\2\uffff\1\3\61\uffff\1\3\1\uffff\1\4\1\uffff\1\5\143\uffff\1\4",
            "\1\3\2\uffff\1\3\61\uffff\1\3\1\uffff\1\4\1\uffff\1\5\143\uffff\1\4",
            "",
            "",
            "\1\6\4\uffff\1\7",
            "\1\3\2\uffff\1\3\61\uffff\1\3\1\uffff\1\4\1\uffff\1\5\143\uffff\1\4",
            "\1\3\2\uffff\1\3\61\uffff\1\3\1\uffff\1\4\1\uffff\1\5\143\uffff\1\4"
    };
    static final short[] dfa_192 = DFA.unpackEncodedString(dfa_192s);
    static final char[] dfa_193 = DFA.unpackEncodedStringToUnsignedChars(dfa_193s);
    static final char[] dfa_194 = DFA.unpackEncodedStringToUnsignedChars(dfa_194s);
    static final short[][] dfa_195 = unpackEncodedStringArray(dfa_195s);

    class DFA272 extends DFA {

        public DFA272(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 272;
            this.eot = dfa_43;
            this.eof = dfa_192;
            this.min = dfa_193;
            this.max = dfa_194;
            this.accept = dfa_47;
            this.special = dfa_48;
            this.transition = dfa_195;
        }
        public String getDescription() {
            return "12984:2: ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) )";
        }
    }
    static final String dfa_196s = "\43\uffff";
    static final String dfa_197s = "\1\4\2\uffff\3\0\17\uffff\1\0\15\uffff";
    static final String dfa_198s = "\1\u00e9\2\uffff\3\0\17\uffff\1\0\15\uffff";
    static final String dfa_199s = "\1\uffff\1\1\24\uffff\1\3\5\uffff\1\4\1\5\1\7\1\10\1\11\1\2\1\6";
    static final String dfa_200s = "\3\uffff\1\0\1\1\1\2\17\uffff\1\3\15\uffff}>";
    static final String[] dfa_201s = {
            "\1\35\1\4\1\26\1\uffff\1\34\1\3\1\5\1\uffff\1\26\15\uffff\2\26\10\uffff\1\25\14\uffff\1\40\1\36\75\uffff\2\1\7\uffff\2\1\1\uffff\15\1\66\uffff\1\37\50\uffff\2\26",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_196 = DFA.unpackEncodedString(dfa_196s);
    static final char[] dfa_197 = DFA.unpackEncodedStringToUnsignedChars(dfa_197s);
    static final char[] dfa_198 = DFA.unpackEncodedStringToUnsignedChars(dfa_198s);
    static final short[] dfa_199 = DFA.unpackEncodedString(dfa_199s);
    static final short[] dfa_200 = DFA.unpackEncodedString(dfa_200s);
    static final short[][] dfa_201 = unpackEncodedStringArray(dfa_201s);

    class DFA274 extends DFA {

        public DFA274(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 274;
            this.eot = dfa_196;
            this.eof = dfa_196;
            this.min = dfa_197;
            this.max = dfa_198;
            this.accept = dfa_199;
            this.special = dfa_200;
            this.transition = dfa_201;
        }
        public String getDescription() {
            return "13072:2: ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_map_7_0= ruleMap ) ) | ( (lv_null_8_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA274_3 = input.LA(1);

                         
                        int index274_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred473_InternalKim()) ) {s = 1;}

                        else if ( (synpred480_InternalKim()) ) {s = 29;}

                         
                        input.seek(index274_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA274_4 = input.LA(1);

                         
                        int index274_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred473_InternalKim()) ) {s = 1;}

                        else if ( (synpred474_InternalKim()) ) {s = 33;}

                        else if ( (synpred480_InternalKim()) ) {s = 29;}

                         
                        input.seek(index274_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA274_5 = input.LA(1);

                         
                        int index274_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred473_InternalKim()) ) {s = 1;}

                        else if ( (synpred474_InternalKim()) ) {s = 33;}

                        else if ( (synpred480_InternalKim()) ) {s = 29;}

                         
                        input.seek(index274_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA274_21 = input.LA(1);

                         
                        int index274_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred473_InternalKim()) ) {s = 1;}

                        else if ( (synpred481_InternalKim()) ) {s = 34;}

                         
                        input.seek(index274_21);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 274, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_202s = "\22\uffff";
    static final String dfa_203s = "\1\4\10\uffff\1\0\10\uffff";
    static final String dfa_204s = "\1\u00e9\10\uffff\1\0\10\uffff";
    static final String dfa_205s = "\1\uffff\1\1\10\uffff\1\2\1\3\1\4\1\uffff\1\5\1\6\1\7\1\10";
    static final String dfa_206s = "\11\uffff\1\0\10\uffff}>";
    static final String[] dfa_207s = {
            "\1\14\1\11\1\1\1\uffff\1\13\1\14\1\12\2\1\14\uffff\3\1\10\uffff\1\16\14\uffff\1\21\1\17\u008c\uffff\1\20\50\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_202 = DFA.unpackEncodedString(dfa_202s);
    static final char[] dfa_203 = DFA.unpackEncodedStringToUnsignedChars(dfa_203s);
    static final char[] dfa_204 = DFA.unpackEncodedStringToUnsignedChars(dfa_204s);
    static final short[] dfa_205 = DFA.unpackEncodedString(dfa_205s);
    static final short[] dfa_206 = DFA.unpackEncodedString(dfa_206s);
    static final short[][] dfa_207 = unpackEncodedStringArray(dfa_207s);

    class DFA276 extends DFA {

        public DFA276(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 276;
            this.eot = dfa_202;
            this.eof = dfa_202;
            this.min = dfa_203;
            this.max = dfa_204;
            this.accept = dfa_205;
            this.special = dfa_206;
            this.transition = dfa_207;
        }
        public String getDescription() {
            return "13311:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_4_0= ruleList ) ) | ( (lv_table_5_0= ruleLookupTable ) ) | ( (lv_map_6_0= ruleMap ) ) | ( (lv_null_7_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA276_9 = input.LA(1);

                         
                        int index276_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred485_InternalKim()) ) {s = 10;}

                        else if ( (synpred489_InternalKim()) ) {s = 12;}

                         
                        input.seek(index276_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 276, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_208s = "\1\1\12\uffff";
    static final String dfa_209s = "\1\14\12\uffff";
    static final String dfa_210s = "\1\u00e9\12\uffff";
    static final String dfa_211s = "\1\uffff\1\7\1\1\1\2\1\3\2\4\3\5\1\6";
    static final String dfa_212s = "\1\0\12\uffff}>";
    static final String[] dfa_213s = {
            "\1\11\12\uffff\1\1\11\uffff\1\4\16\uffff\1\5\60\uffff\1\2\1\3\1\6\2\uffff\1\12\u0081\uffff\1\7\1\10",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_208 = DFA.unpackEncodedString(dfa_208s);
    static final char[] dfa_209 = DFA.unpackEncodedStringToUnsignedChars(dfa_209s);
    static final char[] dfa_210 = DFA.unpackEncodedStringToUnsignedChars(dfa_210s);
    static final short[] dfa_211 = DFA.unpackEncodedString(dfa_211s);
    static final short[] dfa_212 = DFA.unpackEncodedString(dfa_212s);
    static final short[][] dfa_213 = unpackEncodedStringArray(dfa_213s);

    class DFA287 extends DFA {

        public DFA287(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 287;
            this.eot = dfa_36;
            this.eof = dfa_208;
            this.min = dfa_209;
            this.max = dfa_210;
            this.accept = dfa_211;
            this.special = dfa_212;
            this.transition = dfa_213;
        }
        public String getDescription() {
            return "()* loopback of 14036:6: ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA287_0 = input.LA(1);

                         
                        int index287_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA287_0==EOF||LA287_0==23) ) {s = 1;}

                        else if ( LA287_0 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA287_0 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA287_0 == 33 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA287_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA287_0 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {s = 6;}

                        else if ( LA287_0 == 232 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4) ) {s = 7;}

                        else if ( LA287_0 == 233 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4) ) {s = 8;}

                        else if ( LA287_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4) ) {s = 9;}

                        else if ( LA287_0 == 102 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5) ) {s = 10;}

                         
                        input.seek(index287_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 287, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_214s = "\117\uffff";
    static final String dfa_215s = "\1\7\116\uffff";
    static final String dfa_216s = "\1\5\6\0\110\uffff";
    static final String dfa_217s = "\1\u00ef\6\0\110\uffff";
    static final String dfa_218s = "\7\uffff\1\2\106\uffff\1\1";
    static final String dfa_219s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\110\uffff}>";
    static final String[] dfa_220s = {
            "\1\2\1\7\2\uffff\1\1\1\7\1\uffff\1\5\6\uffff\1\7\3\uffff\1\7\1\uffff\1\7\2\uffff\4\7\1\uffff\1\7\1\uffff\1\7\1\6\1\uffff\3\7\7\uffff\1\7\5\uffff\3\7\37\uffff\1\7\3\uffff\1\7\4\uffff\6\7\11\uffff\2\7\7\uffff\2\7\1\uffff\15\7\13\uffff\1\7\1\uffff\1\7\1\uffff\3\7\1\uffff\11\7\2\uffff\11\7\6\uffff\3\7\57\uffff\1\3\1\4\5\uffff\1\7",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_214 = DFA.unpackEncodedString(dfa_214s);
    static final short[] dfa_215 = DFA.unpackEncodedString(dfa_215s);
    static final char[] dfa_216 = DFA.unpackEncodedStringToUnsignedChars(dfa_216s);
    static final char[] dfa_217 = DFA.unpackEncodedStringToUnsignedChars(dfa_217s);
    static final short[] dfa_218 = DFA.unpackEncodedString(dfa_218s);
    static final short[] dfa_219 = DFA.unpackEncodedString(dfa_219s);
    static final short[][] dfa_220 = unpackEncodedStringArray(dfa_220s);

    class DFA292 extends DFA {

        public DFA292(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 292;
            this.eot = dfa_214;
            this.eof = dfa_215;
            this.min = dfa_216;
            this.max = dfa_217;
            this.accept = dfa_218;
            this.special = dfa_219;
            this.transition = dfa_220;
        }
        public String getDescription() {
            return "14645:3: ( (lv_root_1_0= ruleUnitElement ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA292_1 = input.LA(1);

                         
                        int index292_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred549_InternalKim()) ) {s = 78;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index292_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA292_2 = input.LA(1);

                         
                        int index292_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred549_InternalKim()) ) {s = 78;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index292_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA292_3 = input.LA(1);

                         
                        int index292_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred549_InternalKim()) ) {s = 78;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index292_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA292_4 = input.LA(1);

                         
                        int index292_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred549_InternalKim()) ) {s = 78;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index292_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA292_5 = input.LA(1);

                         
                        int index292_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred549_InternalKim()) ) {s = 78;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index292_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA292_6 = input.LA(1);

                         
                        int index292_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred549_InternalKim()) ) {s = 78;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index292_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 292, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_221s = "\1\5\1\uffff\2\27\1\0\3\uffff\1\5\1\uffff\1\5\1\27\1\44\1\5\1\44";
    static final String dfa_222s = "\1\u00e9\1\uffff\2\135\1\0\3\uffff\1\12\1\uffff\1\12\2\135\1\12\1\135";
    static final String dfa_223s = "\1\uffff\1\1\3\uffff\1\3\1\4\1\5\1\uffff\1\2\5\uffff";
    static final String[] dfa_224s = {
            "\1\2\1\1\2\uffff\1\4\1\3\1\uffff\1\5\15\uffff\2\6\10\uffff\1\7\63\uffff\1\1\27\uffff\2\7\7\uffff\2\7\1\uffff\15\7\137\uffff\2\5",
            "",
            "\1\1\1\uffff\1\1\12\uffff\1\11\20\uffff\1\1\43\uffff\1\12\2\uffff\1\1\1\10",
            "\1\1\1\uffff\1\1\12\uffff\1\11\20\uffff\1\1\43\uffff\1\12\2\uffff\1\1\1\10",
            "\1\uffff",
            "",
            "",
            "",
            "\1\13\4\uffff\1\14",
            "",
            "\1\1\3\uffff\1\7\1\1",
            "\1\1\1\uffff\1\1\12\uffff\1\11\20\uffff\1\1\43\uffff\1\12\3\uffff\1\15",
            "\1\11\64\uffff\1\12\3\uffff\1\15",
            "\1\16\4\uffff\1\14",
            "\1\11\64\uffff\1\12\3\uffff\1\15"
    };
    static final char[] dfa_221 = DFA.unpackEncodedStringToUnsignedChars(dfa_221s);
    static final char[] dfa_222 = DFA.unpackEncodedStringToUnsignedChars(dfa_222s);
    static final short[] dfa_223 = DFA.unpackEncodedString(dfa_223s);
    static final short[][] dfa_224 = unpackEncodedStringArray(dfa_224s);

    class DFA323 extends DFA {

        public DFA323(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 323;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_221;
            this.max = dfa_222;
            this.accept = dfa_223;
            this.special = dfa_24;
            this.transition = dfa_224;
        }
        public String getDescription() {
            return "642:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA323_4 = input.LA(1);

                         
                        int index323_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index323_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 323, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA406 extends DFA {

        public DFA406(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 406;
            this.eot = dfa_95;
            this.eof = dfa_95;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "5647:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?";
        }
    }
    static final String dfa_225s = "\1\1\13\uffff";
    static final String dfa_226s = "\1\50\13\uffff";
    static final String dfa_227s = "\1\157\13\uffff";
    static final String dfa_228s = "\1\uffff\1\13\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12";
    static final String dfa_229s = "\1\0\13\uffff}>";
    static final String[] dfa_230s = {
            "\1\4\76\uffff\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_225 = DFA.unpackEncodedString(dfa_225s);
    static final char[] dfa_226 = DFA.unpackEncodedStringToUnsignedChars(dfa_226s);
    static final char[] dfa_227 = DFA.unpackEncodedStringToUnsignedChars(dfa_227s);
    static final short[] dfa_228 = DFA.unpackEncodedString(dfa_228s);
    static final short[] dfa_229 = DFA.unpackEncodedString(dfa_229s);
    static final short[][] dfa_230 = unpackEncodedStringArray(dfa_230s);

    class DFA424 extends DFA {

        public DFA424(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 424;
            this.eot = dfa_95;
            this.eof = dfa_225;
            this.min = dfa_226;
            this.max = dfa_227;
            this.accept = dfa_228;
            this.special = dfa_229;
            this.transition = dfa_230;
        }
        public String getDescription() {
            return "()* loopback of 6583:6: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( (lv_inherency_3_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'for' ( (lv_motivation_5_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'with' ( (lv_compresent_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'caused' otherlv_9= 'by' ( (lv_causant_10_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'adjacent' otherlv_12= 'to' ( (lv_adjacent_13_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'contained' otherlv_15= 'in' ( (lv_container_16_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'containing' ( (lv_contained_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'causing' ( (lv_caused_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'during' ( (lv_during_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'within' ( (lv_context_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA424_0 = input.LA(1);

                         
                        int index424_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA424_0==EOF) ) {s = 1;}

                        else if ( LA424_0 == 103 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA424_0 == 104 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA424_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA424_0 == 105 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA424_0 == 106 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA424_0 == 107 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA424_0 == 108 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA424_0 == 109 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                        else if ( LA424_0 == 110 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {s = 10;}

                        else if ( LA424_0 == 111 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {s = 11;}

                         
                        input.seek(index424_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 424, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000704002L,0x00000000400107C0L,0x003C0020000FF000L,0x00000003FFFFFFFCL});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000304000L,0x00000000000007C0L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000300000L,0x00000000000007C0L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x000600100F001F70L,0xF603000101000000L,0x80000000000001FFL,0x0000030000000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000404000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x000600100E001F70L,0x0000000001000000L,0x8000000000000000L,0x0000030000000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000002800000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000660L,0x0000000001000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x01C00108F0000042L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x01C00108F2000042L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x01C00108F0000002L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x01C00108E2000002L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000520L,0x0000000001000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x01C00108C2000002L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000300000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x000000100C001660L,0xF603000001000000L,0x00000000000001FFL,0x0000030000000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x01C0010800000002L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000420L,0x0000000001000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000001100000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000006000000020L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000008002000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x002300500C001760L,0xF603000009000000L,0x00000000000001FFL,0x0000037C00000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x01C0010000000002L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x8000000000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000380000000002L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x000300500C001660L,0xF603000009000000L,0x00000000000001FFL,0x0000037C00000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000C00400000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000001000L,0x0000000000000000L,0x0000000000000000L,0x0000030000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000C00000000002L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x002B00500C001760L,0xF603000009000000L,0x00000000000001FFL,0x0000037C00000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0010000000000002L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000060L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000002000002L,0x000000000000001FL});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x000000000000001FL});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x3E0000100C001660L,0xF603000001000000L,0x00000000000001FFL,0x0000030000000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000001000000002L,0x000000000000001FL});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0001001000000002L,0x000000000000001FL});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0xC000000000000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000002L,0x000000000000001FL});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x000200140E001F70L,0x0000000001000000L,0x0000000000000000L,0x0000030000000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000300002000002L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x000600100E001F70L,0x0000000001000020L,0x8000000000000000L,0x0000030000000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x000600100E001F72L,0x0000000001000000L,0x8000000000000000L,0x0000030000000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0001000000000002L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000230L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000800002L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000304000L,0x0000000000003800L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000300000L,0x0000000000003800L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0001010020080040L,0x00000000005CC000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0001010020080000L,0x00000000005CC000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000005000000420L,0x0000000001000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0001010022080000L,0x00000000005CC000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x000000100C001660L,0xF603000001020000L,0x00000000000001FFL,0x0000030000000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0001010020080420L,0x00000000015CC000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0001010020080000L,0x00000000007CC000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000010000080000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000420L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0020000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0020000000000002L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000002L,0x0000000004000000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0020000000000002L,0x0000000030000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000620L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000004000L,0x0000000040000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x000001100C001660L,0xF603000001000000L,0x00000000000001FFL,0x0000030000000000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x01C001103C001662L,0xF603000081000000L,0x00000000000001FFL,0x0000030000000000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x01C001103E001662L,0xF603000001000000L,0x00000000000001FFL,0x0000030000000000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x01C001103C001662L,0xF603000001000000L,0x00000000000001FFL,0x0000030000000000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x000001102E001662L,0xF603000001000000L,0x00000000000001FFL,0x0000030000000000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x000001900C001660L,0xF603000001000000L,0x00000000000001FFL,0x0000030000000000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x000001100C001662L,0xF603000001000000L,0x00000000000001FFL,0x0000030000000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x000000100C001660L,0xF603000101000000L,0x00000000000001FFL,0x0000030000000000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0001000200801002L,0x0000007E00000000L,0x0000000000000000L,0x0000030000000000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0001005200801630L,0x0000007E11000000L,0x0000000000000000L,0x0000830000000000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0001005200801220L,0x0000007E10000000L,0x0000000000000000L,0x0000830000000000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x000001100C001662L,0xF603FF8001000000L,0x00000000000001FFL,0x0000030000000000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000010000000002L,0x0000FF8000000000L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x4000000000000000L,0x00FC0E0000000000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000004000L,0x0000000080010000L,0x003C0020000FF000L,0x00000003FFFFFFFCL});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000620L,0x0603000001000000L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000002L,0x0800000000000000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000001840L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000002010L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000400000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0080000000000002L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000C00L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x000000100C001662L,0xF603000001000000L,0x00000000000001FFL,0x0000030000000000L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x4000000020000000L,0x007C0E0000000000L,0x00000000000E7000L,0x0000000300000000L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00000000000F7000L,0x0000000300000000L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000004000L,0x0000000000010000L,0x003C0020000FF000L,0x00000003FFFFFFFCL});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000004200L,0x0000000000020000L,0x0000000000020000L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000002L,0x0000004000000000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000200L,0x0000000000020000L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000010000000042L,0x0000000000000000L,0x01C0FF9FF7500000L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000010000000042L,0x0800000000000000L,0x01C0FF9FF7500000L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x000000100C001660L,0xF603000001000000L,0x0000000000A001FFL,0x0000030000000000L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x000000100C001660L,0xF603000001000000L,0x00000000008001FFL,0x0000030000000000L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000010002000042L,0x0000000000000000L,0x01C0FF9FF7500600L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000010002000042L,0x0000000000000000L,0x01C0FF9FF7500000L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x000000100C001660L,0xF603000001000000L,0x00000000080001FFL,0x0000030000000000L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x003C000008000000L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0001000002000000L,0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0001000002000000L});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000010402000042L,0x0000000000000000L,0x01C0FF9FF7500000L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L,0x0001000000000000L});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x0000001000000200L,0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x000000100C001660L,0xF603000001000600L,0x0E000000000001FFL,0x0000730000000000L});
    public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x000000000C001040L,0x0000000000000000L,0x0000000000000000L,0x0000030000000000L});
    public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000000000000620L,0x0000000001000000L});
    public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x0000000000800002L,0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x0000001000000002L});
    public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x000600900C001770L,0xF603000001000000L,0x80000000000001FFL,0x0000030000000000L});
    public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x000600900E001F70L,0x0000000001000000L,0x8000000000000000L,0x0000030000000000L});
    public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x0000000000000460L,0x0100000001000000L});
    public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x000000100C001840L,0x0000000000000000L,0x8000000000000000L,0x0000030000000000L});
    public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x0100000000000420L,0x0100000001000000L});
    public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x000000000C001840L,0x0000000000000000L,0x0000000000000000L,0x0000030000000000L});
    public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x000300500C001660L,0xF703000009000000L,0x00000000000001FFL,0x0000037C00000000L});
    public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x0000000002000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x000600100C001770L,0xF603000001000000L,0x80000000000001FFL,0x0000030000000000L});
    public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x3200000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x0001000200001002L,0x0000004E00000000L,0x0000000000000000L,0x0000030000000000L});
    public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x0001005200001220L,0x0000004E10000000L,0x0000000000000000L,0x0000830000000000L});
    public static final BitSet FOLLOW_167 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_168 = new BitSet(new long[]{0x000000D000001220L,0x0000000010000000L,0x0000000000000000L,0x0000830000000000L});
    public static final BitSet FOLLOW_169 = new BitSet(new long[]{0x0000004000000002L,0x0000000010000000L,0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_170 = new BitSet(new long[]{0x0000001000001220L,0x0000000000000000L,0x0000000000000000L,0x0000030000000000L});
    public static final BitSet FOLLOW_171 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_172 = new BitSet(new long[]{0x0000000000000002L,0x0000000020000000L,0x0000000000000000L,0x00000C0000000000L});
    public static final BitSet FOLLOW_173 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x00000C0000000000L});
    public static final BitSet FOLLOW_174 = new BitSet(new long[]{0x0000000000000002L,0x0000000020000000L});
    public static final BitSet FOLLOW_175 = new BitSet(new long[]{0x0000000000000002L,0x0000000030000000L});
    public static final BitSet FOLLOW_176 = new BitSet(new long[]{0x0000000000000032L,0x0000000020000000L,0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_177 = new BitSet(new long[]{0x0000000000000032L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_178 = new BitSet(new long[]{0x0000000000000032L});
    public static final BitSet FOLLOW_179 = new BitSet(new long[]{0x0000000000300002L});
    public static final BitSet FOLLOW_180 = new BitSet(new long[]{0x0000000000000422L,0x0000000001000000L});
    public static final BitSet FOLLOW_181 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_182 = new BitSet(new long[]{0x0000000020000002L,0x0000000000700000L});
    public static final BitSet FOLLOW_183 = new BitSet(new long[]{0x0000000020000422L,0x0000000001500000L});
    public static final BitSet FOLLOW_184 = new BitSet(new long[]{0x0000000020000002L,0x0000000000500000L});
    public static final BitSet FOLLOW_185 = new BitSet(new long[]{0x01C0010030000042L,0x0000000080000000L});
    public static final BitSet FOLLOW_186 = new BitSet(new long[]{0x01C0010030000002L,0x0000000080000000L});
    public static final BitSet FOLLOW_187 = new BitSet(new long[]{0x01C0010032000002L});
    public static final BitSet FOLLOW_188 = new BitSet(new long[]{0x01C0010030000002L});
    public static final BitSet FOLLOW_189 = new BitSet(new long[]{0x0000010022000002L});
    public static final BitSet FOLLOW_190 = new BitSet(new long[]{0x0000000022000002L});
    public static final BitSet FOLLOW_191 = new BitSet(new long[]{0x0000005000001220L,0x0000000010000000L,0x0000000000000000L,0x0000830000000000L});
    public static final BitSet FOLLOW_192 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x00000000000E7000L,0x0000000300000000L});
    public static final BitSet FOLLOW_193 = new BitSet(new long[]{0x0000000002000002L,0x0000000000000000L,0x0000000000000600L});
    public static final BitSet FOLLOW_194 = new BitSet(new long[]{0x0000000402000002L});
    public static final BitSet FOLLOW_195 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x01C0001000000000L});

}
