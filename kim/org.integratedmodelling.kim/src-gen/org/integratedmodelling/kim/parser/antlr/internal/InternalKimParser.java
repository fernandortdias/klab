package org.integratedmodelling.kim.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.IUnorderedGroupHelper.UnorderedGroupState;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.integratedmodelling.kim.services.KimGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalKimParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_UPPERCASE_ID", "RULE_LOWERCASE_ID", "RULE_STRING", "RULE_SEPARATOR", "RULE_EXPR", "RULE_CAMELCASE_ID", "RULE_INT", "RULE_LOWERCASE_DASHID", "RULE_ID", "RULE_UPPERCASE_PATH", "RULE_BACKCASE_ID", "RULE_ANNOTATION_ID", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "';'", "'void'", "'project'", "'private'", "'define'", "'as'", "'each'", "','", "'true'", "'false'", "'observing'", "'using'", "'classified'", "'discretized'", "'into'", "'according'", "'to'", "'lookup'", "'('", "'?'", "'*'", "')'", "'metadata'", "'otherwise'", "'if'", "'unless'", "'inclusive'", "'exclusive'", "'in'", "'unknown'", "'{{'", "'}}'", "'|'", "'#'", "'aggregated'", "'over'", "'on'", "'definition'", "'instantiation'", "'termination'", "'context'", "'related'", "'set'", "'integrate'", "'do'", "'then'", "'finally'", "'move'", "'away'", "'for'", "'model'", "'learn'", "'number'", "'object'", "'text'", "'boolean'", "'>'", "'>='", "'<='", "'<'", "'where'", "'=='", "'='", "'without'", "'!='", "'plus'", "'minus'", "'times'", "'by'", "'namespace'", "'scenario'", "'worldview'", "'language'", "'imports'", "'covering'", "'domain'", "'root'", "'disjoint'", "'with'", "'version'", "'resolve'", "'from'", "'outside'", "'parameters'", "'urn:klab:'", "':'", "'&'", "'/'", "'.'", "'observe'", "'extends'", "'children'", "'any'", "'per'", "'optional'", "'required'", "'named'", "'down'", "'total'", "'of'", "'caused'", "'adjacent'", "'contained'", "'containing'", "'causing'", "'during'", "'within'", "'linking'", "'${'", "'#{'", "'inherent'", "'compresent'", "'container'", "'purpose'", "'causant'", "'cooccurrent'", "'}'", "'not'", "'no'", "'identified'", "'presence'", "'count'", "'distance'", "'probability'", "'assessment'", "'uncertainty'", "'magnitude'", "'level'", "'type'", "'observability'", "'proportion'", "'percentage'", "'ratio'", "'monetary'", "'value'", "'occurrence'", "'identity'", "'or'", "'and'", "'follows'", "'deliberative'", "'interactive'", "'reactive'", "'agent'", "'relationship'", "'abstract'", "'deniable'", "'subjective'", "'rescaling'", "'is'", "'equals'", "'core'", "'nothing'", "'exposes'", "'exposing'", "'defines'", "'authority'", "'requires'", "'describes'", "'increases'", "'decreases'", "'marks'", "'classifies'", "'discretizes'", "'inherits'", "'has'", "'role'", "'targeting'", "'confers'", "'part'", "'constituent'", "'consists'", "'creates'", "'applies'", "'links'", "'inverse'", "'affects'", "'uses'", "'contains'", "'only'", "'exactly'", "'at'", "'least'", "'most'", "'more'", "'between'", "'attribute'", "'realm'", "'extent'", "'{'", "'initialization'", "'transition'", "'?='", "'quality'", "'class'", "'quantity'", "'configuration'", "'bond'", "'ordering'", "'amount'", "'length'", "'mass'", "'volume'", "'weight'", "'money'", "'duration'", "'area'", "'acceleration'", "'energy'", "'entropy'", "'priority'", "'electric-potential'", "'charge'", "'resistance'", "'resistivity'", "'pressure'", "'angle'", "'velocity'", "'temperature'", "'viscosity'", "'thing'", "'process'", "'event'", "'functional'", "'structural'", "'@'", "'+'", "'-'", "'l'", "'e'", "'E'", "'AD'", "'CE'", "'BC'", "'^'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int RULE_BACKCASE_ID=14;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__254=254;
    public static final int T__132=132;
    public static final int T__253=253;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int T__250=250;
    public static final int RULE_ID=12;
    public static final int T__131=131;
    public static final int T__252=252;
    public static final int T__130=130;
    public static final int T__251=251;
    public static final int RULE_INT=10;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__247=247;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__246=246;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__249=249;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__248=248;
    public static final int T__166=166;
    public static final int T__165=165;
    public static final int T__168=168;
    public static final int T__167=167;
    public static final int T__162=162;
    public static final int T__161=161;
    public static final int T__164=164;
    public static final int T__163=163;
    public static final int T__160=160;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__159=159;
    public static final int T__30=30;
    public static final int T__158=158;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__155=155;
    public static final int T__154=154;
    public static final int T__157=157;
    public static final int T__156=156;
    public static final int T__151=151;
    public static final int T__150=150;
    public static final int T__153=153;
    public static final int T__152=152;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int RULE_EXPR=8;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__100=100;
    public static final int T__221=221;
    public static final int T__220=220;
    public static final int T__102=102;
    public static final int T__223=223;
    public static final int T__101=101;
    public static final int T__222=222;
    public static final int T__218=218;
    public static final int T__217=217;
    public static final int T__219=219;
    public static final int T__214=214;
    public static final int T__213=213;
    public static final int T__216=216;
    public static final int T__215=215;
    public static final int T__210=210;
    public static final int T__212=212;
    public static final int T__211=211;
    public static final int RULE_CAMELCASE_ID=9;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__207=207;
    public static final int T__23=23;
    public static final int T__206=206;
    public static final int T__24=24;
    public static final int T__209=209;
    public static final int T__25=25;
    public static final int T__208=208;
    public static final int T__203=203;
    public static final int T__202=202;
    public static final int T__20=20;
    public static final int T__205=205;
    public static final int T__21=21;
    public static final int T__204=204;
    public static final int T__122=122;
    public static final int T__243=243;
    public static final int T__121=121;
    public static final int T__242=242;
    public static final int T__124=124;
    public static final int T__245=245;
    public static final int T__123=123;
    public static final int T__244=244;
    public static final int T__120=120;
    public static final int T__241=241;
    public static final int T__240=240;
    public static final int RULE_SEPARATOR=7;
    public static final int RULE_SL_COMMENT=17;
    public static final int T__119=119;
    public static final int T__118=118;
    public static final int T__239=239;
    public static final int T__115=115;
    public static final int T__236=236;
    public static final int EOF=-1;
    public static final int T__114=114;
    public static final int T__235=235;
    public static final int T__117=117;
    public static final int T__238=238;
    public static final int T__116=116;
    public static final int T__237=237;
    public static final int T__111=111;
    public static final int T__232=232;
    public static final int T__110=110;
    public static final int T__231=231;
    public static final int T__113=113;
    public static final int T__234=234;
    public static final int T__112=112;
    public static final int T__233=233;
    public static final int T__230=230;
    public static final int RULE_ANNOTATION_ID=15;
    public static final int T__108=108;
    public static final int T__229=229;
    public static final int T__107=107;
    public static final int T__228=228;
    public static final int T__109=109;
    public static final int T__104=104;
    public static final int T__225=225;
    public static final int T__103=103;
    public static final int T__224=224;
    public static final int T__106=106;
    public static final int T__227=227;
    public static final int T__105=105;
    public static final int T__226=226;
    public static final int RULE_UPPERCASE_ID=4;
    public static final int RULE_ML_COMMENT=16;
    public static final int T__201=201;
    public static final int T__200=200;
    public static final int RULE_UPPERCASE_PATH=13;
    public static final int T__91=91;
    public static final int T__188=188;
    public static final int T__92=92;
    public static final int T__187=187;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__189=189;
    public static final int T__184=184;
    public static final int T__183=183;
    public static final int T__186=186;
    public static final int T__90=90;
    public static final int T__185=185;
    public static final int T__180=180;
    public static final int T__182=182;
    public static final int T__181=181;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__177=177;
    public static final int T__176=176;
    public static final int T__179=179;
    public static final int T__178=178;
    public static final int T__173=173;
    public static final int T__172=172;
    public static final int RULE_LOWERCASE_DASHID=11;
    public static final int T__175=175;
    public static final int T__174=174;
    public static final int T__171=171;
    public static final int T__170=170;
    public static final int T__169=169;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=6;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__199=199;
    public static final int T__81=81;
    public static final int T__198=198;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int T__195=195;
    public static final int T__194=194;
    public static final int RULE_WS=18;
    public static final int T__197=197;
    public static final int T__196=196;
    public static final int T__191=191;
    public static final int T__190=190;
    public static final int T__193=193;
    public static final int T__192=192;
    public static final int RULE_ANY_OTHER=19;
    public static final int RULE_LOWERCASE_ID=5;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalKimParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalKimParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalKimParser.tokenNames; }
    public String getGrammarFileName() { return "InternalKim.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private KimGrammarAccess grammarAccess;

        public InternalKimParser(TokenStream input, KimGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected KimGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalKim.g:73:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalKim.g:73:46: (iv_ruleModel= ruleModel EOF )
            // InternalKim.g:74:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalKim.g:80:1: ruleModel returns [EObject current=null] : ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_observable_0_0 = null;

        EObject lv_namespace_1_0 = null;

        EObject lv_statements_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:86:2: ( ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) ) )
            // InternalKim.g:87:2: ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) )
            {
            // InternalKim.g:87:2: ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) )
            int alt3=2;
            switch ( input.LA(1) ) {
            case RULE_UPPERCASE_ID:
            case RULE_LOWERCASE_ID:
            case RULE_STRING:
            case RULE_EXPR:
            case RULE_CAMELCASE_ID:
            case RULE_INT:
            case RULE_LOWERCASE_DASHID:
            case RULE_ID:
            case 27:
            case 28:
            case 29:
            case 38:
            case 49:
            case 50:
            case 112:
            case 128:
            case 129:
            case 137:
            case 138:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 209:
            case 246:
            case 247:
                {
                alt3=1;
                }
                break;
            case 156:
                {
                switch ( input.LA(2) ) {
                case RULE_ANNOTATION_ID:
                case 96:
                case 165:
                    {
                    alt3=2;
                    }
                    break;
                case RULE_CAMELCASE_ID:
                    {
                    int LA3_4 = input.LA(3);

                    if ( ((LA3_4>=RULE_UPPERCASE_ID && LA3_4<=RULE_STRING)||LA3_4==RULE_LOWERCASE_DASHID||LA3_4==RULE_BACKCASE_ID||LA3_4==20||LA3_4==42||LA3_4==116||LA3_4==139||(LA3_4>=169 && LA3_4<=170)||(LA3_4>=173 && LA3_4<=175)||(LA3_4>=177 && LA3_4<=185)||(LA3_4>=188 && LA3_4<=198)) ) {
                        alt3=2;
                    }
                    else if ( (LA3_4==88) ) {
                        alt3=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 3, 4, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_UPPERCASE_ID:
                case RULE_STRING:
                case RULE_INT:
                case RULE_ID:
                    {
                    alt3=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 2, input);

                    throw nvae;
                }

                }
                break;
            case EOF:
            case RULE_ANNOTATION_ID:
            case 21:
            case 22:
            case 23:
            case 24:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 89:
            case 90:
            case 91:
            case 95:
            case 109:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 186:
            case 206:
            case 207:
            case 208:
            case 213:
            case 214:
            case 215:
            case 216:
            case 217:
            case 218:
            case 219:
            case 220:
            case 221:
            case 222:
            case 223:
            case 224:
            case 225:
            case 226:
            case 227:
            case 228:
            case 229:
            case 230:
            case 231:
            case 232:
            case 233:
            case 234:
            case 235:
            case 236:
            case 237:
            case 238:
            case 239:
            case 240:
            case 241:
            case 242:
            case 243:
            case 244:
                {
                alt3=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }

            switch (alt3) {
                case 1 :
                    // InternalKim.g:88:3: ( (lv_observable_0_0= ruleObservableSemantics ) )
                    {
                    // InternalKim.g:88:3: ( (lv_observable_0_0= ruleObservableSemantics ) )
                    // InternalKim.g:89:4: (lv_observable_0_0= ruleObservableSemantics )
                    {
                    // InternalKim.g:89:4: (lv_observable_0_0= ruleObservableSemantics )
                    // InternalKim.g:90:5: lv_observable_0_0= ruleObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getModelAccess().getObservableObservableSemanticsParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_observable_0_0=ruleObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getModelRule());
                      					}
                      					set(
                      						current,
                      						"observable",
                      						lv_observable_0_0,
                      						"org.integratedmodelling.kim.Kim.ObservableSemantics");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:108:3: ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* )
                    {
                    // InternalKim.g:108:3: ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* )
                    // InternalKim.g:109:4: ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )*
                    {
                    // InternalKim.g:109:4: ( (lv_namespace_1_0= ruleNamespace ) )?
                    int alt1=2;
                    alt1 = dfa1.predict(input);
                    switch (alt1) {
                        case 1 :
                            // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
                            {
                            // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
                            // InternalKim.g:111:6: lv_namespace_1_0= ruleNamespace
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getModelAccess().getNamespaceNamespaceParserRuleCall_1_0_0());
                              					
                            }
                            pushFollow(FOLLOW_3);
                            lv_namespace_1_0=ruleNamespace();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getModelRule());
                              						}
                              						set(
                              							current,
                              							"namespace",
                              							lv_namespace_1_0,
                              							"org.integratedmodelling.kim.Kim.Namespace");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:128:4: ( (lv_statements_2_0= ruleStatement ) )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( (LA2_0==RULE_ANNOTATION_ID||(LA2_0>=21 && LA2_0<=24)||(LA2_0>=70 && LA2_0<=75)||LA2_0==95||LA2_0==109||LA2_0==156||(LA2_0>=160 && LA2_0<=168)||LA2_0==186||(LA2_0>=206 && LA2_0<=208)||(LA2_0>=213 && LA2_0<=244)) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // InternalKim.g:129:5: (lv_statements_2_0= ruleStatement )
                    	    {
                    	    // InternalKim.g:129:5: (lv_statements_2_0= ruleStatement )
                    	    // InternalKim.g:130:6: lv_statements_2_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_1_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_3);
                    	    lv_statements_2_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getModelRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_2_0,
                    	      							"org.integratedmodelling.kim.Kim.Statement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleStatement"
    // InternalKim.g:152:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // InternalKim.g:152:50: (iv_ruleStatement= ruleStatement EOF )
            // InternalKim.g:153:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalKim.g:159:1: ruleStatement returns [EObject current=null] : ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_conceptStatement_0_0 = null;

        EObject lv_modelStatement_2_0 = null;

        EObject lv_upperOntologyStatement_4_0 = null;

        EObject lv_defineStatement_6_0 = null;

        EObject lv_observeStatement_8_0 = null;



        	enterRule();

        try {
            // InternalKim.g:165:2: ( ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) ) )
            // InternalKim.g:166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) )
            {
            // InternalKim.g:166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) )
            int alt4=5;
            alt4 = dfa4.predict(input);
            switch (alt4) {
                case 1 :
                    // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
                    {
                    // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
                    // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';'
                    {
                    // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) )
                    // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
                    {
                    // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
                    // InternalKim.g:170:6: lv_conceptStatement_0_0= ruleConceptStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getConceptStatementConceptStatementParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_conceptStatement_0_0=ruleConceptStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"conceptStatement",
                      							lv_conceptStatement_0_0,
                      							"org.integratedmodelling.kim.Kim.ConceptStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getStatementAccess().getSemicolonKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
                    {
                    // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
                    // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';'
                    {
                    // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) )
                    // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
                    {
                    // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
                    // InternalKim.g:196:6: lv_modelStatement_2_0= ruleModelStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getModelStatementModelStatementParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_modelStatement_2_0=ruleModelStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"modelStatement",
                      							lv_modelStatement_2_0,
                      							"org.integratedmodelling.kim.Kim.ModelStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getStatementAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
                    {
                    // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
                    // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';'
                    {
                    // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) )
                    // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
                    {
                    // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
                    // InternalKim.g:222:6: lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getUpperOntologyStatementUpperOntologyDefinitionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_upperOntologyStatement_4_0=ruleUpperOntologyDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"upperOntologyStatement",
                      							lv_upperOntologyStatement_4_0,
                      							"org.integratedmodelling.kim.Kim.UpperOntologyDefinition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getStatementAccess().getSemicolonKeyword_2_1());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
                    {
                    // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
                    // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';'
                    {
                    // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) )
                    // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
                    {
                    // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
                    // InternalKim.g:248:6: lv_defineStatement_6_0= ruleDefineStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getDefineStatementDefineStatementParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_defineStatement_6_0=ruleDefineStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"defineStatement",
                      							lv_defineStatement_6_0,
                      							"org.integratedmodelling.kim.Kim.DefineStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getStatementAccess().getSemicolonKeyword_3_1());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:271:3: ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' )
                    {
                    // InternalKim.g:271:3: ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' )
                    // InternalKim.g:272:4: ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';'
                    {
                    // InternalKim.g:272:4: ( (lv_observeStatement_8_0= ruleObserveStatement ) )
                    // InternalKim.g:273:5: (lv_observeStatement_8_0= ruleObserveStatement )
                    {
                    // InternalKim.g:273:5: (lv_observeStatement_8_0= ruleObserveStatement )
                    // InternalKim.g:274:6: lv_observeStatement_8_0= ruleObserveStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getObserveStatementObserveStatementParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_observeStatement_8_0=ruleObserveStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"observeStatement",
                      							lv_observeStatement_8_0,
                      							"org.integratedmodelling.kim.Kim.ObserveStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getStatementAccess().getSemicolonKeyword_4_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleModelStatement"
    // InternalKim.g:300:1: entryRuleModelStatement returns [EObject current=null] : iv_ruleModelStatement= ruleModelStatement EOF ;
    public final EObject entryRuleModelStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelStatement = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getModelStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:304:2: (iv_ruleModelStatement= ruleModelStatement EOF )
            // InternalKim.g:305:2: iv_ruleModelStatement= ruleModelStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModelStatement=ruleModelStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleModelStatement"


    // $ANTLR start "ruleModelStatement"
    // InternalKim.g:314:1: ruleModelStatement returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) ) ) ;
    public final EObject ruleModelStatement() throws RecognitionException {
        EObject current = null;

        Token lv_inactive_3_0=null;
        Token lv_projectPrivate_4_0=null;
        Token lv_private_5_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_model_6_0 = null;

        EObject lv_body_7_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getModelStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:323:2: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) ) ) )
            // InternalKim.g:324:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) ) )
            {
            // InternalKim.g:324:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) ) )
            // InternalKim.g:325:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) )
            {
            // InternalKim.g:325:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==RULE_ANNOTATION_ID) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalKim.g:326:4: ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )*
                    {
                    // InternalKim.g:326:4: ( (lv_annotations_0_0= ruleAnnotation ) )
                    // InternalKim.g:327:5: (lv_annotations_0_0= ruleAnnotation )
                    {
                    // InternalKim.g:327:5: (lv_annotations_0_0= ruleAnnotation )
                    // InternalKim.g:328:6: lv_annotations_0_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_annotations_0_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelStatementRule());
                      						}
                      						add(
                      							current,
                      							"annotations",
                      							lv_annotations_0_0,
                      							"org.integratedmodelling.kim.Kim.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:345:4: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==RULE_ANNOTATION_ID) ) {
                            alt5=1;
                        }


                        switch (alt5) {
                    	case 1 :
                    	    // InternalKim.g:346:5: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalKim.g:346:5: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalKim.g:347:6: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getModelStatementAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_5);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getModelStatementRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_1_0,
                    	      							"org.integratedmodelling.kim.Kim.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:365:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )?
            int alt9=2;
            switch ( input.LA(1) ) {
                case 21:
                case 22:
                case 23:
                    {
                    alt9=1;
                    }
                    break;
                case 70:
                    {
                    int LA9_2 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 71:
                    {
                    int LA9_3 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 72:
                    {
                    int LA9_4 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 73:
                    {
                    int LA9_5 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 74:
                    {
                    int LA9_6 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 75:
                    {
                    int LA9_7 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
            }

            switch (alt9) {
                case 1 :
                    // InternalKim.g:366:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) )
                    {
                    // InternalKim.g:366:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) )
                    // InternalKim.g:367:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* )
                    {
                    getUnorderedGroupHelper().enter(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());
                    // InternalKim.g:370:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* )
                    // InternalKim.g:371:6: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )*
                    {
                    // InternalKim.g:371:6: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )*
                    loop8:
                    do {
                        int alt8=3;
                        int LA8_0 = input.LA(1);

                        if ( LA8_0 == 21 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
                            alt8=1;
                        }
                        else if ( LA8_0 == 22 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                            alt8=2;
                        }
                        else if ( LA8_0 == 23 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                            alt8=2;
                        }


                        switch (alt8) {
                    	case 1 :
                    	    // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
                    	    {
                    	    // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
                    	    // InternalKim.g:373:5: {...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleModelStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalKim.g:373:111: ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
                    	    // InternalKim.g:374:6: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
                    	    // InternalKim.g:377:9: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
                    	    // InternalKim.g:377:10: {...}? => ( (lv_inactive_3_0= 'void' ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleModelStatement", "true");
                    	    }
                    	    // InternalKim.g:377:19: ( (lv_inactive_3_0= 'void' ) )
                    	    // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
                    	    {
                    	    // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
                    	    // InternalKim.g:378:10: lv_inactive_3_0= 'void'
                    	    {
                    	    lv_inactive_3_0=(Token)match(input,21,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(lv_inactive_3_0, grammarAccess.getModelStatementAccess().getInactiveVoidKeyword_1_0_0());
                    	      									
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      										if (current==null) {
                    	      											current = createModelElement(grammarAccess.getModelStatementRule());
                    	      										}
                    	      										setWithLastConsumed(current, "inactive", true, "void");
                    	      									
                    	    }

                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
                    	    // InternalKim.g:396:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleModelStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalKim.g:396:111: ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
                    	    // InternalKim.g:397:6: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
                    	    // InternalKim.g:400:9: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
                    	    // InternalKim.g:400:10: {...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleModelStatement", "true");
                    	    }
                    	    // InternalKim.g:400:19: ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
                    	    // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) )
                    	    {
                    	    // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )?
                    	    int alt7=2;
                    	    int LA7_0 = input.LA(1);

                    	    if ( (LA7_0==22) ) {
                    	        alt7=1;
                    	    }
                    	    switch (alt7) {
                    	        case 1 :
                    	            // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
                    	            {
                    	            // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
                    	            // InternalKim.g:402:11: lv_projectPrivate_4_0= 'project'
                    	            {
                    	            lv_projectPrivate_4_0=(Token)match(input,22,FOLLOW_7); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              											newLeafNode(lv_projectPrivate_4_0, grammarAccess.getModelStatementAccess().getProjectPrivateProjectKeyword_1_1_0_0());
                    	              										
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              											if (current==null) {
                    	              												current = createModelElement(grammarAccess.getModelStatementRule());
                    	              											}
                    	              											setWithLastConsumed(current, "projectPrivate", true, "project");
                    	              										
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:414:9: ( (lv_private_5_0= 'private' ) )
                    	    // InternalKim.g:415:10: (lv_private_5_0= 'private' )
                    	    {
                    	    // InternalKim.g:415:10: (lv_private_5_0= 'private' )
                    	    // InternalKim.g:416:11: lv_private_5_0= 'private'
                    	    {
                    	    lv_private_5_0=(Token)match(input,23,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											newLeafNode(lv_private_5_0, grammarAccess.getModelStatementAccess().getPrivatePrivateKeyword_1_1_1_0());
                    	      										
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElement(grammarAccess.getModelStatementRule());
                    	      											}
                    	      											setWithLastConsumed(current, "private", true, "private");
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop8;
                        }
                    } while (true);


                    }


                    }

                    getUnorderedGroupHelper().leave(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

                    }
                    break;

            }

            // InternalKim.g:441:3: ( (lv_model_6_0= ruleMODEL_TYPE ) )
            // InternalKim.g:442:4: (lv_model_6_0= ruleMODEL_TYPE )
            {
            // InternalKim.g:442:4: (lv_model_6_0= ruleMODEL_TYPE )
            // InternalKim.g:443:5: lv_model_6_0= ruleMODEL_TYPE
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getModelStatementAccess().getModelMODEL_TYPEParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_8);
            lv_model_6_0=ruleMODEL_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getModelStatementRule());
              					}
              					set(
              						current,
              						"model",
              						lv_model_6_0,
              						"org.integratedmodelling.kim.Kim.MODEL_TYPE");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:460:3: ( (lv_body_7_0= ruleModelBodyStatement ) )
            // InternalKim.g:461:4: (lv_body_7_0= ruleModelBodyStatement )
            {
            // InternalKim.g:461:4: (lv_body_7_0= ruleModelBodyStatement )
            // InternalKim.g:462:5: lv_body_7_0= ruleModelBodyStatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getModelStatementAccess().getBodyModelBodyStatementParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_7_0=ruleModelBodyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getModelStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_7_0,
              						"org.integratedmodelling.kim.Kim.ModelBodyStatement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleModelStatement"


    // $ANTLR start "entryRuleDefineStatement"
    // InternalKim.g:486:1: entryRuleDefineStatement returns [EObject current=null] : iv_ruleDefineStatement= ruleDefineStatement EOF ;
    public final EObject entryRuleDefineStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefineStatement = null;


        try {
            // InternalKim.g:486:56: (iv_ruleDefineStatement= ruleDefineStatement EOF )
            // InternalKim.g:487:2: iv_ruleDefineStatement= ruleDefineStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefineStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefineStatement=ruleDefineStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefineStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDefineStatement"


    // $ANTLR start "ruleDefineStatement"
    // InternalKim.g:493:1: ruleDefineStatement returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) ) ) ;
    public final EObject ruleDefineStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_1_0 = null;

        EObject lv_defineBody_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:499:2: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) ) ) )
            // InternalKim.g:500:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) ) )
            {
            // InternalKim.g:500:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) ) )
            // InternalKim.g:501:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) )
            {
            // InternalKim.g:501:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_ANNOTATION_ID) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalKim.g:502:4: ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )*
                    {
                    // InternalKim.g:502:4: ( (lv_annotations_0_0= ruleAnnotation ) )
                    // InternalKim.g:503:5: (lv_annotations_0_0= ruleAnnotation )
                    {
                    // InternalKim.g:503:5: (lv_annotations_0_0= ruleAnnotation )
                    // InternalKim.g:504:6: lv_annotations_0_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDefineStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_annotations_0_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDefineStatementRule());
                      						}
                      						add(
                      							current,
                      							"annotations",
                      							lv_annotations_0_0,
                      							"org.integratedmodelling.kim.Kim.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:521:4: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop10:
                    do {
                        int alt10=2;
                        int LA10_0 = input.LA(1);

                        if ( (LA10_0==RULE_ANNOTATION_ID) ) {
                            alt10=1;
                        }


                        switch (alt10) {
                    	case 1 :
                    	    // InternalKim.g:522:5: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalKim.g:522:5: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalKim.g:523:6: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getDefineStatementAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_9);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getDefineStatementRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_1_0,
                    	      							"org.integratedmodelling.kim.Kim.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop10;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_2=(Token)match(input,24,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDefineStatementAccess().getDefineKeyword_1());
              		
            }
            // InternalKim.g:545:3: ( (lv_defineBody_3_0= ruleDefinitionBody ) )
            // InternalKim.g:546:4: (lv_defineBody_3_0= ruleDefinitionBody )
            {
            // InternalKim.g:546:4: (lv_defineBody_3_0= ruleDefinitionBody )
            // InternalKim.g:547:5: lv_defineBody_3_0= ruleDefinitionBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefineStatementAccess().getDefineBodyDefinitionBodyParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_defineBody_3_0=ruleDefinitionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefineStatementRule());
              					}
              					set(
              						current,
              						"defineBody",
              						lv_defineBody_3_0,
              						"org.integratedmodelling.kim.Kim.DefinitionBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDefineStatement"


    // $ANTLR start "entryRuleDefinitionBody"
    // InternalKim.g:568:1: entryRuleDefinitionBody returns [EObject current=null] : iv_ruleDefinitionBody= ruleDefinitionBody EOF ;
    public final EObject entryRuleDefinitionBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefinitionBody = null;


        try {
            // InternalKim.g:568:55: (iv_ruleDefinitionBody= ruleDefinitionBody EOF )
            // InternalKim.g:569:2: iv_ruleDefinitionBody= ruleDefinitionBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefinitionBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefinitionBody=ruleDefinitionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefinitionBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDefinitionBody"


    // $ANTLR start "ruleDefinitionBody"
    // InternalKim.g:575:1: ruleDefinitionBody returns [EObject current=null] : ( ( (lv_name_0_0= RULE_UPPERCASE_ID ) ) otherlv_1= 'as' ( (lv_value_2_0= ruleValue ) ) ) ;
    public final EObject ruleDefinitionBody() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:581:2: ( ( ( (lv_name_0_0= RULE_UPPERCASE_ID ) ) otherlv_1= 'as' ( (lv_value_2_0= ruleValue ) ) ) )
            // InternalKim.g:582:2: ( ( (lv_name_0_0= RULE_UPPERCASE_ID ) ) otherlv_1= 'as' ( (lv_value_2_0= ruleValue ) ) )
            {
            // InternalKim.g:582:2: ( ( (lv_name_0_0= RULE_UPPERCASE_ID ) ) otherlv_1= 'as' ( (lv_value_2_0= ruleValue ) ) )
            // InternalKim.g:583:3: ( (lv_name_0_0= RULE_UPPERCASE_ID ) ) otherlv_1= 'as' ( (lv_value_2_0= ruleValue ) )
            {
            // InternalKim.g:583:3: ( (lv_name_0_0= RULE_UPPERCASE_ID ) )
            // InternalKim.g:584:4: (lv_name_0_0= RULE_UPPERCASE_ID )
            {
            // InternalKim.g:584:4: (lv_name_0_0= RULE_UPPERCASE_ID )
            // InternalKim.g:585:5: lv_name_0_0= RULE_UPPERCASE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getDefinitionBodyAccess().getNameUPPERCASE_IDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDefinitionBodyRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,25,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDefinitionBodyAccess().getAsKeyword_1());
              		
            }
            // InternalKim.g:605:3: ( (lv_value_2_0= ruleValue ) )
            // InternalKim.g:606:4: (lv_value_2_0= ruleValue )
            {
            // InternalKim.g:606:4: (lv_value_2_0= ruleValue )
            // InternalKim.g:607:5: lv_value_2_0= ruleValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionBodyAccess().getValueValueParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionBodyRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"org.integratedmodelling.kim.Kim.Value");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDefinitionBody"


    // $ANTLR start "entryRuleModelBodyStatement"
    // InternalKim.g:628:1: entryRuleModelBodyStatement returns [EObject current=null] : iv_ruleModelBodyStatement= ruleModelBodyStatement EOF ;
    public final EObject entryRuleModelBodyStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelBodyStatement = null;


        try {
            // InternalKim.g:628:59: (iv_ruleModelBodyStatement= ruleModelBodyStatement EOF )
            // InternalKim.g:629:2: iv_ruleModelBodyStatement= ruleModelBodyStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelBodyStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModelBodyStatement=ruleModelBodyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelBodyStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModelBodyStatement"


    // $ANTLR start "ruleModelBodyStatement"
    // InternalKim.g:635:1: ruleModelBodyStatement returns [EObject current=null] : ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )? ( ( (lv_name_9_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_10_0= ruleAnnotatedObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_13_0= RULE_STRING ) )? (otherlv_14= 'observing' ( (lv_dependencies_15_0= ruleDependency ) ) (otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) ) )* )? (otherlv_18= 'using' ( (lv_contextualizers_19_0= ruleValueExecution ) ) (otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) ) )* )? ( (otherlv_22= 'classified' | ( (lv_discretization_23_0= 'discretized' ) ) ) ( (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) ) | (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) ) ) )? (otherlv_29= 'lookup' (otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')' )? otherlv_35= 'into' ( ( (lv_lookupTable_36_0= ruleTable ) ) | ( (lv_lookupTableId_37_0= RULE_UPPERCASE_ID ) ) ) )? ( (lv_actions_38_0= ruleActionSpecification ) )* (otherlv_39= 'metadata' ( (lv_metadata_40_0= ruleMetadata ) ) )? ) ;
    public final EObject ruleModelBodyStatement() throws RecognitionException {
        EObject current = null;

        Token lv_instantiator_0_0=null;
        Token otherlv_2=null;
        Token lv_boolean_6_1=null;
        Token lv_boolean_6_2=null;
        Token otherlv_8=null;
        Token lv_name_9_0=null;
        Token otherlv_11=null;
        Token lv_docstring_13_0=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token lv_discretization_23_0=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token lv_lookupTableArgs_31_1=null;
        Token lv_lookupTableArgs_31_2=null;
        Token lv_lookupTableArgs_31_3=null;
        Token otherlv_32=null;
        Token lv_lookupTableArgs_33_1=null;
        Token lv_lookupTableArgs_33_2=null;
        Token lv_lookupTableArgs_33_3=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token lv_lookupTableId_37_0=null;
        Token otherlv_39=null;
        EObject lv_urns_1_0 = null;

        EObject lv_urns_3_0 = null;

        EObject lv_function_4_0 = null;

        EObject lv_number_5_0 = null;

        EObject lv_concept_7_0 = null;

        EObject lv_observables_10_0 = null;

        EObject lv_observables_12_0 = null;

        EObject lv_dependencies_15_0 = null;

        EObject lv_dependencies_17_0 = null;

        EObject lv_contextualizers_19_0 = null;

        EObject lv_contextualizers_21_0 = null;

        EObject lv_classification_25_0 = null;

        AntlrDatatypeRuleToken lv_classificationProperty_28_0 = null;

        EObject lv_lookupTable_36_0 = null;

        EObject lv_actions_38_0 = null;

        EObject lv_metadata_40_0 = null;



        	enterRule();

        try {
            // InternalKim.g:641:2: ( ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )? ( ( (lv_name_9_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_10_0= ruleAnnotatedObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_13_0= RULE_STRING ) )? (otherlv_14= 'observing' ( (lv_dependencies_15_0= ruleDependency ) ) (otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) ) )* )? (otherlv_18= 'using' ( (lv_contextualizers_19_0= ruleValueExecution ) ) (otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) ) )* )? ( (otherlv_22= 'classified' | ( (lv_discretization_23_0= 'discretized' ) ) ) ( (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) ) | (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) ) ) )? (otherlv_29= 'lookup' (otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')' )? otherlv_35= 'into' ( ( (lv_lookupTable_36_0= ruleTable ) ) | ( (lv_lookupTableId_37_0= RULE_UPPERCASE_ID ) ) ) )? ( (lv_actions_38_0= ruleActionSpecification ) )* (otherlv_39= 'metadata' ( (lv_metadata_40_0= ruleMetadata ) ) )? ) )
            // InternalKim.g:642:2: ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )? ( ( (lv_name_9_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_10_0= ruleAnnotatedObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_13_0= RULE_STRING ) )? (otherlv_14= 'observing' ( (lv_dependencies_15_0= ruleDependency ) ) (otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) ) )* )? (otherlv_18= 'using' ( (lv_contextualizers_19_0= ruleValueExecution ) ) (otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) ) )* )? ( (otherlv_22= 'classified' | ( (lv_discretization_23_0= 'discretized' ) ) ) ( (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) ) | (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) ) ) )? (otherlv_29= 'lookup' (otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')' )? otherlv_35= 'into' ( ( (lv_lookupTable_36_0= ruleTable ) ) | ( (lv_lookupTableId_37_0= RULE_UPPERCASE_ID ) ) ) )? ( (lv_actions_38_0= ruleActionSpecification ) )* (otherlv_39= 'metadata' ( (lv_metadata_40_0= ruleMetadata ) ) )? )
            {
            // InternalKim.g:642:2: ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )? ( ( (lv_name_9_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_10_0= ruleAnnotatedObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_13_0= RULE_STRING ) )? (otherlv_14= 'observing' ( (lv_dependencies_15_0= ruleDependency ) ) (otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) ) )* )? (otherlv_18= 'using' ( (lv_contextualizers_19_0= ruleValueExecution ) ) (otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) ) )* )? ( (otherlv_22= 'classified' | ( (lv_discretization_23_0= 'discretized' ) ) ) ( (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) ) | (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) ) ) )? (otherlv_29= 'lookup' (otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')' )? otherlv_35= 'into' ( ( (lv_lookupTable_36_0= ruleTable ) ) | ( (lv_lookupTableId_37_0= RULE_UPPERCASE_ID ) ) ) )? ( (lv_actions_38_0= ruleActionSpecification ) )* (otherlv_39= 'metadata' ( (lv_metadata_40_0= ruleMetadata ) ) )? )
            // InternalKim.g:643:3: ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )? ( ( (lv_name_9_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_10_0= ruleAnnotatedObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_13_0= RULE_STRING ) )? (otherlv_14= 'observing' ( (lv_dependencies_15_0= ruleDependency ) ) (otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) ) )* )? (otherlv_18= 'using' ( (lv_contextualizers_19_0= ruleValueExecution ) ) (otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) ) )* )? ( (otherlv_22= 'classified' | ( (lv_discretization_23_0= 'discretized' ) ) ) ( (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) ) | (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) ) ) )? (otherlv_29= 'lookup' (otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')' )? otherlv_35= 'into' ( ( (lv_lookupTable_36_0= ruleTable ) ) | ( (lv_lookupTableId_37_0= RULE_UPPERCASE_ID ) ) ) )? ( (lv_actions_38_0= ruleActionSpecification ) )* (otherlv_39= 'metadata' ( (lv_metadata_40_0= ruleMetadata ) ) )?
            {
            // InternalKim.g:643:3: ( (lv_instantiator_0_0= 'each' ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==26) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalKim.g:644:4: (lv_instantiator_0_0= 'each' )
                    {
                    // InternalKim.g:644:4: (lv_instantiator_0_0= 'each' )
                    // InternalKim.g:645:5: lv_instantiator_0_0= 'each'
                    {
                    lv_instantiator_0_0=(Token)match(input,26,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_instantiator_0_0, grammarAccess.getModelBodyStatementAccess().getInstantiatorEachKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      					}
                      					setWithLastConsumed(current, "instantiator", true, "each");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:657:3: ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )?
            int alt16=2;
            alt16 = dfa16.predict(input);
            switch (alt16) {
                case 1 :
                    // InternalKim.g:658:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as'
                    {
                    // InternalKim.g:658:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) )
                    int alt15=5;
                    alt15 = dfa15.predict(input);
                    switch (alt15) {
                        case 1 :
                            // InternalKim.g:659:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                            {
                            // InternalKim.g:659:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                            // InternalKim.g:660:6: ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                            {
                            // InternalKim.g:660:6: ( (lv_urns_1_0= ruleUrn ) )
                            // InternalKim.g:661:7: (lv_urns_1_0= ruleUrn )
                            {
                            // InternalKim.g:661:7: (lv_urns_1_0= ruleUrn )
                            // InternalKim.g:662:8: lv_urns_1_0= ruleUrn
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_13);
                            lv_urns_1_0=ruleUrn();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								add(
                              									current,
                              									"urns",
                              									lv_urns_1_0,
                              									"org.integratedmodelling.kim.Kim.Urn");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalKim.g:679:6: (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                            loop13:
                            do {
                                int alt13=2;
                                int LA13_0 = input.LA(1);

                                if ( (LA13_0==27) ) {
                                    alt13=1;
                                }


                                switch (alt13) {
                            	case 1 :
                            	    // InternalKim.g:680:7: otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) )
                            	    {
                            	    otherlv_2=(Token)match(input,27,FOLLOW_14); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_2, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_1_0_0_1_0());
                            	      						
                            	    }
                            	    // InternalKim.g:684:7: ( (lv_urns_3_0= ruleUrn ) )
                            	    // InternalKim.g:685:8: (lv_urns_3_0= ruleUrn )
                            	    {
                            	    // InternalKim.g:685:8: (lv_urns_3_0= ruleUrn )
                            	    // InternalKim.g:686:9: lv_urns_3_0= ruleUrn
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_13);
                            	    lv_urns_3_0=ruleUrn();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"urns",
                            	      										lv_urns_3_0,
                            	      										"org.integratedmodelling.kim.Kim.Urn");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop13;
                                }
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:706:5: ( (lv_function_4_0= ruleFunction ) )
                            {
                            // InternalKim.g:706:5: ( (lv_function_4_0= ruleFunction ) )
                            // InternalKim.g:707:6: (lv_function_4_0= ruleFunction )
                            {
                            // InternalKim.g:707:6: (lv_function_4_0= ruleFunction )
                            // InternalKim.g:708:7: lv_function_4_0= ruleFunction
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getFunctionFunctionParserRuleCall_1_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_11);
                            lv_function_4_0=ruleFunction();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"function",
                              								lv_function_4_0,
                              								"org.integratedmodelling.kim.Kim.Function");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:726:5: ( (lv_number_5_0= ruleNumber ) )
                            {
                            // InternalKim.g:726:5: ( (lv_number_5_0= ruleNumber ) )
                            // InternalKim.g:727:6: (lv_number_5_0= ruleNumber )
                            {
                            // InternalKim.g:727:6: (lv_number_5_0= ruleNumber )
                            // InternalKim.g:728:7: lv_number_5_0= ruleNumber
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getNumberNumberParserRuleCall_1_0_2_0());
                              						
                            }
                            pushFollow(FOLLOW_11);
                            lv_number_5_0=ruleNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"number",
                              								lv_number_5_0,
                              								"org.integratedmodelling.kim.Kim.Number");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:746:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                            {
                            // InternalKim.g:746:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                            // InternalKim.g:747:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                            {
                            // InternalKim.g:747:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                            // InternalKim.g:748:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                            {
                            // InternalKim.g:748:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                            int alt14=2;
                            int LA14_0 = input.LA(1);

                            if ( (LA14_0==28) ) {
                                alt14=1;
                            }
                            else if ( (LA14_0==29) ) {
                                alt14=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 14, 0, input);

                                throw nvae;
                            }
                            switch (alt14) {
                                case 1 :
                                    // InternalKim.g:749:8: lv_boolean_6_1= 'true'
                                    {
                                    lv_boolean_6_1=(Token)match(input,28,FOLLOW_11); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_boolean_6_1, grammarAccess.getModelBodyStatementAccess().getBooleanTrueKeyword_1_0_3_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								setWithLastConsumed(current, "boolean", lv_boolean_6_1, null);
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:760:8: lv_boolean_6_2= 'false'
                                    {
                                    lv_boolean_6_2=(Token)match(input,29,FOLLOW_11); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_boolean_6_2, grammarAccess.getModelBodyStatementAccess().getBooleanFalseKeyword_1_0_3_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								setWithLastConsumed(current, "boolean", lv_boolean_6_2, null);
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;
                        case 5 :
                            // InternalKim.g:774:5: ( (lv_concept_7_0= ruleSimpleObservableSemantics ) )
                            {
                            // InternalKim.g:774:5: ( (lv_concept_7_0= ruleSimpleObservableSemantics ) )
                            // InternalKim.g:775:6: (lv_concept_7_0= ruleSimpleObservableSemantics )
                            {
                            // InternalKim.g:775:6: (lv_concept_7_0= ruleSimpleObservableSemantics )
                            // InternalKim.g:776:7: lv_concept_7_0= ruleSimpleObservableSemantics
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getConceptSimpleObservableSemanticsParserRuleCall_1_0_4_0());
                              						
                            }
                            pushFollow(FOLLOW_11);
                            lv_concept_7_0=ruleSimpleObservableSemantics();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"concept",
                              								lv_concept_7_0,
                              								"org.integratedmodelling.kim.Kim.SimpleObservableSemantics");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_8=(Token)match(input,25,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getModelBodyStatementAccess().getAsKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:799:3: ( ( (lv_name_9_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_10_0= ruleAnnotatedObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleAnnotatedObservableSemantics ) ) )* ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_LOWERCASE_ID) ) {
                int LA18_1 = input.LA(2);

                if ( (LA18_1==EOF||LA18_1==RULE_STRING||LA18_1==20||(LA18_1>=30 && LA18_1<=33)||LA18_1==37||LA18_1==42||(LA18_1>=54 && LA18_1<=56)||(LA18_1>=62 && LA18_1<=67)) ) {
                    alt18=1;
                }
                else if ( (LA18_1==25||LA18_1==38||LA18_1==105||LA18_1==108) ) {
                    alt18=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 18, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA18_0==RULE_UPPERCASE_ID||LA18_0==RULE_STRING||(LA18_0>=RULE_EXPR && LA18_0<=RULE_ID)||LA18_0==RULE_ANNOTATION_ID||(LA18_0>=27 && LA18_0<=29)||LA18_0==38||(LA18_0>=49 && LA18_0<=50)||LA18_0==112||(LA18_0>=128 && LA18_0<=129)||(LA18_0>=137 && LA18_0<=138)||(LA18_0>=140 && LA18_0<=156)||LA18_0==209||(LA18_0>=246 && LA18_0<=247)) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalKim.g:800:4: ( (lv_name_9_0= RULE_LOWERCASE_ID ) )
                    {
                    // InternalKim.g:800:4: ( (lv_name_9_0= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:801:5: (lv_name_9_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:801:5: (lv_name_9_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:802:6: lv_name_9_0= RULE_LOWERCASE_ID
                    {
                    lv_name_9_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_9_0, grammarAccess.getModelBodyStatementAccess().getNameLOWERCASE_IDTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_9_0,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:819:4: ( ( (lv_observables_10_0= ruleAnnotatedObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleAnnotatedObservableSemantics ) ) )* )
                    {
                    // InternalKim.g:819:4: ( ( (lv_observables_10_0= ruleAnnotatedObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleAnnotatedObservableSemantics ) ) )* )
                    // InternalKim.g:820:5: ( (lv_observables_10_0= ruleAnnotatedObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleAnnotatedObservableSemantics ) ) )*
                    {
                    // InternalKim.g:820:5: ( (lv_observables_10_0= ruleAnnotatedObservableSemantics ) )
                    // InternalKim.g:821:6: (lv_observables_10_0= ruleAnnotatedObservableSemantics )
                    {
                    // InternalKim.g:821:6: (lv_observables_10_0= ruleAnnotatedObservableSemantics )
                    // InternalKim.g:822:7: lv_observables_10_0= ruleAnnotatedObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getObservablesAnnotatedObservableSemanticsParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_16);
                    lv_observables_10_0=ruleAnnotatedObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      							}
                      							add(
                      								current,
                      								"observables",
                      								lv_observables_10_0,
                      								"org.integratedmodelling.kim.Kim.AnnotatedObservableSemantics");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalKim.g:839:5: (otherlv_11= ',' ( (lv_observables_12_0= ruleAnnotatedObservableSemantics ) ) )*
                    loop17:
                    do {
                        int alt17=2;
                        int LA17_0 = input.LA(1);

                        if ( (LA17_0==27) ) {
                            alt17=1;
                        }


                        switch (alt17) {
                    	case 1 :
                    	    // InternalKim.g:840:6: otherlv_11= ',' ( (lv_observables_12_0= ruleAnnotatedObservableSemantics ) )
                    	    {
                    	    otherlv_11=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_11, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_2_1_1_0());
                    	      					
                    	    }
                    	    // InternalKim.g:844:6: ( (lv_observables_12_0= ruleAnnotatedObservableSemantics ) )
                    	    // InternalKim.g:845:7: (lv_observables_12_0= ruleAnnotatedObservableSemantics )
                    	    {
                    	    // InternalKim.g:845:7: (lv_observables_12_0= ruleAnnotatedObservableSemantics )
                    	    // InternalKim.g:846:8: lv_observables_12_0= ruleAnnotatedObservableSemantics
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getObservablesAnnotatedObservableSemanticsParserRuleCall_2_1_1_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_observables_12_0=ruleAnnotatedObservableSemantics();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"observables",
                    	      									lv_observables_12_0,
                    	      									"org.integratedmodelling.kim.Kim.AnnotatedObservableSemantics");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop17;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            // InternalKim.g:866:3: ( (lv_docstring_13_0= RULE_STRING ) )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_STRING) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // InternalKim.g:867:4: (lv_docstring_13_0= RULE_STRING )
                    {
                    // InternalKim.g:867:4: (lv_docstring_13_0= RULE_STRING )
                    // InternalKim.g:868:5: lv_docstring_13_0= RULE_STRING
                    {
                    lv_docstring_13_0=(Token)match(input,RULE_STRING,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_docstring_13_0, grammarAccess.getModelBodyStatementAccess().getDocstringSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"docstring",
                      						lv_docstring_13_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:884:3: (otherlv_14= 'observing' ( (lv_dependencies_15_0= ruleDependency ) ) (otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) ) )* )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==30) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // InternalKim.g:885:4: otherlv_14= 'observing' ( (lv_dependencies_15_0= ruleDependency ) ) (otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) ) )*
                    {
                    otherlv_14=(Token)match(input,30,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getModelBodyStatementAccess().getObservingKeyword_4_0());
                      			
                    }
                    // InternalKim.g:889:4: ( (lv_dependencies_15_0= ruleDependency ) )
                    // InternalKim.g:890:5: (lv_dependencies_15_0= ruleDependency )
                    {
                    // InternalKim.g:890:5: (lv_dependencies_15_0= ruleDependency )
                    // InternalKim.g:891:6: lv_dependencies_15_0= ruleDependency
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getDependenciesDependencyParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_dependencies_15_0=ruleDependency();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						add(
                      							current,
                      							"dependencies",
                      							lv_dependencies_15_0,
                      							"org.integratedmodelling.kim.Kim.Dependency");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:908:4: (otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) ) )*
                    loop20:
                    do {
                        int alt20=2;
                        int LA20_0 = input.LA(1);

                        if ( (LA20_0==27) ) {
                            alt20=1;
                        }


                        switch (alt20) {
                    	case 1 :
                    	    // InternalKim.g:909:5: otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) )
                    	    {
                    	    otherlv_16=(Token)match(input,27,FOLLOW_18); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_16, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_4_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:913:5: ( (lv_dependencies_17_0= ruleDependency ) )
                    	    // InternalKim.g:914:6: (lv_dependencies_17_0= ruleDependency )
                    	    {
                    	    // InternalKim.g:914:6: (lv_dependencies_17_0= ruleDependency )
                    	    // InternalKim.g:915:7: lv_dependencies_17_0= ruleDependency
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getDependenciesDependencyParserRuleCall_4_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_19);
                    	    lv_dependencies_17_0=ruleDependency();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"dependencies",
                    	      								lv_dependencies_17_0,
                    	      								"org.integratedmodelling.kim.Kim.Dependency");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop20;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:934:3: (otherlv_18= 'using' ( (lv_contextualizers_19_0= ruleValueExecution ) ) (otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) ) )* )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==31) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalKim.g:935:4: otherlv_18= 'using' ( (lv_contextualizers_19_0= ruleValueExecution ) ) (otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) ) )*
                    {
                    otherlv_18=(Token)match(input,31,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getModelBodyStatementAccess().getUsingKeyword_5_0());
                      			
                    }
                    // InternalKim.g:939:4: ( (lv_contextualizers_19_0= ruleValueExecution ) )
                    // InternalKim.g:940:5: (lv_contextualizers_19_0= ruleValueExecution )
                    {
                    // InternalKim.g:940:5: (lv_contextualizers_19_0= ruleValueExecution )
                    // InternalKim.g:941:6: lv_contextualizers_19_0= ruleValueExecution
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getContextualizersValueExecutionParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_contextualizers_19_0=ruleValueExecution();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						add(
                      							current,
                      							"contextualizers",
                      							lv_contextualizers_19_0,
                      							"org.integratedmodelling.kim.Kim.ValueExecution");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:958:4: (otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) ) )*
                    loop22:
                    do {
                        int alt22=2;
                        int LA22_0 = input.LA(1);

                        if ( (LA22_0==27) ) {
                            alt22=1;
                        }


                        switch (alt22) {
                    	case 1 :
                    	    // InternalKim.g:959:5: otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) )
                    	    {
                    	    otherlv_20=(Token)match(input,27,FOLLOW_20); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_20, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:963:5: ( (lv_contextualizers_21_0= ruleValueExecution ) )
                    	    // InternalKim.g:964:6: (lv_contextualizers_21_0= ruleValueExecution )
                    	    {
                    	    // InternalKim.g:964:6: (lv_contextualizers_21_0= ruleValueExecution )
                    	    // InternalKim.g:965:7: lv_contextualizers_21_0= ruleValueExecution
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getContextualizersValueExecutionParserRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_21);
                    	    lv_contextualizers_21_0=ruleValueExecution();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"contextualizers",
                    	      								lv_contextualizers_21_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueExecution");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop22;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:984:3: ( (otherlv_22= 'classified' | ( (lv_discretization_23_0= 'discretized' ) ) ) ( (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) ) | (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) ) ) )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( ((LA26_0>=32 && LA26_0<=33)) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalKim.g:985:4: (otherlv_22= 'classified' | ( (lv_discretization_23_0= 'discretized' ) ) ) ( (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) ) | (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) ) )
                    {
                    // InternalKim.g:985:4: (otherlv_22= 'classified' | ( (lv_discretization_23_0= 'discretized' ) ) )
                    int alt24=2;
                    int LA24_0 = input.LA(1);

                    if ( (LA24_0==32) ) {
                        alt24=1;
                    }
                    else if ( (LA24_0==33) ) {
                        alt24=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 24, 0, input);

                        throw nvae;
                    }
                    switch (alt24) {
                        case 1 :
                            // InternalKim.g:986:5: otherlv_22= 'classified'
                            {
                            otherlv_22=(Token)match(input,32,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_22, grammarAccess.getModelBodyStatementAccess().getClassifiedKeyword_6_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:991:5: ( (lv_discretization_23_0= 'discretized' ) )
                            {
                            // InternalKim.g:991:5: ( (lv_discretization_23_0= 'discretized' ) )
                            // InternalKim.g:992:6: (lv_discretization_23_0= 'discretized' )
                            {
                            // InternalKim.g:992:6: (lv_discretization_23_0= 'discretized' )
                            // InternalKim.g:993:7: lv_discretization_23_0= 'discretized'
                            {
                            lv_discretization_23_0=(Token)match(input,33,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_discretization_23_0, grammarAccess.getModelBodyStatementAccess().getDiscretizationDiscretizedKeyword_6_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getModelBodyStatementRule());
                              							}
                              							setWithLastConsumed(current, "discretization", true, "discretized");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:1006:4: ( (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) ) | (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) ) )
                    int alt25=2;
                    int LA25_0 = input.LA(1);

                    if ( (LA25_0==34) ) {
                        alt25=1;
                    }
                    else if ( (LA25_0==35) ) {
                        alt25=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 25, 0, input);

                        throw nvae;
                    }
                    switch (alt25) {
                        case 1 :
                            // InternalKim.g:1007:5: (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) )
                            {
                            // InternalKim.g:1007:5: (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) )
                            // InternalKim.g:1008:6: otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) )
                            {
                            otherlv_24=(Token)match(input,34,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_24, grammarAccess.getModelBodyStatementAccess().getIntoKeyword_6_1_0_0());
                              					
                            }
                            // InternalKim.g:1012:6: ( (lv_classification_25_0= ruleClassification ) )
                            // InternalKim.g:1013:7: (lv_classification_25_0= ruleClassification )
                            {
                            // InternalKim.g:1013:7: (lv_classification_25_0= ruleClassification )
                            // InternalKim.g:1014:8: lv_classification_25_0= ruleClassification
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getClassificationClassificationParserRuleCall_6_1_0_1_0());
                              							
                            }
                            pushFollow(FOLLOW_24);
                            lv_classification_25_0=ruleClassification();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								set(
                              									current,
                              									"classification",
                              									lv_classification_25_0,
                              									"org.integratedmodelling.kim.Kim.Classification");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1033:5: (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) )
                            {
                            // InternalKim.g:1033:5: (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) )
                            // InternalKim.g:1034:6: otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) )
                            {
                            otherlv_26=(Token)match(input,35,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_26, grammarAccess.getModelBodyStatementAccess().getAccordingKeyword_6_1_1_0());
                              					
                            }
                            otherlv_27=(Token)match(input,36,FOLLOW_26); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_27, grammarAccess.getModelBodyStatementAccess().getToKeyword_6_1_1_1());
                              					
                            }
                            // InternalKim.g:1042:6: ( (lv_classificationProperty_28_0= rulePropertyId ) )
                            // InternalKim.g:1043:7: (lv_classificationProperty_28_0= rulePropertyId )
                            {
                            // InternalKim.g:1043:7: (lv_classificationProperty_28_0= rulePropertyId )
                            // InternalKim.g:1044:8: lv_classificationProperty_28_0= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getClassificationPropertyPropertyIdParserRuleCall_6_1_1_2_0());
                              							
                            }
                            pushFollow(FOLLOW_24);
                            lv_classificationProperty_28_0=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								set(
                              									current,
                              									"classificationProperty",
                              									lv_classificationProperty_28_0,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKim.g:1064:3: (otherlv_29= 'lookup' (otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')' )? otherlv_35= 'into' ( ( (lv_lookupTable_36_0= ruleTable ) ) | ( (lv_lookupTableId_37_0= RULE_UPPERCASE_ID ) ) ) )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==37) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // InternalKim.g:1065:4: otherlv_29= 'lookup' (otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')' )? otherlv_35= 'into' ( ( (lv_lookupTable_36_0= ruleTable ) ) | ( (lv_lookupTableId_37_0= RULE_UPPERCASE_ID ) ) )
                    {
                    otherlv_29=(Token)match(input,37,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_29, grammarAccess.getModelBodyStatementAccess().getLookupKeyword_7_0());
                      			
                    }
                    // InternalKim.g:1069:4: (otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')' )?
                    int alt30=2;
                    int LA30_0 = input.LA(1);

                    if ( (LA30_0==38) ) {
                        alt30=1;
                    }
                    switch (alt30) {
                        case 1 :
                            // InternalKim.g:1070:5: otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')'
                            {
                            otherlv_30=(Token)match(input,38,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_30, grammarAccess.getModelBodyStatementAccess().getLeftParenthesisKeyword_7_1_0());
                              				
                            }
                            // InternalKim.g:1074:5: ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) )
                            // InternalKim.g:1075:6: ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) )
                            {
                            // InternalKim.g:1075:6: ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) )
                            // InternalKim.g:1076:7: (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' )
                            {
                            // InternalKim.g:1076:7: (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' )
                            int alt27=3;
                            switch ( input.LA(1) ) {
                            case RULE_LOWERCASE_ID:
                                {
                                alt27=1;
                                }
                                break;
                            case 39:
                                {
                                alt27=2;
                                }
                                break;
                            case 40:
                                {
                                alt27=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 27, 0, input);

                                throw nvae;
                            }

                            switch (alt27) {
                                case 1 :
                                    // InternalKim.g:1077:8: lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID
                                    {
                                    lv_lookupTableArgs_31_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_29); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_lookupTableArgs_31_1, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsLOWERCASE_IDTerminalRuleCall_7_1_1_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								addWithLastConsumed(
                                      									current,
                                      									"lookupTableArgs",
                                      									lv_lookupTableArgs_31_1,
                                      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:1092:8: lv_lookupTableArgs_31_2= '?'
                                    {
                                    lv_lookupTableArgs_31_2=(Token)match(input,39,FOLLOW_29); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_lookupTableArgs_31_2, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsQuestionMarkKeyword_7_1_1_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								addWithLastConsumed(current, "lookupTableArgs", lv_lookupTableArgs_31_2, null);
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:1103:8: lv_lookupTableArgs_31_3= '*'
                                    {
                                    lv_lookupTableArgs_31_3=(Token)match(input,40,FOLLOW_29); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_lookupTableArgs_31_3, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsAsteriskKeyword_7_1_1_0_2());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								addWithLastConsumed(current, "lookupTableArgs", lv_lookupTableArgs_31_3, null);
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalKim.g:1116:5: (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )*
                            loop29:
                            do {
                                int alt29=2;
                                int LA29_0 = input.LA(1);

                                if ( (LA29_0==27) ) {
                                    alt29=1;
                                }


                                switch (alt29) {
                            	case 1 :
                            	    // InternalKim.g:1117:6: otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) )
                            	    {
                            	    otherlv_32=(Token)match(input,27,FOLLOW_28); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_32, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_7_1_2_0());
                            	      					
                            	    }
                            	    // InternalKim.g:1121:6: ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) )
                            	    // InternalKim.g:1122:7: ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) )
                            	    {
                            	    // InternalKim.g:1122:7: ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) )
                            	    // InternalKim.g:1123:8: (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' )
                            	    {
                            	    // InternalKim.g:1123:8: (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' )
                            	    int alt28=3;
                            	    switch ( input.LA(1) ) {
                            	    case RULE_LOWERCASE_ID:
                            	        {
                            	        alt28=1;
                            	        }
                            	        break;
                            	    case 39:
                            	        {
                            	        alt28=2;
                            	        }
                            	        break;
                            	    case 40:
                            	        {
                            	        alt28=3;
                            	        }
                            	        break;
                            	    default:
                            	        if (state.backtracking>0) {state.failed=true; return current;}
                            	        NoViableAltException nvae =
                            	            new NoViableAltException("", 28, 0, input);

                            	        throw nvae;
                            	    }

                            	    switch (alt28) {
                            	        case 1 :
                            	            // InternalKim.g:1124:9: lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID
                            	            {
                            	            lv_lookupTableArgs_33_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_29); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_lookupTableArgs_33_1, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsLOWERCASE_IDTerminalRuleCall_7_1_2_1_0_0());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getModelBodyStatementRule());
                            	              									}
                            	              									addWithLastConsumed(
                            	              										current,
                            	              										"lookupTableArgs",
                            	              										lv_lookupTableArgs_33_1,
                            	              										"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                            	              								
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // InternalKim.g:1139:9: lv_lookupTableArgs_33_2= '?'
                            	            {
                            	            lv_lookupTableArgs_33_2=(Token)match(input,39,FOLLOW_29); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_lookupTableArgs_33_2, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsQuestionMarkKeyword_7_1_2_1_0_1());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getModelBodyStatementRule());
                            	              									}
                            	              									addWithLastConsumed(current, "lookupTableArgs", lv_lookupTableArgs_33_2, null);
                            	              								
                            	            }

                            	            }
                            	            break;
                            	        case 3 :
                            	            // InternalKim.g:1150:9: lv_lookupTableArgs_33_3= '*'
                            	            {
                            	            lv_lookupTableArgs_33_3=(Token)match(input,40,FOLLOW_29); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_lookupTableArgs_33_3, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsAsteriskKeyword_7_1_2_1_0_2());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getModelBodyStatementRule());
                            	              									}
                            	              									addWithLastConsumed(current, "lookupTableArgs", lv_lookupTableArgs_33_3, null);
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop29;
                                }
                            } while (true);

                            otherlv_34=(Token)match(input,41,FOLLOW_30); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_34, grammarAccess.getModelBodyStatementAccess().getRightParenthesisKeyword_7_1_3());
                              				
                            }

                            }
                            break;

                    }

                    otherlv_35=(Token)match(input,34,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_35, grammarAccess.getModelBodyStatementAccess().getIntoKeyword_7_2());
                      			
                    }
                    // InternalKim.g:1173:4: ( ( (lv_lookupTable_36_0= ruleTable ) ) | ( (lv_lookupTableId_37_0= RULE_UPPERCASE_ID ) ) )
                    int alt31=2;
                    int LA31_0 = input.LA(1);

                    if ( ((LA31_0>=RULE_LOWERCASE_ID && LA31_0<=RULE_STRING)||(LA31_0>=RULE_EXPR && LA31_0<=RULE_LOWERCASE_DASHID)||(LA31_0>=28 && LA31_0<=29)||LA31_0==38||LA31_0==40||(LA31_0>=48 && LA31_0<=49)||LA31_0==53||(LA31_0>=76 && LA31_0<=79)||LA31_0==82||LA31_0==84||(LA31_0>=128 && LA31_0<=129)||(LA31_0>=137 && LA31_0<=138)||(LA31_0>=140 && LA31_0<=156)||(LA31_0>=246 && LA31_0<=247)) ) {
                        alt31=1;
                    }
                    else if ( (LA31_0==RULE_UPPERCASE_ID) ) {
                        int LA31_2 = input.LA(2);

                        if ( (LA31_2==EOF||LA31_2==20||LA31_2==42||(LA31_2>=54 && LA31_2<=56)||(LA31_2>=62 && LA31_2<=67)) ) {
                            alt31=2;
                        }
                        else if ( (LA31_2==105||LA31_2==108) ) {
                            alt31=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 31, 2, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 31, 0, input);

                        throw nvae;
                    }
                    switch (alt31) {
                        case 1 :
                            // InternalKim.g:1174:5: ( (lv_lookupTable_36_0= ruleTable ) )
                            {
                            // InternalKim.g:1174:5: ( (lv_lookupTable_36_0= ruleTable ) )
                            // InternalKim.g:1175:6: (lv_lookupTable_36_0= ruleTable )
                            {
                            // InternalKim.g:1175:6: (lv_lookupTable_36_0= ruleTable )
                            // InternalKim.g:1176:7: lv_lookupTable_36_0= ruleTable
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getLookupTableTableParserRuleCall_7_3_0_0());
                              						
                            }
                            pushFollow(FOLLOW_32);
                            lv_lookupTable_36_0=ruleTable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"lookupTable",
                              								lv_lookupTable_36_0,
                              								"org.integratedmodelling.kim.Kim.Table");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1194:5: ( (lv_lookupTableId_37_0= RULE_UPPERCASE_ID ) )
                            {
                            // InternalKim.g:1194:5: ( (lv_lookupTableId_37_0= RULE_UPPERCASE_ID ) )
                            // InternalKim.g:1195:6: (lv_lookupTableId_37_0= RULE_UPPERCASE_ID )
                            {
                            // InternalKim.g:1195:6: (lv_lookupTableId_37_0= RULE_UPPERCASE_ID )
                            // InternalKim.g:1196:7: lv_lookupTableId_37_0= RULE_UPPERCASE_ID
                            {
                            lv_lookupTableId_37_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_32); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_lookupTableId_37_0, grammarAccess.getModelBodyStatementAccess().getLookupTableIdUPPERCASE_IDTerminalRuleCall_7_3_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getModelBodyStatementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"lookupTableId",
                              								lv_lookupTableId_37_0,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKim.g:1214:3: ( (lv_actions_38_0= ruleActionSpecification ) )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( ((LA33_0>=54 && LA33_0<=56)||(LA33_0>=62 && LA33_0<=67)) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // InternalKim.g:1215:4: (lv_actions_38_0= ruleActionSpecification )
            	    {
            	    // InternalKim.g:1215:4: (lv_actions_38_0= ruleActionSpecification )
            	    // InternalKim.g:1216:5: lv_actions_38_0= ruleActionSpecification
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModelBodyStatementAccess().getActionsActionSpecificationParserRuleCall_8_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_32);
            	    lv_actions_38_0=ruleActionSpecification();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"actions",
            	      						lv_actions_38_0,
            	      						"org.integratedmodelling.kim.Kim.ActionSpecification");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);

            // InternalKim.g:1233:3: (otherlv_39= 'metadata' ( (lv_metadata_40_0= ruleMetadata ) ) )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==42) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalKim.g:1234:4: otherlv_39= 'metadata' ( (lv_metadata_40_0= ruleMetadata ) )
                    {
                    otherlv_39=(Token)match(input,42,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_39, grammarAccess.getModelBodyStatementAccess().getMetadataKeyword_9_0());
                      			
                    }
                    // InternalKim.g:1238:4: ( (lv_metadata_40_0= ruleMetadata ) )
                    // InternalKim.g:1239:5: (lv_metadata_40_0= ruleMetadata )
                    {
                    // InternalKim.g:1239:5: (lv_metadata_40_0= ruleMetadata )
                    // InternalKim.g:1240:6: lv_metadata_40_0= ruleMetadata
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getMetadataMetadataParserRuleCall_9_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_metadata_40_0=ruleMetadata();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						set(
                      							current,
                      							"metadata",
                      							lv_metadata_40_0,
                      							"org.integratedmodelling.kim.Kim.Metadata");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModelBodyStatement"


    // $ANTLR start "entryRuleClassification"
    // InternalKim.g:1262:1: entryRuleClassification returns [EObject current=null] : iv_ruleClassification= ruleClassification EOF ;
    public final EObject entryRuleClassification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassification = null;


        try {
            // InternalKim.g:1262:55: (iv_ruleClassification= ruleClassification EOF )
            // InternalKim.g:1263:2: iv_ruleClassification= ruleClassification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassification=ruleClassification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassification"


    // $ANTLR start "ruleClassification"
    // InternalKim.g:1269:1: ruleClassification returns [EObject current=null] : ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* ) ;
    public final EObject ruleClassification() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_classifiers_0_0 = null;

        EObject lv_classifiers_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1275:2: ( ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* ) )
            // InternalKim.g:1276:2: ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* )
            {
            // InternalKim.g:1276:2: ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* )
            // InternalKim.g:1277:3: ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )*
            {
            // InternalKim.g:1277:3: ( (lv_classifiers_0_0= ruleClassifier ) )
            // InternalKim.g:1278:4: (lv_classifiers_0_0= ruleClassifier )
            {
            // InternalKim.g:1278:4: (lv_classifiers_0_0= ruleClassifier )
            // InternalKim.g:1279:5: lv_classifiers_0_0= ruleClassifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassificationAccess().getClassifiersClassifierParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_34);
            lv_classifiers_0_0=ruleClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassificationRule());
              					}
              					add(
              						current,
              						"classifiers",
              						lv_classifiers_0_0,
              						"org.integratedmodelling.kim.Kim.Classifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:1296:3: ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==27) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // InternalKim.g:1297:4: ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) )
            	    {
            	    // InternalKim.g:1297:4: ( ( ',' )=>otherlv_1= ',' )
            	    // InternalKim.g:1298:5: ( ',' )=>otherlv_1= ','
            	    {
            	    otherlv_1=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_1, grammarAccess.getClassificationAccess().getCommaKeyword_1_0());
            	      				
            	    }

            	    }

            	    // InternalKim.g:1304:4: ( (lv_classifiers_2_0= ruleClassifier ) )
            	    // InternalKim.g:1305:5: (lv_classifiers_2_0= ruleClassifier )
            	    {
            	    // InternalKim.g:1305:5: (lv_classifiers_2_0= ruleClassifier )
            	    // InternalKim.g:1306:6: lv_classifiers_2_0= ruleClassifier
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getClassificationAccess().getClassifiersClassifierParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_34);
            	    lv_classifiers_2_0=ruleClassifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getClassificationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"classifiers",
            	      							lv_classifiers_2_0,
            	      							"org.integratedmodelling.kim.Kim.Classifier");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassification"


    // $ANTLR start "entryRuleClassifier"
    // InternalKim.g:1328:1: entryRuleClassifier returns [EObject current=null] : iv_ruleClassifier= ruleClassifier EOF ;
    public final EObject entryRuleClassifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifier = null;


        try {
            // InternalKim.g:1328:51: (iv_ruleClassifier= ruleClassifier EOF )
            // InternalKim.g:1329:2: iv_ruleClassifier= ruleClassifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifier=ruleClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifier"


    // $ANTLR start "ruleClassifier"
    // InternalKim.g:1335:1: ruleClassifier returns [EObject current=null] : ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? ) ;
    public final EObject ruleClassifier() throws RecognitionException {
        EObject current = null;

        Token lv_otherwise_1_0=null;
        Token otherlv_2=null;
        Token lv_negated_3_0=null;
        EObject lv_declaration_0_0 = null;

        EObject lv_classifier_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1341:2: ( ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? ) )
            // InternalKim.g:1342:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? )
            {
            // InternalKim.g:1342:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? )
            // InternalKim.g:1343:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )?
            {
            // InternalKim.g:1343:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:1344:4: (lv_declaration_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:1344:4: (lv_declaration_0_0= ruleConceptDeclaration )
            // InternalKim.g:1345:5: lv_declaration_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassifierAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_35);
            lv_declaration_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassifierRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:1362:3: ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )?
            int alt37=3;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==43) ) {
                alt37=1;
            }
            else if ( ((LA37_0>=44 && LA37_0<=45)) ) {
                alt37=2;
            }
            switch (alt37) {
                case 1 :
                    // InternalKim.g:1363:4: ( (lv_otherwise_1_0= 'otherwise' ) )
                    {
                    // InternalKim.g:1363:4: ( (lv_otherwise_1_0= 'otherwise' ) )
                    // InternalKim.g:1364:5: (lv_otherwise_1_0= 'otherwise' )
                    {
                    // InternalKim.g:1364:5: (lv_otherwise_1_0= 'otherwise' )
                    // InternalKim.g:1365:6: lv_otherwise_1_0= 'otherwise'
                    {
                    lv_otherwise_1_0=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_otherwise_1_0, grammarAccess.getClassifierAccess().getOtherwiseOtherwiseKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getClassifierRule());
                      						}
                      						setWithLastConsumed(current, "otherwise", true, "otherwise");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1378:4: ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) )
                    {
                    // InternalKim.g:1378:4: ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) )
                    // InternalKim.g:1379:5: (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) )
                    {
                    // InternalKim.g:1379:5: (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) )
                    int alt36=2;
                    int LA36_0 = input.LA(1);

                    if ( (LA36_0==44) ) {
                        alt36=1;
                    }
                    else if ( (LA36_0==45) ) {
                        alt36=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 36, 0, input);

                        throw nvae;
                    }
                    switch (alt36) {
                        case 1 :
                            // InternalKim.g:1380:6: otherlv_2= 'if'
                            {
                            otherlv_2=(Token)match(input,44,FOLLOW_36); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getClassifierAccess().getIfKeyword_1_1_0_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:1385:6: ( (lv_negated_3_0= 'unless' ) )
                            {
                            // InternalKim.g:1385:6: ( (lv_negated_3_0= 'unless' ) )
                            // InternalKim.g:1386:7: (lv_negated_3_0= 'unless' )
                            {
                            // InternalKim.g:1386:7: (lv_negated_3_0= 'unless' )
                            // InternalKim.g:1387:8: lv_negated_3_0= 'unless'
                            {
                            lv_negated_3_0=(Token)match(input,45,FOLLOW_36); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_negated_3_0, grammarAccess.getClassifierAccess().getNegatedUnlessKeyword_1_1_0_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getClassifierRule());
                              								}
                              								setWithLastConsumed(current, "negated", true, "unless");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:1400:5: ( (lv_classifier_4_0= ruleClassifierRHS ) )
                    // InternalKim.g:1401:6: (lv_classifier_4_0= ruleClassifierRHS )
                    {
                    // InternalKim.g:1401:6: (lv_classifier_4_0= ruleClassifierRHS )
                    // InternalKim.g:1402:7: lv_classifier_4_0= ruleClassifierRHS
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassifierAccess().getClassifierClassifierRHSParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_classifier_4_0=ruleClassifierRHS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassifierRule());
                      							}
                      							set(
                      								current,
                      								"classifier",
                      								lv_classifier_4_0,
                      								"org.integratedmodelling.kim.Kim.ClassifierRHS");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifier"


    // $ANTLR start "entryRuleClassifierRHS"
    // InternalKim.g:1425:1: entryRuleClassifierRHS returns [EObject current=null] : iv_ruleClassifierRHS= ruleClassifierRHS EOF ;
    public final EObject entryRuleClassifierRHS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifierRHS = null;


        try {
            // InternalKim.g:1425:54: (iv_ruleClassifierRHS= ruleClassifierRHS EOF )
            // InternalKim.g:1426:2: iv_ruleClassifierRHS= ruleClassifierRHS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRHSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifierRHS=ruleClassifierRHS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifierRHS; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifierRHS"


    // $ANTLR start "ruleClassifierRHS"
    // InternalKim.g:1432:1: ruleClassifierRHS returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) ) ;
    public final EObject ruleClassifierRHS() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_string_12_0=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token lv_nodata_21_0=null;
        Token lv_star_22_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_set_11_0 = null;

        EObject lv_concept_13_0 = null;

        EObject lv_toResolve_15_0 = null;

        EObject lv_toResolve_17_0 = null;

        EObject lv_op_19_0 = null;

        EObject lv_expression_20_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1438:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) ) )
            // InternalKim.g:1439:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )
            {
            // InternalKim.g:1439:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )
            int alt42=10;
            alt42 = dfa42.predict(input);
            switch (alt42) {
                case 1 :
                    // InternalKim.g:1440:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:1440:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt38=2;
                    int LA38_0 = input.LA(1);

                    if ( (LA38_0==28) ) {
                        alt38=1;
                    }
                    else if ( (LA38_0==29) ) {
                        alt38=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 38, 0, input);

                        throw nvae;
                    }
                    switch (alt38) {
                        case 1 :
                            // InternalKim.g:1441:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:1441:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:1442:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:1442:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:1443:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getClassifierRHSAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1456:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:1456:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:1457:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:1457:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:1458:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getClassifierRHSAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1472:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:1472:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:1473:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:1473:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:1474:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:1474:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:1475:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1492:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt39=3;
                    int LA39_0 = input.LA(1);

                    if ( (LA39_0==46) ) {
                        alt39=1;
                    }
                    else if ( (LA39_0==47) ) {
                        alt39=2;
                    }
                    switch (alt39) {
                        case 1 :
                            // InternalKim.g:1493:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1493:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:1494:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:1494:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:1495:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,46,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getClassifierRHSAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1508:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,47,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getClassifierRHSAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:1513:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:1514:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,36,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getClassifierRHSAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:1520:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:1521:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:1525:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:1526:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_39);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1543:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt40=3;
                    int LA40_0 = input.LA(1);

                    if ( (LA40_0==46) ) {
                        alt40=1;
                    }
                    else if ( (LA40_0==47) ) {
                        alt40=2;
                    }
                    switch (alt40) {
                        case 1 :
                            // InternalKim.g:1544:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1544:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:1545:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:1545:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:1546:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getClassifierRHSAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1559:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getClassifierRHSAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:1566:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:1566:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:1567:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:1567:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:1568:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:1586:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    {
                    // InternalKim.g:1586:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    // InternalKim.g:1587:4: otherlv_10= 'in' ( (lv_set_11_0= ruleList ) )
                    {
                    otherlv_10=(Token)match(input,48,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getClassifierRHSAccess().getInKeyword_3_0());
                      			
                    }
                    // InternalKim.g:1591:4: ( (lv_set_11_0= ruleList ) )
                    // InternalKim.g:1592:5: (lv_set_11_0= ruleList )
                    {
                    // InternalKim.g:1592:5: (lv_set_11_0= ruleList )
                    // InternalKim.g:1593:6: lv_set_11_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getSetListParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_set_11_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"set",
                      							lv_set_11_0,
                      							"org.integratedmodelling.kim.Kim.List");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:1612:3: ( (lv_string_12_0= RULE_STRING ) )
                    {
                    // InternalKim.g:1612:3: ( (lv_string_12_0= RULE_STRING ) )
                    // InternalKim.g:1613:4: (lv_string_12_0= RULE_STRING )
                    {
                    // InternalKim.g:1613:4: (lv_string_12_0= RULE_STRING )
                    // InternalKim.g:1614:5: lv_string_12_0= RULE_STRING
                    {
                    lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_12_0, grammarAccess.getClassifierRHSAccess().getStringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_12_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:1631:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:1631:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1632:4: (lv_concept_13_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1632:4: (lv_concept_13_0= ruleConceptDeclaration )
                    // InternalKim.g:1633:5: lv_concept_13_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSAccess().getConceptConceptDeclarationParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_13_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:1651:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
                    {
                    // InternalKim.g:1651:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
                    // InternalKim.g:1652:4: otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')'
                    {
                    otherlv_14=(Token)match(input,38,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getClassifierRHSAccess().getLeftParenthesisKeyword_6_0());
                      			
                    }
                    // InternalKim.g:1656:4: ( (lv_toResolve_15_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1657:5: (lv_toResolve_15_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1657:5: (lv_toResolve_15_0= ruleConceptDeclaration )
                    // InternalKim.g:1658:6: lv_toResolve_15_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_29);
                    lv_toResolve_15_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						add(
                      							current,
                      							"toResolve",
                      							lv_toResolve_15_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1675:4: ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )*
                    loop41:
                    do {
                        int alt41=2;
                        int LA41_0 = input.LA(1);

                        if ( (LA41_0==27) ) {
                            alt41=1;
                        }


                        switch (alt41) {
                    	case 1 :
                    	    // InternalKim.g:1676:5: ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:1676:5: ( ( ',' )=>otherlv_16= ',' )
                    	    // InternalKim.g:1677:6: ( ',' )=>otherlv_16= ','
                    	    {
                    	    otherlv_16=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_16, grammarAccess.getClassifierRHSAccess().getCommaKeyword_6_2_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:1683:5: ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
                    	    // InternalKim.g:1684:6: (lv_toResolve_17_0= ruleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:1684:6: (lv_toResolve_17_0= ruleConceptDeclaration )
                    	    // InternalKim.g:1685:7: lv_toResolve_17_0= ruleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_29);
                    	    lv_toResolve_17_0=ruleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"toResolve",
                    	      								lv_toResolve_17_0,
                    	      								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop41;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getClassifierRHSAccess().getRightParenthesisKeyword_6_3());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:1709:3: ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:1709:3: ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) )
                    // InternalKim.g:1710:4: ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) )
                    {
                    // InternalKim.g:1710:4: ( (lv_op_19_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:1711:5: (lv_op_19_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:1711:5: (lv_op_19_0= ruleREL_OPERATOR )
                    // InternalKim.g:1712:6: lv_op_19_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getOpREL_OPERATORParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_op_19_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_19_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1729:4: ( (lv_expression_20_0= ruleNumber ) )
                    // InternalKim.g:1730:5: (lv_expression_20_0= ruleNumber )
                    {
                    // InternalKim.g:1730:5: (lv_expression_20_0= ruleNumber )
                    // InternalKim.g:1731:6: lv_expression_20_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getExpressionNumberParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_20_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_20_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:1750:3: ( (lv_nodata_21_0= 'unknown' ) )
                    {
                    // InternalKim.g:1750:3: ( (lv_nodata_21_0= 'unknown' ) )
                    // InternalKim.g:1751:4: (lv_nodata_21_0= 'unknown' )
                    {
                    // InternalKim.g:1751:4: (lv_nodata_21_0= 'unknown' )
                    // InternalKim.g:1752:5: lv_nodata_21_0= 'unknown'
                    {
                    lv_nodata_21_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_21_0, grammarAccess.getClassifierRHSAccess().getNodataUnknownKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_21_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:1765:3: ( (lv_star_22_0= '*' ) )
                    {
                    // InternalKim.g:1765:3: ( (lv_star_22_0= '*' ) )
                    // InternalKim.g:1766:4: (lv_star_22_0= '*' )
                    {
                    // InternalKim.g:1766:4: (lv_star_22_0= '*' )
                    // InternalKim.g:1767:5: lv_star_22_0= '*'
                    {
                    lv_star_22_0=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_22_0, grammarAccess.getClassifierRHSAccess().getStarAsteriskKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(current, "star", true, "*");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierRHS"


    // $ANTLR start "entryRuleClassifierRHSWithId"
    // InternalKim.g:1783:1: entryRuleClassifierRHSWithId returns [EObject current=null] : iv_ruleClassifierRHSWithId= ruleClassifierRHSWithId EOF ;
    public final EObject entryRuleClassifierRHSWithId() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifierRHSWithId = null;


        try {
            // InternalKim.g:1783:60: (iv_ruleClassifierRHSWithId= ruleClassifierRHSWithId EOF )
            // InternalKim.g:1784:2: iv_ruleClassifierRHSWithId= ruleClassifierRHSWithId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRHSWithIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifierRHSWithId=ruleClassifierRHSWithId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifierRHSWithId; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifierRHSWithId"


    // $ANTLR start "ruleClassifierRHSWithId"
    // InternalKim.g:1790:1: ruleClassifierRHSWithId returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) ) ;
    public final EObject ruleClassifierRHSWithId() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_string_12_0=null;
        Token lv_id_14_1=null;
        Token lv_nodata_17_0=null;
        Token lv_star_18_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_set_11_0 = null;

        EObject lv_concept_13_0 = null;

        AntlrDatatypeRuleToken lv_id_14_2 = null;

        EObject lv_op_15_0 = null;

        EObject lv_expression_16_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1796:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) ) )
            // InternalKim.g:1797:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) )
            {
            // InternalKim.g:1797:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) )
            int alt47=10;
            alt47 = dfa47.predict(input);
            switch (alt47) {
                case 1 :
                    // InternalKim.g:1798:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:1798:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt43=2;
                    int LA43_0 = input.LA(1);

                    if ( (LA43_0==28) ) {
                        alt43=1;
                    }
                    else if ( (LA43_0==29) ) {
                        alt43=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 43, 0, input);

                        throw nvae;
                    }
                    switch (alt43) {
                        case 1 :
                            // InternalKim.g:1799:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:1799:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:1800:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:1800:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:1801:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getClassifierRHSWithIdAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1814:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:1814:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:1815:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:1815:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:1816:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getClassifierRHSWithIdAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1830:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:1830:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:1831:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:1831:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:1832:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:1832:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:1833:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1850:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt44=3;
                    int LA44_0 = input.LA(1);

                    if ( (LA44_0==46) ) {
                        alt44=1;
                    }
                    else if ( (LA44_0==47) ) {
                        alt44=2;
                    }
                    switch (alt44) {
                        case 1 :
                            // InternalKim.g:1851:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1851:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:1852:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:1852:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:1853:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,46,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getClassifierRHSWithIdAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1866:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,47,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getClassifierRHSWithIdAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:1871:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:1872:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,36,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getClassifierRHSWithIdAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:1878:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:1879:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:1883:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:1884:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_39);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1901:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt45=3;
                    int LA45_0 = input.LA(1);

                    if ( (LA45_0==46) ) {
                        alt45=1;
                    }
                    else if ( (LA45_0==47) ) {
                        alt45=2;
                    }
                    switch (alt45) {
                        case 1 :
                            // InternalKim.g:1902:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1902:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:1903:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:1903:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:1904:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getClassifierRHSWithIdAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1917:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getClassifierRHSWithIdAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:1924:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:1924:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:1925:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:1925:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:1926:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:1944:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    {
                    // InternalKim.g:1944:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    // InternalKim.g:1945:4: otherlv_10= 'in' ( (lv_set_11_0= ruleList ) )
                    {
                    otherlv_10=(Token)match(input,48,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getClassifierRHSWithIdAccess().getInKeyword_3_0());
                      			
                    }
                    // InternalKim.g:1949:4: ( (lv_set_11_0= ruleList ) )
                    // InternalKim.g:1950:5: (lv_set_11_0= ruleList )
                    {
                    // InternalKim.g:1950:5: (lv_set_11_0= ruleList )
                    // InternalKim.g:1951:6: lv_set_11_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getSetListParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_set_11_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"set",
                      							lv_set_11_0,
                      							"org.integratedmodelling.kim.Kim.List");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:1970:3: ( (lv_string_12_0= RULE_STRING ) )
                    {
                    // InternalKim.g:1970:3: ( (lv_string_12_0= RULE_STRING ) )
                    // InternalKim.g:1971:4: (lv_string_12_0= RULE_STRING )
                    {
                    // InternalKim.g:1971:4: (lv_string_12_0= RULE_STRING )
                    // InternalKim.g:1972:5: lv_string_12_0= RULE_STRING
                    {
                    lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_12_0, grammarAccess.getClassifierRHSWithIdAccess().getStringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_12_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:1989:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:1989:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1990:4: (lv_concept_13_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1990:4: (lv_concept_13_0= ruleConceptDeclaration )
                    // InternalKim.g:1991:5: lv_concept_13_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getConceptConceptDeclarationParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_13_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:2009:3: ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) )
                    {
                    // InternalKim.g:2009:3: ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) )
                    // InternalKim.g:2010:4: ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) )
                    {
                    // InternalKim.g:2010:4: ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) )
                    // InternalKim.g:2011:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )
                    {
                    // InternalKim.g:2011:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )
                    int alt46=2;
                    alt46 = dfa46.predict(input);
                    switch (alt46) {
                        case 1 :
                            // InternalKim.g:2012:6: lv_id_14_1= RULE_LOWERCASE_ID
                            {
                            lv_id_14_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_14_1, grammarAccess.getClassifierRHSWithIdAccess().getIdLOWERCASE_IDTerminalRuleCall_6_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_14_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:2027:6: lv_id_14_2= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getIdPropertyIdParserRuleCall_6_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_id_14_2=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                              						}
                              						set(
                              							current,
                              							"id",
                              							lv_id_14_2,
                              							"org.integratedmodelling.kim.Kim.PropertyId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:2046:3: ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:2046:3: ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) )
                    // InternalKim.g:2047:4: ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) )
                    {
                    // InternalKim.g:2047:4: ( (lv_op_15_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:2048:5: (lv_op_15_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:2048:5: (lv_op_15_0= ruleREL_OPERATOR )
                    // InternalKim.g:2049:6: lv_op_15_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getOpREL_OPERATORParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_op_15_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_15_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2066:4: ( (lv_expression_16_0= ruleNumber ) )
                    // InternalKim.g:2067:5: (lv_expression_16_0= ruleNumber )
                    {
                    // InternalKim.g:2067:5: (lv_expression_16_0= ruleNumber )
                    // InternalKim.g:2068:6: lv_expression_16_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getExpressionNumberParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_16_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_16_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:2087:3: ( (lv_nodata_17_0= 'unknown' ) )
                    {
                    // InternalKim.g:2087:3: ( (lv_nodata_17_0= 'unknown' ) )
                    // InternalKim.g:2088:4: (lv_nodata_17_0= 'unknown' )
                    {
                    // InternalKim.g:2088:4: (lv_nodata_17_0= 'unknown' )
                    // InternalKim.g:2089:5: lv_nodata_17_0= 'unknown'
                    {
                    lv_nodata_17_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_17_0, grammarAccess.getClassifierRHSWithIdAccess().getNodataUnknownKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_17_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:2102:3: ( (lv_star_18_0= '*' ) )
                    {
                    // InternalKim.g:2102:3: ( (lv_star_18_0= '*' ) )
                    // InternalKim.g:2103:4: (lv_star_18_0= '*' )
                    {
                    // InternalKim.g:2103:4: (lv_star_18_0= '*' )
                    // InternalKim.g:2104:5: lv_star_18_0= '*'
                    {
                    lv_star_18_0=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_18_0, grammarAccess.getClassifierRHSWithIdAccess().getStarAsteriskKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					setWithLastConsumed(current, "star", true, "*");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierRHSWithId"


    // $ANTLR start "entryRuleUrn"
    // InternalKim.g:2120:1: entryRuleUrn returns [EObject current=null] : iv_ruleUrn= ruleUrn EOF ;
    public final EObject entryRuleUrn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUrn = null;


        try {
            // InternalKim.g:2120:44: (iv_ruleUrn= ruleUrn EOF )
            // InternalKim.g:2121:2: iv_ruleUrn= ruleUrn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUrnRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUrn=ruleUrn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUrn; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUrn"


    // $ANTLR start "ruleUrn"
    // InternalKim.g:2127:1: ruleUrn returns [EObject current=null] : ( ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) ) ) ;
    public final EObject ruleUrn() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_2=null;
        AntlrDatatypeRuleToken lv_name_0_1 = null;

        AntlrDatatypeRuleToken lv_name_0_3 = null;



        	enterRule();

        try {
            // InternalKim.g:2133:2: ( ( ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) ) ) )
            // InternalKim.g:2134:2: ( ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) ) )
            {
            // InternalKim.g:2134:2: ( ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) ) )
            // InternalKim.g:2135:3: ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) )
            {
            // InternalKim.g:2135:3: ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) )
            // InternalKim.g:2136:4: (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath )
            {
            // InternalKim.g:2136:4: (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath )
            int alt48=3;
            switch ( input.LA(1) ) {
            case RULE_UPPERCASE_ID:
            case 104:
                {
                alt48=1;
                }
                break;
            case RULE_LOWERCASE_ID:
                {
                switch ( input.LA(2) ) {
                case 108:
                    {
                    int LA48_6 = input.LA(3);

                    if ( (LA48_6==RULE_LOWERCASE_ID) ) {
                        int LA48_7 = input.LA(4);

                        if ( (LA48_7==105||LA48_7==108) ) {
                            alt48=1;
                        }
                        else if ( (LA48_7==EOF||LA48_7==25||LA48_7==27||LA48_7==53) ) {
                            alt48=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 48, 7, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA48_6==RULE_UPPERCASE_ID||LA48_6==RULE_LOWERCASE_DASHID) ) {
                        alt48=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 48, 6, input);

                        throw nvae;
                    }
                    }
                    break;
                case 105:
                    {
                    alt48=1;
                    }
                    break;
                case EOF:
                case 25:
                case 27:
                case 53:
                case 107:
                    {
                    alt48=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 2, input);

                    throw nvae;
                }

                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                switch ( input.LA(2) ) {
                case 108:
                    {
                    int LA48_6 = input.LA(3);

                    if ( (LA48_6==RULE_LOWERCASE_ID) ) {
                        int LA48_7 = input.LA(4);

                        if ( (LA48_7==105||LA48_7==108) ) {
                            alt48=1;
                        }
                        else if ( (LA48_7==EOF||LA48_7==25||LA48_7==27||LA48_7==53) ) {
                            alt48=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 48, 7, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA48_6==RULE_UPPERCASE_ID||LA48_6==RULE_LOWERCASE_DASHID) ) {
                        alt48=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 48, 6, input);

                        throw nvae;
                    }
                    }
                    break;
                case 105:
                    {
                    alt48=1;
                    }
                    break;
                case EOF:
                case 25:
                case 27:
                case 53:
                case 107:
                    {
                    alt48=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 3, input);

                    throw nvae;
                }

                }
                break;
            case RULE_STRING:
                {
                alt48=2;
                }
                break;
            case RULE_CAMELCASE_ID:
                {
                alt48=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }

            switch (alt48) {
                case 1 :
                    // InternalKim.g:2137:5: lv_name_0_1= ruleUrnId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUrnAccess().getNameUrnIdParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_0_1=ruleUrnId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUrnRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_0_1,
                      						"org.integratedmodelling.kim.Kim.UrnId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:2153:5: lv_name_0_2= RULE_STRING
                    {
                    lv_name_0_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_2, grammarAccess.getUrnAccess().getNameSTRINGTerminalRuleCall_0_1());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getUrnRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_2,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:2168:5: lv_name_0_3= ruleLocalFilePath
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUrnAccess().getNameLocalFilePathParserRuleCall_0_2());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_0_3=ruleLocalFilePath();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUrnRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_0_3,
                      						"org.integratedmodelling.kim.Kim.LocalFilePath");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUrn"


    // $ANTLR start "entryRuleLookupTable"
    // InternalKim.g:2189:1: entryRuleLookupTable returns [EObject current=null] : iv_ruleLookupTable= ruleLookupTable EOF ;
    public final EObject entryRuleLookupTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLookupTable = null;


        try {
            // InternalKim.g:2189:52: (iv_ruleLookupTable= ruleLookupTable EOF )
            // InternalKim.g:2190:2: iv_ruleLookupTable= ruleLookupTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLookupTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLookupTable=ruleLookupTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLookupTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLookupTable"


    // $ANTLR start "ruleLookupTable"
    // InternalKim.g:2196:1: ruleLookupTable returns [EObject current=null] : ( () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}' ) ;
    public final EObject ruleLookupTable() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_table_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2202:2: ( ( () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}' ) )
            // InternalKim.g:2203:2: ( () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}' )
            {
            // InternalKim.g:2203:2: ( () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}' )
            // InternalKim.g:2204:3: () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}'
            {
            // InternalKim.g:2204:3: ()
            // InternalKim.g:2205:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLookupTableAccess().getLookupTableAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,50,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLookupTableAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:2218:3: ( (lv_table_2_0= ruleTable ) )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( ((LA49_0>=RULE_UPPERCASE_ID && LA49_0<=RULE_STRING)||(LA49_0>=RULE_EXPR && LA49_0<=RULE_LOWERCASE_DASHID)||(LA49_0>=28 && LA49_0<=29)||LA49_0==38||LA49_0==40||(LA49_0>=48 && LA49_0<=49)||LA49_0==53||(LA49_0>=76 && LA49_0<=79)||LA49_0==82||LA49_0==84||(LA49_0>=128 && LA49_0<=129)||(LA49_0>=137 && LA49_0<=138)||(LA49_0>=140 && LA49_0<=156)||(LA49_0>=246 && LA49_0<=247)) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalKim.g:2219:4: (lv_table_2_0= ruleTable )
                    {
                    // InternalKim.g:2219:4: (lv_table_2_0= ruleTable )
                    // InternalKim.g:2220:5: lv_table_2_0= ruleTable
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLookupTableAccess().getTableTableParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_42);
                    lv_table_2_0=ruleTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLookupTableRule());
                      					}
                      					set(
                      						current,
                      						"table",
                      						lv_table_2_0,
                      						"org.integratedmodelling.kim.Kim.Table");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getLookupTableAccess().getRightCurlyBracketRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLookupTable"


    // $ANTLR start "entryRuleTable"
    // InternalKim.g:2245:1: entryRuleTable returns [EObject current=null] : iv_ruleTable= ruleTable EOF ;
    public final EObject entryRuleTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTable = null;


        try {
            // InternalKim.g:2245:46: (iv_ruleTable= ruleTable EOF )
            // InternalKim.g:2246:2: iv_ruleTable= ruleTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTable=ruleTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTable"


    // $ANTLR start "ruleTable"
    // InternalKim.g:2252:1: ruleTable returns [EObject current=null] : ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* ) ;
    public final EObject ruleTable() throws RecognitionException {
        EObject current = null;

        Token this_SEPARATOR_1=null;
        Token otherlv_3=null;
        EObject lv_headers_0_0 = null;

        EObject lv_rows_2_0 = null;

        EObject lv_rows_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2258:2: ( ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* ) )
            // InternalKim.g:2259:2: ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* )
            {
            // InternalKim.g:2259:2: ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* )
            // InternalKim.g:2260:3: ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )*
            {
            // InternalKim.g:2260:3: ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )?
            int alt50=2;
            alt50 = dfa50.predict(input);
            switch (alt50) {
                case 1 :
                    // InternalKim.g:2261:4: ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR
                    {
                    // InternalKim.g:2261:4: ( (lv_headers_0_0= ruleHeaderRow ) )
                    // InternalKim.g:2262:5: (lv_headers_0_0= ruleHeaderRow )
                    {
                    // InternalKim.g:2262:5: (lv_headers_0_0= ruleHeaderRow )
                    // InternalKim.g:2263:6: lv_headers_0_0= ruleHeaderRow
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableAccess().getHeadersHeaderRowParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_43);
                    lv_headers_0_0=ruleHeaderRow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableRule());
                      						}
                      						set(
                      							current,
                      							"headers",
                      							lv_headers_0_0,
                      							"org.integratedmodelling.kim.Kim.HeaderRow");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    this_SEPARATOR_1=(Token)match(input,RULE_SEPARATOR,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_SEPARATOR_1, grammarAccess.getTableAccess().getSEPARATORTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:2285:3: ( (lv_rows_2_0= ruleTableRow ) )
            // InternalKim.g:2286:4: (lv_rows_2_0= ruleTableRow )
            {
            // InternalKim.g:2286:4: (lv_rows_2_0= ruleTableRow )
            // InternalKim.g:2287:5: lv_rows_2_0= ruleTableRow
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_34);
            lv_rows_2_0=ruleTableRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTableRule());
              					}
              					add(
              						current,
              						"rows",
              						lv_rows_2_0,
              						"org.integratedmodelling.kim.Kim.TableRow");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:2304:3: (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==27) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalKim.g:2305:4: otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) )
            	    {
            	    otherlv_3=(Token)match(input,27,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getTableAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalKim.g:2309:4: ( (lv_rows_4_0= ruleTableRow ) )
            	    // InternalKim.g:2310:5: (lv_rows_4_0= ruleTableRow )
            	    {
            	    // InternalKim.g:2310:5: (lv_rows_4_0= ruleTableRow )
            	    // InternalKim.g:2311:6: lv_rows_4_0= ruleTableRow
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_34);
            	    lv_rows_4_0=ruleTableRow();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTableRule());
            	      						}
            	      						add(
            	      							current,
            	      							"rows",
            	      							lv_rows_4_0,
            	      							"org.integratedmodelling.kim.Kim.TableRow");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTable"


    // $ANTLR start "entryRuleHeaderRow"
    // InternalKim.g:2333:1: entryRuleHeaderRow returns [EObject current=null] : iv_ruleHeaderRow= ruleHeaderRow EOF ;
    public final EObject entryRuleHeaderRow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHeaderRow = null;


        try {
            // InternalKim.g:2333:50: (iv_ruleHeaderRow= ruleHeaderRow EOF )
            // InternalKim.g:2334:2: iv_ruleHeaderRow= ruleHeaderRow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHeaderRowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHeaderRow=ruleHeaderRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHeaderRow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHeaderRow"


    // $ANTLR start "ruleHeaderRow"
    // InternalKim.g:2340:1: ruleHeaderRow returns [EObject current=null] : ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* ) ;
    public final EObject ruleHeaderRow() throws RecognitionException {
        EObject current = null;

        Token lv_elements_0_1=null;
        Token lv_elements_0_2=null;
        Token otherlv_1=null;
        Token lv_elements_2_1=null;
        Token lv_elements_2_2=null;


        	enterRule();

        try {
            // InternalKim.g:2346:2: ( ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* ) )
            // InternalKim.g:2347:2: ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* )
            {
            // InternalKim.g:2347:2: ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* )
            // InternalKim.g:2348:3: ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )*
            {
            // InternalKim.g:2348:3: ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) )
            // InternalKim.g:2349:4: ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) )
            {
            // InternalKim.g:2349:4: ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) )
            // InternalKim.g:2350:5: (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING )
            {
            // InternalKim.g:2350:5: (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING )
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==RULE_LOWERCASE_ID) ) {
                alt52=1;
            }
            else if ( (LA52_0==RULE_STRING) ) {
                alt52=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }
            switch (alt52) {
                case 1 :
                    // InternalKim.g:2351:6: lv_elements_0_1= RULE_LOWERCASE_ID
                    {
                    lv_elements_0_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_elements_0_1, grammarAccess.getHeaderRowAccess().getElementsLOWERCASE_IDTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHeaderRowRule());
                      						}
                      						addWithLastConsumed(
                      							current,
                      							"elements",
                      							lv_elements_0_1,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:2366:6: lv_elements_0_2= RULE_STRING
                    {
                    lv_elements_0_2=(Token)match(input,RULE_STRING,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_elements_0_2, grammarAccess.getHeaderRowAccess().getElementsSTRINGTerminalRuleCall_0_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHeaderRowRule());
                      						}
                      						addWithLastConsumed(
                      							current,
                      							"elements",
                      							lv_elements_0_2,
                      							"org.eclipse.xtext.common.Terminals.STRING");
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalKim.g:2383:3: (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==52) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalKim.g:2384:4: otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) )
            	    {
            	    otherlv_1=(Token)match(input,52,FOLLOW_45); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getHeaderRowAccess().getVerticalLineKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:2388:4: ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) )
            	    // InternalKim.g:2389:5: ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) )
            	    {
            	    // InternalKim.g:2389:5: ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) )
            	    // InternalKim.g:2390:6: (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING )
            	    {
            	    // InternalKim.g:2390:6: (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING )
            	    int alt53=2;
            	    int LA53_0 = input.LA(1);

            	    if ( (LA53_0==RULE_LOWERCASE_ID) ) {
            	        alt53=1;
            	    }
            	    else if ( (LA53_0==RULE_STRING) ) {
            	        alt53=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 53, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt53) {
            	        case 1 :
            	            // InternalKim.g:2391:7: lv_elements_2_1= RULE_LOWERCASE_ID
            	            {
            	            lv_elements_2_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_elements_2_1, grammarAccess.getHeaderRowAccess().getElementsLOWERCASE_IDTerminalRuleCall_1_1_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getHeaderRowRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"elements",
            	              								lv_elements_2_1,
            	              								"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:2406:7: lv_elements_2_2= RULE_STRING
            	            {
            	            lv_elements_2_2=(Token)match(input,RULE_STRING,FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_elements_2_2, grammarAccess.getHeaderRowAccess().getElementsSTRINGTerminalRuleCall_1_1_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getHeaderRowRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"elements",
            	              								lv_elements_2_2,
            	              								"org.eclipse.xtext.common.Terminals.STRING");
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHeaderRow"


    // $ANTLR start "entryRuleTableRow"
    // InternalKim.g:2428:1: entryRuleTableRow returns [EObject current=null] : iv_ruleTableRow= ruleTableRow EOF ;
    public final EObject entryRuleTableRow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTableRow = null;


        try {
            // InternalKim.g:2428:49: (iv_ruleTableRow= ruleTableRow EOF )
            // InternalKim.g:2429:2: iv_ruleTableRow= ruleTableRow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableRowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTableRow=ruleTableRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTableRow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTableRow"


    // $ANTLR start "ruleTableRow"
    // InternalKim.g:2435:1: ruleTableRow returns [EObject current=null] : ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* ) ;
    public final EObject ruleTableRow() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_elements_0_0 = null;

        EObject lv_elements_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2441:2: ( ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* ) )
            // InternalKim.g:2442:2: ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* )
            {
            // InternalKim.g:2442:2: ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* )
            // InternalKim.g:2443:3: ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )*
            {
            // InternalKim.g:2443:3: ( (lv_elements_0_0= ruleTableClassifier ) )
            // InternalKim.g:2444:4: (lv_elements_0_0= ruleTableClassifier )
            {
            // InternalKim.g:2444:4: (lv_elements_0_0= ruleTableClassifier )
            // InternalKim.g:2445:5: lv_elements_0_0= ruleTableClassifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTableRowAccess().getElementsTableClassifierParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_44);
            lv_elements_0_0=ruleTableClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTableRowRule());
              					}
              					add(
              						current,
              						"elements",
              						lv_elements_0_0,
              						"org.integratedmodelling.kim.Kim.TableClassifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:2462:3: (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==52) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalKim.g:2463:4: otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) )
            	    {
            	    otherlv_1=(Token)match(input,52,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getTableRowAccess().getVerticalLineKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:2467:4: ( (lv_elements_2_0= ruleTableClassifier ) )
            	    // InternalKim.g:2468:5: (lv_elements_2_0= ruleTableClassifier )
            	    {
            	    // InternalKim.g:2468:5: (lv_elements_2_0= ruleTableClassifier )
            	    // InternalKim.g:2469:6: lv_elements_2_0= ruleTableClassifier
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTableRowAccess().getElementsTableClassifierParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_elements_2_0=ruleTableClassifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTableRowRule());
            	      						}
            	      						add(
            	      							current,
            	      							"elements",
            	      							lv_elements_2_0,
            	      							"org.integratedmodelling.kim.Kim.TableClassifier");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTableRow"


    // $ANTLR start "entryRuleTableClassifier"
    // InternalKim.g:2491:1: entryRuleTableClassifier returns [EObject current=null] : iv_ruleTableClassifier= ruleTableClassifier EOF ;
    public final EObject entryRuleTableClassifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTableClassifier = null;


        try {
            // InternalKim.g:2491:56: (iv_ruleTableClassifier= ruleTableClassifier EOF )
            // InternalKim.g:2492:2: iv_ruleTableClassifier= ruleTableClassifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableClassifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTableClassifier=ruleTableClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTableClassifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTableClassifier"


    // $ANTLR start "ruleTableClassifier"
    // InternalKim.g:2498:1: ruleTableClassifier returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_expr_16_0= RULE_EXPR ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) | ( (lv_anything_19_0= '#' ) ) ) ;
    public final EObject ruleTableClassifier() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_string_12_0=null;
        Token lv_expr_16_0=null;
        Token lv_nodata_17_0=null;
        Token lv_star_18_0=null;
        Token lv_anything_19_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_set_11_0 = null;

        EObject lv_concept_13_0 = null;

        EObject lv_op_14_0 = null;

        EObject lv_expression_15_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2504:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_expr_16_0= RULE_EXPR ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) | ( (lv_anything_19_0= '#' ) ) ) )
            // InternalKim.g:2505:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_expr_16_0= RULE_EXPR ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) | ( (lv_anything_19_0= '#' ) ) )
            {
            // InternalKim.g:2505:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_expr_16_0= RULE_EXPR ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) | ( (lv_anything_19_0= '#' ) ) )
            int alt59=11;
            alt59 = dfa59.predict(input);
            switch (alt59) {
                case 1 :
                    // InternalKim.g:2506:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:2506:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt56=2;
                    int LA56_0 = input.LA(1);

                    if ( (LA56_0==28) ) {
                        alt56=1;
                    }
                    else if ( (LA56_0==29) ) {
                        alt56=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 56, 0, input);

                        throw nvae;
                    }
                    switch (alt56) {
                        case 1 :
                            // InternalKim.g:2507:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:2507:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:2508:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:2508:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:2509:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getTableClassifierAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTableClassifierRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2522:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:2522:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:2523:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:2523:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:2524:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getTableClassifierAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTableClassifierRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:2538:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:2538:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:2539:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:2539:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:2540:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:2540:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:2541:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2558:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt57=3;
                    int LA57_0 = input.LA(1);

                    if ( (LA57_0==46) ) {
                        alt57=1;
                    }
                    else if ( (LA57_0==47) ) {
                        alt57=2;
                    }
                    switch (alt57) {
                        case 1 :
                            // InternalKim.g:2559:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:2559:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:2560:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:2560:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:2561:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,46,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getTableClassifierAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getTableClassifierRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2574:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,47,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getTableClassifierAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:2579:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:2580:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,36,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getTableClassifierAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:2586:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:2587:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:2591:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:2592:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_39);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2609:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt58=3;
                    int LA58_0 = input.LA(1);

                    if ( (LA58_0==46) ) {
                        alt58=1;
                    }
                    else if ( (LA58_0==47) ) {
                        alt58=2;
                    }
                    switch (alt58) {
                        case 1 :
                            // InternalKim.g:2610:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:2610:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:2611:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:2611:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:2612:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getTableClassifierAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getTableClassifierRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2625:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getTableClassifierAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:2632:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:2632:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:2633:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:2633:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:2634:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:2652:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    {
                    // InternalKim.g:2652:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    // InternalKim.g:2653:4: otherlv_10= 'in' ( (lv_set_11_0= ruleList ) )
                    {
                    otherlv_10=(Token)match(input,48,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getTableClassifierAccess().getInKeyword_3_0());
                      			
                    }
                    // InternalKim.g:2657:4: ( (lv_set_11_0= ruleList ) )
                    // InternalKim.g:2658:5: (lv_set_11_0= ruleList )
                    {
                    // InternalKim.g:2658:5: (lv_set_11_0= ruleList )
                    // InternalKim.g:2659:6: lv_set_11_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getSetListParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_set_11_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"set",
                      							lv_set_11_0,
                      							"org.integratedmodelling.kim.Kim.List");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:2678:3: ( (lv_string_12_0= RULE_STRING ) )
                    {
                    // InternalKim.g:2678:3: ( (lv_string_12_0= RULE_STRING ) )
                    // InternalKim.g:2679:4: (lv_string_12_0= RULE_STRING )
                    {
                    // InternalKim.g:2679:4: (lv_string_12_0= RULE_STRING )
                    // InternalKim.g:2680:5: lv_string_12_0= RULE_STRING
                    {
                    lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_12_0, grammarAccess.getTableClassifierAccess().getStringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_12_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:2697:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:2697:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    // InternalKim.g:2698:4: (lv_concept_13_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:2698:4: (lv_concept_13_0= ruleConceptDeclaration )
                    // InternalKim.g:2699:5: lv_concept_13_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getConceptConceptDeclarationParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_13_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:2717:3: ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:2717:3: ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) )
                    // InternalKim.g:2718:4: ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) )
                    {
                    // InternalKim.g:2718:4: ( (lv_op_14_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:2719:5: (lv_op_14_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:2719:5: (lv_op_14_0= ruleREL_OPERATOR )
                    // InternalKim.g:2720:6: lv_op_14_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getOpREL_OPERATORParserRuleCall_6_0_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_op_14_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_14_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2737:4: ( (lv_expression_15_0= ruleNumber ) )
                    // InternalKim.g:2738:5: (lv_expression_15_0= ruleNumber )
                    {
                    // InternalKim.g:2738:5: (lv_expression_15_0= ruleNumber )
                    // InternalKim.g:2739:6: lv_expression_15_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getExpressionNumberParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_15_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_15_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:2758:3: ( (lv_expr_16_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:2758:3: ( (lv_expr_16_0= RULE_EXPR ) )
                    // InternalKim.g:2759:4: (lv_expr_16_0= RULE_EXPR )
                    {
                    // InternalKim.g:2759:4: (lv_expr_16_0= RULE_EXPR )
                    // InternalKim.g:2760:5: lv_expr_16_0= RULE_EXPR
                    {
                    lv_expr_16_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_16_0, grammarAccess.getTableClassifierAccess().getExprEXPRTerminalRuleCall_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_16_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:2777:3: ( (lv_nodata_17_0= 'unknown' ) )
                    {
                    // InternalKim.g:2777:3: ( (lv_nodata_17_0= 'unknown' ) )
                    // InternalKim.g:2778:4: (lv_nodata_17_0= 'unknown' )
                    {
                    // InternalKim.g:2778:4: (lv_nodata_17_0= 'unknown' )
                    // InternalKim.g:2779:5: lv_nodata_17_0= 'unknown'
                    {
                    lv_nodata_17_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_17_0, grammarAccess.getTableClassifierAccess().getNodataUnknownKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_17_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:2792:3: ( (lv_star_18_0= '*' ) )
                    {
                    // InternalKim.g:2792:3: ( (lv_star_18_0= '*' ) )
                    // InternalKim.g:2793:4: (lv_star_18_0= '*' )
                    {
                    // InternalKim.g:2793:4: (lv_star_18_0= '*' )
                    // InternalKim.g:2794:5: lv_star_18_0= '*'
                    {
                    lv_star_18_0=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_18_0, grammarAccess.getTableClassifierAccess().getStarAsteriskKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "star", true, "*");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalKim.g:2807:3: ( (lv_anything_19_0= '#' ) )
                    {
                    // InternalKim.g:2807:3: ( (lv_anything_19_0= '#' ) )
                    // InternalKim.g:2808:4: (lv_anything_19_0= '#' )
                    {
                    // InternalKim.g:2808:4: (lv_anything_19_0= '#' )
                    // InternalKim.g:2809:5: lv_anything_19_0= '#'
                    {
                    lv_anything_19_0=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_anything_19_0, grammarAccess.getTableClassifierAccess().getAnythingNumberSignKeyword_10_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "anything", true, "#");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTableClassifier"


    // $ANTLR start "entryRuleActionSpecification"
    // InternalKim.g:2825:1: entryRuleActionSpecification returns [EObject current=null] : iv_ruleActionSpecification= ruleActionSpecification EOF ;
    public final EObject entryRuleActionSpecification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleActionSpecification = null;


        try {
            // InternalKim.g:2825:60: (iv_ruleActionSpecification= ruleActionSpecification EOF )
            // InternalKim.g:2826:2: iv_ruleActionSpecification= ruleActionSpecification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionSpecificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleActionSpecification=ruleActionSpecification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleActionSpecification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleActionSpecification"


    // $ANTLR start "ruleActionSpecification"
    // InternalKim.g:2832:1: ruleActionSpecification returns [EObject current=null] : ( ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* ) ) ;
    public final EObject ruleActionSpecification() throws RecognitionException {
        EObject current = null;

        Token lv_integrated_0_0=null;
        Token lv_over_1_0=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token lv_trigger_8_0=null;
        Token lv_initialization_9_0=null;
        Token lv_instantiation_10_0=null;
        Token lv_termination_11_0=null;
        Token otherlv_13=null;
        Token lv_anyContextEvent_14_0=null;
        Token lv_relatedEventContext_15_0=null;
        Token otherlv_19=null;
        EObject lv_domain_2_0 = null;

        EObject lv_domain_4_0 = null;

        EObject lv_actions_5_0 = null;

        EObject lv_actions_7_0 = null;

        EObject lv_event_12_0 = null;

        EObject lv_eventContext_16_0 = null;

        EObject lv_parameters_17_0 = null;

        EObject lv_actions_18_0 = null;

        EObject lv_actions_20_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2838:2: ( ( ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* ) ) )
            // InternalKim.g:2839:2: ( ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* ) )
            {
            // InternalKim.g:2839:2: ( ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* ) )
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( ((LA70_0>=54 && LA70_0<=55)) ) {
                alt70=1;
            }
            else if ( (LA70_0==56||(LA70_0>=62 && LA70_0<=67)) ) {
                alt70=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }
            switch (alt70) {
                case 1 :
                    // InternalKim.g:2840:3: ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? )
                    {
                    // InternalKim.g:2840:3: ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? )
                    // InternalKim.g:2841:4: ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )?
                    {
                    // InternalKim.g:2841:4: ( (lv_integrated_0_0= 'aggregated' ) )?
                    int alt60=2;
                    int LA60_0 = input.LA(1);

                    if ( (LA60_0==54) ) {
                        alt60=1;
                    }
                    switch (alt60) {
                        case 1 :
                            // InternalKim.g:2842:5: (lv_integrated_0_0= 'aggregated' )
                            {
                            // InternalKim.g:2842:5: (lv_integrated_0_0= 'aggregated' )
                            // InternalKim.g:2843:6: lv_integrated_0_0= 'aggregated'
                            {
                            lv_integrated_0_0=(Token)match(input,54,FOLLOW_46); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_integrated_0_0, grammarAccess.getActionSpecificationAccess().getIntegratedAggregatedKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getActionSpecificationRule());
                              						}
                              						setWithLastConsumed(current, "integrated", true, "aggregated");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:2855:4: ( (lv_over_1_0= 'over' ) )
                    // InternalKim.g:2856:5: (lv_over_1_0= 'over' )
                    {
                    // InternalKim.g:2856:5: (lv_over_1_0= 'over' )
                    // InternalKim.g:2857:6: lv_over_1_0= 'over'
                    {
                    lv_over_1_0=(Token)match(input,55,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_over_1_0, grammarAccess.getActionSpecificationAccess().getOverOverKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionSpecificationRule());
                      						}
                      						setWithLastConsumed(current, "over", true, "over");
                      					
                    }

                    }


                    }

                    // InternalKim.g:2869:4: ( (lv_domain_2_0= ruleFunctionOrID ) )
                    // InternalKim.g:2870:5: (lv_domain_2_0= ruleFunctionOrID )
                    {
                    // InternalKim.g:2870:5: (lv_domain_2_0= ruleFunctionOrID )
                    // InternalKim.g:2871:6: lv_domain_2_0= ruleFunctionOrID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionSpecificationAccess().getDomainFunctionOrIDParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_47);
                    lv_domain_2_0=ruleFunctionOrID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                      						}
                      						add(
                      							current,
                      							"domain",
                      							lv_domain_2_0,
                      							"org.integratedmodelling.kim.Kim.FunctionOrID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2888:4: ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )*
                    loop61:
                    do {
                        int alt61=2;
                        int LA61_0 = input.LA(1);

                        if ( (LA61_0==27) ) {
                            alt61=1;
                        }


                        switch (alt61) {
                    	case 1 :
                    	    // InternalKim.g:2889:5: ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) )
                    	    {
                    	    // InternalKim.g:2889:5: ( ( ',' )=>otherlv_3= ',' )
                    	    // InternalKim.g:2890:6: ( ',' )=>otherlv_3= ','
                    	    {
                    	    otherlv_3=(Token)match(input,27,FOLLOW_26); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_3, grammarAccess.getActionSpecificationAccess().getCommaKeyword_0_3_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:2896:5: ( (lv_domain_4_0= ruleFunctionOrID ) )
                    	    // InternalKim.g:2897:6: (lv_domain_4_0= ruleFunctionOrID )
                    	    {
                    	    // InternalKim.g:2897:6: (lv_domain_4_0= ruleFunctionOrID )
                    	    // InternalKim.g:2898:7: lv_domain_4_0= ruleFunctionOrID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionSpecificationAccess().getDomainFunctionOrIDParserRuleCall_0_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_47);
                    	    lv_domain_4_0=ruleFunctionOrID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"domain",
                    	      								lv_domain_4_0,
                    	      								"org.integratedmodelling.kim.Kim.FunctionOrID");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop61;
                        }
                    } while (true);

                    // InternalKim.g:2916:4: ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )?
                    int alt63=2;
                    alt63 = dfa63.predict(input);
                    switch (alt63) {
                        case 1 :
                            // InternalKim.g:2917:5: ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
                            {
                            // InternalKim.g:2917:5: ( (lv_actions_5_0= ruleAction ) )
                            // InternalKim.g:2918:6: (lv_actions_5_0= ruleAction )
                            {
                            // InternalKim.g:2918:6: (lv_actions_5_0= ruleAction )
                            // InternalKim.g:2919:7: lv_actions_5_0= ruleAction
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_0_0());
                              						
                            }
                            pushFollow(FOLLOW_34);
                            lv_actions_5_0=ruleAction();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                              							}
                              							add(
                              								current,
                              								"actions",
                              								lv_actions_5_0,
                              								"org.integratedmodelling.kim.Kim.Action");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalKim.g:2936:5: ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
                            loop62:
                            do {
                                int alt62=2;
                                int LA62_0 = input.LA(1);

                                if ( (LA62_0==27) ) {
                                    alt62=1;
                                }


                                switch (alt62) {
                            	case 1 :
                            	    // InternalKim.g:2937:6: ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) )
                            	    {
                            	    // InternalKim.g:2937:6: ( ( ',' )=>otherlv_6= ',' )
                            	    // InternalKim.g:2938:7: ( ',' )=>otherlv_6= ','
                            	    {
                            	    otherlv_6=(Token)match(input,27,FOLLOW_48); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_6, grammarAccess.getActionSpecificationAccess().getCommaKeyword_0_4_1_0());
                            	      						
                            	    }

                            	    }

                            	    // InternalKim.g:2944:6: ( (lv_actions_7_0= ruleAction ) )
                            	    // InternalKim.g:2945:7: (lv_actions_7_0= ruleAction )
                            	    {
                            	    // InternalKim.g:2945:7: (lv_actions_7_0= ruleAction )
                            	    // InternalKim.g:2946:8: lv_actions_7_0= ruleAction
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_34);
                            	    lv_actions_7_0=ruleAction();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"actions",
                            	      									lv_actions_7_0,
                            	      									"org.integratedmodelling.kim.Kim.Action");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop62;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:2967:3: ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* )
                    {
                    // InternalKim.g:2967:3: ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* )
                    // InternalKim.g:2968:4: ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )*
                    {
                    // InternalKim.g:2968:4: ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )?
                    int alt68=2;
                    int LA68_0 = input.LA(1);

                    if ( (LA68_0==56) ) {
                        alt68=1;
                    }
                    switch (alt68) {
                        case 1 :
                            // InternalKim.g:2969:5: ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )?
                            {
                            // InternalKim.g:2969:5: ( (lv_trigger_8_0= 'on' ) )
                            // InternalKim.g:2970:6: (lv_trigger_8_0= 'on' )
                            {
                            // InternalKim.g:2970:6: (lv_trigger_8_0= 'on' )
                            // InternalKim.g:2971:7: lv_trigger_8_0= 'on'
                            {
                            lv_trigger_8_0=(Token)match(input,56,FOLLOW_49); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_trigger_8_0, grammarAccess.getActionSpecificationAccess().getTriggerOnKeyword_1_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "trigger", true, "on");
                              						
                            }

                            }


                            }

                            // InternalKim.g:2983:5: ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) )
                            int alt66=4;
                            switch ( input.LA(1) ) {
                            case 57:
                                {
                                alt66=1;
                                }
                                break;
                            case 58:
                                {
                                alt66=2;
                                }
                                break;
                            case 59:
                                {
                                alt66=3;
                                }
                                break;
                            case RULE_UPPERCASE_ID:
                            case RULE_LOWERCASE_ID:
                            case RULE_CAMELCASE_ID:
                            case RULE_LOWERCASE_DASHID:
                            case 38:
                            case 128:
                            case 129:
                            case 137:
                            case 138:
                            case 140:
                            case 141:
                            case 142:
                            case 143:
                            case 144:
                            case 145:
                            case 146:
                            case 147:
                            case 148:
                            case 149:
                            case 150:
                            case 151:
                            case 152:
                            case 153:
                            case 154:
                            case 155:
                            case 156:
                                {
                                alt66=4;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 66, 0, input);

                                throw nvae;
                            }

                            switch (alt66) {
                                case 1 :
                                    // InternalKim.g:2984:6: ( (lv_initialization_9_0= 'definition' ) )
                                    {
                                    // InternalKim.g:2984:6: ( (lv_initialization_9_0= 'definition' ) )
                                    // InternalKim.g:2985:7: (lv_initialization_9_0= 'definition' )
                                    {
                                    // InternalKim.g:2985:7: (lv_initialization_9_0= 'definition' )
                                    // InternalKim.g:2986:8: lv_initialization_9_0= 'definition'
                                    {
                                    lv_initialization_9_0=(Token)match(input,57,FOLLOW_50); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_initialization_9_0, grammarAccess.getActionSpecificationAccess().getInitializationDefinitionKeyword_1_0_1_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getActionSpecificationRule());
                                      								}
                                      								setWithLastConsumed(current, "initialization", true, "definition");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:2999:6: ( (lv_instantiation_10_0= 'instantiation' ) )
                                    {
                                    // InternalKim.g:2999:6: ( (lv_instantiation_10_0= 'instantiation' ) )
                                    // InternalKim.g:3000:7: (lv_instantiation_10_0= 'instantiation' )
                                    {
                                    // InternalKim.g:3000:7: (lv_instantiation_10_0= 'instantiation' )
                                    // InternalKim.g:3001:8: lv_instantiation_10_0= 'instantiation'
                                    {
                                    lv_instantiation_10_0=(Token)match(input,58,FOLLOW_50); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_instantiation_10_0, grammarAccess.getActionSpecificationAccess().getInstantiationInstantiationKeyword_1_0_1_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getActionSpecificationRule());
                                      								}
                                      								setWithLastConsumed(current, "instantiation", true, "instantiation");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:3014:6: ( (lv_termination_11_0= 'termination' ) )
                                    {
                                    // InternalKim.g:3014:6: ( (lv_termination_11_0= 'termination' ) )
                                    // InternalKim.g:3015:7: (lv_termination_11_0= 'termination' )
                                    {
                                    // InternalKim.g:3015:7: (lv_termination_11_0= 'termination' )
                                    // InternalKim.g:3016:8: lv_termination_11_0= 'termination'
                                    {
                                    lv_termination_11_0=(Token)match(input,59,FOLLOW_50); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_termination_11_0, grammarAccess.getActionSpecificationAccess().getTerminationTerminationKeyword_1_0_1_2_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getActionSpecificationRule());
                                      								}
                                      								setWithLastConsumed(current, "termination", true, "termination");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 4 :
                                    // InternalKim.g:3029:6: ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? )
                                    {
                                    // InternalKim.g:3029:6: ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? )
                                    // InternalKim.g:3030:7: ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )?
                                    {
                                    // InternalKim.g:3030:7: ( (lv_event_12_0= ruleConceptDeclaration ) )
                                    // InternalKim.g:3031:8: (lv_event_12_0= ruleConceptDeclaration )
                                    {
                                    // InternalKim.g:3031:8: (lv_event_12_0= ruleConceptDeclaration )
                                    // InternalKim.g:3032:9: lv_event_12_0= ruleConceptDeclaration
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getActionSpecificationAccess().getEventConceptDeclarationParserRuleCall_1_0_1_3_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_51);
                                    lv_event_12_0=ruleConceptDeclaration();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                                      									}
                                      									set(
                                      										current,
                                      										"event",
                                      										lv_event_12_0,
                                      										"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }

                                    // InternalKim.g:3049:7: (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )?
                                    int alt65=2;
                                    int LA65_0 = input.LA(1);

                                    if ( (LA65_0==48) ) {
                                        alt65=1;
                                    }
                                    switch (alt65) {
                                        case 1 :
                                            // InternalKim.g:3050:8: otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) )
                                            {
                                            otherlv_13=(Token)match(input,48,FOLLOW_52); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              								newLeafNode(otherlv_13, grammarAccess.getActionSpecificationAccess().getInKeyword_1_0_1_3_1_0());
                                              							
                                            }
                                            // InternalKim.g:3054:8: ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) )
                                            int alt64=2;
                                            int LA64_0 = input.LA(1);

                                            if ( (LA64_0==60) ) {
                                                alt64=1;
                                            }
                                            else if ( (LA64_0==61) ) {
                                                alt64=2;
                                            }
                                            else {
                                                if (state.backtracking>0) {state.failed=true; return current;}
                                                NoViableAltException nvae =
                                                    new NoViableAltException("", 64, 0, input);

                                                throw nvae;
                                            }
                                            switch (alt64) {
                                                case 1 :
                                                    // InternalKim.g:3055:9: ( (lv_anyContextEvent_14_0= 'context' ) )
                                                    {
                                                    // InternalKim.g:3055:9: ( (lv_anyContextEvent_14_0= 'context' ) )
                                                    // InternalKim.g:3056:10: (lv_anyContextEvent_14_0= 'context' )
                                                    {
                                                    // InternalKim.g:3056:10: (lv_anyContextEvent_14_0= 'context' )
                                                    // InternalKim.g:3057:11: lv_anyContextEvent_14_0= 'context'
                                                    {
                                                    lv_anyContextEvent_14_0=(Token)match(input,60,FOLLOW_23); if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      											newLeafNode(lv_anyContextEvent_14_0, grammarAccess.getActionSpecificationAccess().getAnyContextEventContextKeyword_1_0_1_3_1_1_0_0());
                                                      										
                                                    }
                                                    if ( state.backtracking==0 ) {

                                                      											if (current==null) {
                                                      												current = createModelElement(grammarAccess.getActionSpecificationRule());
                                                      											}
                                                      											setWithLastConsumed(current, "anyContextEvent", true, "context");
                                                      										
                                                    }

                                                    }


                                                    }


                                                    }
                                                    break;
                                                case 2 :
                                                    // InternalKim.g:3070:9: ( (lv_relatedEventContext_15_0= 'related' ) )
                                                    {
                                                    // InternalKim.g:3070:9: ( (lv_relatedEventContext_15_0= 'related' ) )
                                                    // InternalKim.g:3071:10: (lv_relatedEventContext_15_0= 'related' )
                                                    {
                                                    // InternalKim.g:3071:10: (lv_relatedEventContext_15_0= 'related' )
                                                    // InternalKim.g:3072:11: lv_relatedEventContext_15_0= 'related'
                                                    {
                                                    lv_relatedEventContext_15_0=(Token)match(input,61,FOLLOW_23); if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      											newLeafNode(lv_relatedEventContext_15_0, grammarAccess.getActionSpecificationAccess().getRelatedEventContextRelatedKeyword_1_0_1_3_1_1_1_0());
                                                      										
                                                    }
                                                    if ( state.backtracking==0 ) {

                                                      											if (current==null) {
                                                      												current = createModelElement(grammarAccess.getActionSpecificationRule());
                                                      											}
                                                      											setWithLastConsumed(current, "relatedEventContext", true, "related");
                                                      										
                                                    }

                                                    }


                                                    }


                                                    }
                                                    break;

                                            }

                                            // InternalKim.g:3085:8: ( (lv_eventContext_16_0= ruleConceptDeclaration ) )
                                            // InternalKim.g:3086:9: (lv_eventContext_16_0= ruleConceptDeclaration )
                                            {
                                            // InternalKim.g:3086:9: (lv_eventContext_16_0= ruleConceptDeclaration )
                                            // InternalKim.g:3087:10: lv_eventContext_16_0= ruleConceptDeclaration
                                            {
                                            if ( state.backtracking==0 ) {

                                              										newCompositeNode(grammarAccess.getActionSpecificationAccess().getEventContextConceptDeclarationParserRuleCall_1_0_1_3_1_2_0());
                                              									
                                            }
                                            pushFollow(FOLLOW_50);
                                            lv_eventContext_16_0=ruleConceptDeclaration();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                                              										}
                                              										set(
                                              											current,
                                              											"eventContext",
                                              											lv_eventContext_16_0,
                                              											"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                                              										afterParserOrEnumRuleCall();
                                              									
                                            }

                                            }


                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;

                            }

                            // InternalKim.g:3107:5: ( (lv_parameters_17_0= ruleList ) )?
                            int alt67=2;
                            int LA67_0 = input.LA(1);

                            if ( (LA67_0==38) ) {
                                alt67=1;
                            }
                            switch (alt67) {
                                case 1 :
                                    // InternalKim.g:3108:6: (lv_parameters_17_0= ruleList )
                                    {
                                    // InternalKim.g:3108:6: (lv_parameters_17_0= ruleList )
                                    // InternalKim.g:3109:7: lv_parameters_17_0= ruleList
                                    {
                                    if ( state.backtracking==0 ) {

                                      							newCompositeNode(grammarAccess.getActionSpecificationAccess().getParametersListParserRuleCall_1_0_2_0());
                                      						
                                    }
                                    pushFollow(FOLLOW_48);
                                    lv_parameters_17_0=ruleList();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                                      							}
                                      							set(
                                      								current,
                                      								"parameters",
                                      								lv_parameters_17_0,
                                      								"org.integratedmodelling.kim.Kim.List");
                                      							afterParserOrEnumRuleCall();
                                      						
                                    }

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    // InternalKim.g:3127:4: ( (lv_actions_18_0= ruleAction ) )
                    // InternalKim.g:3128:5: (lv_actions_18_0= ruleAction )
                    {
                    // InternalKim.g:3128:5: (lv_actions_18_0= ruleAction )
                    // InternalKim.g:3129:6: lv_actions_18_0= ruleAction
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_34);
                    lv_actions_18_0=ruleAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                      						}
                      						add(
                      							current,
                      							"actions",
                      							lv_actions_18_0,
                      							"org.integratedmodelling.kim.Kim.Action");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3146:4: ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )*
                    loop69:
                    do {
                        int alt69=2;
                        int LA69_0 = input.LA(1);

                        if ( (LA69_0==27) ) {
                            alt69=1;
                        }


                        switch (alt69) {
                    	case 1 :
                    	    // InternalKim.g:3147:5: ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) )
                    	    {
                    	    // InternalKim.g:3147:5: ( ( ',' )=>otherlv_19= ',' )
                    	    // InternalKim.g:3148:6: ( ',' )=>otherlv_19= ','
                    	    {
                    	    otherlv_19=(Token)match(input,27,FOLLOW_48); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_19, grammarAccess.getActionSpecificationAccess().getCommaKeyword_1_2_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:3154:5: ( (lv_actions_20_0= ruleAction ) )
                    	    // InternalKim.g:3155:6: (lv_actions_20_0= ruleAction )
                    	    {
                    	    // InternalKim.g:3155:6: (lv_actions_20_0= ruleAction )
                    	    // InternalKim.g:3156:7: lv_actions_20_0= ruleAction
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_34);
                    	    lv_actions_20_0=ruleAction();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"actions",
                    	      								lv_actions_20_0,
                    	      								"org.integratedmodelling.kim.Kim.Action");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop69;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleActionSpecification"


    // $ANTLR start "entryRuleFunctionOrID"
    // InternalKim.g:3179:1: entryRuleFunctionOrID returns [EObject current=null] : iv_ruleFunctionOrID= ruleFunctionOrID EOF ;
    public final EObject entryRuleFunctionOrID() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionOrID = null;


        try {
            // InternalKim.g:3179:53: (iv_ruleFunctionOrID= ruleFunctionOrID EOF )
            // InternalKim.g:3180:2: iv_ruleFunctionOrID= ruleFunctionOrID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionOrIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionOrID=ruleFunctionOrID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionOrID; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionOrID"


    // $ANTLR start "ruleFunctionOrID"
    // InternalKim.g:3186:1: ruleFunctionOrID returns [EObject current=null] : ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) ) ;
    public final EObject ruleFunctionOrID() throws RecognitionException {
        EObject current = null;

        Token lv_functionId_1_1=null;
        EObject lv_function_0_0 = null;

        AntlrDatatypeRuleToken lv_functionId_1_2 = null;



        	enterRule();

        try {
            // InternalKim.g:3192:2: ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) ) )
            // InternalKim.g:3193:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) )
            {
            // InternalKim.g:3193:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) )
            int alt72=2;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                int LA72_1 = input.LA(2);

                if ( (synpred126_InternalKim()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_UPPERCASE_ID:
                {
                int LA72_2 = input.LA(2);

                if ( (synpred126_InternalKim()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                int LA72_3 = input.LA(2);

                if ( (synpred126_InternalKim()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 72, 0, input);

                throw nvae;
            }

            switch (alt72) {
                case 1 :
                    // InternalKim.g:3194:3: ( (lv_function_0_0= ruleFunction ) )
                    {
                    // InternalKim.g:3194:3: ( (lv_function_0_0= ruleFunction ) )
                    // InternalKim.g:3195:4: (lv_function_0_0= ruleFunction )
                    {
                    // InternalKim.g:3195:4: (lv_function_0_0= ruleFunction )
                    // InternalKim.g:3196:5: lv_function_0_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionFunctionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_0_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionOrIDRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_0_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3214:3: ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) )
                    {
                    // InternalKim.g:3214:3: ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) )
                    // InternalKim.g:3215:4: ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:3215:4: ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) )
                    // InternalKim.g:3216:5: (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId )
                    {
                    // InternalKim.g:3216:5: (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId )
                    int alt71=2;
                    int LA71_0 = input.LA(1);

                    if ( (LA71_0==RULE_LOWERCASE_ID) ) {
                        int LA71_1 = input.LA(2);

                        if ( (LA71_1==EOF||(LA71_1>=RULE_UPPERCASE_ID && LA71_1<=RULE_STRING)||LA71_1==RULE_CAMELCASE_ID||LA71_1==RULE_LOWERCASE_DASHID||LA71_1==20||LA71_1==27||LA71_1==31||LA71_1==38||(LA71_1>=41 && LA71_1<=42)||(LA71_1>=54 && LA71_1<=56)||(LA71_1>=62 && LA71_1<=67)||LA71_1==104||(LA71_1>=128 && LA71_1<=129)||(LA71_1>=137 && LA71_1<=138)||(LA71_1>=140 && LA71_1<=156)) ) {
                            alt71=1;
                        }
                        else if ( (LA71_1==105||LA71_1==108) ) {
                            alt71=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 71, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA71_0==RULE_UPPERCASE_ID||LA71_0==RULE_LOWERCASE_DASHID) ) {
                        alt71=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 71, 0, input);

                        throw nvae;
                    }
                    switch (alt71) {
                        case 1 :
                            // InternalKim.g:3217:6: lv_functionId_1_1= RULE_LOWERCASE_ID
                            {
                            lv_functionId_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_functionId_1_1, grammarAccess.getFunctionOrIDAccess().getFunctionIdLOWERCASE_IDTerminalRuleCall_1_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getFunctionOrIDRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"functionId",
                              							lv_functionId_1_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:3232:6: lv_functionId_1_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionIdNamespaceIdParserRuleCall_1_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_functionId_1_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getFunctionOrIDRule());
                              						}
                              						set(
                              							current,
                              							"functionId",
                              							lv_functionId_1_2,
                              							"org.integratedmodelling.kim.Kim.NamespaceId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionOrID"


    // $ANTLR start "entryRuleAction"
    // InternalKim.g:3254:1: entryRuleAction returns [EObject current=null] : iv_ruleAction= ruleAction EOF ;
    public final EObject entryRuleAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAction = null;


        try {
            // InternalKim.g:3254:47: (iv_ruleAction= ruleAction EOF )
            // InternalKim.g:3255:2: iv_ruleAction= ruleAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAction=ruleAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAction"


    // $ANTLR start "ruleAction"
    // InternalKim.g:3261:1: ruleAction returns [EObject current=null] : ( ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? ) | ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? ) | ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? ) | ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? ) ) ;
    public final EObject ruleAction() throws RecognitionException {
        EObject current = null;

        Token lv_set_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_conditionNegative_5_0=null;
        Token lv_integrate_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_conditionNegative_12_0=null;
        Token lv_do_14_1=null;
        Token lv_do_14_2=null;
        Token lv_do_14_3=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token lv_conditionNegative_19_0=null;
        Token lv_move_21_0=null;
        Token lv_away_23_0=null;
        EObject lv_assignments_1_0 = null;

        EObject lv_assignments_3_0 = null;

        EObject lv_condition_6_0 = null;

        EObject lv_assignments_8_0 = null;

        EObject lv_assignments_10_0 = null;

        EObject lv_condition_13_0 = null;

        EObject lv_executed_15_0 = null;

        EObject lv_executed_17_0 = null;

        EObject lv_condition_20_0 = null;

        EObject lv_where_22_0 = null;

        EObject lv_condition_24_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3267:2: ( ( ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? ) | ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? ) | ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? ) | ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? ) ) )
            // InternalKim.g:3268:2: ( ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? ) | ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? ) | ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? ) | ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? ) )
            {
            // InternalKim.g:3268:2: ( ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? ) | ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? ) | ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? ) | ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? ) )
            int alt85=4;
            switch ( input.LA(1) ) {
            case 62:
                {
                alt85=1;
                }
                break;
            case 63:
                {
                alt85=2;
                }
                break;
            case 64:
            case 65:
            case 66:
                {
                alt85=3;
                }
                break;
            case 67:
                {
                alt85=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;
            }

            switch (alt85) {
                case 1 :
                    // InternalKim.g:3269:3: ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3269:3: ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? )
                    // InternalKim.g:3270:4: ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3270:4: ( (lv_set_0_0= 'set' ) )
                    // InternalKim.g:3271:5: (lv_set_0_0= 'set' )
                    {
                    // InternalKim.g:3271:5: (lv_set_0_0= 'set' )
                    // InternalKim.g:3272:6: lv_set_0_0= 'set'
                    {
                    lv_set_0_0=(Token)match(input,62,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_set_0_0, grammarAccess.getActionAccess().getSetSetKeyword_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "set", true, "set");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3284:4: ( (lv_assignments_1_0= ruleValueAssignment ) )
                    // InternalKim.g:3285:5: (lv_assignments_1_0= ruleValueAssignment )
                    {
                    // InternalKim.g:3285:5: (lv_assignments_1_0= ruleValueAssignment )
                    // InternalKim.g:3286:6: lv_assignments_1_0= ruleValueAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_54);
                    lv_assignments_1_0=ruleValueAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"assignments",
                      							lv_assignments_1_0,
                      							"org.integratedmodelling.kim.Kim.ValueAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3303:4: (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )*
                    loop73:
                    do {
                        int alt73=2;
                        int LA73_0 = input.LA(1);

                        if ( (LA73_0==27) ) {
                            int LA73_2 = input.LA(2);

                            if ( ((LA73_2>=RULE_UPPERCASE_ID && LA73_2<=RULE_STRING)||(LA73_2>=RULE_EXPR && LA73_2<=RULE_ID)||(LA73_2>=27 && LA73_2<=29)||LA73_2==36||LA73_2==38||LA73_2==49||(LA73_2>=246 && LA73_2<=247)) ) {
                                alt73=1;
                            }


                        }


                        switch (alt73) {
                    	case 1 :
                    	    // InternalKim.g:3304:5: otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) )
                    	    {
                    	    otherlv_2=(Token)match(input,27,FOLLOW_53); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_2, grammarAccess.getActionAccess().getCommaKeyword_0_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3308:5: ( (lv_assignments_3_0= ruleValueAssignment ) )
                    	    // InternalKim.g:3309:6: (lv_assignments_3_0= ruleValueAssignment )
                    	    {
                    	    // InternalKim.g:3309:6: (lv_assignments_3_0= ruleValueAssignment )
                    	    // InternalKim.g:3310:7: lv_assignments_3_0= ruleValueAssignment
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_0_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_54);
                    	    lv_assignments_3_0=ruleValueAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"assignments",
                    	      								lv_assignments_3_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueAssignment");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop73;
                        }
                    } while (true);

                    // InternalKim.g:3328:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )?
                    int alt75=2;
                    int LA75_0 = input.LA(1);

                    if ( ((LA75_0>=44 && LA75_0<=45)) ) {
                        alt75=1;
                    }
                    switch (alt75) {
                        case 1 :
                            // InternalKim.g:3329:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) )
                            {
                            // InternalKim.g:3329:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) )
                            // InternalKim.g:3330:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3340:6: (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) )
                            int alt74=2;
                            int LA74_0 = input.LA(1);

                            if ( (LA74_0==44) ) {
                                alt74=1;
                            }
                            else if ( (LA74_0==45) ) {
                                alt74=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 74, 0, input);

                                throw nvae;
                            }
                            switch (alt74) {
                                case 1 :
                                    // InternalKim.g:3341:7: otherlv_4= 'if'
                                    {
                                    otherlv_4=(Token)match(input,44,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_4, grammarAccess.getActionAccess().getIfKeyword_0_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3346:7: ( (lv_conditionNegative_5_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3346:7: ( (lv_conditionNegative_5_0= 'unless' ) )
                                    // InternalKim.g:3347:8: (lv_conditionNegative_5_0= 'unless' )
                                    {
                                    // InternalKim.g:3347:8: (lv_conditionNegative_5_0= 'unless' )
                                    // InternalKim.g:3348:9: lv_conditionNegative_5_0= 'unless'
                                    {
                                    lv_conditionNegative_5_0=(Token)match(input,45,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_5_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_0_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", true, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3362:5: ( (lv_condition_6_0= ruleValue ) )
                            // InternalKim.g:3363:6: (lv_condition_6_0= ruleValue )
                            {
                            // InternalKim.g:3363:6: (lv_condition_6_0= ruleValue )
                            // InternalKim.g:3364:7: lv_condition_6_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_0_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_6_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_6_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3384:3: ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3384:3: ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? )
                    // InternalKim.g:3385:4: ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3385:4: ( (lv_integrate_7_0= 'integrate' ) )
                    // InternalKim.g:3386:5: (lv_integrate_7_0= 'integrate' )
                    {
                    // InternalKim.g:3386:5: (lv_integrate_7_0= 'integrate' )
                    // InternalKim.g:3387:6: lv_integrate_7_0= 'integrate'
                    {
                    lv_integrate_7_0=(Token)match(input,63,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_integrate_7_0, grammarAccess.getActionAccess().getIntegrateIntegrateKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "integrate", true, "integrate");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3399:4: ( (lv_assignments_8_0= ruleValueAssignment ) )
                    // InternalKim.g:3400:5: (lv_assignments_8_0= ruleValueAssignment )
                    {
                    // InternalKim.g:3400:5: (lv_assignments_8_0= ruleValueAssignment )
                    // InternalKim.g:3401:6: lv_assignments_8_0= ruleValueAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_54);
                    lv_assignments_8_0=ruleValueAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"assignments",
                      							lv_assignments_8_0,
                      							"org.integratedmodelling.kim.Kim.ValueAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3418:4: (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )*
                    loop76:
                    do {
                        int alt76=2;
                        int LA76_0 = input.LA(1);

                        if ( (LA76_0==27) ) {
                            int LA76_2 = input.LA(2);

                            if ( ((LA76_2>=RULE_UPPERCASE_ID && LA76_2<=RULE_STRING)||(LA76_2>=RULE_EXPR && LA76_2<=RULE_ID)||(LA76_2>=27 && LA76_2<=29)||LA76_2==36||LA76_2==38||LA76_2==49||(LA76_2>=246 && LA76_2<=247)) ) {
                                alt76=1;
                            }


                        }


                        switch (alt76) {
                    	case 1 :
                    	    // InternalKim.g:3419:5: otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) )
                    	    {
                    	    otherlv_9=(Token)match(input,27,FOLLOW_53); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_9, grammarAccess.getActionAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3423:5: ( (lv_assignments_10_0= ruleValueAssignment ) )
                    	    // InternalKim.g:3424:6: (lv_assignments_10_0= ruleValueAssignment )
                    	    {
                    	    // InternalKim.g:3424:6: (lv_assignments_10_0= ruleValueAssignment )
                    	    // InternalKim.g:3425:7: lv_assignments_10_0= ruleValueAssignment
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_54);
                    	    lv_assignments_10_0=ruleValueAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"assignments",
                    	      								lv_assignments_10_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueAssignment");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop76;
                        }
                    } while (true);

                    // InternalKim.g:3443:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )?
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( ((LA78_0>=44 && LA78_0<=45)) ) {
                        alt78=1;
                    }
                    switch (alt78) {
                        case 1 :
                            // InternalKim.g:3444:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) )
                            {
                            // InternalKim.g:3444:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) )
                            // InternalKim.g:3445:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3455:6: (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) )
                            int alt77=2;
                            int LA77_0 = input.LA(1);

                            if ( (LA77_0==44) ) {
                                alt77=1;
                            }
                            else if ( (LA77_0==45) ) {
                                alt77=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 77, 0, input);

                                throw nvae;
                            }
                            switch (alt77) {
                                case 1 :
                                    // InternalKim.g:3456:7: otherlv_11= 'if'
                                    {
                                    otherlv_11=(Token)match(input,44,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_11, grammarAccess.getActionAccess().getIfKeyword_1_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3461:7: ( (lv_conditionNegative_12_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3461:7: ( (lv_conditionNegative_12_0= 'unless' ) )
                                    // InternalKim.g:3462:8: (lv_conditionNegative_12_0= 'unless' )
                                    {
                                    // InternalKim.g:3462:8: (lv_conditionNegative_12_0= 'unless' )
                                    // InternalKim.g:3463:9: lv_conditionNegative_12_0= 'unless'
                                    {
                                    lv_conditionNegative_12_0=(Token)match(input,45,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_12_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_1_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", true, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3477:5: ( (lv_condition_13_0= ruleValue ) )
                            // InternalKim.g:3478:6: (lv_condition_13_0= ruleValue )
                            {
                            // InternalKim.g:3478:6: (lv_condition_13_0= ruleValue )
                            // InternalKim.g:3479:7: lv_condition_13_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_1_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_13_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_13_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:3499:3: ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3499:3: ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? )
                    // InternalKim.g:3500:4: ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3500:4: ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) )
                    // InternalKim.g:3501:5: ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) )
                    {
                    // InternalKim.g:3501:5: ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) )
                    // InternalKim.g:3502:6: (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' )
                    {
                    // InternalKim.g:3502:6: (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' )
                    int alt79=3;
                    switch ( input.LA(1) ) {
                    case 64:
                        {
                        alt79=1;
                        }
                        break;
                    case 65:
                        {
                        alt79=2;
                        }
                        break;
                    case 66:
                        {
                        alt79=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 79, 0, input);

                        throw nvae;
                    }

                    switch (alt79) {
                        case 1 :
                            // InternalKim.g:3503:7: lv_do_14_1= 'do'
                            {
                            lv_do_14_1=(Token)match(input,64,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_do_14_1, grammarAccess.getActionAccess().getDoDoKeyword_2_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "do", true, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:3514:7: lv_do_14_2= 'then'
                            {
                            lv_do_14_2=(Token)match(input,65,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_do_14_2, grammarAccess.getActionAccess().getDoThenKeyword_2_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "do", true, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:3525:7: lv_do_14_3= 'finally'
                            {
                            lv_do_14_3=(Token)match(input,66,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_do_14_3, grammarAccess.getActionAccess().getDoFinallyKeyword_2_0_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "do", true, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:3538:4: ( (lv_executed_15_0= ruleValueExecution ) )
                    // InternalKim.g:3539:5: (lv_executed_15_0= ruleValueExecution )
                    {
                    // InternalKim.g:3539:5: (lv_executed_15_0= ruleValueExecution )
                    // InternalKim.g:3540:6: lv_executed_15_0= ruleValueExecution
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getExecutedValueExecutionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_54);
                    lv_executed_15_0=ruleValueExecution();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"executed",
                      							lv_executed_15_0,
                      							"org.integratedmodelling.kim.Kim.ValueExecution");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3557:4: (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )*
                    loop80:
                    do {
                        int alt80=2;
                        int LA80_0 = input.LA(1);

                        if ( (LA80_0==27) ) {
                            int LA80_2 = input.LA(2);

                            if ( ((LA80_2>=RULE_UPPERCASE_ID && LA80_2<=RULE_LOWERCASE_ID)||LA80_2==RULE_EXPR||LA80_2==RULE_LOWERCASE_DASHID||LA80_2==104) ) {
                                alt80=1;
                            }


                        }


                        switch (alt80) {
                    	case 1 :
                    	    // InternalKim.g:3558:5: otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) )
                    	    {
                    	    otherlv_16=(Token)match(input,27,FOLLOW_20); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_16, grammarAccess.getActionAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3562:5: ( (lv_executed_17_0= ruleValueExecution ) )
                    	    // InternalKim.g:3563:6: (lv_executed_17_0= ruleValueExecution )
                    	    {
                    	    // InternalKim.g:3563:6: (lv_executed_17_0= ruleValueExecution )
                    	    // InternalKim.g:3564:7: lv_executed_17_0= ruleValueExecution
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getExecutedValueExecutionParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_54);
                    	    lv_executed_17_0=ruleValueExecution();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"executed",
                    	      								lv_executed_17_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueExecution");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop80;
                        }
                    } while (true);

                    // InternalKim.g:3582:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )?
                    int alt82=2;
                    int LA82_0 = input.LA(1);

                    if ( ((LA82_0>=44 && LA82_0<=45)) ) {
                        alt82=1;
                    }
                    switch (alt82) {
                        case 1 :
                            // InternalKim.g:3583:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) )
                            {
                            // InternalKim.g:3583:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) )
                            // InternalKim.g:3584:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3594:6: (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) )
                            int alt81=2;
                            int LA81_0 = input.LA(1);

                            if ( (LA81_0==44) ) {
                                alt81=1;
                            }
                            else if ( (LA81_0==45) ) {
                                alt81=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 81, 0, input);

                                throw nvae;
                            }
                            switch (alt81) {
                                case 1 :
                                    // InternalKim.g:3595:7: otherlv_18= 'if'
                                    {
                                    otherlv_18=(Token)match(input,44,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_18, grammarAccess.getActionAccess().getIfKeyword_2_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3600:7: ( (lv_conditionNegative_19_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3600:7: ( (lv_conditionNegative_19_0= 'unless' ) )
                                    // InternalKim.g:3601:8: (lv_conditionNegative_19_0= 'unless' )
                                    {
                                    // InternalKim.g:3601:8: (lv_conditionNegative_19_0= 'unless' )
                                    // InternalKim.g:3602:9: lv_conditionNegative_19_0= 'unless'
                                    {
                                    lv_conditionNegative_19_0=(Token)match(input,45,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_19_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_2_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", true, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3616:5: ( (lv_condition_20_0= ruleValue ) )
                            // InternalKim.g:3617:6: (lv_condition_20_0= ruleValue )
                            {
                            // InternalKim.g:3617:6: (lv_condition_20_0= ruleValue )
                            // InternalKim.g:3618:7: lv_condition_20_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_2_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_20_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_20_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:3638:3: ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? )
                    {
                    // InternalKim.g:3638:3: ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? )
                    // InternalKim.g:3639:4: ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )?
                    {
                    // InternalKim.g:3639:4: ( (lv_move_21_0= 'move' ) )
                    // InternalKim.g:3640:5: (lv_move_21_0= 'move' )
                    {
                    // InternalKim.g:3640:5: (lv_move_21_0= 'move' )
                    // InternalKim.g:3641:6: lv_move_21_0= 'move'
                    {
                    lv_move_21_0=(Token)match(input,67,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_move_21_0, grammarAccess.getActionAccess().getMoveMoveKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "move", true, "move");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3653:4: ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) )
                    int alt83=2;
                    int LA83_0 = input.LA(1);

                    if ( ((LA83_0>=RULE_UPPERCASE_ID && LA83_0<=RULE_STRING)||(LA83_0>=RULE_EXPR && LA83_0<=RULE_ID)||(LA83_0>=27 && LA83_0<=29)||LA83_0==38||(LA83_0>=49 && LA83_0<=50)||LA83_0==209||(LA83_0>=246 && LA83_0<=247)) ) {
                        alt83=1;
                    }
                    else if ( (LA83_0==68) ) {
                        alt83=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 83, 0, input);

                        throw nvae;
                    }
                    switch (alt83) {
                        case 1 :
                            // InternalKim.g:3654:5: ( (lv_where_22_0= ruleValue ) )
                            {
                            // InternalKim.g:3654:5: ( (lv_where_22_0= ruleValue ) )
                            // InternalKim.g:3655:6: (lv_where_22_0= ruleValue )
                            {
                            // InternalKim.g:3655:6: (lv_where_22_0= ruleValue )
                            // InternalKim.g:3656:7: lv_where_22_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getWhereValueParserRuleCall_3_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_56);
                            lv_where_22_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"where",
                              								lv_where_22_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:3674:5: ( (lv_away_23_0= 'away' ) )
                            {
                            // InternalKim.g:3674:5: ( (lv_away_23_0= 'away' ) )
                            // InternalKim.g:3675:6: (lv_away_23_0= 'away' )
                            {
                            // InternalKim.g:3675:6: (lv_away_23_0= 'away' )
                            // InternalKim.g:3676:7: lv_away_23_0= 'away'
                            {
                            lv_away_23_0=(Token)match(input,68,FOLLOW_56); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_away_23_0, grammarAccess.getActionAccess().getAwayAwayKeyword_3_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "away", true, "away");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:3689:4: ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )?
                    int alt84=2;
                    alt84 = dfa84.predict(input);
                    switch (alt84) {
                        case 1 :
                            // InternalKim.g:3690:5: ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue )
                            {
                            // InternalKim.g:3694:5: (lv_condition_24_0= ruleValue )
                            // InternalKim.g:3695:6: lv_condition_24_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_3_2_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_24_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getActionRule());
                              						}
                              						set(
                              							current,
                              							"condition",
                              							lv_condition_24_0,
                              							"org.integratedmodelling.kim.Kim.Value");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAction"


    // $ANTLR start "entryRuleValueAssignment"
    // InternalKim.g:3717:1: entryRuleValueAssignment returns [EObject current=null] : iv_ruleValueAssignment= ruleValueAssignment EOF ;
    public final EObject entryRuleValueAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueAssignment = null;


        try {
            // InternalKim.g:3717:56: (iv_ruleValueAssignment= ruleValueAssignment EOF )
            // InternalKim.g:3718:2: iv_ruleValueAssignment= ruleValueAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueAssignment=ruleValueAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueAssignment"


    // $ANTLR start "ruleValueAssignment"
    // InternalKim.g:3724:1: ruleValueAssignment returns [EObject current=null] : ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) ) ;
    public final EObject ruleValueAssignment() throws RecognitionException {
        EObject current = null;

        Token lv_target_0_0=null;
        Token otherlv_1=null;
        EObject lv_assignedValue_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3730:2: ( ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) ) )
            // InternalKim.g:3731:2: ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) )
            {
            // InternalKim.g:3731:2: ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) )
            // InternalKim.g:3732:3: ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) )
            {
            // InternalKim.g:3732:3: ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==RULE_LOWERCASE_ID) ) {
                int LA87_1 = input.LA(2);

                if ( (LA87_1==36) ) {
                    alt87=1;
                }
            }
            else if ( (LA87_0==36) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalKim.g:3733:4: ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to'
                    {
                    // InternalKim.g:3733:4: ( (lv_target_0_0= RULE_LOWERCASE_ID ) )?
                    int alt86=2;
                    int LA86_0 = input.LA(1);

                    if ( (LA86_0==RULE_LOWERCASE_ID) ) {
                        alt86=1;
                    }
                    switch (alt86) {
                        case 1 :
                            // InternalKim.g:3734:5: (lv_target_0_0= RULE_LOWERCASE_ID )
                            {
                            // InternalKim.g:3734:5: (lv_target_0_0= RULE_LOWERCASE_ID )
                            // InternalKim.g:3735:6: lv_target_0_0= RULE_LOWERCASE_ID
                            {
                            lv_target_0_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_target_0_0, grammarAccess.getValueAssignmentAccess().getTargetLOWERCASE_IDTerminalRuleCall_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueAssignmentRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"target",
                              							lv_target_0_0,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_1=(Token)match(input,36,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getValueAssignmentAccess().getToKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:3756:3: ( (lv_assignedValue_2_0= ruleComputableValue ) )
            // InternalKim.g:3757:4: (lv_assignedValue_2_0= ruleComputableValue )
            {
            // InternalKim.g:3757:4: (lv_assignedValue_2_0= ruleComputableValue )
            // InternalKim.g:3758:5: lv_assignedValue_2_0= ruleComputableValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValueAssignmentAccess().getAssignedValueComputableValueParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_assignedValue_2_0=ruleComputableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValueAssignmentRule());
              					}
              					set(
              						current,
              						"assignedValue",
              						lv_assignedValue_2_0,
              						"org.integratedmodelling.kim.Kim.ComputableValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueAssignment"


    // $ANTLR start "entryRuleComputableValue"
    // InternalKim.g:3779:1: entryRuleComputableValue returns [EObject current=null] : iv_ruleComputableValue= ruleComputableValue EOF ;
    public final EObject entryRuleComputableValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComputableValue = null;


        try {
            // InternalKim.g:3779:56: (iv_ruleComputableValue= ruleComputableValue EOF )
            // InternalKim.g:3780:2: iv_ruleComputableValue= ruleComputableValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComputableValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComputableValue=ruleComputableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComputableValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComputableValue"


    // $ANTLR start "ruleComputableValue"
    // InternalKim.g:3786:1: ruleComputableValue returns [EObject current=null] : ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) ) ;
    public final EObject ruleComputableValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_2_0=null;
        Token otherlv_3=null;
        Token lv_language_4_1=null;
        Token lv_language_4_2=null;
        Token lv_language_4_3=null;
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;
        Token lv_null_7_0=null;
        EObject lv_literal_0_0 = null;

        EObject lv_function_1_0 = null;

        EObject lv_list_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3792:2: ( ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) ) )
            // InternalKim.g:3793:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )
            {
            // InternalKim.g:3793:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )
            int alt91=6;
            alt91 = dfa91.predict(input);
            switch (alt91) {
                case 1 :
                    // InternalKim.g:3794:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    {
                    // InternalKim.g:3794:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    // InternalKim.g:3795:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    {
                    // InternalKim.g:3795:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    // InternalKim.g:3796:5: lv_literal_0_0= ruleLiteralOrIdOrComma
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleLiteralOrIdOrComma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.integratedmodelling.kim.Kim.LiteralOrIdOrComma");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3814:3: ( (lv_function_1_0= ruleFunction ) )
                    {
                    // InternalKim.g:3814:3: ( (lv_function_1_0= ruleFunction ) )
                    // InternalKim.g:3815:4: (lv_function_1_0= ruleFunction )
                    {
                    // InternalKim.g:3815:4: (lv_function_1_0= ruleFunction )
                    // InternalKim.g:3816:5: lv_function_1_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getFunctionFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_1_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_1_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:3834:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? )
                    {
                    // InternalKim.g:3834:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? )
                    // InternalKim.g:3835:4: ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )?
                    {
                    // InternalKim.g:3835:4: ( (lv_expr_2_0= RULE_EXPR ) )
                    // InternalKim.g:3836:5: (lv_expr_2_0= RULE_EXPR )
                    {
                    // InternalKim.g:3836:5: (lv_expr_2_0= RULE_EXPR )
                    // InternalKim.g:3837:6: lv_expr_2_0= RULE_EXPR
                    {
                    lv_expr_2_0=(Token)match(input,RULE_EXPR,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_expr_2_0, grammarAccess.getComputableValueAccess().getExprEXPRTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getComputableValueRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"expr",
                      							lv_expr_2_0,
                      							"org.integratedmodelling.kim.Kim.EXPR");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3853:4: (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )?
                    int alt89=2;
                    int LA89_0 = input.LA(1);

                    if ( (LA89_0==48) ) {
                        alt89=1;
                    }
                    switch (alt89) {
                        case 1 :
                            // InternalKim.g:3854:5: otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) )
                            {
                            otherlv_3=(Token)match(input,48,FOLLOW_58); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getComputableValueAccess().getInKeyword_2_1_0());
                              				
                            }
                            // InternalKim.g:3858:5: ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) )
                            // InternalKim.g:3859:6: ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) )
                            {
                            // InternalKim.g:3859:6: ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) )
                            // InternalKim.g:3860:7: (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID )
                            {
                            // InternalKim.g:3860:7: (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID )
                            int alt88=3;
                            switch ( input.LA(1) ) {
                            case RULE_LOWERCASE_ID:
                                {
                                alt88=1;
                                }
                                break;
                            case RULE_UPPERCASE_ID:
                                {
                                alt88=2;
                                }
                                break;
                            case RULE_CAMELCASE_ID:
                                {
                                alt88=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 88, 0, input);

                                throw nvae;
                            }

                            switch (alt88) {
                                case 1 :
                                    // InternalKim.g:3861:8: lv_language_4_1= RULE_LOWERCASE_ID
                                    {
                                    lv_language_4_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_1, grammarAccess.getComputableValueAccess().getLanguageLOWERCASE_IDTerminalRuleCall_2_1_1_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_1,
                                      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3876:8: lv_language_4_2= RULE_UPPERCASE_ID
                                    {
                                    lv_language_4_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_2, grammarAccess.getComputableValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_2_1_1_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_2,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:3891:8: lv_language_4_3= RULE_CAMELCASE_ID
                                    {
                                    lv_language_4_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_3, grammarAccess.getComputableValueAccess().getLanguageCAMELCASE_IDTerminalRuleCall_2_1_1_0_2());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_3,
                                      									"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:3911:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:3911:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:3912:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:3912:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:3913:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:3913:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    int alt90=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt90=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt90=2;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt90=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 90, 0, input);

                        throw nvae;
                    }

                    switch (alt90) {
                        case 1 :
                            // InternalKim.g:3914:6: lv_id_5_1= RULE_LOWERCASE_ID
                            {
                            lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_1, grammarAccess.getComputableValueAccess().getIdLOWERCASE_IDTerminalRuleCall_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:3929:6: lv_id_5_2= RULE_UPPERCASE_ID
                            {
                            lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_2, grammarAccess.getComputableValueAccess().getIdUPPERCASE_IDTerminalRuleCall_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_2,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:3944:6: lv_id_5_3= RULE_CAMELCASE_ID
                            {
                            lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_3, grammarAccess.getComputableValueAccess().getIdCAMELCASE_IDTerminalRuleCall_3_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_3,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:3962:3: ( (lv_list_6_0= ruleList ) )
                    {
                    // InternalKim.g:3962:3: ( (lv_list_6_0= ruleList ) )
                    // InternalKim.g:3963:4: (lv_list_6_0= ruleList )
                    {
                    // InternalKim.g:3963:4: (lv_list_6_0= ruleList )
                    // InternalKim.g:3964:5: lv_list_6_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getListListParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_6_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_6_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:3982:3: ( (lv_null_7_0= 'unknown' ) )
                    {
                    // InternalKim.g:3982:3: ( (lv_null_7_0= 'unknown' ) )
                    // InternalKim.g:3983:4: (lv_null_7_0= 'unknown' )
                    {
                    // InternalKim.g:3983:4: (lv_null_7_0= 'unknown' )
                    // InternalKim.g:3984:5: lv_null_7_0= 'unknown'
                    {
                    lv_null_7_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_7_0, grammarAccess.getComputableValueAccess().getNullUnknownKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getComputableValueRule());
                      					}
                      					setWithLastConsumed(current, "null", true, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComputableValue"


    // $ANTLR start "entryRuleValueExecution"
    // InternalKim.g:4000:1: entryRuleValueExecution returns [EObject current=null] : iv_ruleValueExecution= ruleValueExecution EOF ;
    public final EObject entryRuleValueExecution() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueExecution = null;


        try {
            // InternalKim.g:4000:55: (iv_ruleValueExecution= ruleValueExecution EOF )
            // InternalKim.g:4001:2: iv_ruleValueExecution= ruleValueExecution EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueExecutionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueExecution=ruleValueExecution();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueExecution; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueExecution"


    // $ANTLR start "ruleValueExecution"
    // InternalKim.g:4007:1: ruleValueExecution returns [EObject current=null] : ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? ) ;
    public final EObject ruleValueExecution() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_target_2_0=null;
        EObject lv_execValue_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:4013:2: ( ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? ) )
            // InternalKim.g:4014:2: ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? )
            {
            // InternalKim.g:4014:2: ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? )
            // InternalKim.g:4015:3: ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )?
            {
            // InternalKim.g:4015:3: ( (lv_execValue_0_0= ruleExecutableValue ) )
            // InternalKim.g:4016:4: (lv_execValue_0_0= ruleExecutableValue )
            {
            // InternalKim.g:4016:4: (lv_execValue_0_0= ruleExecutableValue )
            // InternalKim.g:4017:5: lv_execValue_0_0= ruleExecutableValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValueExecutionAccess().getExecValueExecutableValueParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_59);
            lv_execValue_0_0=ruleExecutableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValueExecutionRule());
              					}
              					set(
              						current,
              						"execValue",
              						lv_execValue_0_0,
              						"org.integratedmodelling.kim.Kim.ExecutableValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:4034:3: (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==69) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalKim.g:4035:4: otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) )
                    {
                    otherlv_1=(Token)match(input,69,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getValueExecutionAccess().getForKeyword_1_0());
                      			
                    }
                    // InternalKim.g:4039:4: ( (lv_target_2_0= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:4040:5: (lv_target_2_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:4040:5: (lv_target_2_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:4041:6: lv_target_2_0= RULE_LOWERCASE_ID
                    {
                    lv_target_2_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_target_2_0, grammarAccess.getValueExecutionAccess().getTargetLOWERCASE_IDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getValueExecutionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"target",
                      							lv_target_2_0,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueExecution"


    // $ANTLR start "entryRuleExecutableValue"
    // InternalKim.g:4062:1: entryRuleExecutableValue returns [EObject current=null] : iv_ruleExecutableValue= ruleExecutableValue EOF ;
    public final EObject entryRuleExecutableValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExecutableValue = null;


        try {
            // InternalKim.g:4062:56: (iv_ruleExecutableValue= ruleExecutableValue EOF )
            // InternalKim.g:4063:2: iv_ruleExecutableValue= ruleExecutableValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExecutableValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExecutableValue=ruleExecutableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExecutableValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExecutableValue"


    // $ANTLR start "ruleExecutableValue"
    // InternalKim.g:4069:1: ruleExecutableValue returns [EObject current=null] : ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) ;
    public final EObject ruleExecutableValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_1_0=null;
        Token otherlv_2=null;
        Token lv_language_3_1=null;
        Token lv_language_3_2=null;
        Token lv_language_3_3=null;
        Token otherlv_5=null;
        Token lv_conditionNegated_6_0=null;
        EObject lv_function_0_0 = null;

        AntlrDatatypeRuleToken lv_urn_4_0 = null;

        EObject lv_condition_7_0 = null;



        	enterRule();

        try {
            // InternalKim.g:4075:2: ( ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) )
            // InternalKim.g:4076:2: ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? )
            {
            // InternalKim.g:4076:2: ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? )
            // InternalKim.g:4077:3: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )?
            {
            // InternalKim.g:4077:3: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) )
            int alt95=3;
            alt95 = dfa95.predict(input);
            switch (alt95) {
                case 1 :
                    // InternalKim.g:4078:4: ( (lv_function_0_0= ruleFunction ) )
                    {
                    // InternalKim.g:4078:4: ( (lv_function_0_0= ruleFunction ) )
                    // InternalKim.g:4079:5: (lv_function_0_0= ruleFunction )
                    {
                    // InternalKim.g:4079:5: (lv_function_0_0= ruleFunction )
                    // InternalKim.g:4080:6: lv_function_0_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExecutableValueAccess().getFunctionFunctionParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_61);
                    lv_function_0_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExecutableValueRule());
                      						}
                      						set(
                      							current,
                      							"function",
                      							lv_function_0_0,
                      							"org.integratedmodelling.kim.Kim.Function");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:4098:4: ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? )
                    {
                    // InternalKim.g:4098:4: ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? )
                    // InternalKim.g:4099:5: ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )?
                    {
                    // InternalKim.g:4099:5: ( (lv_expr_1_0= RULE_EXPR ) )
                    // InternalKim.g:4100:6: (lv_expr_1_0= RULE_EXPR )
                    {
                    // InternalKim.g:4100:6: (lv_expr_1_0= RULE_EXPR )
                    // InternalKim.g:4101:7: lv_expr_1_0= RULE_EXPR
                    {
                    lv_expr_1_0=(Token)match(input,RULE_EXPR,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_expr_1_0, grammarAccess.getExecutableValueAccess().getExprEXPRTerminalRuleCall_0_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getExecutableValueRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"expr",
                      								lv_expr_1_0,
                      								"org.integratedmodelling.kim.Kim.EXPR");
                      						
                    }

                    }


                    }

                    // InternalKim.g:4117:5: (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )?
                    int alt94=2;
                    int LA94_0 = input.LA(1);

                    if ( (LA94_0==48) ) {
                        alt94=1;
                    }
                    switch (alt94) {
                        case 1 :
                            // InternalKim.g:4118:6: otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) )
                            {
                            otherlv_2=(Token)match(input,48,FOLLOW_58); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getExecutableValueAccess().getInKeyword_0_1_1_0());
                              					
                            }
                            // InternalKim.g:4122:6: ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) )
                            // InternalKim.g:4123:7: ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) )
                            {
                            // InternalKim.g:4123:7: ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) )
                            // InternalKim.g:4124:8: (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID )
                            {
                            // InternalKim.g:4124:8: (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID )
                            int alt93=3;
                            switch ( input.LA(1) ) {
                            case RULE_LOWERCASE_ID:
                                {
                                alt93=1;
                                }
                                break;
                            case RULE_UPPERCASE_ID:
                                {
                                alt93=2;
                                }
                                break;
                            case RULE_CAMELCASE_ID:
                                {
                                alt93=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 93, 0, input);

                                throw nvae;
                            }

                            switch (alt93) {
                                case 1 :
                                    // InternalKim.g:4125:9: lv_language_3_1= RULE_LOWERCASE_ID
                                    {
                                    lv_language_3_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_61); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_language_3_1, grammarAccess.getExecutableValueAccess().getLanguageLOWERCASE_IDTerminalRuleCall_0_1_1_1_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getExecutableValueRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"language",
                                      										lv_language_3_1,
                                      										"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:4140:9: lv_language_3_2= RULE_UPPERCASE_ID
                                    {
                                    lv_language_3_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_61); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_language_3_2, grammarAccess.getExecutableValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_0_1_1_1_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getExecutableValueRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"language",
                                      										lv_language_3_2,
                                      										"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      								
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:4155:9: lv_language_3_3= RULE_CAMELCASE_ID
                                    {
                                    lv_language_3_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_61); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_language_3_3, grammarAccess.getExecutableValueAccess().getLanguageCAMELCASE_IDTerminalRuleCall_0_1_1_1_0_2());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getExecutableValueRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"language",
                                      										lv_language_3_3,
                                      										"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:4175:4: ( (lv_urn_4_0= ruleUrnId ) )
                    {
                    // InternalKim.g:4175:4: ( (lv_urn_4_0= ruleUrnId ) )
                    // InternalKim.g:4176:5: (lv_urn_4_0= ruleUrnId )
                    {
                    // InternalKim.g:4176:5: (lv_urn_4_0= ruleUrnId )
                    // InternalKim.g:4177:6: lv_urn_4_0= ruleUrnId
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExecutableValueAccess().getUrnUrnIdParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_61);
                    lv_urn_4_0=ruleUrnId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExecutableValueRule());
                      						}
                      						set(
                      							current,
                      							"urn",
                      							lv_urn_4_0,
                      							"org.integratedmodelling.kim.Kim.UrnId");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:4195:3: ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )?
            int alt97=2;
            alt97 = dfa97.predict(input);
            switch (alt97) {
                case 1 :
                    // InternalKim.g:4196:4: (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) )
                    {
                    // InternalKim.g:4196:4: (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) )
                    int alt96=2;
                    int LA96_0 = input.LA(1);

                    if ( (LA96_0==44) ) {
                        alt96=1;
                    }
                    else if ( (LA96_0==45) ) {
                        alt96=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 96, 0, input);

                        throw nvae;
                    }
                    switch (alt96) {
                        case 1 :
                            // InternalKim.g:4197:5: otherlv_5= 'if'
                            {
                            otherlv_5=(Token)match(input,44,FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_5, grammarAccess.getExecutableValueAccess().getIfKeyword_1_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:4202:5: ( (lv_conditionNegated_6_0= 'unless' ) )
                            {
                            // InternalKim.g:4202:5: ( (lv_conditionNegated_6_0= 'unless' ) )
                            // InternalKim.g:4203:6: (lv_conditionNegated_6_0= 'unless' )
                            {
                            // InternalKim.g:4203:6: (lv_conditionNegated_6_0= 'unless' )
                            // InternalKim.g:4204:7: lv_conditionNegated_6_0= 'unless'
                            {
                            lv_conditionNegated_6_0=(Token)match(input,45,FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_conditionNegated_6_0, grammarAccess.getExecutableValueAccess().getConditionNegatedUnlessKeyword_1_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getExecutableValueRule());
                              							}
                              							setWithLastConsumed(current, "conditionNegated", true, "unless");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:4217:4: ( (lv_condition_7_0= ruleValue ) )
                    // InternalKim.g:4218:5: (lv_condition_7_0= ruleValue )
                    {
                    // InternalKim.g:4218:5: (lv_condition_7_0= ruleValue )
                    // InternalKim.g:4219:6: lv_condition_7_0= ruleValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExecutableValueAccess().getConditionValueParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_condition_7_0=ruleValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExecutableValueRule());
                      						}
                      						set(
                      							current,
                      							"condition",
                      							lv_condition_7_0,
                      							"org.integratedmodelling.kim.Kim.Value");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExecutableValue"


    // $ANTLR start "entryRuleMODEL_TYPE"
    // InternalKim.g:4241:1: entryRuleMODEL_TYPE returns [String current=null] : iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF ;
    public final String entryRuleMODEL_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMODEL_TYPE = null;


        try {
            // InternalKim.g:4241:50: (iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF )
            // InternalKim.g:4242:2: iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMODEL_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMODEL_TYPE=ruleMODEL_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMODEL_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMODEL_TYPE"


    // $ANTLR start "ruleMODEL_TYPE"
    // InternalKim.g:4248:1: ruleMODEL_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'model' | kw= 'learn' | kw= 'number' | kw= 'object' | kw= 'text' | kw= 'boolean' ) ;
    public final AntlrDatatypeRuleToken ruleMODEL_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:4254:2: ( (kw= 'model' | kw= 'learn' | kw= 'number' | kw= 'object' | kw= 'text' | kw= 'boolean' ) )
            // InternalKim.g:4255:2: (kw= 'model' | kw= 'learn' | kw= 'number' | kw= 'object' | kw= 'text' | kw= 'boolean' )
            {
            // InternalKim.g:4255:2: (kw= 'model' | kw= 'learn' | kw= 'number' | kw= 'object' | kw= 'text' | kw= 'boolean' )
            int alt98=6;
            switch ( input.LA(1) ) {
            case 70:
                {
                alt98=1;
                }
                break;
            case 71:
                {
                alt98=2;
                }
                break;
            case 72:
                {
                alt98=3;
                }
                break;
            case 73:
                {
                alt98=4;
                }
                break;
            case 74:
                {
                alt98=5;
                }
                break;
            case 75:
                {
                alt98=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 98, 0, input);

                throw nvae;
            }

            switch (alt98) {
                case 1 :
                    // InternalKim.g:4256:3: kw= 'model'
                    {
                    kw=(Token)match(input,70,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getModelKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:4262:3: kw= 'learn'
                    {
                    kw=(Token)match(input,71,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getLearnKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:4268:3: kw= 'number'
                    {
                    kw=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getNumberKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:4274:3: kw= 'object'
                    {
                    kw=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getObjectKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:4280:3: kw= 'text'
                    {
                    kw=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getTextKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:4286:3: kw= 'boolean'
                    {
                    kw=(Token)match(input,75,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getBooleanKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMODEL_TYPE"


    // $ANTLR start "entryRuleVALUE_OPERATOR"
    // InternalKim.g:4295:1: entryRuleVALUE_OPERATOR returns [String current=null] : iv_ruleVALUE_OPERATOR= ruleVALUE_OPERATOR EOF ;
    public final String entryRuleVALUE_OPERATOR() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleVALUE_OPERATOR = null;


        try {
            // InternalKim.g:4295:54: (iv_ruleVALUE_OPERATOR= ruleVALUE_OPERATOR EOF )
            // InternalKim.g:4296:2: iv_ruleVALUE_OPERATOR= ruleVALUE_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVALUE_OPERATORRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVALUE_OPERATOR=ruleVALUE_OPERATOR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVALUE_OPERATOR.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVALUE_OPERATOR"


    // $ANTLR start "ruleVALUE_OPERATOR"
    // InternalKim.g:4302:1: ruleVALUE_OPERATOR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '>' | kw= '>=' | kw= '<=' | kw= '<' | kw= 'where' | kw= '==' | kw= '=' | kw= 'without' | kw= '!=' | kw= 'plus' | kw= 'minus' | kw= 'times' | kw= 'over' | kw= 'by' ) ;
    public final AntlrDatatypeRuleToken ruleVALUE_OPERATOR() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:4308:2: ( (kw= '>' | kw= '>=' | kw= '<=' | kw= '<' | kw= 'where' | kw= '==' | kw= '=' | kw= 'without' | kw= '!=' | kw= 'plus' | kw= 'minus' | kw= 'times' | kw= 'over' | kw= 'by' ) )
            // InternalKim.g:4309:2: (kw= '>' | kw= '>=' | kw= '<=' | kw= '<' | kw= 'where' | kw= '==' | kw= '=' | kw= 'without' | kw= '!=' | kw= 'plus' | kw= 'minus' | kw= 'times' | kw= 'over' | kw= 'by' )
            {
            // InternalKim.g:4309:2: (kw= '>' | kw= '>=' | kw= '<=' | kw= '<' | kw= 'where' | kw= '==' | kw= '=' | kw= 'without' | kw= '!=' | kw= 'plus' | kw= 'minus' | kw= 'times' | kw= 'over' | kw= 'by' )
            int alt99=14;
            switch ( input.LA(1) ) {
            case 76:
                {
                alt99=1;
                }
                break;
            case 77:
                {
                alt99=2;
                }
                break;
            case 78:
                {
                alt99=3;
                }
                break;
            case 79:
                {
                alt99=4;
                }
                break;
            case 80:
                {
                alt99=5;
                }
                break;
            case 81:
                {
                alt99=6;
                }
                break;
            case 82:
                {
                alt99=7;
                }
                break;
            case 83:
                {
                alt99=8;
                }
                break;
            case 84:
                {
                alt99=9;
                }
                break;
            case 85:
                {
                alt99=10;
                }
                break;
            case 86:
                {
                alt99=11;
                }
                break;
            case 87:
                {
                alt99=12;
                }
                break;
            case 55:
                {
                alt99=13;
                }
                break;
            case 88:
                {
                alt99=14;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 99, 0, input);

                throw nvae;
            }

            switch (alt99) {
                case 1 :
                    // InternalKim.g:4310:3: kw= '>'
                    {
                    kw=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getGreaterThanSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:4316:3: kw= '>='
                    {
                    kw=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getGreaterThanSignEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:4322:3: kw= '<='
                    {
                    kw=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getLessThanSignEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:4328:3: kw= '<'
                    {
                    kw=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getLessThanSignKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:4334:3: kw= 'where'
                    {
                    kw=(Token)match(input,80,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getWhereKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:4340:3: kw= '=='
                    {
                    kw=(Token)match(input,81,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getEqualsSignEqualsSignKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:4346:3: kw= '='
                    {
                    kw=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getEqualsSignKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:4352:3: kw= 'without'
                    {
                    kw=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getWithoutKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:4358:3: kw= '!='
                    {
                    kw=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getExclamationMarkEqualsSignKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:4364:3: kw= 'plus'
                    {
                    kw=(Token)match(input,85,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getPlusKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalKim.g:4370:3: kw= 'minus'
                    {
                    kw=(Token)match(input,86,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getMinusKeyword_10());
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalKim.g:4376:3: kw= 'times'
                    {
                    kw=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getTimesKeyword_11());
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalKim.g:4382:3: kw= 'over'
                    {
                    kw=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getOverKeyword_12());
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalKim.g:4388:3: kw= 'by'
                    {
                    kw=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getByKeyword_13());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVALUE_OPERATOR"


    // $ANTLR start "entryRuleNamespace"
    // InternalKim.g:4397:1: entryRuleNamespace returns [EObject current=null] : iv_ruleNamespace= ruleNamespace EOF ;
    public final EObject entryRuleNamespace() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamespace = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7()
        	);

        try {
            // InternalKim.g:4403:2: (iv_ruleNamespace= ruleNamespace EOF )
            // InternalKim.g:4404:2: iv_ruleNamespace= ruleNamespace EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespace=ruleNamespace();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespace; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNamespace"


    // $ANTLR start "ruleNamespace"
    // InternalKim.g:4413:1: ruleNamespace returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMetadata ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMetadata ) ) )? otherlv_50= ';' ) ;
    public final EObject ruleNamespace() throws RecognitionException {
        EObject current = null;

        Token lv_projectPrivate_3_0=null;
        Token lv_private_4_0=null;
        Token lv_inactive_5_0=null;
        Token otherlv_6=null;
        Token lv_scenario_7_0=null;
        Token lv_worldviewBound_8_0=null;
        Token lv_docstring_10_0=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token lv_language_14_0=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_rootDomain_29_0=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_42=null;
        Token otherlv_44=null;
        Token otherlv_46=null;
        Token otherlv_48=null;
        Token otherlv_50=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_imported_16_0 = null;

        EObject lv_imported_18_0 = null;

        EObject lv_owlImports_20_0 = null;

        EObject lv_owlImports_22_0 = null;

        EObject lv_coverage_24_0 = null;

        EObject lv_coverage_26_0 = null;

        EObject lv_domainConcept_30_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_33_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_35_0 = null;

        AntlrDatatypeRuleToken lv_version_37_0 = null;

        AntlrDatatypeRuleToken lv_lookupNamespace_41_0 = null;

        AntlrDatatypeRuleToken lv_blacklistNamespace_43_0 = null;

        EObject lv_weights_45_0 = null;

        EObject lv_parameters_47_0 = null;

        EObject lv_metadata_49_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7()
        	);

        try {
            // InternalKim.g:4424:2: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMetadata ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMetadata ) ) )? otherlv_50= ';' ) )
            // InternalKim.g:4425:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMetadata ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMetadata ) ) )? otherlv_50= ';' )
            {
            // InternalKim.g:4425:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMetadata ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMetadata ) ) )? otherlv_50= ';' )
            // InternalKim.g:4426:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMetadata ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMetadata ) ) )? otherlv_50= ';'
            {
            // InternalKim.g:4426:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==RULE_ANNOTATION_ID) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // InternalKim.g:4427:4: ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )*
                    {
                    // InternalKim.g:4427:4: ( (lv_annotations_0_0= ruleAnnotation ) )
                    // InternalKim.g:4428:5: (lv_annotations_0_0= ruleAnnotation )
                    {
                    // InternalKim.g:4428:5: (lv_annotations_0_0= ruleAnnotation )
                    // InternalKim.g:4429:6: lv_annotations_0_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_63);
                    lv_annotations_0_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						add(
                      							current,
                      							"annotations",
                      							lv_annotations_0_0,
                      							"org.integratedmodelling.kim.Kim.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:4446:4: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop100:
                    do {
                        int alt100=2;
                        int LA100_0 = input.LA(1);

                        if ( (LA100_0==RULE_ANNOTATION_ID) ) {
                            alt100=1;
                        }


                        switch (alt100) {
                    	case 1 :
                    	    // InternalKim.g:4447:5: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalKim.g:4447:5: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalKim.g:4448:6: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getNamespaceAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_63);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_1_0,
                    	      							"org.integratedmodelling.kim.Kim.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop100;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:4466:3: ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) )
            // InternalKim.g:4467:4: ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) )
            {
            // InternalKim.g:4467:4: ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) )
            // InternalKim.g:4468:5: ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());
            // InternalKim.g:4471:5: ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* )
            // InternalKim.g:4472:6: ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )*
            {
            // InternalKim.g:4472:6: ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )*
            loop103:
            do {
                int alt103=3;
                int LA103_0 = input.LA(1);

                if ( LA103_0 == 22 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
                    alt103=1;
                }
                else if ( LA103_0 == 23 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
                    alt103=1;
                }
                else if ( LA103_0 == 21 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
                    alt103=2;
                }


                switch (alt103) {
            	case 1 :
            	    // InternalKim.g:4473:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) )
            	    {
            	    // InternalKim.g:4473:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) )
            	    // InternalKim.g:4474:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:4474:106: ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) )
            	    // InternalKim.g:4475:6: ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:4478:9: ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) )
            	    // InternalKim.g:4478:10: {...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4478:19: ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) )
            	    // InternalKim.g:4478:20: ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) )
            	    {
            	    // InternalKim.g:4478:20: ( (lv_projectPrivate_3_0= 'project' ) )?
            	    int alt102=2;
            	    int LA102_0 = input.LA(1);

            	    if ( (LA102_0==22) ) {
            	        alt102=1;
            	    }
            	    switch (alt102) {
            	        case 1 :
            	            // InternalKim.g:4479:10: (lv_projectPrivate_3_0= 'project' )
            	            {
            	            // InternalKim.g:4479:10: (lv_projectPrivate_3_0= 'project' )
            	            // InternalKim.g:4480:11: lv_projectPrivate_3_0= 'project'
            	            {
            	            lv_projectPrivate_3_0=(Token)match(input,22,FOLLOW_7); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_projectPrivate_3_0, grammarAccess.getNamespaceAccess().getProjectPrivateProjectKeyword_1_0_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getNamespaceRule());
            	              											}
            	              											setWithLastConsumed(current, "projectPrivate", true, "project");
            	              										
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:4492:9: ( (lv_private_4_0= 'private' ) )
            	    // InternalKim.g:4493:10: (lv_private_4_0= 'private' )
            	    {
            	    // InternalKim.g:4493:10: (lv_private_4_0= 'private' )
            	    // InternalKim.g:4494:11: lv_private_4_0= 'private'
            	    {
            	    lv_private_4_0=(Token)match(input,23,FOLLOW_64); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_private_4_0, grammarAccess.getNamespaceAccess().getPrivatePrivateKeyword_1_0_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getNamespaceRule());
            	      											}
            	      											setWithLastConsumed(current, "private", true, "private");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:4512:4: ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) )
            	    {
            	    // InternalKim.g:4512:4: ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) )
            	    // InternalKim.g:4513:5: {...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:4513:106: ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) )
            	    // InternalKim.g:4514:6: ({...}? => ( (lv_inactive_5_0= 'void' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:4517:9: ({...}? => ( (lv_inactive_5_0= 'void' ) ) )
            	    // InternalKim.g:4517:10: {...}? => ( (lv_inactive_5_0= 'void' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4517:19: ( (lv_inactive_5_0= 'void' ) )
            	    // InternalKim.g:4517:20: (lv_inactive_5_0= 'void' )
            	    {
            	    // InternalKim.g:4517:20: (lv_inactive_5_0= 'void' )
            	    // InternalKim.g:4518:10: lv_inactive_5_0= 'void'
            	    {
            	    lv_inactive_5_0=(Token)match(input,21,FOLLOW_64); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_inactive_5_0, grammarAccess.getNamespaceAccess().getInactiveVoidKeyword_1_1_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getNamespaceRule());
            	      										}
            	      										setWithLastConsumed(current, "inactive", true, "void");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop103;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            }

            // InternalKim.g:4542:3: (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) )
            int alt104=3;
            switch ( input.LA(1) ) {
            case 89:
                {
                alt104=1;
                }
                break;
            case 90:
                {
                alt104=2;
                }
                break;
            case 91:
                {
                alt104=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 104, 0, input);

                throw nvae;
            }

            switch (alt104) {
                case 1 :
                    // InternalKim.g:4543:4: otherlv_6= 'namespace'
                    {
                    otherlv_6=(Token)match(input,89,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getNamespaceAccess().getNamespaceKeyword_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:4548:4: ( (lv_scenario_7_0= 'scenario' ) )
                    {
                    // InternalKim.g:4548:4: ( (lv_scenario_7_0= 'scenario' ) )
                    // InternalKim.g:4549:5: (lv_scenario_7_0= 'scenario' )
                    {
                    // InternalKim.g:4549:5: (lv_scenario_7_0= 'scenario' )
                    // InternalKim.g:4550:6: lv_scenario_7_0= 'scenario'
                    {
                    lv_scenario_7_0=(Token)match(input,90,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_scenario_7_0, grammarAccess.getNamespaceAccess().getScenarioScenarioKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamespaceRule());
                      						}
                      						setWithLastConsumed(current, "scenario", true, "scenario");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:4563:4: ( (lv_worldviewBound_8_0= 'worldview' ) )
                    {
                    // InternalKim.g:4563:4: ( (lv_worldviewBound_8_0= 'worldview' ) )
                    // InternalKim.g:4564:5: (lv_worldviewBound_8_0= 'worldview' )
                    {
                    // InternalKim.g:4564:5: (lv_worldviewBound_8_0= 'worldview' )
                    // InternalKim.g:4565:6: lv_worldviewBound_8_0= 'worldview'
                    {
                    lv_worldviewBound_8_0=(Token)match(input,91,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_worldviewBound_8_0, grammarAccess.getNamespaceAccess().getWorldviewBoundWorldviewKeyword_2_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamespaceRule());
                      						}
                      						setWithLastConsumed(current, "worldviewBound", true, "worldview");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:4578:3: ( (lv_name_9_0= rulePathName ) )
            // InternalKim.g:4579:4: (lv_name_9_0= rulePathName )
            {
            // InternalKim.g:4579:4: (lv_name_9_0= rulePathName )
            // InternalKim.g:4580:5: lv_name_9_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamespaceAccess().getNamePathNameParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_65);
            lv_name_9_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamespaceRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_9_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:4597:3: ( (lv_docstring_10_0= RULE_STRING ) )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==RULE_STRING) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalKim.g:4598:4: (lv_docstring_10_0= RULE_STRING )
                    {
                    // InternalKim.g:4598:4: (lv_docstring_10_0= RULE_STRING )
                    // InternalKim.g:4599:5: lv_docstring_10_0= RULE_STRING
                    {
                    lv_docstring_10_0=(Token)match(input,RULE_STRING,FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_docstring_10_0, grammarAccess.getNamespaceAccess().getDocstringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getNamespaceRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"docstring",
                      						lv_docstring_10_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:4615:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) )
            // InternalKim.g:4616:4: ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:4616:4: ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) )
            // InternalKim.g:4617:5: ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());
            // InternalKim.g:4620:5: ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* )
            // InternalKim.g:4621:6: ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*
            {
            // InternalKim.g:4621:6: ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*
            loop115:
            do {
                int alt115=9;
                alt115 = dfa115.predict(input);
                switch (alt115) {
            	case 1 :
            	    // InternalKim.g:4622:4: ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) )
            	    {
            	    // InternalKim.g:4622:4: ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) )
            	    // InternalKim.g:4623:5: {...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0)");
            	    }
            	    // InternalKim.g:4623:106: ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) )
            	    // InternalKim.g:4624:6: ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0);
            	    // InternalKim.g:4627:9: ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) )
            	    // InternalKim.g:4627:10: {...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4627:19: (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) )
            	    // InternalKim.g:4627:20: otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) )
            	    {
            	    otherlv_12=(Token)match(input,31,FOLLOW_67); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_12, grammarAccess.getNamespaceAccess().getUsingKeyword_5_0_0());
            	      								
            	    }
            	    otherlv_13=(Token)match(input,92,FOLLOW_10); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_13, grammarAccess.getNamespaceAccess().getLanguageKeyword_5_0_1());
            	      								
            	    }
            	    // InternalKim.g:4635:9: ( (lv_language_14_0= RULE_UPPERCASE_ID ) )
            	    // InternalKim.g:4636:10: (lv_language_14_0= RULE_UPPERCASE_ID )
            	    {
            	    // InternalKim.g:4636:10: (lv_language_14_0= RULE_UPPERCASE_ID )
            	    // InternalKim.g:4637:11: lv_language_14_0= RULE_UPPERCASE_ID
            	    {
            	    lv_language_14_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_66); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_language_14_0, grammarAccess.getNamespaceAccess().getLanguageUPPERCASE_IDTerminalRuleCall_5_0_2_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getNamespaceRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"language",
            	      												lv_language_14_0,
            	      												"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:4659:4: ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:4659:4: ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) )
            	    // InternalKim.g:4660:5: {...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1)");
            	    }
            	    // InternalKim.g:4660:106: ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) )
            	    // InternalKim.g:4661:6: ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1);
            	    // InternalKim.g:4664:9: ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) )
            	    // InternalKim.g:4664:10: {...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4664:19: (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* )
            	    // InternalKim.g:4664:20: otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )*
            	    {
            	    otherlv_15=(Token)match(input,31,FOLLOW_68); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_15, grammarAccess.getNamespaceAccess().getUsingKeyword_5_1_0());
            	      								
            	    }
            	    // InternalKim.g:4668:9: ( (lv_imported_16_0= ruleImport ) )
            	    // InternalKim.g:4669:10: (lv_imported_16_0= ruleImport )
            	    {
            	    // InternalKim.g:4669:10: (lv_imported_16_0= ruleImport )
            	    // InternalKim.g:4670:11: lv_imported_16_0= ruleImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_69);
            	    lv_imported_16_0=ruleImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"imported",
            	      												lv_imported_16_0,
            	      												"org.integratedmodelling.kim.Kim.Import");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4687:9: ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )*
            	    loop106:
            	    do {
            	        int alt106=2;
            	        int LA106_0 = input.LA(1);

            	        if ( (LA106_0==27) ) {
            	            alt106=1;
            	        }


            	        switch (alt106) {
            	    	case 1 :
            	    	    // InternalKim.g:4688:10: ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) )
            	    	    {
            	    	    // InternalKim.g:4688:10: ( ( ',' )=>otherlv_17= ',' )
            	    	    // InternalKim.g:4689:11: ( ',' )=>otherlv_17= ','
            	    	    {
            	    	    otherlv_17=(Token)match(input,27,FOLLOW_68); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_17, grammarAccess.getNamespaceAccess().getCommaKeyword_5_1_2_0());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:4695:10: ( (lv_imported_18_0= ruleImport ) )
            	    	    // InternalKim.g:4696:11: (lv_imported_18_0= ruleImport )
            	    	    {
            	    	    // InternalKim.g:4696:11: (lv_imported_18_0= ruleImport )
            	    	    // InternalKim.g:4697:12: lv_imported_18_0= ruleImport
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_1_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_69);
            	    	    lv_imported_18_0=ruleImport();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"imported",
            	    	      													lv_imported_18_0,
            	    	      													"org.integratedmodelling.kim.Kim.Import");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop106;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:4721:4: ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:4721:4: ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) )
            	    // InternalKim.g:4722:5: {...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2)");
            	    }
            	    // InternalKim.g:4722:106: ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) )
            	    // InternalKim.g:4723:6: ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2);
            	    // InternalKim.g:4726:9: ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) )
            	    // InternalKim.g:4726:10: {...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4726:19: (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* )
            	    // InternalKim.g:4726:20: otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )*
            	    {
            	    otherlv_19=(Token)match(input,93,FOLLOW_70); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_19, grammarAccess.getNamespaceAccess().getImportsKeyword_5_2_0());
            	      								
            	    }
            	    // InternalKim.g:4730:9: ( (lv_owlImports_20_0= ruleOwlImport ) )
            	    // InternalKim.g:4731:10: (lv_owlImports_20_0= ruleOwlImport )
            	    {
            	    // InternalKim.g:4731:10: (lv_owlImports_20_0= ruleOwlImport )
            	    // InternalKim.g:4732:11: lv_owlImports_20_0= ruleOwlImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_69);
            	    lv_owlImports_20_0=ruleOwlImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"owlImports",
            	      												lv_owlImports_20_0,
            	      												"org.integratedmodelling.kim.Kim.OwlImport");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4749:9: (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )*
            	    loop107:
            	    do {
            	        int alt107=2;
            	        int LA107_0 = input.LA(1);

            	        if ( (LA107_0==27) ) {
            	            alt107=1;
            	        }


            	        switch (alt107) {
            	    	case 1 :
            	    	    // InternalKim.g:4750:10: otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) )
            	    	    {
            	    	    otherlv_21=(Token)match(input,27,FOLLOW_70); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_21, grammarAccess.getNamespaceAccess().getCommaKeyword_5_2_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:4754:10: ( (lv_owlImports_22_0= ruleOwlImport ) )
            	    	    // InternalKim.g:4755:11: (lv_owlImports_22_0= ruleOwlImport )
            	    	    {
            	    	    // InternalKim.g:4755:11: (lv_owlImports_22_0= ruleOwlImport )
            	    	    // InternalKim.g:4756:12: lv_owlImports_22_0= ruleOwlImport
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_2_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_69);
            	    	    lv_owlImports_22_0=ruleOwlImport();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"owlImports",
            	    	      													lv_owlImports_22_0,
            	    	      													"org.integratedmodelling.kim.Kim.OwlImport");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop107;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:4780:4: ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:4780:4: ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) )
            	    // InternalKim.g:4781:5: {...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3)");
            	    }
            	    // InternalKim.g:4781:106: ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) )
            	    // InternalKim.g:4782:6: ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3);
            	    // InternalKim.g:4785:9: ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) )
            	    // InternalKim.g:4785:10: {...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4785:19: (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* )
            	    // InternalKim.g:4785:20: otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )*
            	    {
            	    otherlv_23=(Token)match(input,94,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_23, grammarAccess.getNamespaceAccess().getCoveringKeyword_5_3_0());
            	      								
            	    }
            	    // InternalKim.g:4789:9: ( (lv_coverage_24_0= ruleFunction ) )
            	    // InternalKim.g:4790:10: (lv_coverage_24_0= ruleFunction )
            	    {
            	    // InternalKim.g:4790:10: (lv_coverage_24_0= ruleFunction )
            	    // InternalKim.g:4791:11: lv_coverage_24_0= ruleFunction
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_3_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_69);
            	    lv_coverage_24_0=ruleFunction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"coverage",
            	      												lv_coverage_24_0,
            	      												"org.integratedmodelling.kim.Kim.Function");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4808:9: ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )*
            	    loop108:
            	    do {
            	        int alt108=2;
            	        int LA108_0 = input.LA(1);

            	        if ( (LA108_0==27) ) {
            	            alt108=1;
            	        }


            	        switch (alt108) {
            	    	case 1 :
            	    	    // InternalKim.g:4809:10: ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) )
            	    	    {
            	    	    // InternalKim.g:4809:10: ( ( ',' )=>otherlv_25= ',' )
            	    	    // InternalKim.g:4810:11: ( ',' )=>otherlv_25= ','
            	    	    {
            	    	    otherlv_25=(Token)match(input,27,FOLLOW_26); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_25, grammarAccess.getNamespaceAccess().getCommaKeyword_5_3_2_0());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:4816:10: ( (lv_coverage_26_0= ruleFunction ) )
            	    	    // InternalKim.g:4817:11: (lv_coverage_26_0= ruleFunction )
            	    	    {
            	    	    // InternalKim.g:4817:11: (lv_coverage_26_0= ruleFunction )
            	    	    // InternalKim.g:4818:12: lv_coverage_26_0= ruleFunction
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_3_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_69);
            	    	    lv_coverage_26_0=ruleFunction();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"coverage",
            	    	      													lv_coverage_26_0,
            	    	      													"org.integratedmodelling.kim.Kim.Function");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop108;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:4842:4: ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:4842:4: ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) )
            	    // InternalKim.g:4843:5: {...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4)");
            	    }
            	    // InternalKim.g:4843:106: ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:4844:6: ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4);
            	    // InternalKim.g:4847:9: ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:4847:10: {...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4847:19: (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) )
            	    // InternalKim.g:4847:20: otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) )
            	    {
            	    otherlv_27=(Token)match(input,48,FOLLOW_71); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getNamespaceAccess().getInKeyword_5_4_0());
            	      								
            	    }
            	    otherlv_28=(Token)match(input,95,FOLLOW_72); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_28, grammarAccess.getNamespaceAccess().getDomainKeyword_5_4_1());
            	      								
            	    }
            	    // InternalKim.g:4855:9: ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) )
            	    int alt109=2;
            	    int LA109_0 = input.LA(1);

            	    if ( (LA109_0==96) ) {
            	        alt109=1;
            	    }
            	    else if ( ((LA109_0>=RULE_UPPERCASE_ID && LA109_0<=RULE_LOWERCASE_ID)||LA109_0==RULE_CAMELCASE_ID||LA109_0==RULE_LOWERCASE_DASHID||LA109_0==38||(LA109_0>=128 && LA109_0<=129)||(LA109_0>=137 && LA109_0<=138)||(LA109_0>=140 && LA109_0<=156)) ) {
            	        alt109=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 109, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt109) {
            	        case 1 :
            	            // InternalKim.g:4856:10: ( (lv_rootDomain_29_0= 'root' ) )
            	            {
            	            // InternalKim.g:4856:10: ( (lv_rootDomain_29_0= 'root' ) )
            	            // InternalKim.g:4857:11: (lv_rootDomain_29_0= 'root' )
            	            {
            	            // InternalKim.g:4857:11: (lv_rootDomain_29_0= 'root' )
            	            // InternalKim.g:4858:12: lv_rootDomain_29_0= 'root'
            	            {
            	            lv_rootDomain_29_0=(Token)match(input,96,FOLLOW_66); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_rootDomain_29_0, grammarAccess.getNamespaceAccess().getRootDomainRootKeyword_5_4_2_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getNamespaceRule());
            	              												}
            	              												setWithLastConsumed(current, "rootDomain", true, "root");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:4871:10: ( (lv_domainConcept_30_0= ruleConcept ) )
            	            {
            	            // InternalKim.g:4871:10: ( (lv_domainConcept_30_0= ruleConcept ) )
            	            // InternalKim.g:4872:11: (lv_domainConcept_30_0= ruleConcept )
            	            {
            	            // InternalKim.g:4872:11: (lv_domainConcept_30_0= ruleConcept )
            	            // InternalKim.g:4873:12: lv_domainConcept_30_0= ruleConcept
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getNamespaceAccess().getDomainConceptConceptParserRuleCall_5_4_2_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_66);
            	            lv_domainConcept_30_0=ruleConcept();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	              												}
            	              												set(
            	              													current,
            	              													"domainConcept",
            	              													lv_domainConcept_30_0,
            	              													"org.integratedmodelling.kim.Kim.Concept");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:4897:4: ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:4897:4: ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) )
            	    // InternalKim.g:4898:5: {...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5)");
            	    }
            	    // InternalKim.g:4898:106: ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) )
            	    // InternalKim.g:4899:6: ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5);
            	    // InternalKim.g:4902:9: ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) )
            	    // InternalKim.g:4902:10: {...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4902:19: (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) )
            	    // InternalKim.g:4902:20: otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* )
            	    {
            	    otherlv_31=(Token)match(input,97,FOLLOW_73); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_31, grammarAccess.getNamespaceAccess().getDisjointKeyword_5_5_0());
            	      								
            	    }
            	    otherlv_32=(Token)match(input,98,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_32, grammarAccess.getNamespaceAccess().getWithKeyword_5_5_1());
            	      								
            	    }
            	    // InternalKim.g:4910:9: ( (lv_disjointNamespaces_33_0= rulePathName ) )
            	    // InternalKim.g:4911:10: (lv_disjointNamespaces_33_0= rulePathName )
            	    {
            	    // InternalKim.g:4911:10: (lv_disjointNamespaces_33_0= rulePathName )
            	    // InternalKim.g:4912:11: lv_disjointNamespaces_33_0= rulePathName
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_5_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_disjointNamespaces_33_0=rulePathName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"disjointNamespaces",
            	      												lv_disjointNamespaces_33_0,
            	      												"org.integratedmodelling.kim.Kim.PathName");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4929:9: (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* )
            	    // InternalKim.g:4930:10: otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )*
            	    {
            	    otherlv_34=(Token)match(input,27,FOLLOW_75); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_34, grammarAccess.getNamespaceAccess().getCommaKeyword_5_5_3_0());
            	      									
            	    }
            	    // InternalKim.g:4934:10: ( (lv_disjointNamespaces_35_0= rulePathName ) )*
            	    loop110:
            	    do {
            	        int alt110=2;
            	        int LA110_0 = input.LA(1);

            	        if ( ((LA110_0>=RULE_UPPERCASE_ID && LA110_0<=RULE_LOWERCASE_ID)||LA110_0==RULE_LOWERCASE_DASHID) ) {
            	            alt110=1;
            	        }


            	        switch (alt110) {
            	    	case 1 :
            	    	    // InternalKim.g:4935:11: (lv_disjointNamespaces_35_0= rulePathName )
            	    	    {
            	    	    // InternalKim.g:4935:11: (lv_disjointNamespaces_35_0= rulePathName )
            	    	    // InternalKim.g:4936:12: lv_disjointNamespaces_35_0= rulePathName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_5_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_75);
            	    	    lv_disjointNamespaces_35_0=rulePathName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"disjointNamespaces",
            	    	      													lv_disjointNamespaces_35_0,
            	    	      													"org.integratedmodelling.kim.Kim.PathName");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop110;
            	        }
            	    } while (true);


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:4960:4: ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:4960:4: ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) )
            	    // InternalKim.g:4961:5: {...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6)");
            	    }
            	    // InternalKim.g:4961:106: ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) )
            	    // InternalKim.g:4962:6: ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6);
            	    // InternalKim.g:4965:9: ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) )
            	    // InternalKim.g:4965:10: {...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4965:19: (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) )
            	    // InternalKim.g:4965:20: otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) )
            	    {
            	    otherlv_36=(Token)match(input,99,FOLLOW_76); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_36, grammarAccess.getNamespaceAccess().getVersionKeyword_5_6_0());
            	      								
            	    }
            	    // InternalKim.g:4969:9: ( (lv_version_37_0= ruleVersionNumber ) )
            	    // InternalKim.g:4970:10: (lv_version_37_0= ruleVersionNumber )
            	    {
            	    // InternalKim.g:4970:10: (lv_version_37_0= ruleVersionNumber )
            	    // InternalKim.g:4971:11: lv_version_37_0= ruleVersionNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getVersionVersionNumberParserRuleCall_5_6_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_66);
            	    lv_version_37_0=ruleVersionNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											set(
            	      												current,
            	      												"version",
            	      												lv_version_37_0,
            	      												"org.integratedmodelling.kim.Kim.VersionNumber");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalKim.g:4994:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
            	    {
            	    // InternalKim.g:4994:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
            	    // InternalKim.g:4995:5: {...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7)");
            	    }
            	    // InternalKim.g:4995:106: ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) )
            	    // InternalKim.g:4996:6: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7);
            	    // InternalKim.g:4999:9: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
            	    // InternalKim.g:4999:10: {...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4999:19: ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
            	    // InternalKim.g:4999:20: ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
            	    {
            	    // InternalKim.g:4999:20: ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
            	    // InternalKim.g:5000:10: ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
            	    {
            	    getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());
            	    // InternalKim.g:5003:10: ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
            	    // InternalKim.g:5004:11: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?
            	    {
            	    // InternalKim.g:5004:11: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+
            	    int cnt114=0;
            	    loop114:
            	    do {
            	        int alt114=4;
            	        switch ( input.LA(1) ) {
            	        case 31:
            	            {
            	            int LA114_2 = input.LA(2);

            	            if ( synpred215_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
            	                alt114=3;
            	            }


            	            }
            	            break;
            	        case 100:
            	            {
            	            int LA114_3 = input.LA(2);

            	            if ( synpred212_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
            	                alt114=1;
            	            }


            	            }
            	            break;
            	        case 102:
            	            {
            	            int LA114_4 = input.LA(2);

            	            if ( synpred214_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
            	                alt114=2;
            	            }


            	            }
            	            break;

            	        }

            	        switch (alt114) {
            	    	case 1 :
            	    	    // InternalKim.g:5005:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
            	    	    {
            	    	    // InternalKim.g:5005:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
            	    	    // InternalKim.g:5006:10: {...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0)");
            	    	    }
            	    	    // InternalKim.g:5006:113: ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
            	    	    // InternalKim.g:5007:11: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0);
            	    	    // InternalKim.g:5010:14: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
            	    	    // InternalKim.g:5010:15: {...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:5010:24: (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
            	    	    // InternalKim.g:5010:25: otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
            	    	    {
            	    	    otherlv_39=(Token)match(input,100,FOLLOW_77); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_39, grammarAccess.getNamespaceAccess().getResolveKeyword_5_7_0_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:5014:14: (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
            	    	    int alt112=2;
            	    	    int LA112_0 = input.LA(1);

            	    	    if ( (LA112_0==101) ) {
            	    	        alt112=1;
            	    	    }
            	    	    switch (alt112) {
            	    	        case 1 :
            	    	            // InternalKim.g:5015:15: otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )*
            	    	            {
            	    	            otherlv_40=(Token)match(input,101,FOLLOW_75); if (state.failed) return current;
            	    	            if ( state.backtracking==0 ) {

            	    	              															newLeafNode(otherlv_40, grammarAccess.getNamespaceAccess().getFromKeyword_5_7_0_1_0());
            	    	              														
            	    	            }
            	    	            // InternalKim.g:5019:15: ( (lv_lookupNamespace_41_0= rulePathName ) )*
            	    	            loop111:
            	    	            do {
            	    	                int alt111=2;
            	    	                int LA111_0 = input.LA(1);

            	    	                if ( ((LA111_0>=RULE_UPPERCASE_ID && LA111_0<=RULE_LOWERCASE_ID)||LA111_0==RULE_LOWERCASE_DASHID) ) {
            	    	                    alt111=1;
            	    	                }


            	    	                switch (alt111) {
            	    	            	case 1 :
            	    	            	    // InternalKim.g:5020:16: (lv_lookupNamespace_41_0= rulePathName )
            	    	            	    {
            	    	            	    // InternalKim.g:5020:16: (lv_lookupNamespace_41_0= rulePathName )
            	    	            	    // InternalKim.g:5021:17: lv_lookupNamespace_41_0= rulePathName
            	    	            	    {
            	    	            	    if ( state.backtracking==0 ) {

            	    	            	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_7_0_1_1_0());
            	    	            	      																
            	    	            	    }
            	    	            	    pushFollow(FOLLOW_75);
            	    	            	    lv_lookupNamespace_41_0=rulePathName();

            	    	            	    state._fsp--;
            	    	            	    if (state.failed) return current;
            	    	            	    if ( state.backtracking==0 ) {

            	    	            	      																	if (current==null) {
            	    	            	      																		current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	            	      																	}
            	    	            	      																	add(
            	    	            	      																		current,
            	    	            	      																		"lookupNamespace",
            	    	            	      																		lv_lookupNamespace_41_0,
            	    	            	      																		"org.integratedmodelling.kim.Kim.PathName");
            	    	            	      																	afterParserOrEnumRuleCall();
            	    	            	      																
            	    	            	    }

            	    	            	    }


            	    	            	    }
            	    	            	    break;

            	    	            	default :
            	    	            	    break loop111;
            	    	                }
            	    	            } while (true);


            	    	            }
            	    	            break;

            	    	    }


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // InternalKim.g:5045:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
            	    	    {
            	    	    // InternalKim.g:5045:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
            	    	    // InternalKim.g:5046:10: {...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1)");
            	    	    }
            	    	    // InternalKim.g:5046:113: ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
            	    	    // InternalKim.g:5047:11: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1);
            	    	    // InternalKim.g:5050:14: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
            	    	    // InternalKim.g:5050:15: {...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:5050:24: (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
            	    	    // InternalKim.g:5050:25: otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )*
            	    	    {
            	    	    otherlv_42=(Token)match(input,102,FOLLOW_75); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_42, grammarAccess.getNamespaceAccess().getOutsideKeyword_5_7_1_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:5054:14: ( (lv_blacklistNamespace_43_0= rulePathName ) )*
            	    	    loop113:
            	    	    do {
            	    	        int alt113=2;
            	    	        int LA113_0 = input.LA(1);

            	    	        if ( ((LA113_0>=RULE_UPPERCASE_ID && LA113_0<=RULE_LOWERCASE_ID)||LA113_0==RULE_LOWERCASE_DASHID) ) {
            	    	            alt113=1;
            	    	        }


            	    	        switch (alt113) {
            	    	    	case 1 :
            	    	    	    // InternalKim.g:5055:15: (lv_blacklistNamespace_43_0= rulePathName )
            	    	    	    {
            	    	    	    // InternalKim.g:5055:15: (lv_blacklistNamespace_43_0= rulePathName )
            	    	    	    // InternalKim.g:5056:16: lv_blacklistNamespace_43_0= rulePathName
            	    	    	    {
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_7_1_1_0());
            	    	    	      															
            	    	    	    }
            	    	    	    pushFollow(FOLLOW_75);
            	    	    	    lv_blacklistNamespace_43_0=rulePathName();

            	    	    	    state._fsp--;
            	    	    	    if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																if (current==null) {
            	    	    	      																	current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	    	      																}
            	    	    	      																add(
            	    	    	      																	current,
            	    	    	      																	"blacklistNamespace",
            	    	    	      																	lv_blacklistNamespace_43_0,
            	    	    	      																	"org.integratedmodelling.kim.Kim.PathName");
            	    	    	      																afterParserOrEnumRuleCall();
            	    	    	      															
            	    	    	    }

            	    	    	    }


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop113;
            	    	        }
            	    	    } while (true);


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 3 :
            	    	    // InternalKim.g:5079:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) )
            	    	    {
            	    	    // InternalKim.g:5079:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) )
            	    	    // InternalKim.g:5080:10: {...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2)");
            	    	    }
            	    	    // InternalKim.g:5080:113: ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) )
            	    	    // InternalKim.g:5081:11: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2);
            	    	    // InternalKim.g:5084:14: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) )
            	    	    // InternalKim.g:5084:15: {...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:5084:24: (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) )
            	    	    // InternalKim.g:5084:25: otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) )
            	    	    {
            	    	    otherlv_44=(Token)match(input,31,FOLLOW_33); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_44, grammarAccess.getNamespaceAccess().getUsingKeyword_5_7_2_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:5088:14: ( (lv_weights_45_0= ruleMetadata ) )
            	    	    // InternalKim.g:5089:15: (lv_weights_45_0= ruleMetadata )
            	    	    {
            	    	    // InternalKim.g:5089:15: (lv_weights_45_0= ruleMetadata )
            	    	    // InternalKim.g:5090:16: lv_weights_45_0= ruleMetadata
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMetadataParserRuleCall_5_7_2_1_0());
            	    	      															
            	    	    }
            	    	    pushFollow(FOLLOW_66);
            	    	    lv_weights_45_0=ruleMetadata();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      																if (current==null) {
            	    	      																	current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      																}
            	    	      																set(
            	    	      																	current,
            	    	      																	"weights",
            	    	      																	lv_weights_45_0,
            	    	      																	"org.integratedmodelling.kim.Kim.Metadata");
            	    	      																afterParserOrEnumRuleCall();
            	    	      															
            	    	    }

            	    	    }


            	    	    }


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt114 >= 1 ) break loop114;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(114, input);
            	                throw eee;
            	        }
            	        cnt114++;
            	    } while (true);

            	    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7()) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7())");
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop115;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            }

            // InternalKim.g:5133:3: (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMetadata ) ) )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==103) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalKim.g:5134:4: otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMetadata ) )
                    {
                    otherlv_46=(Token)match(input,103,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_46, grammarAccess.getNamespaceAccess().getParametersKeyword_6_0());
                      			
                    }
                    // InternalKim.g:5138:4: ( (lv_parameters_47_0= ruleMetadata ) )
                    // InternalKim.g:5139:5: (lv_parameters_47_0= ruleMetadata )
                    {
                    // InternalKim.g:5139:5: (lv_parameters_47_0= ruleMetadata )
                    // InternalKim.g:5140:6: lv_parameters_47_0= ruleMetadata
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getParametersMetadataParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_78);
                    lv_parameters_47_0=ruleMetadata();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						set(
                      							current,
                      							"parameters",
                      							lv_parameters_47_0,
                      							"org.integratedmodelling.kim.Kim.Metadata");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:5158:3: (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMetadata ) ) )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==42) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalKim.g:5159:4: otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMetadata ) )
                    {
                    otherlv_48=(Token)match(input,42,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getNamespaceAccess().getMetadataKeyword_7_0());
                      			
                    }
                    // InternalKim.g:5163:4: ( (lv_metadata_49_0= ruleMetadata ) )
                    // InternalKim.g:5164:5: (lv_metadata_49_0= ruleMetadata )
                    {
                    // InternalKim.g:5164:5: (lv_metadata_49_0= ruleMetadata )
                    // InternalKim.g:5165:6: lv_metadata_49_0= ruleMetadata
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getMetadataMetadataParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_metadata_49_0=ruleMetadata();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						set(
                      							current,
                      							"metadata",
                      							lv_metadata_49_0,
                      							"org.integratedmodelling.kim.Kim.Metadata");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_50=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_50, grammarAccess.getNamespaceAccess().getSemicolonKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNamespace"


    // $ANTLR start "entryRuleOwlImport"
    // InternalKim.g:5194:1: entryRuleOwlImport returns [EObject current=null] : iv_ruleOwlImport= ruleOwlImport EOF ;
    public final EObject entryRuleOwlImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwlImport = null;


        try {
            // InternalKim.g:5194:50: (iv_ruleOwlImport= ruleOwlImport EOF )
            // InternalKim.g:5195:2: iv_ruleOwlImport= ruleOwlImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwlImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwlImport=ruleOwlImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwlImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwlImport"


    // $ANTLR start "ruleOwlImport"
    // InternalKim.g:5201:1: ruleOwlImport returns [EObject current=null] : ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) ) ;
    public final EObject ruleOwlImport() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token lv_prefix_2_0=null;


        	enterRule();

        try {
            // InternalKim.g:5207:2: ( ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) ) )
            // InternalKim.g:5208:2: ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) )
            {
            // InternalKim.g:5208:2: ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) )
            // InternalKim.g:5209:3: ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) )
            {
            // InternalKim.g:5209:3: ( (lv_name_0_0= RULE_STRING ) )
            // InternalKim.g:5210:4: (lv_name_0_0= RULE_STRING )
            {
            // InternalKim.g:5210:4: (lv_name_0_0= RULE_STRING )
            // InternalKim.g:5211:5: lv_name_0_0= RULE_STRING
            {
            lv_name_0_0=(Token)match(input,RULE_STRING,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getOwlImportAccess().getNameSTRINGTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getOwlImportRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.eclipse.xtext.common.Terminals.STRING");
              				
            }

            }


            }

            // InternalKim.g:5227:3: (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) )
            // InternalKim.g:5228:4: otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) )
            {
            otherlv_1=(Token)match(input,25,FOLLOW_60); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getOwlImportAccess().getAsKeyword_1_0());
              			
            }
            // InternalKim.g:5232:4: ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) )
            // InternalKim.g:5233:5: (lv_prefix_2_0= RULE_LOWERCASE_ID )
            {
            // InternalKim.g:5233:5: (lv_prefix_2_0= RULE_LOWERCASE_ID )
            // InternalKim.g:5234:6: lv_prefix_2_0= RULE_LOWERCASE_ID
            {
            lv_prefix_2_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						newLeafNode(lv_prefix_2_0, grammarAccess.getOwlImportAccess().getPrefixLOWERCASE_IDTerminalRuleCall_1_1_0());
              					
            }
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getOwlImportRule());
              						}
              						setWithLastConsumed(
              							current,
              							"prefix",
              							lv_prefix_2_0,
              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
              					
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwlImport"


    // $ANTLR start "entryRuleImport"
    // InternalKim.g:5255:1: entryRuleImport returns [EObject current=null] : iv_ruleImport= ruleImport EOF ;
    public final EObject entryRuleImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImport = null;


        try {
            // InternalKim.g:5255:47: (iv_ruleImport= ruleImport EOF )
            // InternalKim.g:5256:2: iv_ruleImport= ruleImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImport=ruleImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // InternalKim.g:5262:1: ruleImport returns [EObject current=null] : ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) ) ;
    public final EObject ruleImport() throws RecognitionException {
        EObject current = null;

        Token lv_star_1_0=null;
        Token otherlv_2=null;
        EObject lv_imports_0_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:5268:2: ( ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) ) )
            // InternalKim.g:5269:2: ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) )
            {
            // InternalKim.g:5269:2: ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) )
            // InternalKim.g:5270:3: ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) )
            {
            // InternalKim.g:5270:3: ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==38||LA119_0==40) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalKim.g:5271:4: ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from'
                    {
                    // InternalKim.g:5271:4: ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) )
                    int alt118=2;
                    int LA118_0 = input.LA(1);

                    if ( (LA118_0==38) ) {
                        alt118=1;
                    }
                    else if ( (LA118_0==40) ) {
                        alt118=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 118, 0, input);

                        throw nvae;
                    }
                    switch (alt118) {
                        case 1 :
                            // InternalKim.g:5272:5: ( (lv_imports_0_0= ruleList ) )
                            {
                            // InternalKim.g:5272:5: ( (lv_imports_0_0= ruleList ) )
                            // InternalKim.g:5273:6: (lv_imports_0_0= ruleList )
                            {
                            // InternalKim.g:5273:6: (lv_imports_0_0= ruleList )
                            // InternalKim.g:5274:7: lv_imports_0_0= ruleList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getImportAccess().getImportsListParserRuleCall_0_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_79);
                            lv_imports_0_0=ruleList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getImportRule());
                              							}
                              							set(
                              								current,
                              								"imports",
                              								lv_imports_0_0,
                              								"org.integratedmodelling.kim.Kim.List");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:5292:5: ( (lv_star_1_0= '*' ) )
                            {
                            // InternalKim.g:5292:5: ( (lv_star_1_0= '*' ) )
                            // InternalKim.g:5293:6: (lv_star_1_0= '*' )
                            {
                            // InternalKim.g:5293:6: (lv_star_1_0= '*' )
                            // InternalKim.g:5294:7: lv_star_1_0= '*'
                            {
                            lv_star_1_0=(Token)match(input,40,FOLLOW_79); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_star_1_0, grammarAccess.getImportAccess().getStarAsteriskKeyword_0_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getImportRule());
                              							}
                              							setWithLastConsumed(current, "star", true, "*");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,101,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getImportAccess().getFromKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5312:3: ( (lv_name_3_0= rulePathName ) )
            // InternalKim.g:5313:4: (lv_name_3_0= rulePathName )
            {
            // InternalKim.g:5313:4: (lv_name_3_0= rulePathName )
            // InternalKim.g:5314:5: lv_name_3_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getImportAccess().getNamePathNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_3_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getImportRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "entryRuleUrnId"
    // InternalKim.g:5335:1: entryRuleUrnId returns [String current=null] : iv_ruleUrnId= ruleUrnId EOF ;
    public final String entryRuleUrnId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUrnId = null;


        try {
            // InternalKim.g:5335:45: (iv_ruleUrnId= ruleUrnId EOF )
            // InternalKim.g:5336:2: iv_ruleUrnId= ruleUrnId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUrnIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUrnId=ruleUrnId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUrnId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUrnId"


    // $ANTLR start "ruleUrnId"
    // InternalKim.g:5342:1: ruleUrnId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )? ) ;
    public final AntlrDatatypeRuleToken ruleUrnId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_8=null;
        AntlrDatatypeRuleToken this_PathName_1 = null;

        AntlrDatatypeRuleToken this_PathName_3 = null;

        AntlrDatatypeRuleToken this_PathName_5 = null;

        AntlrDatatypeRuleToken this_Path_7 = null;

        AntlrDatatypeRuleToken this_VersionNumber_10 = null;

        AntlrDatatypeRuleToken this_Path_12 = null;

        AntlrDatatypeRuleToken this_UrnKvp_13 = null;

        AntlrDatatypeRuleToken this_Path_15 = null;

        AntlrDatatypeRuleToken this_UrnKvp_16 = null;



        	enterRule();

        try {
            // InternalKim.g:5348:2: ( ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )? ) )
            // InternalKim.g:5349:2: ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )? )
            {
            // InternalKim.g:5349:2: ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )? )
            // InternalKim.g:5350:3: (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )?
            {
            // InternalKim.g:5350:3: (kw= 'urn:klab:' )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==104) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // InternalKim.g:5351:4: kw= 'urn:klab:'
                    {
                    kw=(Token)match(input,104,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getUrnKlabKeyword_0());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_80);
            this_PathName_1=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,105,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_2());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_80);
            this_PathName_3=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_3);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,105,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_4());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_80);
            this_PathName_5=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_5);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,105,FOLLOW_81); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_6());
              		
            }
            // InternalKim.g:5402:3: (this_Path_7= rulePath | this_INT_8= RULE_INT )
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( ((LA121_0>=RULE_UPPERCASE_ID && LA121_0<=RULE_LOWERCASE_ID)||LA121_0==RULE_LOWERCASE_DASHID) ) {
                alt121=1;
            }
            else if ( (LA121_0==RULE_INT) ) {
                alt121=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 121, 0, input);

                throw nvae;
            }
            switch (alt121) {
                case 1 :
                    // InternalKim.g:5403:4: this_Path_7= rulePath
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_7_0());
                      			
                    }
                    pushFollow(FOLLOW_82);
                    this_Path_7=rulePath();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_Path_7);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:5414:4: this_INT_8= RULE_INT
                    {
                    this_INT_8=(Token)match(input,RULE_INT,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_8);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_8, grammarAccess.getUrnIdAccess().getINTTerminalRuleCall_7_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5422:3: (kw= ':' this_VersionNumber_10= ruleVersionNumber )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==105) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalKim.g:5423:4: kw= ':' this_VersionNumber_10= ruleVersionNumber
                    {
                    kw=(Token)match(input,105,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_8_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getUrnIdAccess().getVersionNumberParserRuleCall_8_1());
                      			
                    }
                    pushFollow(FOLLOW_83);
                    this_VersionNumber_10=ruleVersionNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_VersionNumber_10);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5439:3: (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==53) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // InternalKim.g:5440:4: kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )*
                    {
                    kw=(Token)match(input,53,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getNumberSignKeyword_9_0());
                      			
                    }
                    // InternalKim.g:5445:4: (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp )
                    int alt123=2;
                    alt123 = dfa123.predict(input);
                    switch (alt123) {
                        case 1 :
                            // InternalKim.g:5446:5: this_Path_12= rulePath
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_9_1_0());
                              				
                            }
                            pushFollow(FOLLOW_84);
                            this_Path_12=rulePath();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_Path_12);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:5457:5: this_UrnKvp_13= ruleUrnKvp
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getUrnIdAccess().getUrnKvpParserRuleCall_9_1_1());
                              				
                            }
                            pushFollow(FOLLOW_84);
                            this_UrnKvp_13=ruleUrnKvp();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_UrnKvp_13);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:5468:4: (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )*
                    loop125:
                    do {
                        int alt125=2;
                        int LA125_0 = input.LA(1);

                        if ( (LA125_0==106) ) {
                            alt125=1;
                        }


                        switch (alt125) {
                    	case 1 :
                    	    // InternalKim.g:5469:5: kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp )
                    	    {
                    	    kw=(Token)match(input,106,FOLLOW_26); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current.merge(kw);
                    	      					newLeafNode(kw, grammarAccess.getUrnIdAccess().getAmpersandKeyword_9_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:5474:5: (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp )
                    	    int alt124=2;
                    	    alt124 = dfa124.predict(input);
                    	    switch (alt124) {
                    	        case 1 :
                    	            // InternalKim.g:5475:6: this_Path_15= rulePath
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              						newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_9_2_1_0());
                    	              					
                    	            }
                    	            pushFollow(FOLLOW_84);
                    	            this_Path_15=rulePath();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						current.merge(this_Path_15);
                    	              					
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              						afterParserOrEnumRuleCall();
                    	              					
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:5486:6: this_UrnKvp_16= ruleUrnKvp
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              						newCompositeNode(grammarAccess.getUrnIdAccess().getUrnKvpParserRuleCall_9_2_1_1());
                    	              					
                    	            }
                    	            pushFollow(FOLLOW_84);
                    	            this_UrnKvp_16=ruleUrnKvp();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						current.merge(this_UrnKvp_16);
                    	              					
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              						afterParserOrEnumRuleCall();
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop125;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUrnId"


    // $ANTLR start "entryRuleUrnKvp"
    // InternalKim.g:5503:1: entryRuleUrnKvp returns [String current=null] : iv_ruleUrnKvp= ruleUrnKvp EOF ;
    public final String entryRuleUrnKvp() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUrnKvp = null;


        try {
            // InternalKim.g:5503:46: (iv_ruleUrnKvp= ruleUrnKvp EOF )
            // InternalKim.g:5504:2: iv_ruleUrnKvp= ruleUrnKvp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUrnKvpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUrnKvp=ruleUrnKvp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUrnKvp.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUrnKvp"


    // $ANTLR start "ruleUrnKvp"
    // InternalKim.g:5510:1: ruleUrnKvp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT ) ) ;
    public final AntlrDatatypeRuleToken ruleUrnKvp() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_3=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;

        AntlrDatatypeRuleToken this_Path_2 = null;



        	enterRule();

        try {
            // InternalKim.g:5516:2: ( (this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT ) ) )
            // InternalKim.g:5517:2: (this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT ) )
            {
            // InternalKim.g:5517:2: (this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT ) )
            // InternalKim.g:5518:3: this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT )
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnKvpAccess().getPathNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_85);
            this_PathName_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,82,FOLLOW_81); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnKvpAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalKim.g:5533:3: (this_Path_2= rulePath | this_INT_3= RULE_INT )
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( ((LA127_0>=RULE_UPPERCASE_ID && LA127_0<=RULE_LOWERCASE_ID)||LA127_0==RULE_LOWERCASE_DASHID) ) {
                alt127=1;
            }
            else if ( (LA127_0==RULE_INT) ) {
                alt127=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 127, 0, input);

                throw nvae;
            }
            switch (alt127) {
                case 1 :
                    // InternalKim.g:5534:4: this_Path_2= rulePath
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getUrnKvpAccess().getPathParserRuleCall_2_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_Path_2=rulePath();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_Path_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:5545:4: this_INT_3= RULE_INT
                    {
                    this_INT_3=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_3);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_3, grammarAccess.getUrnKvpAccess().getINTTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUrnKvp"


    // $ANTLR start "entryRuleLocalFilePath"
    // InternalKim.g:5557:1: entryRuleLocalFilePath returns [String current=null] : iv_ruleLocalFilePath= ruleLocalFilePath EOF ;
    public final String entryRuleLocalFilePath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLocalFilePath = null;


        try {
            // InternalKim.g:5557:53: (iv_ruleLocalFilePath= ruleLocalFilePath EOF )
            // InternalKim.g:5558:2: iv_ruleLocalFilePath= ruleLocalFilePath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalFilePathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLocalFilePath=ruleLocalFilePath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocalFilePath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocalFilePath"


    // $ANTLR start "ruleLocalFilePath"
    // InternalKim.g:5564:1: ruleLocalFilePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? ) ;
    public final AntlrDatatypeRuleToken ruleLocalFilePath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_CAMELCASE_ID_0=null;
        Token this_LOWERCASE_ID_1=null;
        Token this_LOWERCASE_DASHID_2=null;
        Token kw=null;
        Token this_CAMELCASE_ID_4=null;
        Token this_LOWERCASE_ID_5=null;
        Token this_LOWERCASE_DASHID_6=null;
        Token this_LOWERCASE_ID_8=null;
        Token this_LOWERCASE_ID_10=null;


        	enterRule();

        try {
            // InternalKim.g:5570:2: ( ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? ) )
            // InternalKim.g:5571:2: ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? )
            {
            // InternalKim.g:5571:2: ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? )
            // InternalKim.g:5572:3: (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )?
            {
            // InternalKim.g:5572:3: (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID )
            int alt128=3;
            switch ( input.LA(1) ) {
            case RULE_CAMELCASE_ID:
                {
                alt128=1;
                }
                break;
            case RULE_LOWERCASE_ID:
                {
                alt128=2;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt128=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 128, 0, input);

                throw nvae;
            }

            switch (alt128) {
                case 1 :
                    // InternalKim.g:5573:4: this_CAMELCASE_ID_0= RULE_CAMELCASE_ID
                    {
                    this_CAMELCASE_ID_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_86); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_CAMELCASE_ID_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_CAMELCASE_ID_0, grammarAccess.getLocalFilePathAccess().getCAMELCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:5581:4: this_LOWERCASE_ID_1= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_86); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_1, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:5589:4: this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_86); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_2, grammarAccess.getLocalFilePathAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5597:3: (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )*
            loop130:
            do {
                int alt130=2;
                int LA130_0 = input.LA(1);

                if ( (LA130_0==107) ) {
                    alt130=1;
                }


                switch (alt130) {
            	case 1 :
            	    // InternalKim.g:5598:4: kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    {
            	    kw=(Token)match(input,107,FOLLOW_87); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getSolidusKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:5603:4: (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    int alt129=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_CAMELCASE_ID:
            	        {
            	        alt129=1;
            	        }
            	        break;
            	    case RULE_LOWERCASE_ID:
            	        {
            	        alt129=2;
            	        }
            	        break;
            	    case RULE_LOWERCASE_DASHID:
            	        {
            	        alt129=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 129, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt129) {
            	        case 1 :
            	            // InternalKim.g:5604:5: this_CAMELCASE_ID_4= RULE_CAMELCASE_ID
            	            {
            	            this_CAMELCASE_ID_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_86); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_CAMELCASE_ID_4);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_CAMELCASE_ID_4, grammarAccess.getLocalFilePathAccess().getCAMELCASE_IDTerminalRuleCall_1_1_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:5612:5: this_LOWERCASE_ID_5= RULE_LOWERCASE_ID
            	            {
            	            this_LOWERCASE_ID_5=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_86); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_ID_5);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_ID_5, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_1_1_1());
            	              				
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:5620:5: this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID
            	            {
            	            this_LOWERCASE_DASHID_6=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_86); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_DASHID_6);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_DASHID_6, grammarAccess.getLocalFilePathAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_2());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop130;
                }
            } while (true);

            // InternalKim.g:5629:3: (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==108) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalKim.g:5630:4: kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID
                    {
                    kw=(Token)match(input,108,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getFullStopKeyword_2_0());
                      			
                    }
                    this_LOWERCASE_ID_8=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_8);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_8, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5643:3: (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==53) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalKim.g:5644:4: kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID
                    {
                    kw=(Token)match(input,53,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getNumberSignKeyword_3_0());
                      			
                    }
                    this_LOWERCASE_ID_10=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_10);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_10, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocalFilePath"


    // $ANTLR start "entryRuleObserveStatement"
    // InternalKim.g:5661:1: entryRuleObserveStatement returns [EObject current=null] : iv_ruleObserveStatement= ruleObserveStatement EOF ;
    public final EObject entryRuleObserveStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObserveStatement = null;


        try {
            // InternalKim.g:5661:57: (iv_ruleObserveStatement= ruleObserveStatement EOF )
            // InternalKim.g:5662:2: iv_ruleObserveStatement= ruleObserveStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObserveStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObserveStatement=ruleObserveStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObserveStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleObserveStatement"


    // $ANTLR start "ruleObserveStatement"
    // InternalKim.g:5668:1: ruleObserveStatement returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) ) ) ;
    public final EObject ruleObserveStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_1_0 = null;

        EObject lv_body_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:5674:2: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) ) ) )
            // InternalKim.g:5675:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) ) )
            {
            // InternalKim.g:5675:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) ) )
            // InternalKim.g:5676:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) )
            {
            // InternalKim.g:5676:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==RULE_ANNOTATION_ID) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalKim.g:5677:4: ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )*
                    {
                    // InternalKim.g:5677:4: ( (lv_annotations_0_0= ruleAnnotation ) )
                    // InternalKim.g:5678:5: (lv_annotations_0_0= ruleAnnotation )
                    {
                    // InternalKim.g:5678:5: (lv_annotations_0_0= ruleAnnotation )
                    // InternalKim.g:5679:6: lv_annotations_0_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getObserveStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_88);
                    lv_annotations_0_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getObserveStatementRule());
                      						}
                      						add(
                      							current,
                      							"annotations",
                      							lv_annotations_0_0,
                      							"org.integratedmodelling.kim.Kim.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:5696:4: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop133:
                    do {
                        int alt133=2;
                        int LA133_0 = input.LA(1);

                        if ( (LA133_0==RULE_ANNOTATION_ID) ) {
                            alt133=1;
                        }


                        switch (alt133) {
                    	case 1 :
                    	    // InternalKim.g:5697:5: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalKim.g:5697:5: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalKim.g:5698:6: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getObserveStatementAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_88);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getObserveStatementRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_1_0,
                    	      							"org.integratedmodelling.kim.Kim.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop133;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_2=(Token)match(input,109,FOLLOW_89); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getObserveStatementAccess().getObserveKeyword_1());
              		
            }
            // InternalKim.g:5720:3: ( (lv_body_3_0= ruleObserveStatementBody ) )
            // InternalKim.g:5721:4: (lv_body_3_0= ruleObserveStatementBody )
            {
            // InternalKim.g:5721:4: (lv_body_3_0= ruleObserveStatementBody )
            // InternalKim.g:5722:5: lv_body_3_0= ruleObserveStatementBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getObserveStatementAccess().getBodyObserveStatementBodyParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_3_0=ruleObserveStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getObserveStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_3_0,
              						"org.integratedmodelling.kim.Kim.ObserveStatementBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleObserveStatement"


    // $ANTLR start "entryRuleObserveStatementBody"
    // InternalKim.g:5743:1: entryRuleObserveStatementBody returns [EObject current=null] : iv_ruleObserveStatementBody= ruleObserveStatementBody EOF ;
    public final EObject entryRuleObserveStatementBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObserveStatementBody = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4()
        	);

        try {
            // InternalKim.g:5748:2: (iv_ruleObserveStatementBody= ruleObserveStatementBody EOF )
            // InternalKim.g:5749:2: iv_ruleObserveStatementBody= ruleObserveStatementBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObserveStatementBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObserveStatementBody=ruleObserveStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObserveStatementBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleObserveStatementBody"


    // $ANTLR start "ruleObserveStatementBody"
    // InternalKim.g:5758:1: ruleObserveStatementBody returns [EObject current=null] : ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ;
    public final EObject ruleObserveStatementBody() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_docstring_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        EObject lv_urn_1_0 = null;

        EObject lv_concept_3_0 = null;

        AntlrDatatypeRuleToken lv_parents_6_0 = null;

        AntlrDatatypeRuleToken lv_parents_8_0 = null;

        EObject lv_states_11_0 = null;

        EObject lv_states_13_0 = null;

        EObject lv_observations_16_0 = null;

        EObject lv_observations_20_0 = null;

        EObject lv_actions_22_0 = null;

        EObject lv_accessor_24_0 = null;

        EObject lv_metadata_26_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4()
        	);

        try {
            // InternalKim.g:5768:2: ( ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
            // InternalKim.g:5769:2: ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
            {
            // InternalKim.g:5769:2: ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
            // InternalKim.g:5770:3: ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
            {
            // InternalKim.g:5770:3: ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
            // InternalKim.g:5771:4: ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
            {
            getUnorderedGroupHelper().enter(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());
            // InternalKim.g:5774:4: ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
            // InternalKim.g:5775:5: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) ) )+ {...}?
            {
            // InternalKim.g:5775:5: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) ) )+
            int cnt144=0;
            loop144:
            do {
                int alt144=4;
                alt144 = dfa144.predict(input);
                switch (alt144) {
            	case 1 :
            	    // InternalKim.g:5776:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) )
            	    {
            	    // InternalKim.g:5776:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) )
            	    // InternalKim.g:5777:4: {...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0)");
            	    }
            	    // InternalKim.g:5777:114: ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) )
            	    // InternalKim.g:5778:5: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0);
            	    // InternalKim.g:5781:8: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) )
            	    // InternalKim.g:5781:9: {...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    }
            	    // InternalKim.g:5781:18: ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* )
            	    // InternalKim.g:5781:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )*
            	    {
            	    // InternalKim.g:5781:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?
            	    int alt135=2;
            	    alt135 = dfa135.predict(input);
            	    switch (alt135) {
            	        case 1 :
            	            // InternalKim.g:5782:9: ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as'
            	            {
            	            // InternalKim.g:5782:9: ( (lv_urn_1_0= ruleUrn ) )
            	            // InternalKim.g:5783:10: (lv_urn_1_0= ruleUrn )
            	            {
            	            // InternalKim.g:5783:10: (lv_urn_1_0= ruleUrn )
            	            // InternalKim.g:5784:11: lv_urn_1_0= ruleUrn
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getUrnUrnParserRuleCall_0_0_0_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_11);
            	            lv_urn_1_0=ruleUrn();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											set(
            	              												current,
            	              												"urn",
            	              												lv_urn_1_0,
            	              												"org.integratedmodelling.kim.Kim.Urn");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }

            	            otherlv_2=(Token)match(input,25,FOLLOW_23); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_2, grammarAccess.getObserveStatementBodyAccess().getAsKeyword_0_0_1());
            	              								
            	            }

            	            }
            	            break;

            	    }

            	    // InternalKim.g:5806:8: ( (lv_concept_3_0= ruleNamedObservableSemantics ) )
            	    // InternalKim.g:5807:9: (lv_concept_3_0= ruleNamedObservableSemantics )
            	    {
            	    // InternalKim.g:5807:9: (lv_concept_3_0= ruleNamedObservableSemantics )
            	    // InternalKim.g:5808:10: lv_concept_3_0= ruleNamedObservableSemantics
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getConceptNamedObservableSemanticsParserRuleCall_0_1_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_concept_3_0=ruleNamedObservableSemantics();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	      										}
            	      										set(
            	      											current,
            	      											"concept",
            	      											lv_concept_3_0,
            	      											"org.integratedmodelling.kim.Kim.NamedObservableSemantics");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }

            	    // InternalKim.g:5825:8: ( (lv_docstring_4_0= RULE_STRING ) )?
            	    int alt136=2;
            	    int LA136_0 = input.LA(1);

            	    if ( (LA136_0==RULE_STRING) ) {
            	        int LA136_1 = input.LA(2);

            	        if ( (LA136_1==EOF||(LA136_1>=RULE_UPPERCASE_ID && LA136_1<=RULE_STRING)||LA136_1==RULE_CAMELCASE_ID||LA136_1==RULE_LOWERCASE_DASHID||LA136_1==20||(LA136_1>=30 && LA136_1<=31)||LA136_1==38||(LA136_1>=41 && LA136_1<=42)||(LA136_1>=54 && LA136_1<=56)||(LA136_1>=62 && LA136_1<=67)||LA136_1==104||(LA136_1>=110 && LA136_1<=111)||(LA136_1>=128 && LA136_1<=129)||(LA136_1>=137 && LA136_1<=138)||(LA136_1>=140 && LA136_1<=156)) ) {
            	            alt136=1;
            	        }
            	    }
            	    switch (alt136) {
            	        case 1 :
            	            // InternalKim.g:5826:9: (lv_docstring_4_0= RULE_STRING )
            	            {
            	            // InternalKim.g:5826:9: (lv_docstring_4_0= RULE_STRING )
            	            // InternalKim.g:5827:10: lv_docstring_4_0= RULE_STRING
            	            {
            	            lv_docstring_4_0=(Token)match(input,RULE_STRING,FOLLOW_90); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_docstring_4_0, grammarAccess.getObserveStatementBodyAccess().getDocstringSTRINGTerminalRuleCall_0_2_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getObserveStatementBodyRule());
            	              										}
            	              										setWithLastConsumed(
            	              											current,
            	              											"docstring",
            	              											lv_docstring_4_0,
            	              											"org.eclipse.xtext.common.Terminals.STRING");
            	              									
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5843:8: (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )?
            	    int alt138=2;
            	    int LA138_0 = input.LA(1);

            	    if ( (LA138_0==110) ) {
            	        alt138=1;
            	    }
            	    switch (alt138) {
            	        case 1 :
            	            // InternalKim.g:5844:9: otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
            	            {
            	            otherlv_5=(Token)match(input,110,FOLLOW_26); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_5, grammarAccess.getObserveStatementBodyAccess().getExtendsKeyword_0_3_0());
            	              								
            	            }
            	            // InternalKim.g:5848:9: ( (lv_parents_6_0= rulePathName ) )
            	            // InternalKim.g:5849:10: (lv_parents_6_0= rulePathName )
            	            {
            	            // InternalKim.g:5849:10: (lv_parents_6_0= rulePathName )
            	            // InternalKim.g:5850:11: lv_parents_6_0= rulePathName
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_1_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_91);
            	            lv_parents_6_0=rulePathName();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											add(
            	              												current,
            	              												"parents",
            	              												lv_parents_6_0,
            	              												"org.integratedmodelling.kim.Kim.PathName");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }

            	            // InternalKim.g:5867:9: (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
            	            loop137:
            	            do {
            	                int alt137=2;
            	                int LA137_0 = input.LA(1);

            	                if ( (LA137_0==27) ) {
            	                    alt137=1;
            	                }


            	                switch (alt137) {
            	            	case 1 :
            	            	    // InternalKim.g:5868:10: otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) )
            	            	    {
            	            	    otherlv_7=(Token)match(input,27,FOLLOW_26); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      										newLeafNode(otherlv_7, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_3_2_0());
            	            	      									
            	            	    }
            	            	    // InternalKim.g:5872:10: ( (lv_parents_8_0= rulePathName ) )
            	            	    // InternalKim.g:5873:11: (lv_parents_8_0= rulePathName )
            	            	    {
            	            	    // InternalKim.g:5873:11: (lv_parents_8_0= rulePathName )
            	            	    // InternalKim.g:5874:12: lv_parents_8_0= rulePathName
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_2_1_0());
            	            	      											
            	            	    }
            	            	    pushFollow(FOLLOW_91);
            	            	    lv_parents_8_0=rulePathName();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      												if (current==null) {
            	            	      													current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	            	      												}
            	            	      												add(
            	            	      													current,
            	            	      													"parents",
            	            	      													lv_parents_8_0,
            	            	      													"org.integratedmodelling.kim.Kim.PathName");
            	            	      												afterParserOrEnumRuleCall();
            	            	      											
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop137;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5893:8: ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) )
            	    // InternalKim.g:5894:9: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) )
            	    {
            	    // InternalKim.g:5894:9: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) )
            	    // InternalKim.g:5895:10: ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* )
            	    {
            	    getUnorderedGroupHelper().enter(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());
            	    // InternalKim.g:5898:10: ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* )
            	    // InternalKim.g:5899:11: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )*
            	    {
            	    // InternalKim.g:5899:11: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )*
            	    loop141:
            	    do {
            	        int alt141=3;
            	        int LA141_0 = input.LA(1);

            	        if ( LA141_0 == 30 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
            	            alt141=1;
            	        }
            	        else if ( LA141_0 == 111 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
            	            alt141=2;
            	        }


            	        switch (alt141) {
            	    	case 1 :
            	    	    // InternalKim.g:5900:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
            	    	    {
            	    	    // InternalKim.g:5900:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
            	    	    // InternalKim.g:5901:10: {...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0)");
            	    	    }
            	    	    // InternalKim.g:5901:124: ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
            	    	    // InternalKim.g:5902:11: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0);
            	    	    // InternalKim.g:5905:14: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
            	    	    // InternalKim.g:5905:15: {...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    	    }
            	    	    // InternalKim.g:5905:24: (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
            	    	    // InternalKim.g:5905:25: otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
            	    	    {
            	    	    otherlv_10=(Token)match(input,30,FOLLOW_92); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_10, grammarAccess.getObserveStatementBodyAccess().getObservingKeyword_0_4_0_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:5909:14: ( (lv_states_11_0= ruleObservableSemantics ) )
            	    	    // InternalKim.g:5910:15: (lv_states_11_0= ruleObservableSemantics )
            	    	    {
            	    	    // InternalKim.g:5910:15: (lv_states_11_0= ruleObservableSemantics )
            	    	    // InternalKim.g:5911:16: lv_states_11_0= ruleObservableSemantics
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      																newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_1_0());
            	    	      															
            	    	    }
            	    	    pushFollow(FOLLOW_91);
            	    	    lv_states_11_0=ruleObservableSemantics();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      																if (current==null) {
            	    	      																	current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	      																}
            	    	      																add(
            	    	      																	current,
            	    	      																	"states",
            	    	      																	lv_states_11_0,
            	    	      																	"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	    	      																afterParserOrEnumRuleCall();
            	    	      															
            	    	    }

            	    	    }


            	    	    }

            	    	    // InternalKim.g:5928:14: (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
            	    	    loop139:
            	    	    do {
            	    	        int alt139=2;
            	    	        int LA139_0 = input.LA(1);

            	    	        if ( (LA139_0==27) ) {
            	    	            alt139=1;
            	    	        }


            	    	        switch (alt139) {
            	    	    	case 1 :
            	    	    	    // InternalKim.g:5929:15: otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) )
            	    	    	    {
            	    	    	    otherlv_12=(Token)match(input,27,FOLLOW_92); if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      															newLeafNode(otherlv_12, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_4_0_2_0());
            	    	    	      														
            	    	    	    }
            	    	    	    // InternalKim.g:5933:15: ( (lv_states_13_0= ruleObservableSemantics ) )
            	    	    	    // InternalKim.g:5934:16: (lv_states_13_0= ruleObservableSemantics )
            	    	    	    {
            	    	    	    // InternalKim.g:5934:16: (lv_states_13_0= ruleObservableSemantics )
            	    	    	    // InternalKim.g:5935:17: lv_states_13_0= ruleObservableSemantics
            	    	    	    {
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_2_1_0());
            	    	    	      																
            	    	    	    }
            	    	    	    pushFollow(FOLLOW_91);
            	    	    	    lv_states_13_0=ruleObservableSemantics();

            	    	    	    state._fsp--;
            	    	    	    if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																	if (current==null) {
            	    	    	      																		current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	    	      																	}
            	    	    	      																	add(
            	    	    	      																		current,
            	    	    	      																		"states",
            	    	    	      																		lv_states_13_0,
            	    	    	      																		"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	    	    	      																	afterParserOrEnumRuleCall();
            	    	    	      																
            	    	    	    }

            	    	    	    }


            	    	    	    }


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop139;
            	    	        }
            	    	    } while (true);


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // InternalKim.g:5959:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
            	    	    {
            	    	    // InternalKim.g:5959:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
            	    	    // InternalKim.g:5960:10: {...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1)");
            	    	    }
            	    	    // InternalKim.g:5960:124: ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
            	    	    // InternalKim.g:5961:11: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1);
            	    	    // InternalKim.g:5964:14: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
            	    	    // InternalKim.g:5964:15: {...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    	    }
            	    	    // InternalKim.g:5964:24: (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
            	    	    // InternalKim.g:5964:25: otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
            	    	    {
            	    	    otherlv_14=(Token)match(input,111,FOLLOW_40); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_14, grammarAccess.getObserveStatementBodyAccess().getChildrenKeyword_0_4_1_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:5968:14: (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' )
            	    	    // InternalKim.g:5969:15: otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')'
            	    	    {
            	    	    otherlv_15=(Token)match(input,38,FOLLOW_89); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_15, grammarAccess.getObserveStatementBodyAccess().getLeftParenthesisKeyword_0_4_1_1_0());
            	    	      														
            	    	    }
            	    	    // InternalKim.g:5973:15: ( (lv_observations_16_0= ruleObserveStatementBody ) )
            	    	    // InternalKim.g:5974:16: (lv_observations_16_0= ruleObserveStatementBody )
            	    	    {
            	    	    // InternalKim.g:5974:16: (lv_observations_16_0= ruleObserveStatementBody )
            	    	    // InternalKim.g:5975:17: lv_observations_16_0= ruleObserveStatementBody
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_1_1_0());
            	    	      																
            	    	    }
            	    	    pushFollow(FOLLOW_93);
            	    	    lv_observations_16_0=ruleObserveStatementBody();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      																	if (current==null) {
            	    	      																		current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	      																	}
            	    	      																	add(
            	    	      																		current,
            	    	      																		"observations",
            	    	      																		lv_observations_16_0,
            	    	      																		"org.integratedmodelling.kim.Kim.ObserveStatementBody");
            	    	      																	afterParserOrEnumRuleCall();
            	    	      																
            	    	    }

            	    	    }


            	    	    }

            	    	    otherlv_17=(Token)match(input,41,FOLLOW_91); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_17, grammarAccess.getObserveStatementBodyAccess().getRightParenthesisKeyword_0_4_1_1_2());
            	    	      														
            	    	    }

            	    	    }

            	    	    // InternalKim.g:5997:14: (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
            	    	    loop140:
            	    	    do {
            	    	        int alt140=2;
            	    	        int LA140_0 = input.LA(1);

            	    	        if ( (LA140_0==27) ) {
            	    	            alt140=1;
            	    	        }


            	    	        switch (alt140) {
            	    	    	case 1 :
            	    	    	    // InternalKim.g:5998:15: otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')'
            	    	    	    {
            	    	    	    otherlv_18=(Token)match(input,27,FOLLOW_40); if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      															newLeafNode(otherlv_18, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_4_1_2_0());
            	    	    	      														
            	    	    	    }
            	    	    	    otherlv_19=(Token)match(input,38,FOLLOW_89); if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      															newLeafNode(otherlv_19, grammarAccess.getObserveStatementBodyAccess().getLeftParenthesisKeyword_0_4_1_2_1());
            	    	    	      														
            	    	    	    }
            	    	    	    // InternalKim.g:6006:15: ( (lv_observations_20_0= ruleObserveStatementBody ) )
            	    	    	    // InternalKim.g:6007:16: (lv_observations_20_0= ruleObserveStatementBody )
            	    	    	    {
            	    	    	    // InternalKim.g:6007:16: (lv_observations_20_0= ruleObserveStatementBody )
            	    	    	    // InternalKim.g:6008:17: lv_observations_20_0= ruleObserveStatementBody
            	    	    	    {
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_2_2_0());
            	    	    	      																
            	    	    	    }
            	    	    	    pushFollow(FOLLOW_93);
            	    	    	    lv_observations_20_0=ruleObserveStatementBody();

            	    	    	    state._fsp--;
            	    	    	    if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																	if (current==null) {
            	    	    	      																		current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	    	      																	}
            	    	    	      																	add(
            	    	    	      																		current,
            	    	    	      																		"observations",
            	    	    	      																		lv_observations_20_0,
            	    	    	      																		"org.integratedmodelling.kim.Kim.ObserveStatementBody");
            	    	    	      																	afterParserOrEnumRuleCall();
            	    	    	      																
            	    	    	    }

            	    	    	    }


            	    	    	    }

            	    	    	    otherlv_21=(Token)match(input,41,FOLLOW_91); if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      															newLeafNode(otherlv_21, grammarAccess.getObserveStatementBodyAccess().getRightParenthesisKeyword_0_4_1_2_3());
            	    	    	      														
            	    	    	    }

            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop140;
            	    	        }
            	    	    } while (true);


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop141;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().leave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());

            	    }

            	    // InternalKim.g:6043:8: ( (lv_actions_22_0= ruleActionSpecification ) )*
            	    loop142:
            	    do {
            	        int alt142=2;
            	        int LA142_0 = input.LA(1);

            	        if ( ((LA142_0>=54 && LA142_0<=56)||(LA142_0>=62 && LA142_0<=67)) ) {
            	            alt142=1;
            	        }


            	        switch (alt142) {
            	    	case 1 :
            	    	    // InternalKim.g:6044:9: (lv_actions_22_0= ruleActionSpecification )
            	    	    {
            	    	    // InternalKim.g:6044:9: (lv_actions_22_0= ruleActionSpecification )
            	    	    // InternalKim.g:6045:10: lv_actions_22_0= ruleActionSpecification
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getActionsActionSpecificationParserRuleCall_0_5_0());
            	    	      									
            	    	    }
            	    	    pushFollow(FOLLOW_94);
            	    	    lv_actions_22_0=ruleActionSpecification();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										if (current==null) {
            	    	      											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	      										}
            	    	      										add(
            	    	      											current,
            	    	      											"actions",
            	    	      											lv_actions_22_0,
            	    	      											"org.integratedmodelling.kim.Kim.ActionSpecification");
            	    	      										afterParserOrEnumRuleCall();
            	    	      									
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop142;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:6068:3: ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) )
            	    {
            	    // InternalKim.g:6068:3: ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) )
            	    // InternalKim.g:6069:4: {...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1)");
            	    }
            	    // InternalKim.g:6069:114: ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) )
            	    // InternalKim.g:6070:5: ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1);
            	    // InternalKim.g:6073:8: ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) )
            	    // InternalKim.g:6073:9: {...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    }
            	    // InternalKim.g:6073:18: (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? )
            	    // InternalKim.g:6073:19: otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )?
            	    {
            	    otherlv_23=(Token)match(input,31,FOLLOW_95); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								newLeafNode(otherlv_23, grammarAccess.getObserveStatementBodyAccess().getUsingKeyword_1_0());
            	      							
            	    }
            	    // InternalKim.g:6077:8: ( (lv_accessor_24_0= ruleFunction ) )?
            	    int alt143=2;
            	    alt143 = dfa143.predict(input);
            	    switch (alt143) {
            	        case 1 :
            	            // InternalKim.g:6078:9: (lv_accessor_24_0= ruleFunction )
            	            {
            	            // InternalKim.g:6078:9: (lv_accessor_24_0= ruleFunction )
            	            // InternalKim.g:6079:10: lv_accessor_24_0= ruleFunction
            	            {
            	            if ( state.backtracking==0 ) {

            	              										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getAccessorFunctionParserRuleCall_1_1_0());
            	              									
            	            }
            	            pushFollow(FOLLOW_95);
            	            lv_accessor_24_0=ruleFunction();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              										}
            	              										set(
            	              											current,
            	              											"accessor",
            	              											lv_accessor_24_0,
            	              											"org.integratedmodelling.kim.Kim.Function");
            	              										afterParserOrEnumRuleCall();
            	              									
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:6102:3: ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6102:3: ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) )
            	    // InternalKim.g:6103:4: {...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2)");
            	    }
            	    // InternalKim.g:6103:114: ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) )
            	    // InternalKim.g:6104:5: ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2);
            	    // InternalKim.g:6107:8: ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) )
            	    // InternalKim.g:6107:9: {...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    }
            	    // InternalKim.g:6107:18: (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )
            	    // InternalKim.g:6107:19: otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) )
            	    {
            	    otherlv_25=(Token)match(input,42,FOLLOW_33); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								newLeafNode(otherlv_25, grammarAccess.getObserveStatementBodyAccess().getMetadataKeyword_2_0());
            	      							
            	    }
            	    // InternalKim.g:6111:8: ( (lv_metadata_26_0= ruleMetadata ) )
            	    // InternalKim.g:6112:9: (lv_metadata_26_0= ruleMetadata )
            	    {
            	    // InternalKim.g:6112:9: (lv_metadata_26_0= ruleMetadata )
            	    // InternalKim.g:6113:10: lv_metadata_26_0= ruleMetadata
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getMetadataMetadataParserRuleCall_2_1_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_95);
            	    lv_metadata_26_0=ruleMetadata();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	      										}
            	      										set(
            	      											current,
            	      											"metadata",
            	      											lv_metadata_26_0,
            	      											"org.integratedmodelling.kim.Kim.Metadata");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt144 >= 1 ) break loop144;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(144, input);
                        throw eee;
                }
                cnt144++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {
                if (state.backtracking>0) {state.failed=true; return current;}
                throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup())");
            }

            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleObserveStatementBody"


    // $ANTLR start "entryRuleObservableSemantics"
    // InternalKim.g:6150:1: entryRuleObservableSemantics returns [EObject current=null] : iv_ruleObservableSemantics= ruleObservableSemantics EOF ;
    public final EObject entryRuleObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:6154:2: (iv_ruleObservableSemantics= ruleObservableSemantics EOF )
            // InternalKim.g:6155:2: iv_ruleObservableSemantics= ruleObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObservableSemantics=ruleObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleObservableSemantics"


    // $ANTLR start "ruleObservableSemantics"
    // InternalKim.g:6164:1: ruleObservableSemantics returns [EObject current=null] : ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_generic_2_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        Token lv_optional_15_0=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token lv_name_21_1=null;
        Token lv_name_21_2=null;
        EObject lv_value_0_0 = null;

        EObject lv_declaration_3_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;

        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;

        EObject lv_valueOperators_13_0 = null;

        EObject lv_valueOperators_14_0 = null;

        EObject lv_from_17_0 = null;

        EObject lv_to_19_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:6173:2: ( ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:6174:2: ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:6174:2: ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:6175:3: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:6175:3: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )?
            int alt145=2;
            alt145 = dfa145.predict(input);
            switch (alt145) {
                case 1 :
                    // InternalKim.g:6176:4: ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as'
                    {
                    // InternalKim.g:6176:4: ( (lv_value_0_0= ruleValue ) )
                    // InternalKim.g:6177:5: (lv_value_0_0= ruleValue )
                    {
                    // InternalKim.g:6177:5: (lv_value_0_0= ruleValue )
                    // InternalKim.g:6178:6: lv_value_0_0= ruleValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueValueParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_value_0_0=ruleValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_0_0,
                      							"org.integratedmodelling.kim.Kim.Value");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,25,FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getObservableSemanticsAccess().getAsKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:6200:3: ( (lv_generic_2_0= 'any' ) )?
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==112) ) {
                alt146=1;
            }
            switch (alt146) {
                case 1 :
                    // InternalKim.g:6201:4: (lv_generic_2_0= 'any' )
                    {
                    // InternalKim.g:6201:4: (lv_generic_2_0= 'any' )
                    // InternalKim.g:6202:5: lv_generic_2_0= 'any'
                    {
                    lv_generic_2_0=(Token)match(input,112,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generic_2_0, grammarAccess.getObservableSemanticsAccess().getGenericAnyKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getObservableSemanticsRule());
                      					}
                      					setWithLastConsumed(current, "generic", true, "any");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:6214:3: ( (lv_declaration_3_0= ruleConceptDeclaration ) )
            // InternalKim.g:6215:4: (lv_declaration_3_0= ruleConceptDeclaration )
            {
            // InternalKim.g:6215:4: (lv_declaration_3_0= ruleConceptDeclaration )
            // InternalKim.g:6216:5: lv_declaration_3_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_97);
            lv_declaration_3_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_3_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:6233:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:6234:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:6234:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            // InternalKim.g:6235:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());
            // InternalKim.g:6238:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* )
            // InternalKim.g:6239:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )*
            {
            // InternalKim.g:6239:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )*
            loop152:
            do {
                int alt152=7;
                alt152 = dfa152.predict(input);
                switch (alt152) {
            	case 1 :
            	    // InternalKim.g:6240:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6240:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:6241:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:6241:116: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:6242:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:6245:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:6245:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6245:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    // InternalKim.g:6245:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    {
            	    otherlv_5=(Token)match(input,35,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getObservableSemanticsAccess().getAccordingKeyword_3_0_0());
            	      								
            	    }
            	    otherlv_6=(Token)match(input,36,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_0_1());
            	      								
            	    }
            	    // InternalKim.g:6253:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    // InternalKim.g:6254:10: (lv_accordingTo_7_0= rulePropertyId )
            	    {
            	    // InternalKim.g:6254:10: (lv_accordingTo_7_0= rulePropertyId )
            	    // InternalKim.g:6255:11: lv_accordingTo_7_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_97);
            	    lv_accordingTo_7_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_7_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:6278:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6278:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:6279:5: {...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:6279:116: ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:6280:6: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:6283:9: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:6283:10: {...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6283:19: ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    int alt148=2;
            	    int LA148_0 = input.LA(1);

            	    if ( (LA148_0==48) ) {
            	        alt148=1;
            	    }
            	    else if ( (LA148_0==113) ) {
            	        alt148=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 148, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt148) {
            	        case 1 :
            	            // InternalKim.g:6283:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:6283:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:6284:10: otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            {
            	            otherlv_8=(Token)match(input,48,FOLLOW_98); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_8, grammarAccess.getObservableSemanticsAccess().getInKeyword_3_1_0_0());
            	              									
            	            }
            	            // InternalKim.g:6288:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            int alt147=2;
            	            int LA147_0 = input.LA(1);

            	            if ( (LA147_0==EOF||(LA147_0>=RULE_LOWERCASE_ID && LA147_0<=RULE_STRING)||(LA147_0>=RULE_CAMELCASE_ID && LA147_0<=RULE_LOWERCASE_DASHID)||LA147_0==RULE_BACKCASE_ID||LA147_0==20||LA147_0==27||(LA147_0>=30 && LA147_0<=31)||LA147_0==35||LA147_0==38||(LA147_0>=40 && LA147_0<=42)||LA147_0==48||(LA147_0>=54 && LA147_0<=56)||(LA147_0>=62 && LA147_0<=67)||(LA147_0>=76 && LA147_0<=88)||LA147_0==104||LA147_0==107||LA147_0==111||(LA147_0>=113 && LA147_0<=118)||(LA147_0>=128 && LA147_0<=129)||(LA147_0>=137 && LA147_0<=138)||(LA147_0>=140 && LA147_0<=156)||(LA147_0>=169 && LA147_0<=170)||(LA147_0>=173 && LA147_0<=175)||(LA147_0>=177 && LA147_0<=185)||(LA147_0>=188 && LA147_0<=198)||(LA147_0>=246 && LA147_0<=247)||LA147_0==254) ) {
            	                alt147=1;
            	            }
            	            else if ( (LA147_0==RULE_UPPERCASE_ID) ) {
            	                int LA147_2 = input.LA(2);

            	                if ( (LA147_2==EOF||(LA147_2>=RULE_UPPERCASE_ID && LA147_2<=RULE_STRING)||(LA147_2>=RULE_CAMELCASE_ID && LA147_2<=RULE_LOWERCASE_DASHID)||LA147_2==RULE_BACKCASE_ID||LA147_2==20||LA147_2==27||(LA147_2>=30 && LA147_2<=31)||LA147_2==35||LA147_2==38||(LA147_2>=40 && LA147_2<=42)||LA147_2==48||(LA147_2>=54 && LA147_2<=56)||(LA147_2>=62 && LA147_2<=67)||(LA147_2>=76 && LA147_2<=88)||(LA147_2>=104 && LA147_2<=105)||(LA147_2>=107 && LA147_2<=108)||LA147_2==111||(LA147_2>=113 && LA147_2<=118)||(LA147_2>=128 && LA147_2<=129)||(LA147_2>=137 && LA147_2<=138)||(LA147_2>=140 && LA147_2<=156)||(LA147_2>=169 && LA147_2<=170)||(LA147_2>=173 && LA147_2<=175)||(LA147_2>=177 && LA147_2<=185)||(LA147_2>=188 && LA147_2<=198)||(LA147_2>=246 && LA147_2<=247)||LA147_2==254) ) {
            	                    alt147=1;
            	                }
            	                else if ( (LA147_2==245) ) {
            	                    alt147=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 147, 2, input);

            	                    throw nvae;
            	                }
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 147, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt147) {
            	                case 1 :
            	                    // InternalKim.g:6289:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:6289:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    // InternalKim.g:6290:12: (lv_unit_9_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:6290:12: (lv_unit_9_0= ruleUnit )
            	                    // InternalKim.g:6291:13: lv_unit_9_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_97);
            	                    lv_unit_9_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_9_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:6309:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:6309:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    // InternalKim.g:6310:12: (lv_currency_10_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:6310:12: (lv_currency_10_0= ruleCurrency )
            	                    // InternalKim.g:6311:13: lv_currency_10_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_97);
            	                    lv_currency_10_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_10_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:6331:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:6331:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
            	            // InternalKim.g:6332:10: otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) )
            	            {
            	            otherlv_11=(Token)match(input,113,FOLLOW_98); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_11, grammarAccess.getObservableSemanticsAccess().getPerKeyword_3_1_1_0());
            	              									
            	            }
            	            // InternalKim.g:6336:10: ( (lv_unit_12_0= ruleUnit ) )
            	            // InternalKim.g:6337:11: (lv_unit_12_0= ruleUnit )
            	            {
            	            // InternalKim.g:6337:11: (lv_unit_12_0= ruleUnit )
            	            // InternalKim.g:6338:12: lv_unit_12_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_97);
            	            lv_unit_12_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_12_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:6362:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) )
            	    {
            	    // InternalKim.g:6362:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) )
            	    // InternalKim.g:6363:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:6363:116: ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) )
            	    // InternalKim.g:6364:6: ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:6367:9: ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) )
            	    // InternalKim.g:6367:10: {...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6367:19: ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* )
            	    // InternalKim.g:6367:20: ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )*
            	    {
            	    // InternalKim.g:6367:20: ( (lv_valueOperators_13_0= ruleValueOperator ) )
            	    // InternalKim.g:6368:10: (lv_valueOperators_13_0= ruleValueOperator )
            	    {
            	    // InternalKim.g:6368:10: (lv_valueOperators_13_0= ruleValueOperator )
            	    // InternalKim.g:6369:11: lv_valueOperators_13_0= ruleValueOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_97);
            	    lv_valueOperators_13_0=ruleValueOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											add(
            	      												current,
            	      												"valueOperators",
            	      												lv_valueOperators_13_0,
            	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:6386:9: ( (lv_valueOperators_14_0= ruleValueOperator ) )*
            	    loop149:
            	    do {
            	        int alt149=2;
            	        alt149 = dfa149.predict(input);
            	        switch (alt149) {
            	    	case 1 :
            	    	    // InternalKim.g:6387:10: (lv_valueOperators_14_0= ruleValueOperator )
            	    	    {
            	    	    // InternalKim.g:6387:10: (lv_valueOperators_14_0= ruleValueOperator )
            	    	    // InternalKim.g:6388:11: lv_valueOperators_14_0= ruleValueOperator
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_1_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_97);
            	    	    lv_valueOperators_14_0=ruleValueOperator();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"valueOperators",
            	    	      												lv_valueOperators_14_0,
            	    	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop149;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:6411:4: ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) )
            	    {
            	    // InternalKim.g:6411:4: ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) )
            	    // InternalKim.g:6412:5: {...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:6412:116: ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) )
            	    // InternalKim.g:6413:6: ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:6416:9: ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) )
            	    // InternalKim.g:6416:10: {...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6416:19: ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' )
            	    int alt150=2;
            	    int LA150_0 = input.LA(1);

            	    if ( (LA150_0==114) ) {
            	        alt150=1;
            	    }
            	    else if ( (LA150_0==115) ) {
            	        alt150=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 150, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt150) {
            	        case 1 :
            	            // InternalKim.g:6416:20: ( (lv_optional_15_0= 'optional' ) )
            	            {
            	            // InternalKim.g:6416:20: ( (lv_optional_15_0= 'optional' ) )
            	            // InternalKim.g:6417:10: (lv_optional_15_0= 'optional' )
            	            {
            	            // InternalKim.g:6417:10: (lv_optional_15_0= 'optional' )
            	            // InternalKim.g:6418:11: lv_optional_15_0= 'optional'
            	            {
            	            lv_optional_15_0=(Token)match(input,114,FOLLOW_97); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_optional_15_0, grammarAccess.getObservableSemanticsAccess().getOptionalOptionalKeyword_3_3_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	              											}
            	              											setWithLastConsumed(current, "optional", true, "optional");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:6431:9: otherlv_16= 'required'
            	            {
            	            otherlv_16=(Token)match(input,115,FOLLOW_97); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_16, grammarAccess.getObservableSemanticsAccess().getRequiredKeyword_3_3_1());
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:6441:4: ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6441:4: ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:6442:5: {...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalKim.g:6442:116: ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:6443:6: ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4);
            	    // InternalKim.g:6446:9: ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) )
            	    // InternalKim.g:6446:10: {...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6446:19: ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) )
            	    // InternalKim.g:6446:20: ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:6446:20: ( (lv_from_17_0= ruleNumber ) )
            	    // InternalKim.g:6447:10: (lv_from_17_0= ruleNumber )
            	    {
            	    // InternalKim.g:6447:10: (lv_from_17_0= ruleNumber )
            	    // InternalKim.g:6448:11: lv_from_17_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getFromNumberParserRuleCall_3_4_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_from_17_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_17_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_18=(Token)match(input,36,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_18, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_4_1());
            	      								
            	    }
            	    // InternalKim.g:6469:9: ( (lv_to_19_0= ruleNumber ) )
            	    // InternalKim.g:6470:10: (lv_to_19_0= ruleNumber )
            	    {
            	    // InternalKim.g:6470:10: (lv_to_19_0= ruleNumber )
            	    // InternalKim.g:6471:11: lv_to_19_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getToNumberParserRuleCall_3_4_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_97);
            	    lv_to_19_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_19_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:6494:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6494:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
            	    // InternalKim.g:6495:5: {...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalKim.g:6495:116: ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
            	    // InternalKim.g:6496:6: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5);
            	    // InternalKim.g:6499:9: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:6499:10: {...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6499:19: (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
            	    // InternalKim.g:6499:20: otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
            	    {
            	    otherlv_20=(Token)match(input,116,FOLLOW_45); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_20, grammarAccess.getObservableSemanticsAccess().getNamedKeyword_3_5_0());
            	      								
            	    }
            	    // InternalKim.g:6503:9: ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
            	    // InternalKim.g:6504:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
            	    {
            	    // InternalKim.g:6504:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
            	    // InternalKim.g:6505:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
            	    {
            	    // InternalKim.g:6505:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
            	    int alt151=2;
            	    int LA151_0 = input.LA(1);

            	    if ( (LA151_0==RULE_LOWERCASE_ID) ) {
            	        alt151=1;
            	    }
            	    else if ( (LA151_0==RULE_STRING) ) {
            	        alt151=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 151, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt151) {
            	        case 1 :
            	            // InternalKim.g:6506:12: lv_name_21_1= RULE_LOWERCASE_ID
            	            {
            	            lv_name_21_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_97); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_21_1, grammarAccess.getObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_3_5_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_21_1,
            	              													"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              											
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:6521:12: lv_name_21_2= RULE_STRING
            	            {
            	            lv_name_21_2=(Token)match(input,RULE_STRING,FOLLOW_97); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_21_2, grammarAccess.getObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_3_5_1_0_1());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_21_2,
            	              													"org.eclipse.xtext.common.Terminals.STRING");
            	              											
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop152;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleObservableSemantics"


    // $ANTLR start "entryRuleValueOperator"
    // InternalKim.g:6558:1: entryRuleValueOperator returns [EObject current=null] : iv_ruleValueOperator= ruleValueOperator EOF ;
    public final EObject entryRuleValueOperator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueOperator = null;


        try {
            // InternalKim.g:6558:54: (iv_ruleValueOperator= ruleValueOperator EOF )
            // InternalKim.g:6559:2: iv_ruleValueOperator= ruleValueOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueOperator=ruleValueOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueOperator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueOperator"


    // $ANTLR start "ruleValueOperator"
    // InternalKim.g:6565:1: ruleValueOperator returns [EObject current=null] : ( ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) ) ) | ( (lv_total_9_0= 'total' ) ) ) ;
    public final EObject ruleValueOperator() throws RecognitionException {
        EObject current = null;

        Token lv_downTo_1_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_total_9_0=null;
        AntlrDatatypeRuleToken lv_modifier_0_0 = null;

        EObject lv_comparisonValue_3_0 = null;

        EObject lv_comparisonQuantity_4_0 = null;

        EObject lv_comparisonConcept_5_0 = null;

        EObject lv_comparisonObservable_7_0 = null;



        	enterRule();

        try {
            // InternalKim.g:6571:2: ( ( ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) ) ) | ( (lv_total_9_0= 'total' ) ) ) )
            // InternalKim.g:6572:2: ( ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) ) ) | ( (lv_total_9_0= 'total' ) ) )
            {
            // InternalKim.g:6572:2: ( ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) ) ) | ( (lv_total_9_0= 'total' ) ) )
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==55||(LA155_0>=76 && LA155_0<=88)||LA155_0==117) ) {
                alt155=1;
            }
            else if ( (LA155_0==118) ) {
                alt155=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 155, 0, input);

                throw nvae;
            }
            switch (alt155) {
                case 1 :
                    // InternalKim.g:6573:3: ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) ) )
                    {
                    // InternalKim.g:6573:3: ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) ) )
                    // InternalKim.g:6574:4: ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) )
                    {
                    // InternalKim.g:6574:4: ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) )
                    int alt153=2;
                    int LA153_0 = input.LA(1);

                    if ( (LA153_0==55||(LA153_0>=76 && LA153_0<=88)) ) {
                        alt153=1;
                    }
                    else if ( (LA153_0==117) ) {
                        alt153=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 153, 0, input);

                        throw nvae;
                    }
                    switch (alt153) {
                        case 1 :
                            // InternalKim.g:6575:5: ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) )
                            {
                            // InternalKim.g:6575:5: ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) )
                            // InternalKim.g:6576:6: (lv_modifier_0_0= ruleVALUE_OPERATOR )
                            {
                            // InternalKim.g:6576:6: (lv_modifier_0_0= ruleVALUE_OPERATOR )
                            // InternalKim.g:6577:7: lv_modifier_0_0= ruleVALUE_OPERATOR
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValueOperatorAccess().getModifierVALUE_OPERATORParserRuleCall_0_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_23);
                            lv_modifier_0_0=ruleVALUE_OPERATOR();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              							}
                              							set(
                              								current,
                              								"modifier",
                              								lv_modifier_0_0,
                              								"org.integratedmodelling.kim.Kim.VALUE_OPERATOR");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:6595:5: ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' )
                            {
                            // InternalKim.g:6595:5: ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' )
                            // InternalKim.g:6596:6: ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to'
                            {
                            // InternalKim.g:6596:6: ( (lv_downTo_1_0= 'down' ) )
                            // InternalKim.g:6597:7: (lv_downTo_1_0= 'down' )
                            {
                            // InternalKim.g:6597:7: (lv_downTo_1_0= 'down' )
                            // InternalKim.g:6598:8: lv_downTo_1_0= 'down'
                            {
                            lv_downTo_1_0=(Token)match(input,117,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_downTo_1_0, grammarAccess.getValueOperatorAccess().getDownToDownKeyword_0_0_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getValueOperatorRule());
                              								}
                              								setWithLastConsumed(current, "downTo", lv_downTo_1_0, "down");
                              							
                            }

                            }


                            }

                            otherlv_2=(Token)match(input,36,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getValueOperatorAccess().getToKeyword_0_0_1_1());
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:6616:4: ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) )
                    int alt154=4;
                    alt154 = dfa154.predict(input);
                    switch (alt154) {
                        case 1 :
                            // InternalKim.g:6617:5: ( (lv_comparisonValue_3_0= ruleNumber ) )
                            {
                            // InternalKim.g:6617:5: ( (lv_comparisonValue_3_0= ruleNumber ) )
                            // InternalKim.g:6618:6: (lv_comparisonValue_3_0= ruleNumber )
                            {
                            // InternalKim.g:6618:6: (lv_comparisonValue_3_0= ruleNumber )
                            // InternalKim.g:6619:7: lv_comparisonValue_3_0= ruleNumber
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonValueNumberParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_comparisonValue_3_0=ruleNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              							}
                              							set(
                              								current,
                              								"comparisonValue",
                              								lv_comparisonValue_3_0,
                              								"org.integratedmodelling.kim.Kim.Number");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:6637:5: ( (lv_comparisonQuantity_4_0= ruleQuantity ) )
                            {
                            // InternalKim.g:6637:5: ( (lv_comparisonQuantity_4_0= ruleQuantity ) )
                            // InternalKim.g:6638:6: (lv_comparisonQuantity_4_0= ruleQuantity )
                            {
                            // InternalKim.g:6638:6: (lv_comparisonQuantity_4_0= ruleQuantity )
                            // InternalKim.g:6639:7: lv_comparisonQuantity_4_0= ruleQuantity
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonQuantityQuantityParserRuleCall_0_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_comparisonQuantity_4_0=ruleQuantity();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              							}
                              							set(
                              								current,
                              								"comparisonQuantity",
                              								lv_comparisonQuantity_4_0,
                              								"org.integratedmodelling.kim.Kim.Quantity");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:6657:5: ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) )
                            {
                            // InternalKim.g:6657:5: ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) )
                            // InternalKim.g:6658:6: (lv_comparisonConcept_5_0= ruleConceptDeclaration )
                            {
                            // InternalKim.g:6658:6: (lv_comparisonConcept_5_0= ruleConceptDeclaration )
                            // InternalKim.g:6659:7: lv_comparisonConcept_5_0= ruleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonConceptConceptDeclarationParserRuleCall_0_1_2_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_comparisonConcept_5_0=ruleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              							}
                              							set(
                              								current,
                              								"comparisonConcept",
                              								lv_comparisonConcept_5_0,
                              								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:6677:5: (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' )
                            {
                            // InternalKim.g:6677:5: (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' )
                            // InternalKim.g:6678:6: otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')'
                            {
                            otherlv_6=(Token)match(input,38,FOLLOW_92); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_6, grammarAccess.getValueOperatorAccess().getLeftParenthesisKeyword_0_1_3_0());
                              					
                            }
                            // InternalKim.g:6682:6: ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) )
                            // InternalKim.g:6683:7: (lv_comparisonObservable_7_0= ruleObservableSemantics )
                            {
                            // InternalKim.g:6683:7: (lv_comparisonObservable_7_0= ruleObservableSemantics )
                            // InternalKim.g:6684:8: lv_comparisonObservable_7_0= ruleObservableSemantics
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonObservableObservableSemanticsParserRuleCall_0_1_3_1_0());
                              							
                            }
                            pushFollow(FOLLOW_93);
                            lv_comparisonObservable_7_0=ruleObservableSemantics();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              								}
                              								set(
                              									current,
                              									"comparisonObservable",
                              									lv_comparisonObservable_7_0,
                              									"org.integratedmodelling.kim.Kim.ObservableSemantics");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_8=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getValueOperatorAccess().getRightParenthesisKeyword_0_1_3_2());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:6709:3: ( (lv_total_9_0= 'total' ) )
                    {
                    // InternalKim.g:6709:3: ( (lv_total_9_0= 'total' ) )
                    // InternalKim.g:6710:4: (lv_total_9_0= 'total' )
                    {
                    // InternalKim.g:6710:4: (lv_total_9_0= 'total' )
                    // InternalKim.g:6711:5: lv_total_9_0= 'total'
                    {
                    lv_total_9_0=(Token)match(input,118,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_total_9_0, grammarAccess.getValueOperatorAccess().getTotalTotalKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueOperatorRule());
                      					}
                      					setWithLastConsumed(current, "total", lv_total_9_0, "total");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueOperator"


    // $ANTLR start "entryRuleAnnotatedObservableSemantics"
    // InternalKim.g:6727:1: entryRuleAnnotatedObservableSemantics returns [EObject current=null] : iv_ruleAnnotatedObservableSemantics= ruleAnnotatedObservableSemantics EOF ;
    public final EObject entryRuleAnnotatedObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4()
        	);

        try {
            // InternalKim.g:6731:2: (iv_ruleAnnotatedObservableSemantics= ruleAnnotatedObservableSemantics EOF )
            // InternalKim.g:6732:2: iv_ruleAnnotatedObservableSemantics= ruleAnnotatedObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatedObservableSemantics=ruleAnnotatedObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotatedObservableSemantics"


    // $ANTLR start "ruleAnnotatedObservableSemantics"
    // InternalKim.g:6741:1: ruleAnnotatedObservableSemantics returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleAnnotatedObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_generic_3_0=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_12=null;
        Token lv_optional_16_0=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token lv_name_22_1=null;
        Token lv_name_22_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_value_1_0 = null;

        EObject lv_declaration_4_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_8_0 = null;

        EObject lv_unit_10_0 = null;

        EObject lv_currency_11_0 = null;

        EObject lv_unit_13_0 = null;

        EObject lv_valueOperators_14_0 = null;

        EObject lv_valueOperators_15_0 = null;

        EObject lv_from_18_0 = null;

        EObject lv_to_20_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4()
        	);

        try {
            // InternalKim.g:6750:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:6751:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:6751:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:6752:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:6752:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop156:
            do {
                int alt156=2;
                int LA156_0 = input.LA(1);

                if ( (LA156_0==RULE_ANNOTATION_ID) ) {
                    alt156=1;
                }


                switch (alt156) {
            	case 1 :
            	    // InternalKim.g:6753:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:6753:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:6754:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_99);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop156;
                }
            } while (true);

            // InternalKim.g:6771:3: ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )?
            int alt157=2;
            alt157 = dfa157.predict(input);
            switch (alt157) {
                case 1 :
                    // InternalKim.g:6772:4: ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as'
                    {
                    // InternalKim.g:6772:4: ( (lv_value_1_0= ruleValue ) )
                    // InternalKim.g:6773:5: (lv_value_1_0= ruleValue )
                    {
                    // InternalKim.g:6773:5: (lv_value_1_0= ruleValue )
                    // InternalKim.g:6774:6: lv_value_1_0= ruleValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueValueParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_value_1_0=ruleValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_1_0,
                      							"org.integratedmodelling.kim.Kim.Value");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,25,FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getAnnotatedObservableSemanticsAccess().getAsKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:6796:3: ( (lv_generic_3_0= 'any' ) )?
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==112) ) {
                alt158=1;
            }
            switch (alt158) {
                case 1 :
                    // InternalKim.g:6797:4: (lv_generic_3_0= 'any' )
                    {
                    // InternalKim.g:6797:4: (lv_generic_3_0= 'any' )
                    // InternalKim.g:6798:5: lv_generic_3_0= 'any'
                    {
                    lv_generic_3_0=(Token)match(input,112,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generic_3_0, grammarAccess.getAnnotatedObservableSemanticsAccess().getGenericAnyKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
                      					}
                      					setWithLastConsumed(current, "generic", true, "any");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:6810:3: ( (lv_declaration_4_0= ruleConceptDeclaration ) )
            // InternalKim.g:6811:4: (lv_declaration_4_0= ruleConceptDeclaration )
            {
            // InternalKim.g:6811:4: (lv_declaration_4_0= ruleConceptDeclaration )
            // InternalKim.g:6812:5: lv_declaration_4_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_97);
            lv_declaration_4_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_4_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:6829:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:6830:4: ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:6830:4: ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            // InternalKim.g:6831:5: ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());
            // InternalKim.g:6834:5: ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* )
            // InternalKim.g:6835:6: ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )*
            {
            // InternalKim.g:6835:6: ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )*
            loop164:
            do {
                int alt164=7;
                alt164 = dfa164.predict(input);
                switch (alt164) {
            	case 1 :
            	    // InternalKim.g:6836:4: ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6836:4: ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:6837:5: {...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0)");
            	    }
            	    // InternalKim.g:6837:125: ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:6838:6: ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0);
            	    // InternalKim.g:6841:9: ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:6841:10: {...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6841:19: (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) )
            	    // InternalKim.g:6841:20: otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) )
            	    {
            	    otherlv_6=(Token)match(input,35,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getAnnotatedObservableSemanticsAccess().getAccordingKeyword_4_0_0());
            	      								
            	    }
            	    otherlv_7=(Token)match(input,36,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getAnnotatedObservableSemanticsAccess().getToKeyword_4_0_1());
            	      								
            	    }
            	    // InternalKim.g:6849:9: ( (lv_accordingTo_8_0= rulePropertyId ) )
            	    // InternalKim.g:6850:10: (lv_accordingTo_8_0= rulePropertyId )
            	    {
            	    // InternalKim.g:6850:10: (lv_accordingTo_8_0= rulePropertyId )
            	    // InternalKim.g:6851:11: lv_accordingTo_8_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_4_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_97);
            	    lv_accordingTo_8_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_8_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:6874:4: ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6874:4: ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:6875:5: {...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1)");
            	    }
            	    // InternalKim.g:6875:125: ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:6876:6: ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1);
            	    // InternalKim.g:6879:9: ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:6879:10: {...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6879:19: ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) )
            	    int alt160=2;
            	    int LA160_0 = input.LA(1);

            	    if ( (LA160_0==48) ) {
            	        alt160=1;
            	    }
            	    else if ( (LA160_0==113) ) {
            	        alt160=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 160, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt160) {
            	        case 1 :
            	            // InternalKim.g:6879:20: (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:6879:20: (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:6880:10: otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) )
            	            {
            	            otherlv_9=(Token)match(input,48,FOLLOW_98); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_9, grammarAccess.getAnnotatedObservableSemanticsAccess().getInKeyword_4_1_0_0());
            	              									
            	            }
            	            // InternalKim.g:6884:10: ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) )
            	            int alt159=2;
            	            int LA159_0 = input.LA(1);

            	            if ( (LA159_0==EOF||(LA159_0>=RULE_LOWERCASE_ID && LA159_0<=RULE_STRING)||(LA159_0>=RULE_CAMELCASE_ID && LA159_0<=RULE_INT)||LA159_0==RULE_BACKCASE_ID||LA159_0==20||LA159_0==27||(LA159_0>=30 && LA159_0<=33)||LA159_0==35||(LA159_0>=37 && LA159_0<=38)||LA159_0==40||LA159_0==42||LA159_0==48||(LA159_0>=54 && LA159_0<=56)||(LA159_0>=62 && LA159_0<=67)||(LA159_0>=76 && LA159_0<=88)||LA159_0==107||(LA159_0>=113 && LA159_0<=118)||(LA159_0>=246 && LA159_0<=247)||LA159_0==254) ) {
            	                alt159=1;
            	            }
            	            else if ( (LA159_0==RULE_UPPERCASE_ID) ) {
            	                int LA159_2 = input.LA(2);

            	                if ( (LA159_2==245) ) {
            	                    alt159=2;
            	                }
            	                else if ( (LA159_2==EOF||LA159_2==RULE_STRING||LA159_2==RULE_INT||LA159_2==20||LA159_2==27||(LA159_2>=30 && LA159_2<=33)||LA159_2==35||LA159_2==37||LA159_2==40||LA159_2==42||LA159_2==48||(LA159_2>=54 && LA159_2<=56)||(LA159_2>=62 && LA159_2<=67)||(LA159_2>=76 && LA159_2<=88)||LA159_2==107||(LA159_2>=113 && LA159_2<=118)||(LA159_2>=246 && LA159_2<=247)||LA159_2==254) ) {
            	                    alt159=1;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 159, 2, input);

            	                    throw nvae;
            	                }
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 159, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt159) {
            	                case 1 :
            	                    // InternalKim.g:6885:11: ( (lv_unit_10_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:6885:11: ( (lv_unit_10_0= ruleUnit ) )
            	                    // InternalKim.g:6886:12: (lv_unit_10_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:6886:12: (lv_unit_10_0= ruleUnit )
            	                    // InternalKim.g:6887:13: lv_unit_10_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnitUnitParserRuleCall_4_1_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_97);
            	                    lv_unit_10_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_10_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:6905:11: ( (lv_currency_11_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:6905:11: ( (lv_currency_11_0= ruleCurrency ) )
            	                    // InternalKim.g:6906:12: (lv_currency_11_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:6906:12: (lv_currency_11_0= ruleCurrency )
            	                    // InternalKim.g:6907:13: lv_currency_11_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_4_1_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_97);
            	                    lv_currency_11_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_11_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:6927:9: (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:6927:9: (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) )
            	            // InternalKim.g:6928:10: otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) )
            	            {
            	            otherlv_12=(Token)match(input,113,FOLLOW_98); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_12, grammarAccess.getAnnotatedObservableSemanticsAccess().getPerKeyword_4_1_1_0());
            	              									
            	            }
            	            // InternalKim.g:6932:10: ( (lv_unit_13_0= ruleUnit ) )
            	            // InternalKim.g:6933:11: (lv_unit_13_0= ruleUnit )
            	            {
            	            // InternalKim.g:6933:11: (lv_unit_13_0= ruleUnit )
            	            // InternalKim.g:6934:12: lv_unit_13_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnitUnitParserRuleCall_4_1_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_97);
            	            lv_unit_13_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_13_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:6958:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) )
            	    {
            	    // InternalKim.g:6958:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) )
            	    // InternalKim.g:6959:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2)");
            	    }
            	    // InternalKim.g:6959:125: ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) )
            	    // InternalKim.g:6960:6: ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2);
            	    // InternalKim.g:6963:9: ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) )
            	    // InternalKim.g:6963:10: {...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6963:19: ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* )
            	    // InternalKim.g:6963:20: ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )*
            	    {
            	    // InternalKim.g:6963:20: ( (lv_valueOperators_14_0= ruleValueOperator ) )
            	    // InternalKim.g:6964:10: (lv_valueOperators_14_0= ruleValueOperator )
            	    {
            	    // InternalKim.g:6964:10: (lv_valueOperators_14_0= ruleValueOperator )
            	    // InternalKim.g:6965:11: lv_valueOperators_14_0= ruleValueOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_97);
            	    lv_valueOperators_14_0=ruleValueOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      											}
            	      											add(
            	      												current,
            	      												"valueOperators",
            	      												lv_valueOperators_14_0,
            	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:6982:9: ( (lv_valueOperators_15_0= ruleValueOperator ) )*
            	    loop161:
            	    do {
            	        int alt161=2;
            	        alt161 = dfa161.predict(input);
            	        switch (alt161) {
            	    	case 1 :
            	    	    // InternalKim.g:6983:10: (lv_valueOperators_15_0= ruleValueOperator )
            	    	    {
            	    	    // InternalKim.g:6983:10: (lv_valueOperators_15_0= ruleValueOperator )
            	    	    // InternalKim.g:6984:11: lv_valueOperators_15_0= ruleValueOperator
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_1_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_97);
            	    	    lv_valueOperators_15_0=ruleValueOperator();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"valueOperators",
            	    	      												lv_valueOperators_15_0,
            	    	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop161;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:7007:4: ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) )
            	    {
            	    // InternalKim.g:7007:4: ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) )
            	    // InternalKim.g:7008:5: {...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3)");
            	    }
            	    // InternalKim.g:7008:125: ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) )
            	    // InternalKim.g:7009:6: ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3);
            	    // InternalKim.g:7012:9: ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) )
            	    // InternalKim.g:7012:10: {...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7012:19: ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' )
            	    int alt162=2;
            	    int LA162_0 = input.LA(1);

            	    if ( (LA162_0==114) ) {
            	        alt162=1;
            	    }
            	    else if ( (LA162_0==115) ) {
            	        alt162=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 162, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt162) {
            	        case 1 :
            	            // InternalKim.g:7012:20: ( (lv_optional_16_0= 'optional' ) )
            	            {
            	            // InternalKim.g:7012:20: ( (lv_optional_16_0= 'optional' ) )
            	            // InternalKim.g:7013:10: (lv_optional_16_0= 'optional' )
            	            {
            	            // InternalKim.g:7013:10: (lv_optional_16_0= 'optional' )
            	            // InternalKim.g:7014:11: lv_optional_16_0= 'optional'
            	            {
            	            lv_optional_16_0=(Token)match(input,114,FOLLOW_97); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_optional_16_0, grammarAccess.getAnnotatedObservableSemanticsAccess().getOptionalOptionalKeyword_4_3_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
            	              											}
            	              											setWithLastConsumed(current, "optional", true, "optional");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:7027:9: otherlv_17= 'required'
            	            {
            	            otherlv_17=(Token)match(input,115,FOLLOW_97); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_17, grammarAccess.getAnnotatedObservableSemanticsAccess().getRequiredKeyword_4_3_1());
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:7037:4: ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:7037:4: ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:7038:5: {...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4)");
            	    }
            	    // InternalKim.g:7038:125: ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:7039:6: ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4);
            	    // InternalKim.g:7042:9: ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) )
            	    // InternalKim.g:7042:10: {...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7042:19: ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) )
            	    // InternalKim.g:7042:20: ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:7042:20: ( (lv_from_18_0= ruleNumber ) )
            	    // InternalKim.g:7043:10: (lv_from_18_0= ruleNumber )
            	    {
            	    // InternalKim.g:7043:10: (lv_from_18_0= ruleNumber )
            	    // InternalKim.g:7044:11: lv_from_18_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getFromNumberParserRuleCall_4_4_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_from_18_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_18_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_19=(Token)match(input,36,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_19, grammarAccess.getAnnotatedObservableSemanticsAccess().getToKeyword_4_4_1());
            	      								
            	    }
            	    // InternalKim.g:7065:9: ( (lv_to_20_0= ruleNumber ) )
            	    // InternalKim.g:7066:10: (lv_to_20_0= ruleNumber )
            	    {
            	    // InternalKim.g:7066:10: (lv_to_20_0= ruleNumber )
            	    // InternalKim.g:7067:11: lv_to_20_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getToNumberParserRuleCall_4_4_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_97);
            	    lv_to_20_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_20_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:7090:4: ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:7090:4: ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) )
            	    // InternalKim.g:7091:5: {...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5)");
            	    }
            	    // InternalKim.g:7091:125: ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) )
            	    // InternalKim.g:7092:6: ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5);
            	    // InternalKim.g:7095:9: ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:7095:10: {...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7095:19: (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) )
            	    // InternalKim.g:7095:20: otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) )
            	    {
            	    otherlv_21=(Token)match(input,116,FOLLOW_45); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_21, grammarAccess.getAnnotatedObservableSemanticsAccess().getNamedKeyword_4_5_0());
            	      								
            	    }
            	    // InternalKim.g:7099:9: ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) )
            	    // InternalKim.g:7100:10: ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) )
            	    {
            	    // InternalKim.g:7100:10: ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) )
            	    // InternalKim.g:7101:11: (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING )
            	    {
            	    // InternalKim.g:7101:11: (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING )
            	    int alt163=2;
            	    int LA163_0 = input.LA(1);

            	    if ( (LA163_0==RULE_LOWERCASE_ID) ) {
            	        alt163=1;
            	    }
            	    else if ( (LA163_0==RULE_STRING) ) {
            	        alt163=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 163, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt163) {
            	        case 1 :
            	            // InternalKim.g:7102:12: lv_name_22_1= RULE_LOWERCASE_ID
            	            {
            	            lv_name_22_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_97); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_22_1, grammarAccess.getAnnotatedObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_4_5_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_22_1,
            	              													"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              											
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:7117:12: lv_name_22_2= RULE_STRING
            	            {
            	            lv_name_22_2=(Token)match(input,RULE_STRING,FOLLOW_97); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_22_2, grammarAccess.getAnnotatedObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_4_5_1_0_1());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_22_2,
            	              													"org.eclipse.xtext.common.Terminals.STRING");
            	              											
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop164;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleAnnotatedObservableSemantics"


    // $ANTLR start "entryRuleDependency"
    // InternalKim.g:7154:1: entryRuleDependency returns [EObject current=null] : iv_ruleDependency= ruleDependency EOF ;
    public final EObject entryRuleDependency() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDependency = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getDependencyAccess().getUnorderedGroup_1_1()
        	);

        try {
            // InternalKim.g:7158:2: (iv_ruleDependency= ruleDependency EOF )
            // InternalKim.g:7159:2: iv_ruleDependency= ruleDependency EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDependencyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDependency=ruleDependency();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDependency; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleDependency"


    // $ANTLR start "ruleDependency"
    // InternalKim.g:7168:1: ruleDependency returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) ) ) ;
    public final EObject ruleDependency() throws RecognitionException {
        EObject current = null;

        Token lv_modelReference_1_1=null;
        Token lv_modelReference_1_4=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_optional_9_0=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token lv_name_12_1=null;
        Token lv_name_12_2=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_modelReference_1_2 = null;

        AntlrDatatypeRuleToken lv_modelReference_1_3 = null;

        EObject lv_observable_2_0 = null;

        EObject lv_alternativeObservables_5_0 = null;

        EObject lv_alternativeObservables_7_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getDependencyAccess().getUnorderedGroup_1_1()
        	);

        try {
            // InternalKim.g:7177:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
            // InternalKim.g:7178:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) ) )
            {
            // InternalKim.g:7178:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) ) )
            // InternalKim.g:7179:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) )
            {
            // InternalKim.g:7179:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop165:
            do {
                int alt165=2;
                int LA165_0 = input.LA(1);

                if ( (LA165_0==RULE_ANNOTATION_ID) ) {
                    alt165=1;
                }


                switch (alt165) {
            	case 1 :
            	    // InternalKim.g:7180:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:7180:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:7181:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDependencyAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_18);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDependencyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop165;
                }
            } while (true);

            // InternalKim.g:7198:3: ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) )
            int alt172=2;
            alt172 = dfa172.predict(input);
            switch (alt172) {
                case 1 :
                    // InternalKim.g:7199:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) )
                    {
                    // InternalKim.g:7199:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) )
                    int alt167=2;
                    alt167 = dfa167.predict(input);
                    switch (alt167) {
                        case 1 :
                            // InternalKim.g:7200:5: ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) )
                            {
                            // InternalKim.g:7200:5: ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) )
                            // InternalKim.g:7201:6: ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) )
                            {
                            // InternalKim.g:7201:6: ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) )
                            // InternalKim.g:7202:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )
                            {
                            // InternalKim.g:7202:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )
                            int alt166=4;
                            alt166 = dfa166.predict(input);
                            switch (alt166) {
                                case 1 :
                                    // InternalKim.g:7203:8: lv_modelReference_1_1= RULE_LOWERCASE_ID
                                    {
                                    lv_modelReference_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_modelReference_1_1, grammarAccess.getDependencyAccess().getModelReferenceLOWERCASE_IDTerminalRuleCall_1_0_0_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getDependencyRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"modelReference",
                                      									lv_modelReference_1_1,
                                      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7218:8: lv_modelReference_1_2= rulePathName
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getDependencyAccess().getModelReferencePathNameParserRuleCall_1_0_0_0_1());
                                      							
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_modelReference_1_2=rulePathName();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getDependencyRule());
                                      								}
                                      								set(
                                      									current,
                                      									"modelReference",
                                      									lv_modelReference_1_2,
                                      									"org.integratedmodelling.kim.Kim.PathName");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:7234:8: lv_modelReference_1_3= ruleUrnId
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getDependencyAccess().getModelReferenceUrnIdParserRuleCall_1_0_0_0_2());
                                      							
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_modelReference_1_3=ruleUrnId();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getDependencyRule());
                                      								}
                                      								set(
                                      									current,
                                      									"modelReference",
                                      									lv_modelReference_1_3,
                                      									"org.integratedmodelling.kim.Kim.UrnId");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }
                                    break;
                                case 4 :
                                    // InternalKim.g:7250:8: lv_modelReference_1_4= RULE_STRING
                                    {
                                    lv_modelReference_1_4=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_modelReference_1_4, grammarAccess.getDependencyAccess().getModelReferenceSTRINGTerminalRuleCall_1_0_0_0_3());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getDependencyRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"modelReference",
                                      									lv_modelReference_1_4,
                                      									"org.eclipse.xtext.common.Terminals.STRING");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:7268:5: ( (lv_observable_2_0= ruleDependencyObservableSemantics ) )
                            {
                            // InternalKim.g:7268:5: ( (lv_observable_2_0= ruleDependencyObservableSemantics ) )
                            // InternalKim.g:7269:6: (lv_observable_2_0= ruleDependencyObservableSemantics )
                            {
                            // InternalKim.g:7269:6: (lv_observable_2_0= ruleDependencyObservableSemantics )
                            // InternalKim.g:7270:7: lv_observable_2_0= ruleDependencyObservableSemantics
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getDependencyAccess().getObservableDependencyObservableSemanticsParserRuleCall_1_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_observable_2_0=ruleDependencyObservableSemantics();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getDependencyRule());
                              							}
                              							set(
                              								current,
                              								"observable",
                              								lv_observable_2_0,
                              								"org.integratedmodelling.kim.Kim.DependencyObservableSemantics");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:7289:4: ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) )
                    {
                    // InternalKim.g:7289:4: ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) )
                    // InternalKim.g:7290:5: ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) )
                    {
                    // InternalKim.g:7290:5: ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) )
                    // InternalKim.g:7291:6: ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?)
                    {
                    getUnorderedGroupHelper().enter(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());
                    // InternalKim.g:7294:6: ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?)
                    // InternalKim.g:7295:7: ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?
                    {
                    // InternalKim.g:7295:7: ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+
                    int cnt171=0;
                    loop171:
                    do {
                        int alt171=3;
                        int LA171_0 = input.LA(1);

                        if ( LA171_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0) ) {
                            alt171=1;
                        }
                        else if ( LA171_0 == 116 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1) ) {
                            alt171=2;
                        }


                        switch (alt171) {
                    	case 1 :
                    	    // InternalKim.g:7296:5: ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) )
                    	    {
                    	    // InternalKim.g:7296:5: ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) )
                    	    // InternalKim.g:7297:6: {...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleDependency", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0)");
                    	    }
                    	    // InternalKim.g:7297:110: ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) )
                    	    // InternalKim.g:7298:7: ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0);
                    	    // InternalKim.g:7301:10: ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) )
                    	    // InternalKim.g:7301:11: {...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleDependency", "true");
                    	    }
                    	    // InternalKim.g:7301:20: (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? )
                    	    // InternalKim.g:7301:21: otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )?
                    	    {
                    	    otherlv_4=(Token)match(input,38,FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(otherlv_4, grammarAccess.getDependencyAccess().getLeftParenthesisKeyword_1_1_0_0());
                    	      									
                    	    }
                    	    // InternalKim.g:7305:10: ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) )
                    	    // InternalKim.g:7306:11: (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics )
                    	    {
                    	    // InternalKim.g:7306:11: (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics )
                    	    // InternalKim.g:7307:12: lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getDependencyAccess().getAlternativeObservablesAlternativeDependencyObservableSemanticsParserRuleCall_1_1_0_1_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_29);
                    	    lv_alternativeObservables_5_0=ruleAlternativeDependencyObservableSemantics();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getDependencyRule());
                    	      												}
                    	      												add(
                    	      													current,
                    	      													"alternativeObservables",
                    	      													lv_alternativeObservables_5_0,
                    	      													"org.integratedmodelling.kim.Kim.AlternativeDependencyObservableSemantics");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }

                    	    // InternalKim.g:7324:10: (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )*
                    	    loop168:
                    	    do {
                    	        int alt168=2;
                    	        int LA168_0 = input.LA(1);

                    	        if ( (LA168_0==27) ) {
                    	            alt168=1;
                    	        }


                    	        switch (alt168) {
                    	    	case 1 :
                    	    	    // InternalKim.g:7325:11: otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) )
                    	    	    {
                    	    	    otherlv_6=(Token)match(input,27,FOLLOW_100); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      											newLeafNode(otherlv_6, grammarAccess.getDependencyAccess().getCommaKeyword_1_1_0_2_0());
                    	    	      										
                    	    	    }
                    	    	    // InternalKim.g:7329:11: ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) )
                    	    	    // InternalKim.g:7330:12: (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics )
                    	    	    {
                    	    	    // InternalKim.g:7330:12: (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics )
                    	    	    // InternalKim.g:7331:13: lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {

                    	    	      													newCompositeNode(grammarAccess.getDependencyAccess().getAlternativeObservablesAlternativeDependencyObservableSemanticsParserRuleCall_1_1_0_2_1_0());
                    	    	      												
                    	    	    }
                    	    	    pushFollow(FOLLOW_29);
                    	    	    lv_alternativeObservables_7_0=ruleAlternativeDependencyObservableSemantics();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      													if (current==null) {
                    	    	      														current = createModelElementForParent(grammarAccess.getDependencyRule());
                    	    	      													}
                    	    	      													add(
                    	    	      														current,
                    	    	      														"alternativeObservables",
                    	    	      														lv_alternativeObservables_7_0,
                    	    	      														"org.integratedmodelling.kim.Kim.AlternativeDependencyObservableSemantics");
                    	    	      													afterParserOrEnumRuleCall();
                    	    	      												
                    	    	    }

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop168;
                    	        }
                    	    } while (true);

                    	    otherlv_8=(Token)match(input,41,FOLLOW_101); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(otherlv_8, grammarAccess.getDependencyAccess().getRightParenthesisKeyword_1_1_0_3());
                    	      									
                    	    }
                    	    // InternalKim.g:7353:10: ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )?
                    	    int alt169=3;
                    	    int LA169_0 = input.LA(1);

                    	    if ( (LA169_0==114) ) {
                    	        alt169=1;
                    	    }
                    	    else if ( (LA169_0==115) ) {
                    	        alt169=2;
                    	    }
                    	    switch (alt169) {
                    	        case 1 :
                    	            // InternalKim.g:7354:11: ( (lv_optional_9_0= 'optional' ) )
                    	            {
                    	            // InternalKim.g:7354:11: ( (lv_optional_9_0= 'optional' ) )
                    	            // InternalKim.g:7355:12: (lv_optional_9_0= 'optional' )
                    	            {
                    	            // InternalKim.g:7355:12: (lv_optional_9_0= 'optional' )
                    	            // InternalKim.g:7356:13: lv_optional_9_0= 'optional'
                    	            {
                    	            lv_optional_9_0=(Token)match(input,114,FOLLOW_102); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              													newLeafNode(lv_optional_9_0, grammarAccess.getDependencyAccess().getOptionalOptionalKeyword_1_1_0_4_0_0());
                    	              												
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              													if (current==null) {
                    	              														current = createModelElement(grammarAccess.getDependencyRule());
                    	              													}
                    	              													setWithLastConsumed(current, "optional", true, "optional");
                    	              												
                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:7369:11: otherlv_10= 'required'
                    	            {
                    	            otherlv_10=(Token)match(input,115,FOLLOW_102); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              											newLeafNode(otherlv_10, grammarAccess.getDependencyAccess().getRequiredKeyword_1_1_0_4_1());
                    	              										
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKim.g:7380:5: ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7380:5: ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) )
                    	    // InternalKim.g:7381:6: {...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleDependency", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1)");
                    	    }
                    	    // InternalKim.g:7381:110: ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) )
                    	    // InternalKim.g:7382:7: ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1);
                    	    // InternalKim.g:7385:10: ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) )
                    	    // InternalKim.g:7385:11: {...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleDependency", "true");
                    	    }
                    	    // InternalKim.g:7385:20: (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) )
                    	    // InternalKim.g:7385:21: otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) )
                    	    {
                    	    otherlv_11=(Token)match(input,116,FOLLOW_45); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(otherlv_11, grammarAccess.getDependencyAccess().getNamedKeyword_1_1_1_0());
                    	      									
                    	    }
                    	    // InternalKim.g:7389:10: ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) )
                    	    // InternalKim.g:7390:11: ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) )
                    	    {
                    	    // InternalKim.g:7390:11: ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) )
                    	    // InternalKim.g:7391:12: (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING )
                    	    {
                    	    // InternalKim.g:7391:12: (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING )
                    	    int alt170=2;
                    	    int LA170_0 = input.LA(1);

                    	    if ( (LA170_0==RULE_LOWERCASE_ID) ) {
                    	        alt170=1;
                    	    }
                    	    else if ( (LA170_0==RULE_STRING) ) {
                    	        alt170=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 170, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt170) {
                    	        case 1 :
                    	            // InternalKim.g:7392:13: lv_name_12_1= RULE_LOWERCASE_ID
                    	            {
                    	            lv_name_12_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_102); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              													newLeafNode(lv_name_12_1, grammarAccess.getDependencyAccess().getNameLOWERCASE_IDTerminalRuleCall_1_1_1_1_0_0());
                    	              												
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              													if (current==null) {
                    	              														current = createModelElement(grammarAccess.getDependencyRule());
                    	              													}
                    	              													setWithLastConsumed(
                    	              														current,
                    	              														"name",
                    	              														lv_name_12_1,
                    	              														"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                    	              												
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:7407:13: lv_name_12_2= RULE_STRING
                    	            {
                    	            lv_name_12_2=(Token)match(input,RULE_STRING,FOLLOW_102); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              													newLeafNode(lv_name_12_2, grammarAccess.getDependencyAccess().getNameSTRINGTerminalRuleCall_1_1_1_1_0_1());
                    	              												
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              													if (current==null) {
                    	              														current = createModelElement(grammarAccess.getDependencyRule());
                    	              													}
                    	              													setWithLastConsumed(
                    	              														current,
                    	              														"name",
                    	              														lv_name_12_2,
                    	              														"org.eclipse.xtext.common.Terminals.STRING");
                    	              												
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt171 >= 1 ) break loop171;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(171, input);
                                throw eee;
                        }
                        cnt171++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1()) ) {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        throw new FailedPredicateException(input, "ruleDependency", "getUnorderedGroupHelper().canLeave(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1())");
                    }

                    }


                    }

                    getUnorderedGroupHelper().leave(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleDependency"


    // $ANTLR start "entryRuleConceptDeclaration"
    // InternalKim.g:7446:1: entryRuleConceptDeclaration returns [EObject current=null] : iv_ruleConceptDeclaration= ruleConceptDeclaration EOF ;
    public final EObject entryRuleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptDeclaration = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:7450:2: (iv_ruleConceptDeclaration= ruleConceptDeclaration EOF )
            // InternalKim.g:7451:2: iv_ruleConceptDeclaration= ruleConceptDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptDeclaration=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptDeclaration"


    // $ANTLR start "ruleConceptDeclaration"
    // InternalKim.g:7460:1: ruleConceptDeclaration returns [EObject current=null] : ( ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )? ) ;
    public final EObject ruleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_distributedOfInherency_3_0=null;
        Token otherlv_5=null;
        Token lv_distributedForInherency_6_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token lv_distributedWithinInherency_26_0=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        EObject lv_main_0_0 = null;

        EObject lv_inherency_4_0 = null;

        EObject lv_motivation_7_0 = null;

        EObject lv_compresent_9_0 = null;

        EObject lv_causant_12_0 = null;

        EObject lv_adjacent_15_0 = null;

        EObject lv_container_18_0 = null;

        EObject lv_contained_20_0 = null;

        EObject lv_caused_22_0 = null;

        EObject lv_during_24_0 = null;

        EObject lv_context_27_0 = null;

        EObject lv_relationshipSource_29_0 = null;

        EObject lv_relationshipTarget_31_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:7469:2: ( ( ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )? ) )
            // InternalKim.g:7470:2: ( ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )? )
            {
            // InternalKim.g:7470:2: ( ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )? )
            // InternalKim.g:7471:3: ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )?
            {
            // InternalKim.g:7471:3: ( (lv_main_0_0= ruleConcept ) )+
            int cnt173=0;
            loop173:
            do {
                int alt173=2;
                alt173 = dfa173.predict(input);
                switch (alt173) {
            	case 1 :
            	    // InternalKim.g:7472:4: (lv_main_0_0= ruleConcept )
            	    {
            	    // InternalKim.g:7472:4: (lv_main_0_0= ruleConcept )
            	    // InternalKim.g:7473:5: lv_main_0_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMainConceptParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_103);
            	    lv_main_0_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"main",
            	      						lv_main_0_0,
            	      						"org.integratedmodelling.kim.Kim.Concept");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt173 >= 1 ) break loop173;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(173, input);
                        throw eee;
                }
                cnt173++;
            } while (true);

            // InternalKim.g:7490:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )?
            int alt178=2;
            alt178 = dfa178.predict(input);
            switch (alt178) {
                case 1 :
                    // InternalKim.g:7491:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
                    {
                    // InternalKim.g:7491:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
                    // InternalKim.g:7492:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
                    {
                    getUnorderedGroupHelper().enter(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
                    // InternalKim.g:7495:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
                    // InternalKim.g:7496:6: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
                    {
                    // InternalKim.g:7496:6: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
                    loop177:
                    do {
                        int alt177=12;
                        alt177 = dfa177.predict(input);
                        switch (alt177) {
                    	case 1 :
                    	    // InternalKim.g:7497:4: ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7497:4: ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    // InternalKim.g:7498:5: {...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalKim.g:7498:115: ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:7499:6: ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0);
                    	    // InternalKim.g:7502:9: ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:7502:10: {...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:7502:19: (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:7502:20: otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    otherlv_2=(Token)match(input,119,FOLLOW_104); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_2, grammarAccess.getConceptDeclarationAccess().getOfKeyword_1_0_0());
                    	      								
                    	    }
                    	    // InternalKim.g:7506:9: ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:7507:10: ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:7507:10: ( (lv_distributedOfInherency_3_0= 'each' ) )?
                    	    int alt174=2;
                    	    int LA174_0 = input.LA(1);

                    	    if ( (LA174_0==26) ) {
                    	        alt174=1;
                    	    }
                    	    switch (alt174) {
                    	        case 1 :
                    	            // InternalKim.g:7508:11: (lv_distributedOfInherency_3_0= 'each' )
                    	            {
                    	            // InternalKim.g:7508:11: (lv_distributedOfInherency_3_0= 'each' )
                    	            // InternalKim.g:7509:12: lv_distributedOfInherency_3_0= 'each'
                    	            {
                    	            lv_distributedOfInherency_3_0=(Token)match(input,26,FOLLOW_104); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              												newLeafNode(lv_distributedOfInherency_3_0, grammarAccess.getConceptDeclarationAccess().getDistributedOfInherencyEachKeyword_1_0_1_0_0());
                    	              											
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              												if (current==null) {
                    	              													current = createModelElement(grammarAccess.getConceptDeclarationRule());
                    	              												}
                    	              												setWithLastConsumed(current, "distributedOfInherency", true, "each");
                    	              											
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:7521:10: ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7522:11: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7522:11: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7523:12: lv_inherency_4_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_1_0_1_1_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_105);
                    	    lv_inherency_4_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      												}
                    	      												set(
                    	      													current,
                    	      													"inherency",
                    	      													lv_inherency_4_0,
                    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKim.g:7547:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7547:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    // InternalKim.g:7548:5: {...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalKim.g:7548:115: ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:7549:6: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1);
                    	    // InternalKim.g:7552:9: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:7552:10: {...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:7552:19: (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:7552:20: otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    otherlv_5=(Token)match(input,69,FOLLOW_104); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_5, grammarAccess.getConceptDeclarationAccess().getForKeyword_1_1_0());
                    	      								
                    	    }
                    	    // InternalKim.g:7556:9: ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:7557:10: ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:7557:10: ( (lv_distributedForInherency_6_0= 'each' ) )?
                    	    int alt175=2;
                    	    int LA175_0 = input.LA(1);

                    	    if ( (LA175_0==26) ) {
                    	        alt175=1;
                    	    }
                    	    switch (alt175) {
                    	        case 1 :
                    	            // InternalKim.g:7558:11: (lv_distributedForInherency_6_0= 'each' )
                    	            {
                    	            // InternalKim.g:7558:11: (lv_distributedForInherency_6_0= 'each' )
                    	            // InternalKim.g:7559:12: lv_distributedForInherency_6_0= 'each'
                    	            {
                    	            lv_distributedForInherency_6_0=(Token)match(input,26,FOLLOW_104); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              												newLeafNode(lv_distributedForInherency_6_0, grammarAccess.getConceptDeclarationAccess().getDistributedForInherencyEachKeyword_1_1_1_0_0());
                    	              											
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              												if (current==null) {
                    	              													current = createModelElement(grammarAccess.getConceptDeclarationRule());
                    	              												}
                    	              												setWithLastConsumed(current, "distributedForInherency", true, "each");
                    	              											
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:7571:10: ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7572:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7572:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7573:12: lv_motivation_7_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_1_1_1_1_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_105);
                    	    lv_motivation_7_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      												}
                    	      												set(
                    	      													current,
                    	      													"motivation",
                    	      													lv_motivation_7_0,
                    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalKim.g:7597:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7597:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:7598:5: {...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalKim.g:7598:115: ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:7599:6: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2);
                    	    // InternalKim.g:7602:9: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:7602:10: {...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:7602:19: (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:7602:20: otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_8=(Token)match(input,98,FOLLOW_104); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_8, grammarAccess.getConceptDeclarationAccess().getWithKeyword_1_2_0());
                    	      								
                    	    }
                    	    // InternalKim.g:7606:9: ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7607:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7607:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7608:11: lv_compresent_9_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_1_2_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_105);
                    	    lv_compresent_9_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"compresent",
                    	      												lv_compresent_9_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalKim.g:7631:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7631:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:7632:5: {...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalKim.g:7632:115: ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:7633:6: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3);
                    	    // InternalKim.g:7636:9: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:7636:10: {...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:7636:19: (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:7636:20: otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_10=(Token)match(input,120,FOLLOW_106); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_10, grammarAccess.getConceptDeclarationAccess().getCausedKeyword_1_3_0());
                    	      								
                    	    }
                    	    otherlv_11=(Token)match(input,88,FOLLOW_104); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_11, grammarAccess.getConceptDeclarationAccess().getByKeyword_1_3_1());
                    	      								
                    	    }
                    	    // InternalKim.g:7644:9: ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7645:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7645:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7646:11: lv_causant_12_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_1_3_2_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_105);
                    	    lv_causant_12_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"causant",
                    	      												lv_causant_12_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalKim.g:7669:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7669:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:7670:5: {...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalKim.g:7670:115: ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:7671:6: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4);
                    	    // InternalKim.g:7674:9: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:7674:10: {...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:7674:19: (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:7674:20: otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_13=(Token)match(input,121,FOLLOW_25); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_13, grammarAccess.getConceptDeclarationAccess().getAdjacentKeyword_1_4_0());
                    	      								
                    	    }
                    	    otherlv_14=(Token)match(input,36,FOLLOW_104); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_14, grammarAccess.getConceptDeclarationAccess().getToKeyword_1_4_1());
                    	      								
                    	    }
                    	    // InternalKim.g:7682:9: ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7683:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7683:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7684:11: lv_adjacent_15_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_1_4_2_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_105);
                    	    lv_adjacent_15_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"adjacent",
                    	      												lv_adjacent_15_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalKim.g:7707:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7707:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:7708:5: {...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalKim.g:7708:115: ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:7709:6: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5);
                    	    // InternalKim.g:7712:9: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:7712:10: {...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:7712:19: (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:7712:20: otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_16=(Token)match(input,122,FOLLOW_107); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_16, grammarAccess.getConceptDeclarationAccess().getContainedKeyword_1_5_0());
                    	      								
                    	    }
                    	    otherlv_17=(Token)match(input,48,FOLLOW_104); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_17, grammarAccess.getConceptDeclarationAccess().getInKeyword_1_5_1());
                    	      								
                    	    }
                    	    // InternalKim.g:7720:9: ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7721:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7721:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7722:11: lv_container_18_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_1_5_2_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_105);
                    	    lv_container_18_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"container",
                    	      												lv_container_18_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalKim.g:7745:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7745:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:7746:5: {...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalKim.g:7746:115: ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:7747:6: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6);
                    	    // InternalKim.g:7750:9: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:7750:10: {...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:7750:19: (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:7750:20: otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_19=(Token)match(input,123,FOLLOW_104); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_19, grammarAccess.getConceptDeclarationAccess().getContainingKeyword_1_6_0());
                    	      								
                    	    }
                    	    // InternalKim.g:7754:9: ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7755:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7755:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7756:11: lv_contained_20_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_1_6_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_105);
                    	    lv_contained_20_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"contained",
                    	      												lv_contained_20_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 8 :
                    	    // InternalKim.g:7779:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7779:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:7780:5: {...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7)");
                    	    }
                    	    // InternalKim.g:7780:115: ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:7781:6: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7);
                    	    // InternalKim.g:7784:9: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:7784:10: {...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:7784:19: (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:7784:20: otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_21=(Token)match(input,124,FOLLOW_104); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_21, grammarAccess.getConceptDeclarationAccess().getCausingKeyword_1_7_0());
                    	      								
                    	    }
                    	    // InternalKim.g:7788:9: ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7789:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7789:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7790:11: lv_caused_22_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_1_7_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_105);
                    	    lv_caused_22_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"caused",
                    	      												lv_caused_22_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 9 :
                    	    // InternalKim.g:7813:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7813:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:7814:5: {...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8)");
                    	    }
                    	    // InternalKim.g:7814:115: ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:7815:6: ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8);
                    	    // InternalKim.g:7818:9: ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:7818:10: {...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:7818:19: (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:7818:20: otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_23=(Token)match(input,125,FOLLOW_104); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_23, grammarAccess.getConceptDeclarationAccess().getDuringKeyword_1_8_0());
                    	      								
                    	    }
                    	    // InternalKim.g:7822:9: ( (lv_during_24_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7823:10: (lv_during_24_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7823:10: (lv_during_24_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7824:11: lv_during_24_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getDuringSimpleConceptDeclarationParserRuleCall_1_8_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_105);
                    	    lv_during_24_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"during",
                    	      												lv_during_24_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 10 :
                    	    // InternalKim.g:7847:4: ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7847:4: ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    // InternalKim.g:7848:5: {...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9)");
                    	    }
                    	    // InternalKim.g:7848:115: ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:7849:6: ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9);
                    	    // InternalKim.g:7852:9: ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:7852:10: {...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:7852:19: (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:7852:20: otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    otherlv_25=(Token)match(input,126,FOLLOW_104); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_25, grammarAccess.getConceptDeclarationAccess().getWithinKeyword_1_9_0());
                    	      								
                    	    }
                    	    // InternalKim.g:7856:9: ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:7857:10: ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:7857:10: ( (lv_distributedWithinInherency_26_0= 'each' ) )?
                    	    int alt176=2;
                    	    int LA176_0 = input.LA(1);

                    	    if ( (LA176_0==26) ) {
                    	        alt176=1;
                    	    }
                    	    switch (alt176) {
                    	        case 1 :
                    	            // InternalKim.g:7858:11: (lv_distributedWithinInherency_26_0= 'each' )
                    	            {
                    	            // InternalKim.g:7858:11: (lv_distributedWithinInherency_26_0= 'each' )
                    	            // InternalKim.g:7859:12: lv_distributedWithinInherency_26_0= 'each'
                    	            {
                    	            lv_distributedWithinInherency_26_0=(Token)match(input,26,FOLLOW_104); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              												newLeafNode(lv_distributedWithinInherency_26_0, grammarAccess.getConceptDeclarationAccess().getDistributedWithinInherencyEachKeyword_1_9_1_0_0());
                    	              											
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              												if (current==null) {
                    	              													current = createModelElement(grammarAccess.getConceptDeclarationRule());
                    	              												}
                    	              												setWithLastConsumed(current, "distributedWithinInherency", true, "each");
                    	              											
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:7871:10: ( (lv_context_27_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7872:11: (lv_context_27_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7872:11: (lv_context_27_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7873:12: lv_context_27_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContextSimpleConceptDeclarationParserRuleCall_1_9_1_1_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_105);
                    	    lv_context_27_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      												}
                    	      												set(
                    	      													current,
                    	      													"context",
                    	      													lv_context_27_0,
                    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 11 :
                    	    // InternalKim.g:7897:4: ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7897:4: ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:7898:5: {...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10)");
                    	    }
                    	    // InternalKim.g:7898:116: ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:7899:6: ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10);
                    	    // InternalKim.g:7902:9: ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:7902:10: {...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:7902:19: (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:7902:20: otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_28=(Token)match(input,127,FOLLOW_104); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_28, grammarAccess.getConceptDeclarationAccess().getLinkingKeyword_1_10_0());
                    	      								
                    	    }
                    	    // InternalKim.g:7906:9: ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7907:10: (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7907:10: (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7908:11: lv_relationshipSource_29_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipSourceSimpleConceptDeclarationParserRuleCall_1_10_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    lv_relationshipSource_29_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"relationshipSource",
                    	      												lv_relationshipSource_29_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }

                    	    otherlv_30=(Token)match(input,36,FOLLOW_104); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_30, grammarAccess.getConceptDeclarationAccess().getToKeyword_1_10_2());
                    	      								
                    	    }
                    	    // InternalKim.g:7929:9: ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7930:10: (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7930:10: (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7931:11: lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipTargetSimpleConceptDeclarationParserRuleCall_1_10_3_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_105);
                    	    lv_relationshipTarget_31_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"relationshipTarget",
                    	      												lv_relationshipTarget_31_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop177;
                        }
                    } while (true);


                    }


                    }

                    getUnorderedGroupHelper().leave(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptDeclaration"


    // $ANTLR start "entryRuleConceptReference"
    // InternalKim.g:7968:1: entryRuleConceptReference returns [EObject current=null] : iv_ruleConceptReference= ruleConceptReference EOF ;
    public final EObject entryRuleConceptReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptReference = null;


        try {
            // InternalKim.g:7968:57: (iv_ruleConceptReference= ruleConceptReference EOF )
            // InternalKim.g:7969:2: iv_ruleConceptReference= ruleConceptReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptReference=ruleConceptReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConceptReference"


    // $ANTLR start "ruleConceptReference"
    // InternalKim.g:7975:1: ruleConceptReference returns [EObject current=null] : ( ( (lv_name_0_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_1_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'cooccurrent' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) ) ) ) ;
    public final EObject ruleConceptReference() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_templateType_2_1=null;
        Token lv_templateType_2_2=null;
        Token lv_name_3_0=null;
        Token otherlv_5=null;
        Token lv_name_7_0=null;
        Token otherlv_9=null;
        Token lv_name_11_0=null;
        Token otherlv_13=null;
        Token lv_name_15_0=null;
        Token otherlv_17=null;
        Token lv_name_19_0=null;
        Token otherlv_21=null;
        Token lv_name_23_0=null;
        Token otherlv_25=null;
        Token lv_name_27_0=null;
        Token otherlv_29=null;
        Token lv_name_31_0=null;
        Token otherlv_33=null;
        Token lv_name_35_0=null;
        Token otherlv_37=null;
        Token lv_name_39_0=null;
        Token otherlv_41=null;
        Token lv_template_43_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_4_0 = null;

        EObject lv_extends_6_0 = null;

        AntlrDatatypeRuleToken lv_type_8_0 = null;

        EObject lv_extends_10_0 = null;

        AntlrDatatypeRuleToken lv_type_12_0 = null;

        EObject lv_extends_14_0 = null;

        AntlrDatatypeRuleToken lv_type_16_0 = null;

        EObject lv_extends_18_0 = null;

        AntlrDatatypeRuleToken lv_type_20_0 = null;

        EObject lv_extends_22_0 = null;

        AntlrDatatypeRuleToken lv_type_24_0 = null;

        EObject lv_extends_26_0 = null;

        AntlrDatatypeRuleToken lv_type_28_0 = null;

        EObject lv_extends_30_0 = null;

        AntlrDatatypeRuleToken lv_type_32_0 = null;

        EObject lv_extends_34_0 = null;

        AntlrDatatypeRuleToken lv_type_36_0 = null;

        EObject lv_extends_38_0 = null;

        AntlrDatatypeRuleToken lv_type_40_0 = null;

        EObject lv_extends_42_0 = null;



        	enterRule();

        try {
            // InternalKim.g:7981:2: ( ( ( (lv_name_0_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_1_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'cooccurrent' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) ) ) ) )
            // InternalKim.g:7982:2: ( ( (lv_name_0_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_1_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'cooccurrent' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) ) ) )
            {
            // InternalKim.g:7982:2: ( ( (lv_name_0_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_1_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'cooccurrent' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) ) ) )
            int alt191=3;
            switch ( input.LA(1) ) {
            case RULE_CAMELCASE_ID:
                {
                alt191=1;
                }
                break;
            case RULE_UPPERCASE_ID:
            case RULE_LOWERCASE_ID:
            case RULE_LOWERCASE_DASHID:
                {
                alt191=2;
                }
                break;
            case 128:
            case 129:
                {
                alt191=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 191, 0, input);

                throw nvae;
            }

            switch (alt191) {
                case 1 :
                    // InternalKim.g:7983:3: ( (lv_name_0_0= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:7983:3: ( (lv_name_0_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:7984:4: (lv_name_0_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:7984:4: (lv_name_0_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:7985:5: lv_name_0_0= RULE_CAMELCASE_ID
                    {
                    lv_name_0_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_0, grammarAccess.getConceptReferenceAccess().getNameCAMELCASE_IDTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConceptReferenceRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:8002:3: ( (lv_name_1_0= ruleNamespaceId ) )
                    {
                    // InternalKim.g:8002:3: ( (lv_name_1_0= ruleNamespaceId ) )
                    // InternalKim.g:8003:4: (lv_name_1_0= ruleNamespaceId )
                    {
                    // InternalKim.g:8003:4: (lv_name_1_0= ruleNamespaceId )
                    // InternalKim.g:8004:5: lv_name_1_0= ruleNamespaceId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConceptReferenceAccess().getNameNamespaceIdParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_1_0=ruleNamespaceId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.integratedmodelling.kim.Kim.NamespaceId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:8022:3: ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'cooccurrent' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) ) )
                    {
                    // InternalKim.g:8022:3: ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'cooccurrent' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) ) )
                    // InternalKim.g:8023:4: ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'cooccurrent' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) )
                    {
                    // InternalKim.g:8023:4: ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) )
                    // InternalKim.g:8024:5: ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) )
                    {
                    // InternalKim.g:8024:5: ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) )
                    // InternalKim.g:8025:6: (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' )
                    {
                    // InternalKim.g:8025:6: (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' )
                    int alt179=2;
                    int LA179_0 = input.LA(1);

                    if ( (LA179_0==128) ) {
                        alt179=1;
                    }
                    else if ( (LA179_0==129) ) {
                        alt179=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 179, 0, input);

                        throw nvae;
                    }
                    switch (alt179) {
                        case 1 :
                            // InternalKim.g:8026:7: lv_templateType_2_1= '${'
                            {
                            lv_templateType_2_1=(Token)match(input,128,FOLLOW_108); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_templateType_2_1, grammarAccess.getConceptReferenceAccess().getTemplateTypeDollarSignLeftCurlyBracketKeyword_2_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptReferenceRule());
                              							}
                              							setWithLastConsumed(current, "templateType", lv_templateType_2_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:8037:7: lv_templateType_2_2= '#{'
                            {
                            lv_templateType_2_2=(Token)match(input,129,FOLLOW_108); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_templateType_2_2, grammarAccess.getConceptReferenceAccess().getTemplateTypeNumberSignLeftCurlyBracketKeyword_2_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptReferenceRule());
                              							}
                              							setWithLastConsumed(current, "templateType", lv_templateType_2_2, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:8050:4: ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'cooccurrent' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) )
                    int alt190=10;
                    switch ( input.LA(1) ) {
                    case 60:
                        {
                        alt190=1;
                        }
                        break;
                    case 130:
                        {
                        alt190=2;
                        }
                        break;
                    case 131:
                        {
                        alt190=3;
                        }
                        break;
                    case 121:
                        {
                        alt190=4;
                        }
                        break;
                    case 132:
                        {
                        alt190=5;
                        }
                        break;
                    case 122:
                        {
                        alt190=6;
                        }
                        break;
                    case 133:
                        {
                        alt190=7;
                        }
                        break;
                    case 134:
                        {
                        alt190=8;
                        }
                        break;
                    case 120:
                        {
                        alt190=9;
                        }
                        break;
                    case 135:
                        {
                        alt190=10;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 190, 0, input);

                        throw nvae;
                    }

                    switch (alt190) {
                        case 1 :
                            // InternalKim.g:8051:5: ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8051:5: ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8052:6: ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8052:6: ( (lv_name_3_0= 'context' ) )
                            // InternalKim.g:8053:7: (lv_name_3_0= 'context' )
                            {
                            // InternalKim.g:8053:7: (lv_name_3_0= 'context' )
                            // InternalKim.g:8054:8: lv_name_3_0= 'context'
                            {
                            lv_name_3_0=(Token)match(input,60,FOLLOW_109); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_3_0, grammarAccess.getConceptReferenceAccess().getNameContextKeyword_2_1_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_3_0, "context");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8066:6: ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) )
                            int alt180=2;
                            int LA180_0 = input.LA(1);

                            if ( (LA180_0==95||LA180_0==156||(LA180_0>=163 && LA180_0<=164)||LA180_0==186||(LA180_0>=206 && LA180_0<=208)||(LA180_0>=213 && LA180_0<=242)) ) {
                                alt180=1;
                            }
                            else if ( (LA180_0==110) ) {
                                alt180=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 180, 0, input);

                                throw nvae;
                            }
                            switch (alt180) {
                                case 1 :
                                    // InternalKim.g:8067:7: ( (lv_type_4_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8067:7: ( (lv_type_4_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8068:8: (lv_type_4_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8068:8: (lv_type_4_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8069:9: lv_type_4_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_0_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_110);
                                    lv_type_4_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_4_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8087:7: (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8087:7: (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) )
                                    // InternalKim.g:8088:8: otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) )
                                    {
                                    otherlv_5=(Token)match(input,110,FOLLOW_23); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_5, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_0_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8092:8: ( (lv_extends_6_0= ruleConcept ) )
                                    // InternalKim.g:8093:9: (lv_extends_6_0= ruleConcept )
                                    {
                                    // InternalKim.g:8093:9: (lv_extends_6_0= ruleConcept )
                                    // InternalKim.g:8094:10: lv_extends_6_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_0_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_110);
                                    lv_extends_6_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_6_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:8115:5: ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8115:5: ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8116:6: ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8116:6: ( (lv_name_7_0= 'inherent' ) )
                            // InternalKim.g:8117:7: (lv_name_7_0= 'inherent' )
                            {
                            // InternalKim.g:8117:7: (lv_name_7_0= 'inherent' )
                            // InternalKim.g:8118:8: lv_name_7_0= 'inherent'
                            {
                            lv_name_7_0=(Token)match(input,130,FOLLOW_109); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_7_0, grammarAccess.getConceptReferenceAccess().getNameInherentKeyword_2_1_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_7_0, "inherent");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8130:6: ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) )
                            int alt181=2;
                            int LA181_0 = input.LA(1);

                            if ( (LA181_0==95||LA181_0==156||(LA181_0>=163 && LA181_0<=164)||LA181_0==186||(LA181_0>=206 && LA181_0<=208)||(LA181_0>=213 && LA181_0<=242)) ) {
                                alt181=1;
                            }
                            else if ( (LA181_0==110) ) {
                                alt181=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 181, 0, input);

                                throw nvae;
                            }
                            switch (alt181) {
                                case 1 :
                                    // InternalKim.g:8131:7: ( (lv_type_8_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8131:7: ( (lv_type_8_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8132:8: (lv_type_8_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8132:8: (lv_type_8_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8133:9: lv_type_8_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_1_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_110);
                                    lv_type_8_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_8_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8151:7: (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8151:7: (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) )
                                    // InternalKim.g:8152:8: otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) )
                                    {
                                    otherlv_9=(Token)match(input,110,FOLLOW_23); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_9, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_1_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8156:8: ( (lv_extends_10_0= ruleConcept ) )
                                    // InternalKim.g:8157:9: (lv_extends_10_0= ruleConcept )
                                    {
                                    // InternalKim.g:8157:9: (lv_extends_10_0= ruleConcept )
                                    // InternalKim.g:8158:10: lv_extends_10_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_1_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_110);
                                    lv_extends_10_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_10_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:8179:5: ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8179:5: ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8180:6: ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8180:6: ( (lv_name_11_0= 'compresent' ) )
                            // InternalKim.g:8181:7: (lv_name_11_0= 'compresent' )
                            {
                            // InternalKim.g:8181:7: (lv_name_11_0= 'compresent' )
                            // InternalKim.g:8182:8: lv_name_11_0= 'compresent'
                            {
                            lv_name_11_0=(Token)match(input,131,FOLLOW_109); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_11_0, grammarAccess.getConceptReferenceAccess().getNameCompresentKeyword_2_1_2_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_11_0, "compresent");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8194:6: ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) )
                            int alt182=2;
                            int LA182_0 = input.LA(1);

                            if ( (LA182_0==95||LA182_0==156||(LA182_0>=163 && LA182_0<=164)||LA182_0==186||(LA182_0>=206 && LA182_0<=208)||(LA182_0>=213 && LA182_0<=242)) ) {
                                alt182=1;
                            }
                            else if ( (LA182_0==110) ) {
                                alt182=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 182, 0, input);

                                throw nvae;
                            }
                            switch (alt182) {
                                case 1 :
                                    // InternalKim.g:8195:7: ( (lv_type_12_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8195:7: ( (lv_type_12_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8196:8: (lv_type_12_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8196:8: (lv_type_12_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8197:9: lv_type_12_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_2_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_110);
                                    lv_type_12_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_12_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8215:7: (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8215:7: (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) )
                                    // InternalKim.g:8216:8: otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) )
                                    {
                                    otherlv_13=(Token)match(input,110,FOLLOW_23); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_13, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_2_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8220:8: ( (lv_extends_14_0= ruleConcept ) )
                                    // InternalKim.g:8221:9: (lv_extends_14_0= ruleConcept )
                                    {
                                    // InternalKim.g:8221:9: (lv_extends_14_0= ruleConcept )
                                    // InternalKim.g:8222:10: lv_extends_14_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_2_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_110);
                                    lv_extends_14_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_14_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:8243:5: ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8243:5: ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8244:6: ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8244:6: ( (lv_name_15_0= 'adjacent' ) )
                            // InternalKim.g:8245:7: (lv_name_15_0= 'adjacent' )
                            {
                            // InternalKim.g:8245:7: (lv_name_15_0= 'adjacent' )
                            // InternalKim.g:8246:8: lv_name_15_0= 'adjacent'
                            {
                            lv_name_15_0=(Token)match(input,121,FOLLOW_109); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_15_0, grammarAccess.getConceptReferenceAccess().getNameAdjacentKeyword_2_1_3_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_15_0, "adjacent");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8258:6: ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) )
                            int alt183=2;
                            int LA183_0 = input.LA(1);

                            if ( (LA183_0==95||LA183_0==156||(LA183_0>=163 && LA183_0<=164)||LA183_0==186||(LA183_0>=206 && LA183_0<=208)||(LA183_0>=213 && LA183_0<=242)) ) {
                                alt183=1;
                            }
                            else if ( (LA183_0==110) ) {
                                alt183=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 183, 0, input);

                                throw nvae;
                            }
                            switch (alt183) {
                                case 1 :
                                    // InternalKim.g:8259:7: ( (lv_type_16_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8259:7: ( (lv_type_16_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8260:8: (lv_type_16_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8260:8: (lv_type_16_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8261:9: lv_type_16_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_3_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_110);
                                    lv_type_16_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_16_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8279:7: (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8279:7: (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) )
                                    // InternalKim.g:8280:8: otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) )
                                    {
                                    otherlv_17=(Token)match(input,110,FOLLOW_23); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_17, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_3_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8284:8: ( (lv_extends_18_0= ruleConcept ) )
                                    // InternalKim.g:8285:9: (lv_extends_18_0= ruleConcept )
                                    {
                                    // InternalKim.g:8285:9: (lv_extends_18_0= ruleConcept )
                                    // InternalKim.g:8286:10: lv_extends_18_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_3_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_110);
                                    lv_extends_18_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_18_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 5 :
                            // InternalKim.g:8307:5: ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8307:5: ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8308:6: ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8308:6: ( (lv_name_19_0= 'container' ) )
                            // InternalKim.g:8309:7: (lv_name_19_0= 'container' )
                            {
                            // InternalKim.g:8309:7: (lv_name_19_0= 'container' )
                            // InternalKim.g:8310:8: lv_name_19_0= 'container'
                            {
                            lv_name_19_0=(Token)match(input,132,FOLLOW_109); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_19_0, grammarAccess.getConceptReferenceAccess().getNameContainerKeyword_2_1_4_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_19_0, "container");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8322:6: ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) )
                            int alt184=2;
                            int LA184_0 = input.LA(1);

                            if ( (LA184_0==95||LA184_0==156||(LA184_0>=163 && LA184_0<=164)||LA184_0==186||(LA184_0>=206 && LA184_0<=208)||(LA184_0>=213 && LA184_0<=242)) ) {
                                alt184=1;
                            }
                            else if ( (LA184_0==110) ) {
                                alt184=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 184, 0, input);

                                throw nvae;
                            }
                            switch (alt184) {
                                case 1 :
                                    // InternalKim.g:8323:7: ( (lv_type_20_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8323:7: ( (lv_type_20_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8324:8: (lv_type_20_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8324:8: (lv_type_20_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8325:9: lv_type_20_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_4_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_110);
                                    lv_type_20_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_20_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8343:7: (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8343:7: (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) )
                                    // InternalKim.g:8344:8: otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) )
                                    {
                                    otherlv_21=(Token)match(input,110,FOLLOW_23); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_21, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_4_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8348:8: ( (lv_extends_22_0= ruleConcept ) )
                                    // InternalKim.g:8349:9: (lv_extends_22_0= ruleConcept )
                                    {
                                    // InternalKim.g:8349:9: (lv_extends_22_0= ruleConcept )
                                    // InternalKim.g:8350:10: lv_extends_22_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_4_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_110);
                                    lv_extends_22_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_22_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 6 :
                            // InternalKim.g:8371:5: ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8371:5: ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8372:6: ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8372:6: ( (lv_name_23_0= 'contained' ) )
                            // InternalKim.g:8373:7: (lv_name_23_0= 'contained' )
                            {
                            // InternalKim.g:8373:7: (lv_name_23_0= 'contained' )
                            // InternalKim.g:8374:8: lv_name_23_0= 'contained'
                            {
                            lv_name_23_0=(Token)match(input,122,FOLLOW_109); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_23_0, grammarAccess.getConceptReferenceAccess().getNameContainedKeyword_2_1_5_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_23_0, "contained");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8386:6: ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) )
                            int alt185=2;
                            int LA185_0 = input.LA(1);

                            if ( (LA185_0==95||LA185_0==156||(LA185_0>=163 && LA185_0<=164)||LA185_0==186||(LA185_0>=206 && LA185_0<=208)||(LA185_0>=213 && LA185_0<=242)) ) {
                                alt185=1;
                            }
                            else if ( (LA185_0==110) ) {
                                alt185=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 185, 0, input);

                                throw nvae;
                            }
                            switch (alt185) {
                                case 1 :
                                    // InternalKim.g:8387:7: ( (lv_type_24_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8387:7: ( (lv_type_24_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8388:8: (lv_type_24_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8388:8: (lv_type_24_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8389:9: lv_type_24_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_5_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_110);
                                    lv_type_24_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_24_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8407:7: (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8407:7: (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) )
                                    // InternalKim.g:8408:8: otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) )
                                    {
                                    otherlv_25=(Token)match(input,110,FOLLOW_23); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_25, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_5_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8412:8: ( (lv_extends_26_0= ruleConcept ) )
                                    // InternalKim.g:8413:9: (lv_extends_26_0= ruleConcept )
                                    {
                                    // InternalKim.g:8413:9: (lv_extends_26_0= ruleConcept )
                                    // InternalKim.g:8414:10: lv_extends_26_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_5_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_110);
                                    lv_extends_26_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_26_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 7 :
                            // InternalKim.g:8435:5: ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8435:5: ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8436:6: ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8436:6: ( (lv_name_27_0= 'purpose' ) )
                            // InternalKim.g:8437:7: (lv_name_27_0= 'purpose' )
                            {
                            // InternalKim.g:8437:7: (lv_name_27_0= 'purpose' )
                            // InternalKim.g:8438:8: lv_name_27_0= 'purpose'
                            {
                            lv_name_27_0=(Token)match(input,133,FOLLOW_109); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_27_0, grammarAccess.getConceptReferenceAccess().getNamePurposeKeyword_2_1_6_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_27_0, "purpose");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8450:6: ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) )
                            int alt186=2;
                            int LA186_0 = input.LA(1);

                            if ( (LA186_0==95||LA186_0==156||(LA186_0>=163 && LA186_0<=164)||LA186_0==186||(LA186_0>=206 && LA186_0<=208)||(LA186_0>=213 && LA186_0<=242)) ) {
                                alt186=1;
                            }
                            else if ( (LA186_0==110) ) {
                                alt186=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 186, 0, input);

                                throw nvae;
                            }
                            switch (alt186) {
                                case 1 :
                                    // InternalKim.g:8451:7: ( (lv_type_28_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8451:7: ( (lv_type_28_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8452:8: (lv_type_28_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8452:8: (lv_type_28_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8453:9: lv_type_28_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_6_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_110);
                                    lv_type_28_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_28_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8471:7: (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8471:7: (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) )
                                    // InternalKim.g:8472:8: otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) )
                                    {
                                    otherlv_29=(Token)match(input,110,FOLLOW_23); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_29, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_6_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8476:8: ( (lv_extends_30_0= ruleConcept ) )
                                    // InternalKim.g:8477:9: (lv_extends_30_0= ruleConcept )
                                    {
                                    // InternalKim.g:8477:9: (lv_extends_30_0= ruleConcept )
                                    // InternalKim.g:8478:10: lv_extends_30_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_6_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_110);
                                    lv_extends_30_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_30_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 8 :
                            // InternalKim.g:8499:5: ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8499:5: ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8500:6: ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8500:6: ( (lv_name_31_0= 'causant' ) )
                            // InternalKim.g:8501:7: (lv_name_31_0= 'causant' )
                            {
                            // InternalKim.g:8501:7: (lv_name_31_0= 'causant' )
                            // InternalKim.g:8502:8: lv_name_31_0= 'causant'
                            {
                            lv_name_31_0=(Token)match(input,134,FOLLOW_109); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_31_0, grammarAccess.getConceptReferenceAccess().getNameCausantKeyword_2_1_7_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_31_0, "causant");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8514:6: ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) )
                            int alt187=2;
                            int LA187_0 = input.LA(1);

                            if ( (LA187_0==95||LA187_0==156||(LA187_0>=163 && LA187_0<=164)||LA187_0==186||(LA187_0>=206 && LA187_0<=208)||(LA187_0>=213 && LA187_0<=242)) ) {
                                alt187=1;
                            }
                            else if ( (LA187_0==110) ) {
                                alt187=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 187, 0, input);

                                throw nvae;
                            }
                            switch (alt187) {
                                case 1 :
                                    // InternalKim.g:8515:7: ( (lv_type_32_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8515:7: ( (lv_type_32_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8516:8: (lv_type_32_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8516:8: (lv_type_32_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8517:9: lv_type_32_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_7_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_110);
                                    lv_type_32_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_32_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8535:7: (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8535:7: (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) )
                                    // InternalKim.g:8536:8: otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) )
                                    {
                                    otherlv_33=(Token)match(input,110,FOLLOW_23); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_33, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_7_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8540:8: ( (lv_extends_34_0= ruleConcept ) )
                                    // InternalKim.g:8541:9: (lv_extends_34_0= ruleConcept )
                                    {
                                    // InternalKim.g:8541:9: (lv_extends_34_0= ruleConcept )
                                    // InternalKim.g:8542:10: lv_extends_34_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_7_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_110);
                                    lv_extends_34_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_34_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 9 :
                            // InternalKim.g:8563:5: ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8563:5: ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8564:6: ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8564:6: ( (lv_name_35_0= 'caused' ) )
                            // InternalKim.g:8565:7: (lv_name_35_0= 'caused' )
                            {
                            // InternalKim.g:8565:7: (lv_name_35_0= 'caused' )
                            // InternalKim.g:8566:8: lv_name_35_0= 'caused'
                            {
                            lv_name_35_0=(Token)match(input,120,FOLLOW_109); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_35_0, grammarAccess.getConceptReferenceAccess().getNameCausedKeyword_2_1_8_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_35_0, "caused");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8578:6: ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) )
                            int alt188=2;
                            int LA188_0 = input.LA(1);

                            if ( (LA188_0==95||LA188_0==156||(LA188_0>=163 && LA188_0<=164)||LA188_0==186||(LA188_0>=206 && LA188_0<=208)||(LA188_0>=213 && LA188_0<=242)) ) {
                                alt188=1;
                            }
                            else if ( (LA188_0==110) ) {
                                alt188=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 188, 0, input);

                                throw nvae;
                            }
                            switch (alt188) {
                                case 1 :
                                    // InternalKim.g:8579:7: ( (lv_type_36_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8579:7: ( (lv_type_36_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8580:8: (lv_type_36_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8580:8: (lv_type_36_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8581:9: lv_type_36_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_8_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_110);
                                    lv_type_36_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_36_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8599:7: (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8599:7: (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) )
                                    // InternalKim.g:8600:8: otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) )
                                    {
                                    otherlv_37=(Token)match(input,110,FOLLOW_23); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_37, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_8_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8604:8: ( (lv_extends_38_0= ruleConcept ) )
                                    // InternalKim.g:8605:9: (lv_extends_38_0= ruleConcept )
                                    {
                                    // InternalKim.g:8605:9: (lv_extends_38_0= ruleConcept )
                                    // InternalKim.g:8606:10: lv_extends_38_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_8_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_110);
                                    lv_extends_38_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_38_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 10 :
                            // InternalKim.g:8627:5: ( ( (lv_name_39_0= 'cooccurrent' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8627:5: ( ( (lv_name_39_0= 'cooccurrent' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8628:6: ( (lv_name_39_0= 'cooccurrent' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8628:6: ( (lv_name_39_0= 'cooccurrent' ) )
                            // InternalKim.g:8629:7: (lv_name_39_0= 'cooccurrent' )
                            {
                            // InternalKim.g:8629:7: (lv_name_39_0= 'cooccurrent' )
                            // InternalKim.g:8630:8: lv_name_39_0= 'cooccurrent'
                            {
                            lv_name_39_0=(Token)match(input,135,FOLLOW_109); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_39_0, grammarAccess.getConceptReferenceAccess().getNameCooccurrentKeyword_2_1_9_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_39_0, "cooccurrent");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8642:6: ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) )
                            int alt189=2;
                            int LA189_0 = input.LA(1);

                            if ( (LA189_0==95||LA189_0==156||(LA189_0>=163 && LA189_0<=164)||LA189_0==186||(LA189_0>=206 && LA189_0<=208)||(LA189_0>=213 && LA189_0<=242)) ) {
                                alt189=1;
                            }
                            else if ( (LA189_0==110) ) {
                                alt189=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 189, 0, input);

                                throw nvae;
                            }
                            switch (alt189) {
                                case 1 :
                                    // InternalKim.g:8643:7: ( (lv_type_40_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8643:7: ( (lv_type_40_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8644:8: (lv_type_40_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8644:8: (lv_type_40_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8645:9: lv_type_40_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_9_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_110);
                                    lv_type_40_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_40_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8663:7: (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8663:7: (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) )
                                    // InternalKim.g:8664:8: otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) )
                                    {
                                    otherlv_41=(Token)match(input,110,FOLLOW_23); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_41, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_9_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8668:8: ( (lv_extends_42_0= ruleConcept ) )
                                    // InternalKim.g:8669:9: (lv_extends_42_0= ruleConcept )
                                    {
                                    // InternalKim.g:8669:9: (lv_extends_42_0= ruleConcept )
                                    // InternalKim.g:8670:10: lv_extends_42_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_9_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_110);
                                    lv_extends_42_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_42_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:8691:4: ( (lv_template_43_0= '}' ) )
                    // InternalKim.g:8692:5: (lv_template_43_0= '}' )
                    {
                    // InternalKim.g:8692:5: (lv_template_43_0= '}' )
                    // InternalKim.g:8693:6: lv_template_43_0= '}'
                    {
                    lv_template_43_0=(Token)match(input,136,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_template_43_0, grammarAccess.getConceptReferenceAccess().getTemplateRightCurlyBracketKeyword_2_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptReferenceRule());
                      						}
                      						setWithLastConsumed(current, "template", true, "}");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConceptReference"


    // $ANTLR start "entryRuleOPERATOR_TARGET"
    // InternalKim.g:8710:1: entryRuleOPERATOR_TARGET returns [String current=null] : iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF ;
    public final String entryRuleOPERATOR_TARGET() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOPERATOR_TARGET = null;


        try {
            // InternalKim.g:8710:55: (iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF )
            // InternalKim.g:8711:2: iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOPERATOR_TARGETRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOPERATOR_TARGET=ruleOPERATOR_TARGET();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOPERATOR_TARGET.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOPERATOR_TARGET"


    // $ANTLR start "ruleOPERATOR_TARGET"
    // InternalKim.g:8717:1: ruleOPERATOR_TARGET returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' | kw= 'cooccurrent' ) ;
    public final AntlrDatatypeRuleToken ruleOPERATOR_TARGET() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:8723:2: ( (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' | kw= 'cooccurrent' ) )
            // InternalKim.g:8724:2: (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' | kw= 'cooccurrent' )
            {
            // InternalKim.g:8724:2: (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' | kw= 'cooccurrent' )
            int alt192=10;
            switch ( input.LA(1) ) {
            case 60:
                {
                alt192=1;
                }
                break;
            case 130:
                {
                alt192=2;
                }
                break;
            case 131:
                {
                alt192=3;
                }
                break;
            case 121:
                {
                alt192=4;
                }
                break;
            case 132:
                {
                alt192=5;
                }
                break;
            case 122:
                {
                alt192=6;
                }
                break;
            case 133:
                {
                alt192=7;
                }
                break;
            case 134:
                {
                alt192=8;
                }
                break;
            case 120:
                {
                alt192=9;
                }
                break;
            case 135:
                {
                alt192=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 192, 0, input);

                throw nvae;
            }

            switch (alt192) {
                case 1 :
                    // InternalKim.g:8725:3: kw= 'context'
                    {
                    kw=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContextKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:8731:3: kw= 'inherent'
                    {
                    kw=(Token)match(input,130,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getInherentKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:8737:3: kw= 'compresent'
                    {
                    kw=(Token)match(input,131,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCompresentKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:8743:3: kw= 'adjacent'
                    {
                    kw=(Token)match(input,121,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getAdjacentKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:8749:3: kw= 'container'
                    {
                    kw=(Token)match(input,132,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContainerKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:8755:3: kw= 'contained'
                    {
                    kw=(Token)match(input,122,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContainedKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:8761:3: kw= 'purpose'
                    {
                    kw=(Token)match(input,133,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getPurposeKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:8767:3: kw= 'causant'
                    {
                    kw=(Token)match(input,134,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCausantKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:8773:3: kw= 'caused'
                    {
                    kw=(Token)match(input,120,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCausedKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:8779:3: kw= 'cooccurrent'
                    {
                    kw=(Token)match(input,135,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCooccurrentKeyword_9());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOPERATOR_TARGET"


    // $ANTLR start "entryRuleConcept"
    // InternalKim.g:8788:1: entryRuleConcept returns [EObject current=null] : iv_ruleConcept= ruleConcept EOF ;
    public final EObject entryRuleConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConcept = null;


        try {
            // InternalKim.g:8788:48: (iv_ruleConcept= ruleConcept EOF )
            // InternalKim.g:8789:2: iv_ruleConcept= ruleConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConcept=ruleConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConcept"


    // $ANTLR start "ruleConcept"
    // InternalKim.g:8795:1: ruleConcept returns [EObject current=null] : ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_27_0= 'magnitude' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_level_30_0= 'level' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_33_0= 'type' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_36_0= 'observability' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_39_0= 'proportion' ) ) otherlv_40= 'of' ( (lv_concept_41_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_42= 'in' ) ( (lv_other_43_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_percentage_44_0= 'percentage' ) ) otherlv_45= 'of' ( (lv_concept_46_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_47= 'in' ) ( (lv_other_48_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_49_0= 'ratio' ) ) otherlv_50= 'of' ( (lv_concept_51_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_52= 'to' ) ( (lv_other_53_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_monetary_54_0= 'monetary' ) )? ( (lv_value_55_0= 'value' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_58= 'over' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_60_0= 'occurrence' ) ) otherlv_61= 'of' ( (lv_concept_62_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_authConcept_63_0= 'identity' ) ) ( ( ( (lv_stringIdentifier_64_1= RULE_ID | lv_stringIdentifier_64_2= RULE_STRING | lv_stringIdentifier_64_3= RULE_UPPERCASE_ID | lv_stringIdentifier_64_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_65_0= RULE_INT ) ) ) otherlv_66= 'by' ( ( (lv_authority_67_1= RULE_UPPERCASE_ID | lv_authority_67_2= RULE_UPPERCASE_PATH ) ) ) ) | (otherlv_68= '(' ( (lv_declaration_69_0= ruleExpression ) ) otherlv_70= ')' ) ) ;
    public final EObject ruleConcept() throws RecognitionException {
        EObject current = null;

        Token lv_negated_0_1=null;
        Token lv_negated_0_2=null;
        Token lv_authConcept_2_0=null;
        Token otherlv_3=null;
        Token lv_stringIdentifier_4_1=null;
        Token lv_stringIdentifier_4_2=null;
        Token lv_stringIdentifier_4_3=null;
        Token lv_stringIdentifier_4_4=null;
        Token lv_intIdentifier_5_0=null;
        Token otherlv_6=null;
        Token lv_authority_7_1=null;
        Token lv_authority_7_2=null;
        Token lv_presence_8_0=null;
        Token otherlv_9=null;
        Token lv_count_11_0=null;
        Token otherlv_12=null;
        Token lv_distance_14_0=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token lv_probability_18_0=null;
        Token otherlv_19=null;
        Token lv_assessment_21_0=null;
        Token otherlv_22=null;
        Token lv_uncertainty_24_0=null;
        Token otherlv_25=null;
        Token lv_magnitude_27_0=null;
        Token otherlv_28=null;
        Token lv_level_30_0=null;
        Token otherlv_31=null;
        Token lv_type_33_0=null;
        Token otherlv_34=null;
        Token lv_observability_36_0=null;
        Token otherlv_37=null;
        Token lv_proportion_39_0=null;
        Token otherlv_40=null;
        Token otherlv_42=null;
        Token lv_percentage_44_0=null;
        Token otherlv_45=null;
        Token otherlv_47=null;
        Token lv_ratio_49_0=null;
        Token otherlv_50=null;
        Token otherlv_52=null;
        Token lv_monetary_54_0=null;
        Token lv_value_55_0=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token lv_occurrence_60_0=null;
        Token otherlv_61=null;
        Token lv_authConcept_63_0=null;
        Token lv_stringIdentifier_64_1=null;
        Token lv_stringIdentifier_64_2=null;
        Token lv_stringIdentifier_64_3=null;
        Token lv_stringIdentifier_64_4=null;
        Token lv_intIdentifier_65_0=null;
        Token otherlv_66=null;
        Token lv_authority_67_1=null;
        Token lv_authority_67_2=null;
        Token otherlv_68=null;
        Token otherlv_70=null;
        EObject lv_name_1_0 = null;

        EObject lv_concept_10_0 = null;

        EObject lv_concept_13_0 = null;

        EObject lv_concept_17_0 = null;

        EObject lv_concept_20_0 = null;

        EObject lv_concept_23_0 = null;

        EObject lv_concept_26_0 = null;

        EObject lv_concept_29_0 = null;

        EObject lv_concept_32_0 = null;

        EObject lv_concept_35_0 = null;

        EObject lv_concept_38_0 = null;

        EObject lv_concept_41_0 = null;

        EObject lv_other_43_0 = null;

        EObject lv_concept_46_0 = null;

        EObject lv_other_48_0 = null;

        EObject lv_concept_51_0 = null;

        EObject lv_other_53_0 = null;

        EObject lv_concept_57_0 = null;

        EObject lv_other_59_0 = null;

        EObject lv_concept_62_0 = null;

        EObject lv_declaration_69_0 = null;



        	enterRule();

        try {
            // InternalKim.g:8801:2: ( ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_27_0= 'magnitude' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_level_30_0= 'level' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_33_0= 'type' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_36_0= 'observability' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_39_0= 'proportion' ) ) otherlv_40= 'of' ( (lv_concept_41_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_42= 'in' ) ( (lv_other_43_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_percentage_44_0= 'percentage' ) ) otherlv_45= 'of' ( (lv_concept_46_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_47= 'in' ) ( (lv_other_48_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_49_0= 'ratio' ) ) otherlv_50= 'of' ( (lv_concept_51_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_52= 'to' ) ( (lv_other_53_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_monetary_54_0= 'monetary' ) )? ( (lv_value_55_0= 'value' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_58= 'over' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_60_0= 'occurrence' ) ) otherlv_61= 'of' ( (lv_concept_62_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_authConcept_63_0= 'identity' ) ) ( ( ( (lv_stringIdentifier_64_1= RULE_ID | lv_stringIdentifier_64_2= RULE_STRING | lv_stringIdentifier_64_3= RULE_UPPERCASE_ID | lv_stringIdentifier_64_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_65_0= RULE_INT ) ) ) otherlv_66= 'by' ( ( (lv_authority_67_1= RULE_UPPERCASE_ID | lv_authority_67_2= RULE_UPPERCASE_PATH ) ) ) ) | (otherlv_68= '(' ( (lv_declaration_69_0= ruleExpression ) ) otherlv_70= ')' ) ) )
            // InternalKim.g:8802:2: ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_27_0= 'magnitude' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_level_30_0= 'level' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_33_0= 'type' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_36_0= 'observability' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_39_0= 'proportion' ) ) otherlv_40= 'of' ( (lv_concept_41_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_42= 'in' ) ( (lv_other_43_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_percentage_44_0= 'percentage' ) ) otherlv_45= 'of' ( (lv_concept_46_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_47= 'in' ) ( (lv_other_48_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_49_0= 'ratio' ) ) otherlv_50= 'of' ( (lv_concept_51_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_52= 'to' ) ( (lv_other_53_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_monetary_54_0= 'monetary' ) )? ( (lv_value_55_0= 'value' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_58= 'over' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_60_0= 'occurrence' ) ) otherlv_61= 'of' ( (lv_concept_62_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_authConcept_63_0= 'identity' ) ) ( ( ( (lv_stringIdentifier_64_1= RULE_ID | lv_stringIdentifier_64_2= RULE_STRING | lv_stringIdentifier_64_3= RULE_UPPERCASE_ID | lv_stringIdentifier_64_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_65_0= RULE_INT ) ) ) otherlv_66= 'by' ( ( (lv_authority_67_1= RULE_UPPERCASE_ID | lv_authority_67_2= RULE_UPPERCASE_PATH ) ) ) ) | (otherlv_68= '(' ( (lv_declaration_69_0= ruleExpression ) ) otherlv_70= ')' ) )
            {
            // InternalKim.g:8802:2: ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_27_0= 'magnitude' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_level_30_0= 'level' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_33_0= 'type' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_36_0= 'observability' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_39_0= 'proportion' ) ) otherlv_40= 'of' ( (lv_concept_41_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_42= 'in' ) ( (lv_other_43_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_percentage_44_0= 'percentage' ) ) otherlv_45= 'of' ( (lv_concept_46_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_47= 'in' ) ( (lv_other_48_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_49_0= 'ratio' ) ) otherlv_50= 'of' ( (lv_concept_51_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_52= 'to' ) ( (lv_other_53_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_monetary_54_0= 'monetary' ) )? ( (lv_value_55_0= 'value' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_58= 'over' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_60_0= 'occurrence' ) ) otherlv_61= 'of' ( (lv_concept_62_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_authConcept_63_0= 'identity' ) ) ( ( ( (lv_stringIdentifier_64_1= RULE_ID | lv_stringIdentifier_64_2= RULE_STRING | lv_stringIdentifier_64_3= RULE_UPPERCASE_ID | lv_stringIdentifier_64_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_65_0= RULE_INT ) ) ) otherlv_66= 'by' ( ( (lv_authority_67_1= RULE_UPPERCASE_ID | lv_authority_67_2= RULE_UPPERCASE_PATH ) ) ) ) | (otherlv_68= '(' ( (lv_declaration_69_0= ruleExpression ) ) otherlv_70= ')' ) )
            int alt207=18;
            switch ( input.LA(1) ) {
            case RULE_UPPERCASE_ID:
            case RULE_LOWERCASE_ID:
            case RULE_CAMELCASE_ID:
            case RULE_LOWERCASE_DASHID:
            case 128:
            case 129:
            case 137:
            case 138:
                {
                alt207=1;
                }
                break;
            case 140:
                {
                alt207=2;
                }
                break;
            case 141:
                {
                alt207=3;
                }
                break;
            case 142:
                {
                alt207=4;
                }
                break;
            case 143:
                {
                alt207=5;
                }
                break;
            case 144:
                {
                alt207=6;
                }
                break;
            case 145:
                {
                alt207=7;
                }
                break;
            case 146:
                {
                alt207=8;
                }
                break;
            case 147:
                {
                alt207=9;
                }
                break;
            case 148:
                {
                alt207=10;
                }
                break;
            case 149:
                {
                alt207=11;
                }
                break;
            case 150:
                {
                alt207=12;
                }
                break;
            case 151:
                {
                alt207=13;
                }
                break;
            case 152:
                {
                alt207=14;
                }
                break;
            case 153:
            case 154:
                {
                alt207=15;
                }
                break;
            case 155:
                {
                alt207=16;
                }
                break;
            case 156:
                {
                alt207=17;
                }
                break;
            case 38:
                {
                alt207=18;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 207, 0, input);

                throw nvae;
            }

            switch (alt207) {
                case 1 :
                    // InternalKim.g:8803:3: ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    {
                    // InternalKim.g:8803:3: ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    // InternalKim.g:8804:4: ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )?
                    {
                    // InternalKim.g:8804:4: ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )?
                    int alt194=2;
                    int LA194_0 = input.LA(1);

                    if ( ((LA194_0>=137 && LA194_0<=138)) ) {
                        alt194=1;
                    }
                    switch (alt194) {
                        case 1 :
                            // InternalKim.g:8805:5: ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) )
                            {
                            // InternalKim.g:8805:5: ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) )
                            // InternalKim.g:8806:6: (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' )
                            {
                            // InternalKim.g:8806:6: (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' )
                            int alt193=2;
                            int LA193_0 = input.LA(1);

                            if ( (LA193_0==137) ) {
                                alt193=1;
                            }
                            else if ( (LA193_0==138) ) {
                                alt193=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 193, 0, input);

                                throw nvae;
                            }
                            switch (alt193) {
                                case 1 :
                                    // InternalKim.g:8807:7: lv_negated_0_1= 'not'
                                    {
                                    lv_negated_0_1=(Token)match(input,137,FOLLOW_111); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(lv_negated_0_1, grammarAccess.getConceptAccess().getNegatedNotKeyword_0_0_0_0());
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElement(grammarAccess.getConceptRule());
                                      							}
                                      							setWithLastConsumed(current, "negated", true, null);
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8818:7: lv_negated_0_2= 'no'
                                    {
                                    lv_negated_0_2=(Token)match(input,138,FOLLOW_111); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(lv_negated_0_2, grammarAccess.getConceptAccess().getNegatedNoKeyword_0_0_0_1());
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElement(grammarAccess.getConceptRule());
                                      							}
                                      							setWithLastConsumed(current, "negated", true, null);
                                      						
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:8831:4: ( (lv_name_1_0= ruleConceptReference ) )
                    // InternalKim.g:8832:5: (lv_name_1_0= ruleConceptReference )
                    {
                    // InternalKim.g:8832:5: (lv_name_1_0= ruleConceptReference )
                    // InternalKim.g:8833:6: lv_name_1_0= ruleConceptReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getNameConceptReferenceParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_112);
                    lv_name_1_0=ruleConceptReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.integratedmodelling.kim.Kim.ConceptReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:8850:4: ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )?
                    int alt198=2;
                    int LA198_0 = input.LA(1);

                    if ( (LA198_0==139) ) {
                        alt198=1;
                    }
                    switch (alt198) {
                        case 1 :
                            // InternalKim.g:8851:5: ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) )
                            {
                            // InternalKim.g:8851:5: ( (lv_authConcept_2_0= 'identified' ) )
                            // InternalKim.g:8852:6: (lv_authConcept_2_0= 'identified' )
                            {
                            // InternalKim.g:8852:6: (lv_authConcept_2_0= 'identified' )
                            // InternalKim.g:8853:7: lv_authConcept_2_0= 'identified'
                            {
                            lv_authConcept_2_0=(Token)match(input,139,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authConcept_2_0, grammarAccess.getConceptAccess().getAuthConceptIdentifiedKeyword_0_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptRule());
                              							}
                              							setWithLastConsumed(current, "authConcept", true, "identified");
                              						
                            }

                            }


                            }

                            otherlv_3=(Token)match(input,25,FOLLOW_113); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getConceptAccess().getAsKeyword_0_2_1());
                              				
                            }
                            // InternalKim.g:8869:5: ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) )
                            int alt196=2;
                            int LA196_0 = input.LA(1);

                            if ( (LA196_0==RULE_UPPERCASE_ID||LA196_0==RULE_STRING||LA196_0==RULE_CAMELCASE_ID||LA196_0==RULE_ID) ) {
                                alt196=1;
                            }
                            else if ( (LA196_0==RULE_INT) ) {
                                alt196=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 196, 0, input);

                                throw nvae;
                            }
                            switch (alt196) {
                                case 1 :
                                    // InternalKim.g:8870:6: ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) )
                                    {
                                    // InternalKim.g:8870:6: ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) )
                                    // InternalKim.g:8871:7: ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) )
                                    {
                                    // InternalKim.g:8871:7: ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) )
                                    // InternalKim.g:8872:8: (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID )
                                    {
                                    // InternalKim.g:8872:8: (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID )
                                    int alt195=4;
                                    switch ( input.LA(1) ) {
                                    case RULE_ID:
                                        {
                                        alt195=1;
                                        }
                                        break;
                                    case RULE_STRING:
                                        {
                                        alt195=2;
                                        }
                                        break;
                                    case RULE_UPPERCASE_ID:
                                        {
                                        alt195=3;
                                        }
                                        break;
                                    case RULE_CAMELCASE_ID:
                                        {
                                        alt195=4;
                                        }
                                        break;
                                    default:
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 195, 0, input);

                                        throw nvae;
                                    }

                                    switch (alt195) {
                                        case 1 :
                                            // InternalKim.g:8873:9: lv_stringIdentifier_4_1= RULE_ID
                                            {
                                            lv_stringIdentifier_4_1=(Token)match(input,RULE_ID,FOLLOW_106); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_1, grammarAccess.getConceptAccess().getStringIdentifierIDTerminalRuleCall_0_2_2_0_0_0());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_1,
                                              										"org.eclipse.xtext.common.Terminals.ID");
                                              								
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalKim.g:8888:9: lv_stringIdentifier_4_2= RULE_STRING
                                            {
                                            lv_stringIdentifier_4_2=(Token)match(input,RULE_STRING,FOLLOW_106); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_2, grammarAccess.getConceptAccess().getStringIdentifierSTRINGTerminalRuleCall_0_2_2_0_0_1());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_2,
                                              										"org.eclipse.xtext.common.Terminals.STRING");
                                              								
                                            }

                                            }
                                            break;
                                        case 3 :
                                            // InternalKim.g:8903:9: lv_stringIdentifier_4_3= RULE_UPPERCASE_ID
                                            {
                                            lv_stringIdentifier_4_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_106); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_3, grammarAccess.getConceptAccess().getStringIdentifierUPPERCASE_IDTerminalRuleCall_0_2_2_0_0_2());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_3,
                                              										"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                              								
                                            }

                                            }
                                            break;
                                        case 4 :
                                            // InternalKim.g:8918:9: lv_stringIdentifier_4_4= RULE_CAMELCASE_ID
                                            {
                                            lv_stringIdentifier_4_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_106); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_4, grammarAccess.getConceptAccess().getStringIdentifierCAMELCASE_IDTerminalRuleCall_0_2_2_0_0_3());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_4,
                                              										"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                              								
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8936:6: ( (lv_intIdentifier_5_0= RULE_INT ) )
                                    {
                                    // InternalKim.g:8936:6: ( (lv_intIdentifier_5_0= RULE_INT ) )
                                    // InternalKim.g:8937:7: (lv_intIdentifier_5_0= RULE_INT )
                                    {
                                    // InternalKim.g:8937:7: (lv_intIdentifier_5_0= RULE_INT )
                                    // InternalKim.g:8938:8: lv_intIdentifier_5_0= RULE_INT
                                    {
                                    lv_intIdentifier_5_0=(Token)match(input,RULE_INT,FOLLOW_106); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_intIdentifier_5_0, grammarAccess.getConceptAccess().getIntIdentifierINTTerminalRuleCall_0_2_2_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"intIdentifier",
                                      									lv_intIdentifier_5_0,
                                      									"org.eclipse.xtext.common.Terminals.INT");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_6=(Token)match(input,88,FOLLOW_114); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getConceptAccess().getByKeyword_0_2_3());
                              				
                            }
                            // InternalKim.g:8959:5: ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) )
                            // InternalKim.g:8960:6: ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) )
                            {
                            // InternalKim.g:8960:6: ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) )
                            // InternalKim.g:8961:7: (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH )
                            {
                            // InternalKim.g:8961:7: (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH )
                            int alt197=2;
                            int LA197_0 = input.LA(1);

                            if ( (LA197_0==RULE_UPPERCASE_ID) ) {
                                alt197=1;
                            }
                            else if ( (LA197_0==RULE_UPPERCASE_PATH) ) {
                                alt197=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 197, 0, input);

                                throw nvae;
                            }
                            switch (alt197) {
                                case 1 :
                                    // InternalKim.g:8962:8: lv_authority_7_1= RULE_UPPERCASE_ID
                                    {
                                    lv_authority_7_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_authority_7_1, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_0_2_4_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"authority",
                                      									lv_authority_7_1,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8977:8: lv_authority_7_2= RULE_UPPERCASE_PATH
                                    {
                                    lv_authority_7_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_authority_7_2, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_0_2_4_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"authority",
                                      									lv_authority_7_2,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:8997:3: ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:8997:3: ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:8998:4: ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:8998:4: ( (lv_presence_8_0= 'presence' ) )
                    // InternalKim.g:8999:5: (lv_presence_8_0= 'presence' )
                    {
                    // InternalKim.g:8999:5: (lv_presence_8_0= 'presence' )
                    // InternalKim.g:9000:6: lv_presence_8_0= 'presence'
                    {
                    lv_presence_8_0=(Token)match(input,140,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_presence_8_0, grammarAccess.getConceptAccess().getPresencePresenceKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "presence", true, "presence");
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,119,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getConceptAccess().getOfKeyword_1_1());
                      			
                    }
                    // InternalKim.g:9016:4: ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9017:5: (lv_concept_10_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9017:5: (lv_concept_10_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9018:6: lv_concept_10_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_10_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_10_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:9037:3: ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9037:3: ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9038:4: ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9038:4: ( (lv_count_11_0= 'count' ) )
                    // InternalKim.g:9039:5: (lv_count_11_0= 'count' )
                    {
                    // InternalKim.g:9039:5: (lv_count_11_0= 'count' )
                    // InternalKim.g:9040:6: lv_count_11_0= 'count'
                    {
                    lv_count_11_0=(Token)match(input,141,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_count_11_0, grammarAccess.getConceptAccess().getCountCountKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "count", true, "count");
                      					
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,119,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getConceptAccess().getOfKeyword_2_1());
                      			
                    }
                    // InternalKim.g:9056:4: ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9057:5: (lv_concept_13_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9057:5: (lv_concept_13_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9058:6: lv_concept_13_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_13_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:9077:3: ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9077:3: ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9078:4: ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9078:4: ( (lv_distance_14_0= 'distance' ) )
                    // InternalKim.g:9079:5: (lv_distance_14_0= 'distance' )
                    {
                    // InternalKim.g:9079:5: (lv_distance_14_0= 'distance' )
                    // InternalKim.g:9080:6: lv_distance_14_0= 'distance'
                    {
                    lv_distance_14_0=(Token)match(input,142,FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_distance_14_0, grammarAccess.getConceptAccess().getDistanceDistanceKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "distance", true, "distance");
                      					
                    }

                    }


                    }

                    // InternalKim.g:9092:4: (otherlv_15= 'to' | otherlv_16= 'from' )
                    int alt199=2;
                    int LA199_0 = input.LA(1);

                    if ( (LA199_0==36) ) {
                        alt199=1;
                    }
                    else if ( (LA199_0==101) ) {
                        alt199=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 199, 0, input);

                        throw nvae;
                    }
                    switch (alt199) {
                        case 1 :
                            // InternalKim.g:9093:5: otherlv_15= 'to'
                            {
                            otherlv_15=(Token)match(input,36,FOLLOW_104); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_15, grammarAccess.getConceptAccess().getToKeyword_3_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:9098:5: otherlv_16= 'from'
                            {
                            otherlv_16=(Token)match(input,101,FOLLOW_104); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_16, grammarAccess.getConceptAccess().getFromKeyword_3_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:9103:4: ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9104:5: (lv_concept_17_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9104:5: (lv_concept_17_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9105:6: lv_concept_17_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_3_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_17_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_17_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:9124:3: ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9124:3: ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9125:4: ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9125:4: ( (lv_probability_18_0= 'probability' ) )
                    // InternalKim.g:9126:5: (lv_probability_18_0= 'probability' )
                    {
                    // InternalKim.g:9126:5: (lv_probability_18_0= 'probability' )
                    // InternalKim.g:9127:6: lv_probability_18_0= 'probability'
                    {
                    lv_probability_18_0=(Token)match(input,143,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_probability_18_0, grammarAccess.getConceptAccess().getProbabilityProbabilityKeyword_4_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "probability", true, "probability");
                      					
                    }

                    }


                    }

                    otherlv_19=(Token)match(input,119,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getConceptAccess().getOfKeyword_4_1());
                      			
                    }
                    // InternalKim.g:9143:4: ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9144:5: (lv_concept_20_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9144:5: (lv_concept_20_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9145:6: lv_concept_20_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_20_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_20_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:9164:3: ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9164:3: ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9165:4: ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9165:4: ( (lv_assessment_21_0= 'assessment' ) )
                    // InternalKim.g:9166:5: (lv_assessment_21_0= 'assessment' )
                    {
                    // InternalKim.g:9166:5: (lv_assessment_21_0= 'assessment' )
                    // InternalKim.g:9167:6: lv_assessment_21_0= 'assessment'
                    {
                    lv_assessment_21_0=(Token)match(input,144,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_assessment_21_0, grammarAccess.getConceptAccess().getAssessmentAssessmentKeyword_5_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "assessment", true, "assessment");
                      					
                    }

                    }


                    }

                    otherlv_22=(Token)match(input,119,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getConceptAccess().getOfKeyword_5_1());
                      			
                    }
                    // InternalKim.g:9183:4: ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9184:5: (lv_concept_23_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9184:5: (lv_concept_23_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9185:6: lv_concept_23_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_23_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_23_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:9204:3: ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9204:3: ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9205:4: ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9205:4: ( (lv_uncertainty_24_0= 'uncertainty' ) )
                    // InternalKim.g:9206:5: (lv_uncertainty_24_0= 'uncertainty' )
                    {
                    // InternalKim.g:9206:5: (lv_uncertainty_24_0= 'uncertainty' )
                    // InternalKim.g:9207:6: lv_uncertainty_24_0= 'uncertainty'
                    {
                    lv_uncertainty_24_0=(Token)match(input,145,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_uncertainty_24_0, grammarAccess.getConceptAccess().getUncertaintyUncertaintyKeyword_6_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "uncertainty", true, "uncertainty");
                      					
                    }

                    }


                    }

                    otherlv_25=(Token)match(input,119,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_25, grammarAccess.getConceptAccess().getOfKeyword_6_1());
                      			
                    }
                    // InternalKim.g:9223:4: ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9224:5: (lv_concept_26_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9224:5: (lv_concept_26_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9225:6: lv_concept_26_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_26_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_26_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:9244:3: ( ( (lv_magnitude_27_0= 'magnitude' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9244:3: ( ( (lv_magnitude_27_0= 'magnitude' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9245:4: ( (lv_magnitude_27_0= 'magnitude' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9245:4: ( (lv_magnitude_27_0= 'magnitude' ) )
                    // InternalKim.g:9246:5: (lv_magnitude_27_0= 'magnitude' )
                    {
                    // InternalKim.g:9246:5: (lv_magnitude_27_0= 'magnitude' )
                    // InternalKim.g:9247:6: lv_magnitude_27_0= 'magnitude'
                    {
                    lv_magnitude_27_0=(Token)match(input,146,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_magnitude_27_0, grammarAccess.getConceptAccess().getMagnitudeMagnitudeKeyword_7_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "magnitude", true, "magnitude");
                      					
                    }

                    }


                    }

                    otherlv_28=(Token)match(input,119,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getConceptAccess().getOfKeyword_7_1());
                      			
                    }
                    // InternalKim.g:9263:4: ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9264:5: (lv_concept_29_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9264:5: (lv_concept_29_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9265:6: lv_concept_29_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_7_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_29_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_29_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:9284:3: ( ( (lv_level_30_0= 'level' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9284:3: ( ( (lv_level_30_0= 'level' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9285:4: ( (lv_level_30_0= 'level' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9285:4: ( (lv_level_30_0= 'level' ) )
                    // InternalKim.g:9286:5: (lv_level_30_0= 'level' )
                    {
                    // InternalKim.g:9286:5: (lv_level_30_0= 'level' )
                    // InternalKim.g:9287:6: lv_level_30_0= 'level'
                    {
                    lv_level_30_0=(Token)match(input,147,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_level_30_0, grammarAccess.getConceptAccess().getLevelLevelKeyword_8_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "level", true, "level");
                      					
                    }

                    }


                    }

                    otherlv_31=(Token)match(input,119,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getConceptAccess().getOfKeyword_8_1());
                      			
                    }
                    // InternalKim.g:9303:4: ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9304:5: (lv_concept_32_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9304:5: (lv_concept_32_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9305:6: lv_concept_32_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_8_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_32_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_32_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:9324:3: ( ( (lv_type_33_0= 'type' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9324:3: ( ( (lv_type_33_0= 'type' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9325:4: ( (lv_type_33_0= 'type' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9325:4: ( (lv_type_33_0= 'type' ) )
                    // InternalKim.g:9326:5: (lv_type_33_0= 'type' )
                    {
                    // InternalKim.g:9326:5: (lv_type_33_0= 'type' )
                    // InternalKim.g:9327:6: lv_type_33_0= 'type'
                    {
                    lv_type_33_0=(Token)match(input,148,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_type_33_0, grammarAccess.getConceptAccess().getTypeTypeKeyword_9_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "type", true, "type");
                      					
                    }

                    }


                    }

                    otherlv_34=(Token)match(input,119,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_34, grammarAccess.getConceptAccess().getOfKeyword_9_1());
                      			
                    }
                    // InternalKim.g:9343:4: ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9344:5: (lv_concept_35_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9344:5: (lv_concept_35_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9345:6: lv_concept_35_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_9_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_35_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_35_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalKim.g:9364:3: ( ( (lv_observability_36_0= 'observability' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9364:3: ( ( (lv_observability_36_0= 'observability' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9365:4: ( (lv_observability_36_0= 'observability' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9365:4: ( (lv_observability_36_0= 'observability' ) )
                    // InternalKim.g:9366:5: (lv_observability_36_0= 'observability' )
                    {
                    // InternalKim.g:9366:5: (lv_observability_36_0= 'observability' )
                    // InternalKim.g:9367:6: lv_observability_36_0= 'observability'
                    {
                    lv_observability_36_0=(Token)match(input,149,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_observability_36_0, grammarAccess.getConceptAccess().getObservabilityObservabilityKeyword_10_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "observability", true, "observability");
                      					
                    }

                    }


                    }

                    otherlv_37=(Token)match(input,119,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_37, grammarAccess.getConceptAccess().getOfKeyword_10_1());
                      			
                    }
                    // InternalKim.g:9383:4: ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9384:5: (lv_concept_38_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9384:5: (lv_concept_38_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9385:6: lv_concept_38_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_10_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_38_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_38_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalKim.g:9404:3: ( ( (lv_proportion_39_0= 'proportion' ) ) otherlv_40= 'of' ( (lv_concept_41_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_42= 'in' ) ( (lv_other_43_0= ruleSimpleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:9404:3: ( ( (lv_proportion_39_0= 'proportion' ) ) otherlv_40= 'of' ( (lv_concept_41_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_42= 'in' ) ( (lv_other_43_0= ruleSimpleConceptDeclaration ) ) )? )
                    // InternalKim.g:9405:4: ( (lv_proportion_39_0= 'proportion' ) ) otherlv_40= 'of' ( (lv_concept_41_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_42= 'in' ) ( (lv_other_43_0= ruleSimpleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:9405:4: ( (lv_proportion_39_0= 'proportion' ) )
                    // InternalKim.g:9406:5: (lv_proportion_39_0= 'proportion' )
                    {
                    // InternalKim.g:9406:5: (lv_proportion_39_0= 'proportion' )
                    // InternalKim.g:9407:6: lv_proportion_39_0= 'proportion'
                    {
                    lv_proportion_39_0=(Token)match(input,150,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_proportion_39_0, grammarAccess.getConceptAccess().getProportionProportionKeyword_11_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "proportion", true, "proportion");
                      					
                    }

                    }


                    }

                    otherlv_40=(Token)match(input,119,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_40, grammarAccess.getConceptAccess().getOfKeyword_11_1());
                      			
                    }
                    // InternalKim.g:9423:4: ( (lv_concept_41_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9424:5: (lv_concept_41_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9424:5: (lv_concept_41_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9425:6: lv_concept_41_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_11_2_0());
                      					
                    }
                    pushFollow(FOLLOW_57);
                    lv_concept_41_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_41_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:9442:4: ( ( ( 'in' )=>otherlv_42= 'in' ) ( (lv_other_43_0= ruleSimpleConceptDeclaration ) ) )?
                    int alt200=2;
                    int LA200_0 = input.LA(1);

                    if ( (LA200_0==48) ) {
                        int LA200_1 = input.LA(2);

                        if ( (synpred363_InternalKim()) ) {
                            alt200=1;
                        }
                    }
                    switch (alt200) {
                        case 1 :
                            // InternalKim.g:9443:5: ( ( 'in' )=>otherlv_42= 'in' ) ( (lv_other_43_0= ruleSimpleConceptDeclaration ) )
                            {
                            // InternalKim.g:9443:5: ( ( 'in' )=>otherlv_42= 'in' )
                            // InternalKim.g:9444:6: ( 'in' )=>otherlv_42= 'in'
                            {
                            otherlv_42=(Token)match(input,48,FOLLOW_104); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_42, grammarAccess.getConceptAccess().getInKeyword_11_3_0());
                              					
                            }

                            }

                            // InternalKim.g:9450:5: ( (lv_other_43_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:9451:6: (lv_other_43_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:9451:6: (lv_other_43_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:9452:7: lv_other_43_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_11_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_other_43_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"other",
                              								lv_other_43_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalKim.g:9472:3: ( ( (lv_percentage_44_0= 'percentage' ) ) otherlv_45= 'of' ( (lv_concept_46_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_47= 'in' ) ( (lv_other_48_0= ruleSimpleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:9472:3: ( ( (lv_percentage_44_0= 'percentage' ) ) otherlv_45= 'of' ( (lv_concept_46_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_47= 'in' ) ( (lv_other_48_0= ruleSimpleConceptDeclaration ) ) )? )
                    // InternalKim.g:9473:4: ( (lv_percentage_44_0= 'percentage' ) ) otherlv_45= 'of' ( (lv_concept_46_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_47= 'in' ) ( (lv_other_48_0= ruleSimpleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:9473:4: ( (lv_percentage_44_0= 'percentage' ) )
                    // InternalKim.g:9474:5: (lv_percentage_44_0= 'percentage' )
                    {
                    // InternalKim.g:9474:5: (lv_percentage_44_0= 'percentage' )
                    // InternalKim.g:9475:6: lv_percentage_44_0= 'percentage'
                    {
                    lv_percentage_44_0=(Token)match(input,151,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_percentage_44_0, grammarAccess.getConceptAccess().getPercentagePercentageKeyword_12_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "percentage", true, "percentage");
                      					
                    }

                    }


                    }

                    otherlv_45=(Token)match(input,119,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_45, grammarAccess.getConceptAccess().getOfKeyword_12_1());
                      			
                    }
                    // InternalKim.g:9491:4: ( (lv_concept_46_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9492:5: (lv_concept_46_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9492:5: (lv_concept_46_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9493:6: lv_concept_46_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_12_2_0());
                      					
                    }
                    pushFollow(FOLLOW_57);
                    lv_concept_46_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_46_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:9510:4: ( ( ( 'in' )=>otherlv_47= 'in' ) ( (lv_other_48_0= ruleSimpleConceptDeclaration ) ) )?
                    int alt201=2;
                    int LA201_0 = input.LA(1);

                    if ( (LA201_0==48) ) {
                        int LA201_1 = input.LA(2);

                        if ( (synpred366_InternalKim()) ) {
                            alt201=1;
                        }
                    }
                    switch (alt201) {
                        case 1 :
                            // InternalKim.g:9511:5: ( ( 'in' )=>otherlv_47= 'in' ) ( (lv_other_48_0= ruleSimpleConceptDeclaration ) )
                            {
                            // InternalKim.g:9511:5: ( ( 'in' )=>otherlv_47= 'in' )
                            // InternalKim.g:9512:6: ( 'in' )=>otherlv_47= 'in'
                            {
                            otherlv_47=(Token)match(input,48,FOLLOW_104); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_47, grammarAccess.getConceptAccess().getInKeyword_12_3_0());
                              					
                            }

                            }

                            // InternalKim.g:9518:5: ( (lv_other_48_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:9519:6: (lv_other_48_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:9519:6: (lv_other_48_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:9520:7: lv_other_48_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_12_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_other_48_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"other",
                              								lv_other_48_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 14 :
                    // InternalKim.g:9540:3: ( ( (lv_ratio_49_0= 'ratio' ) ) otherlv_50= 'of' ( (lv_concept_51_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_52= 'to' ) ( (lv_other_53_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9540:3: ( ( (lv_ratio_49_0= 'ratio' ) ) otherlv_50= 'of' ( (lv_concept_51_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_52= 'to' ) ( (lv_other_53_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9541:4: ( (lv_ratio_49_0= 'ratio' ) ) otherlv_50= 'of' ( (lv_concept_51_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_52= 'to' ) ( (lv_other_53_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9541:4: ( (lv_ratio_49_0= 'ratio' ) )
                    // InternalKim.g:9542:5: (lv_ratio_49_0= 'ratio' )
                    {
                    // InternalKim.g:9542:5: (lv_ratio_49_0= 'ratio' )
                    // InternalKim.g:9543:6: lv_ratio_49_0= 'ratio'
                    {
                    lv_ratio_49_0=(Token)match(input,152,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_ratio_49_0, grammarAccess.getConceptAccess().getRatioRatioKeyword_13_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "ratio", true, "ratio");
                      					
                    }

                    }


                    }

                    otherlv_50=(Token)match(input,119,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_50, grammarAccess.getConceptAccess().getOfKeyword_13_1());
                      			
                    }
                    // InternalKim.g:9559:4: ( (lv_concept_51_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9560:5: (lv_concept_51_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9560:5: (lv_concept_51_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9561:6: lv_concept_51_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_13_2_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    lv_concept_51_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_51_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:9578:4: ( ( 'to' )=>otherlv_52= 'to' )
                    // InternalKim.g:9579:5: ( 'to' )=>otherlv_52= 'to'
                    {
                    otherlv_52=(Token)match(input,36,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_52, grammarAccess.getConceptAccess().getToKeyword_13_3());
                      				
                    }

                    }

                    // InternalKim.g:9585:4: ( (lv_other_53_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9586:5: (lv_other_53_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9586:5: (lv_other_53_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9587:6: lv_other_53_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_13_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_other_53_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"other",
                      							lv_other_53_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 15 :
                    // InternalKim.g:9606:3: ( ( (lv_monetary_54_0= 'monetary' ) )? ( (lv_value_55_0= 'value' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_58= 'over' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:9606:3: ( ( (lv_monetary_54_0= 'monetary' ) )? ( (lv_value_55_0= 'value' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_58= 'over' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) )? )
                    // InternalKim.g:9607:4: ( (lv_monetary_54_0= 'monetary' ) )? ( (lv_value_55_0= 'value' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_58= 'over' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:9607:4: ( (lv_monetary_54_0= 'monetary' ) )?
                    int alt202=2;
                    int LA202_0 = input.LA(1);

                    if ( (LA202_0==153) ) {
                        alt202=1;
                    }
                    switch (alt202) {
                        case 1 :
                            // InternalKim.g:9608:5: (lv_monetary_54_0= 'monetary' )
                            {
                            // InternalKim.g:9608:5: (lv_monetary_54_0= 'monetary' )
                            // InternalKim.g:9609:6: lv_monetary_54_0= 'monetary'
                            {
                            lv_monetary_54_0=(Token)match(input,153,FOLLOW_117); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_monetary_54_0, grammarAccess.getConceptAccess().getMonetaryMonetaryKeyword_14_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getConceptRule());
                              						}
                              						setWithLastConsumed(current, "monetary", true, "monetary");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:9621:4: ( (lv_value_55_0= 'value' ) )
                    // InternalKim.g:9622:5: (lv_value_55_0= 'value' )
                    {
                    // InternalKim.g:9622:5: (lv_value_55_0= 'value' )
                    // InternalKim.g:9623:6: lv_value_55_0= 'value'
                    {
                    lv_value_55_0=(Token)match(input,154,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_55_0, grammarAccess.getConceptAccess().getValueValueKeyword_14_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "value", true, "value");
                      					
                    }

                    }


                    }

                    otherlv_56=(Token)match(input,119,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_56, grammarAccess.getConceptAccess().getOfKeyword_14_2());
                      			
                    }
                    // InternalKim.g:9639:4: ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9640:5: (lv_concept_57_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9640:5: (lv_concept_57_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9641:6: lv_concept_57_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_14_3_0());
                      					
                    }
                    pushFollow(FOLLOW_118);
                    lv_concept_57_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_57_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:9658:4: ( ( ( 'over' )=>otherlv_58= 'over' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) )?
                    int alt203=2;
                    int LA203_0 = input.LA(1);

                    if ( (LA203_0==55) ) {
                        int LA203_1 = input.LA(2);

                        if ( (synpred372_InternalKim()) ) {
                            alt203=1;
                        }
                    }
                    switch (alt203) {
                        case 1 :
                            // InternalKim.g:9659:5: ( ( 'over' )=>otherlv_58= 'over' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) )
                            {
                            // InternalKim.g:9659:5: ( ( 'over' )=>otherlv_58= 'over' )
                            // InternalKim.g:9660:6: ( 'over' )=>otherlv_58= 'over'
                            {
                            otherlv_58=(Token)match(input,55,FOLLOW_104); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_58, grammarAccess.getConceptAccess().getOverKeyword_14_4_0());
                              					
                            }

                            }

                            // InternalKim.g:9666:5: ( (lv_other_59_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:9667:6: (lv_other_59_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:9667:6: (lv_other_59_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:9668:7: lv_other_59_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_14_4_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_other_59_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"other",
                              								lv_other_59_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 16 :
                    // InternalKim.g:9688:3: ( ( (lv_occurrence_60_0= 'occurrence' ) ) otherlv_61= 'of' ( (lv_concept_62_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9688:3: ( ( (lv_occurrence_60_0= 'occurrence' ) ) otherlv_61= 'of' ( (lv_concept_62_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9689:4: ( (lv_occurrence_60_0= 'occurrence' ) ) otherlv_61= 'of' ( (lv_concept_62_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9689:4: ( (lv_occurrence_60_0= 'occurrence' ) )
                    // InternalKim.g:9690:5: (lv_occurrence_60_0= 'occurrence' )
                    {
                    // InternalKim.g:9690:5: (lv_occurrence_60_0= 'occurrence' )
                    // InternalKim.g:9691:6: lv_occurrence_60_0= 'occurrence'
                    {
                    lv_occurrence_60_0=(Token)match(input,155,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_occurrence_60_0, grammarAccess.getConceptAccess().getOccurrenceOccurrenceKeyword_15_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "occurrence", true, "occurrence");
                      					
                    }

                    }


                    }

                    otherlv_61=(Token)match(input,119,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_61, grammarAccess.getConceptAccess().getOfKeyword_15_1());
                      			
                    }
                    // InternalKim.g:9707:4: ( (lv_concept_62_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9708:5: (lv_concept_62_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9708:5: (lv_concept_62_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9709:6: lv_concept_62_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_15_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_62_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_62_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 17 :
                    // InternalKim.g:9728:3: ( ( (lv_authConcept_63_0= 'identity' ) ) ( ( ( (lv_stringIdentifier_64_1= RULE_ID | lv_stringIdentifier_64_2= RULE_STRING | lv_stringIdentifier_64_3= RULE_UPPERCASE_ID | lv_stringIdentifier_64_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_65_0= RULE_INT ) ) ) otherlv_66= 'by' ( ( (lv_authority_67_1= RULE_UPPERCASE_ID | lv_authority_67_2= RULE_UPPERCASE_PATH ) ) ) )
                    {
                    // InternalKim.g:9728:3: ( ( (lv_authConcept_63_0= 'identity' ) ) ( ( ( (lv_stringIdentifier_64_1= RULE_ID | lv_stringIdentifier_64_2= RULE_STRING | lv_stringIdentifier_64_3= RULE_UPPERCASE_ID | lv_stringIdentifier_64_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_65_0= RULE_INT ) ) ) otherlv_66= 'by' ( ( (lv_authority_67_1= RULE_UPPERCASE_ID | lv_authority_67_2= RULE_UPPERCASE_PATH ) ) ) )
                    // InternalKim.g:9729:4: ( (lv_authConcept_63_0= 'identity' ) ) ( ( ( (lv_stringIdentifier_64_1= RULE_ID | lv_stringIdentifier_64_2= RULE_STRING | lv_stringIdentifier_64_3= RULE_UPPERCASE_ID | lv_stringIdentifier_64_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_65_0= RULE_INT ) ) ) otherlv_66= 'by' ( ( (lv_authority_67_1= RULE_UPPERCASE_ID | lv_authority_67_2= RULE_UPPERCASE_PATH ) ) )
                    {
                    // InternalKim.g:9729:4: ( (lv_authConcept_63_0= 'identity' ) )
                    // InternalKim.g:9730:5: (lv_authConcept_63_0= 'identity' )
                    {
                    // InternalKim.g:9730:5: (lv_authConcept_63_0= 'identity' )
                    // InternalKim.g:9731:6: lv_authConcept_63_0= 'identity'
                    {
                    lv_authConcept_63_0=(Token)match(input,156,FOLLOW_113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_authConcept_63_0, grammarAccess.getConceptAccess().getAuthConceptIdentityKeyword_16_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "authConcept", true, "identity");
                      					
                    }

                    }


                    }

                    // InternalKim.g:9743:4: ( ( ( (lv_stringIdentifier_64_1= RULE_ID | lv_stringIdentifier_64_2= RULE_STRING | lv_stringIdentifier_64_3= RULE_UPPERCASE_ID | lv_stringIdentifier_64_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_65_0= RULE_INT ) ) )
                    int alt205=2;
                    int LA205_0 = input.LA(1);

                    if ( (LA205_0==RULE_UPPERCASE_ID||LA205_0==RULE_STRING||LA205_0==RULE_CAMELCASE_ID||LA205_0==RULE_ID) ) {
                        alt205=1;
                    }
                    else if ( (LA205_0==RULE_INT) ) {
                        alt205=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 205, 0, input);

                        throw nvae;
                    }
                    switch (alt205) {
                        case 1 :
                            // InternalKim.g:9744:5: ( ( (lv_stringIdentifier_64_1= RULE_ID | lv_stringIdentifier_64_2= RULE_STRING | lv_stringIdentifier_64_3= RULE_UPPERCASE_ID | lv_stringIdentifier_64_4= RULE_CAMELCASE_ID ) ) )
                            {
                            // InternalKim.g:9744:5: ( ( (lv_stringIdentifier_64_1= RULE_ID | lv_stringIdentifier_64_2= RULE_STRING | lv_stringIdentifier_64_3= RULE_UPPERCASE_ID | lv_stringIdentifier_64_4= RULE_CAMELCASE_ID ) ) )
                            // InternalKim.g:9745:6: ( (lv_stringIdentifier_64_1= RULE_ID | lv_stringIdentifier_64_2= RULE_STRING | lv_stringIdentifier_64_3= RULE_UPPERCASE_ID | lv_stringIdentifier_64_4= RULE_CAMELCASE_ID ) )
                            {
                            // InternalKim.g:9745:6: ( (lv_stringIdentifier_64_1= RULE_ID | lv_stringIdentifier_64_2= RULE_STRING | lv_stringIdentifier_64_3= RULE_UPPERCASE_ID | lv_stringIdentifier_64_4= RULE_CAMELCASE_ID ) )
                            // InternalKim.g:9746:7: (lv_stringIdentifier_64_1= RULE_ID | lv_stringIdentifier_64_2= RULE_STRING | lv_stringIdentifier_64_3= RULE_UPPERCASE_ID | lv_stringIdentifier_64_4= RULE_CAMELCASE_ID )
                            {
                            // InternalKim.g:9746:7: (lv_stringIdentifier_64_1= RULE_ID | lv_stringIdentifier_64_2= RULE_STRING | lv_stringIdentifier_64_3= RULE_UPPERCASE_ID | lv_stringIdentifier_64_4= RULE_CAMELCASE_ID )
                            int alt204=4;
                            switch ( input.LA(1) ) {
                            case RULE_ID:
                                {
                                alt204=1;
                                }
                                break;
                            case RULE_STRING:
                                {
                                alt204=2;
                                }
                                break;
                            case RULE_UPPERCASE_ID:
                                {
                                alt204=3;
                                }
                                break;
                            case RULE_CAMELCASE_ID:
                                {
                                alt204=4;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 204, 0, input);

                                throw nvae;
                            }

                            switch (alt204) {
                                case 1 :
                                    // InternalKim.g:9747:8: lv_stringIdentifier_64_1= RULE_ID
                                    {
                                    lv_stringIdentifier_64_1=(Token)match(input,RULE_ID,FOLLOW_106); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_stringIdentifier_64_1, grammarAccess.getConceptAccess().getStringIdentifierIDTerminalRuleCall_16_1_0_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"stringIdentifier",
                                      									lv_stringIdentifier_64_1,
                                      									"org.eclipse.xtext.common.Terminals.ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:9762:8: lv_stringIdentifier_64_2= RULE_STRING
                                    {
                                    lv_stringIdentifier_64_2=(Token)match(input,RULE_STRING,FOLLOW_106); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_stringIdentifier_64_2, grammarAccess.getConceptAccess().getStringIdentifierSTRINGTerminalRuleCall_16_1_0_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"stringIdentifier",
                                      									lv_stringIdentifier_64_2,
                                      									"org.eclipse.xtext.common.Terminals.STRING");
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:9777:8: lv_stringIdentifier_64_3= RULE_UPPERCASE_ID
                                    {
                                    lv_stringIdentifier_64_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_106); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_stringIdentifier_64_3, grammarAccess.getConceptAccess().getStringIdentifierUPPERCASE_IDTerminalRuleCall_16_1_0_0_2());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"stringIdentifier",
                                      									lv_stringIdentifier_64_3,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 4 :
                                    // InternalKim.g:9792:8: lv_stringIdentifier_64_4= RULE_CAMELCASE_ID
                                    {
                                    lv_stringIdentifier_64_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_106); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_stringIdentifier_64_4, grammarAccess.getConceptAccess().getStringIdentifierCAMELCASE_IDTerminalRuleCall_16_1_0_0_3());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"stringIdentifier",
                                      									lv_stringIdentifier_64_4,
                                      									"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:9810:5: ( (lv_intIdentifier_65_0= RULE_INT ) )
                            {
                            // InternalKim.g:9810:5: ( (lv_intIdentifier_65_0= RULE_INT ) )
                            // InternalKim.g:9811:6: (lv_intIdentifier_65_0= RULE_INT )
                            {
                            // InternalKim.g:9811:6: (lv_intIdentifier_65_0= RULE_INT )
                            // InternalKim.g:9812:7: lv_intIdentifier_65_0= RULE_INT
                            {
                            lv_intIdentifier_65_0=(Token)match(input,RULE_INT,FOLLOW_106); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_intIdentifier_65_0, grammarAccess.getConceptAccess().getIntIdentifierINTTerminalRuleCall_16_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"intIdentifier",
                              								lv_intIdentifier_65_0,
                              								"org.eclipse.xtext.common.Terminals.INT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_66=(Token)match(input,88,FOLLOW_114); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_66, grammarAccess.getConceptAccess().getByKeyword_16_2());
                      			
                    }
                    // InternalKim.g:9833:4: ( ( (lv_authority_67_1= RULE_UPPERCASE_ID | lv_authority_67_2= RULE_UPPERCASE_PATH ) ) )
                    // InternalKim.g:9834:5: ( (lv_authority_67_1= RULE_UPPERCASE_ID | lv_authority_67_2= RULE_UPPERCASE_PATH ) )
                    {
                    // InternalKim.g:9834:5: ( (lv_authority_67_1= RULE_UPPERCASE_ID | lv_authority_67_2= RULE_UPPERCASE_PATH ) )
                    // InternalKim.g:9835:6: (lv_authority_67_1= RULE_UPPERCASE_ID | lv_authority_67_2= RULE_UPPERCASE_PATH )
                    {
                    // InternalKim.g:9835:6: (lv_authority_67_1= RULE_UPPERCASE_ID | lv_authority_67_2= RULE_UPPERCASE_PATH )
                    int alt206=2;
                    int LA206_0 = input.LA(1);

                    if ( (LA206_0==RULE_UPPERCASE_ID) ) {
                        alt206=1;
                    }
                    else if ( (LA206_0==RULE_UPPERCASE_PATH) ) {
                        alt206=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 206, 0, input);

                        throw nvae;
                    }
                    switch (alt206) {
                        case 1 :
                            // InternalKim.g:9836:7: lv_authority_67_1= RULE_UPPERCASE_ID
                            {
                            lv_authority_67_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authority_67_1, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_16_3_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"authority",
                              								lv_authority_67_1,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:9851:7: lv_authority_67_2= RULE_UPPERCASE_PATH
                            {
                            lv_authority_67_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authority_67_2, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_16_3_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"authority",
                              								lv_authority_67_2,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;
                case 18 :
                    // InternalKim.g:9870:3: (otherlv_68= '(' ( (lv_declaration_69_0= ruleExpression ) ) otherlv_70= ')' )
                    {
                    // InternalKim.g:9870:3: (otherlv_68= '(' ( (lv_declaration_69_0= ruleExpression ) ) otherlv_70= ')' )
                    // InternalKim.g:9871:4: otherlv_68= '(' ( (lv_declaration_69_0= ruleExpression ) ) otherlv_70= ')'
                    {
                    otherlv_68=(Token)match(input,38,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_68, grammarAccess.getConceptAccess().getLeftParenthesisKeyword_17_0());
                      			
                    }
                    // InternalKim.g:9875:4: ( (lv_declaration_69_0= ruleExpression ) )
                    // InternalKim.g:9876:5: (lv_declaration_69_0= ruleExpression )
                    {
                    // InternalKim.g:9876:5: (lv_declaration_69_0= ruleExpression )
                    // InternalKim.g:9877:6: lv_declaration_69_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getDeclarationExpressionParserRuleCall_17_1_0());
                      					
                    }
                    pushFollow(FOLLOW_93);
                    lv_declaration_69_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"declaration",
                      							lv_declaration_69_0,
                      							"org.integratedmodelling.kim.Kim.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_70=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_70, grammarAccess.getConceptAccess().getRightParenthesisKeyword_17_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConcept"


    // $ANTLR start "entryRuleExpression"
    // InternalKim.g:9903:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalKim.g:9903:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalKim.g:9904:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalKim.g:9910:1: ruleExpression returns [EObject current=null] : this_Term_0= ruleTerm ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Term_0 = null;



        	enterRule();

        try {
            // InternalKim.g:9916:2: (this_Term_0= ruleTerm )
            // InternalKim.g:9917:2: this_Term_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getExpressionAccess().getTermParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Term_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Term_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleTerm"
    // InternalKim.g:9931:1: entryRuleTerm returns [EObject current=null] : iv_ruleTerm= ruleTerm EOF ;
    public final EObject entryRuleTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTerm = null;


        try {
            // InternalKim.g:9931:45: (iv_ruleTerm= ruleTerm EOF )
            // InternalKim.g:9932:2: iv_ruleTerm= ruleTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTerm=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTerm"


    // $ANTLR start "ruleTerm"
    // InternalKim.g:9938:1: ruleTerm returns [EObject current=null] : (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* ) ;
    public final EObject ruleTerm() throws RecognitionException {
        EObject current = null;

        Token lv_operators_1_0=null;
        EObject this_Factor_0 = null;

        EObject lv_operands_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:9944:2: ( (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* ) )
            // InternalKim.g:9945:2: (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* )
            {
            // InternalKim.g:9945:2: (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* )
            // InternalKim.g:9946:3: this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTermAccess().getFactorParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_119);
            this_Factor_0=ruleFactor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Factor_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKim.g:9957:3: ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )*
            loop208:
            do {
                int alt208=2;
                int LA208_0 = input.LA(1);

                if ( (LA208_0==157) ) {
                    int LA208_2 = input.LA(2);

                    if ( (synpred381_InternalKim()) ) {
                        alt208=1;
                    }


                }


                switch (alt208) {
            	case 1 :
            	    // InternalKim.g:9958:4: ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) )
            	    {
            	    // InternalKim.g:9958:4: ( (lv_operators_1_0= 'or' ) )
            	    // InternalKim.g:9959:5: (lv_operators_1_0= 'or' )
            	    {
            	    // InternalKim.g:9959:5: (lv_operators_1_0= 'or' )
            	    // InternalKim.g:9960:6: lv_operators_1_0= 'or'
            	    {
            	    lv_operators_1_0=(Token)match(input,157,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_operators_1_0, grammarAccess.getTermAccess().getOperatorsOrKeyword_1_0_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getTermRule());
            	      						}
            	      						addWithLastConsumed(current, "operators", lv_operators_1_0, "or");
            	      					
            	    }

            	    }


            	    }

            	    // InternalKim.g:9972:4: ( (lv_operands_2_0= ruleFactor ) )
            	    // InternalKim.g:9973:5: (lv_operands_2_0= ruleFactor )
            	    {
            	    // InternalKim.g:9973:5: (lv_operands_2_0= ruleFactor )
            	    // InternalKim.g:9974:6: lv_operands_2_0= ruleFactor
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTermAccess().getOperandsFactorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_119);
            	    lv_operands_2_0=ruleFactor();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operands",
            	      							lv_operands_2_0,
            	      							"org.integratedmodelling.kim.Kim.Factor");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop208;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTerm"


    // $ANTLR start "entryRuleFactor"
    // InternalKim.g:9996:1: entryRuleFactor returns [EObject current=null] : iv_ruleFactor= ruleFactor EOF ;
    public final EObject entryRuleFactor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFactor = null;


        try {
            // InternalKim.g:9996:47: (iv_ruleFactor= ruleFactor EOF )
            // InternalKim.g:9997:2: iv_ruleFactor= ruleFactor EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFactorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFactor=ruleFactor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFactor; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFactor"


    // $ANTLR start "ruleFactor"
    // InternalKim.g:10003:1: ruleFactor returns [EObject current=null] : (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* ) ;
    public final EObject ruleFactor() throws RecognitionException {
        EObject current = null;

        Token lv_operators_1_1=null;
        Token lv_operators_1_2=null;
        EObject this_ConceptDeclaration_0 = null;

        EObject lv_operands_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:10009:2: ( (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* ) )
            // InternalKim.g:10010:2: (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* )
            {
            // InternalKim.g:10010:2: (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* )
            // InternalKim.g:10011:3: this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFactorAccess().getConceptDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_120);
            this_ConceptDeclaration_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ConceptDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKim.g:10022:3: ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )*
            loop210:
            do {
                int alt210=2;
                int LA210_0 = input.LA(1);

                if ( (LA210_0==158) ) {
                    int LA210_2 = input.LA(2);

                    if ( (synpred383_InternalKim()) ) {
                        alt210=1;
                    }


                }
                else if ( (LA210_0==159) ) {
                    int LA210_3 = input.LA(2);

                    if ( (synpred383_InternalKim()) ) {
                        alt210=1;
                    }


                }


                switch (alt210) {
            	case 1 :
            	    // InternalKim.g:10023:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) )
            	    {
            	    // InternalKim.g:10023:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) )
            	    // InternalKim.g:10024:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
            	    {
            	    // InternalKim.g:10024:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
            	    // InternalKim.g:10025:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
            	    {
            	    // InternalKim.g:10025:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
            	    int alt209=2;
            	    int LA209_0 = input.LA(1);

            	    if ( (LA209_0==158) ) {
            	        alt209=1;
            	    }
            	    else if ( (LA209_0==159) ) {
            	        alt209=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 209, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt209) {
            	        case 1 :
            	            // InternalKim.g:10026:7: lv_operators_1_1= 'and'
            	            {
            	            lv_operators_1_1=(Token)match(input,158,FOLLOW_23); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operators_1_1, grammarAccess.getFactorAccess().getOperatorsAndKeyword_1_0_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getFactorRule());
            	              							}
            	              							addWithLastConsumed(current, "operators", lv_operators_1_1, null);
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:10037:7: lv_operators_1_2= 'follows'
            	            {
            	            lv_operators_1_2=(Token)match(input,159,FOLLOW_23); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operators_1_2, grammarAccess.getFactorAccess().getOperatorsFollowsKeyword_1_0_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getFactorRule());
            	              							}
            	              							addWithLastConsumed(current, "operators", lv_operators_1_2, null);
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalKim.g:10050:4: ( (lv_operands_2_0= ruleTerm ) )
            	    // InternalKim.g:10051:5: (lv_operands_2_0= ruleTerm )
            	    {
            	    // InternalKim.g:10051:5: (lv_operands_2_0= ruleTerm )
            	    // InternalKim.g:10052:6: lv_operands_2_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFactorAccess().getOperandsTermParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_120);
            	    lv_operands_2_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFactorRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operands",
            	      							lv_operands_2_0,
            	      							"org.integratedmodelling.kim.Kim.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop210;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFactor"


    // $ANTLR start "entryRuleSimpleConceptDeclaration"
    // InternalKim.g:10074:1: entryRuleSimpleConceptDeclaration returns [EObject current=null] : iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF ;
    public final EObject entryRuleSimpleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleConceptDeclaration = null;


        try {
            // InternalKim.g:10074:65: (iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF )
            // InternalKim.g:10075:2: iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleConceptDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleConceptDeclaration=ruleSimpleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleConceptDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleConceptDeclaration"


    // $ANTLR start "ruleSimpleConceptDeclaration"
    // InternalKim.g:10081:1: ruleSimpleConceptDeclaration returns [EObject current=null] : ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ) ;
    public final EObject ruleSimpleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        EObject lv_main_1_0 = null;



        	enterRule();

        try {
            // InternalKim.g:10087:2: ( ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ) )
            // InternalKim.g:10088:2: ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ )
            {
            // InternalKim.g:10088:2: ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ )
            // InternalKim.g:10089:3: ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+
            {
            // InternalKim.g:10089:3: ( (lv_name_0_0= RULE_STRING ) )?
            int alt211=2;
            int LA211_0 = input.LA(1);

            if ( (LA211_0==RULE_STRING) ) {
                alt211=1;
            }
            switch (alt211) {
                case 1 :
                    // InternalKim.g:10090:4: (lv_name_0_0= RULE_STRING )
                    {
                    // InternalKim.g:10090:4: (lv_name_0_0= RULE_STRING )
                    // InternalKim.g:10091:5: lv_name_0_0= RULE_STRING
                    {
                    lv_name_0_0=(Token)match(input,RULE_STRING,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_0, grammarAccess.getSimpleConceptDeclarationAccess().getNameSTRINGTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSimpleConceptDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:10107:3: ( (lv_main_1_0= ruleConcept ) )+
            int cnt212=0;
            loop212:
            do {
                int alt212=2;
                alt212 = dfa212.predict(input);
                switch (alt212) {
            	case 1 :
            	    // InternalKim.g:10108:4: (lv_main_1_0= ruleConcept )
            	    {
            	    // InternalKim.g:10108:4: (lv_main_1_0= ruleConcept )
            	    // InternalKim.g:10109:5: lv_main_1_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSimpleConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_main_1_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSimpleConceptDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"main",
            	      						lv_main_1_0,
            	      						"org.integratedmodelling.kim.Kim.Concept");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt212 >= 1 ) break loop212;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(212, input);
                        throw eee;
                }
                cnt212++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleConceptDeclaration"


    // $ANTLR start "entryRuleUpperOntologyDefinition"
    // InternalKim.g:10130:1: entryRuleUpperOntologyDefinition returns [EObject current=null] : iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF ;
    public final EObject entryRuleUpperOntologyDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUpperOntologyDefinition = null;


        try {
            // InternalKim.g:10130:64: (iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF )
            // InternalKim.g:10131:2: iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUpperOntologyDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUpperOntologyDefinition=ruleUpperOntologyDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUpperOntologyDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUpperOntologyDefinition"


    // $ANTLR start "ruleUpperOntologyDefinition"
    // InternalKim.g:10137:1: ruleUpperOntologyDefinition returns [EObject current=null] : (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) ) ;
    public final EObject ruleUpperOntologyDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_agentSpecifier_1_1=null;
        Token lv_agentSpecifier_1_2=null;
        Token lv_agentSpecifier_1_3=null;
        Token lv_concept_2_0=null;
        Token lv_concept_5_0=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        AntlrDatatypeRuleToken lv_propertySpecifiers_3_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_4_0 = null;

        AntlrDatatypeRuleToken lv_coreconcept_7_1 = null;

        AntlrDatatypeRuleToken lv_coreconcept_7_2 = null;

        AntlrDatatypeRuleToken lv_operand_8_0 = null;

        AntlrDatatypeRuleToken lv_property_10_1 = null;

        AntlrDatatypeRuleToken lv_property_10_2 = null;



        	enterRule();

        try {
            // InternalKim.g:10143:2: ( (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) ) )
            // InternalKim.g:10144:2: (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) )
            {
            // InternalKim.g:10144:2: (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) )
            // InternalKim.g:10145:3: otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) )
            {
            otherlv_0=(Token)match(input,70,FOLLOW_122); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getUpperOntologyDefinitionAccess().getModelKeyword_0());
              		
            }
            // InternalKim.g:10149:3: ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) )
            int alt219=2;
            int LA219_0 = input.LA(1);

            if ( (LA219_0==31||(LA219_0>=160 && LA219_0<=162)||(LA219_0>=243 && LA219_0<=244)) ) {
                alt219=1;
            }
            else if ( (LA219_0==60||(LA219_0>=120 && LA219_0<=122)||(LA219_0>=130 && LA219_0<=135)) ) {
                alt219=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 219, 0, input);

                throw nvae;
            }
            switch (alt219) {
                case 1 :
                    // InternalKim.g:10150:4: ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) )
                    {
                    // InternalKim.g:10150:4: ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) )
                    // InternalKim.g:10151:5: ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) )
                    {
                    // InternalKim.g:10151:5: ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? )
                    int alt216=2;
                    int LA216_0 = input.LA(1);

                    if ( ((LA216_0>=160 && LA216_0<=162)) ) {
                        alt216=1;
                    }
                    else if ( (LA216_0==31||(LA216_0>=243 && LA216_0<=244)) ) {
                        alt216=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 216, 0, input);

                        throw nvae;
                    }
                    switch (alt216) {
                        case 1 :
                            // InternalKim.g:10152:6: ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) )
                            {
                            // InternalKim.g:10152:6: ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) )
                            // InternalKim.g:10153:7: ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) )
                            {
                            // InternalKim.g:10153:7: ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) )
                            // InternalKim.g:10154:8: ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) )
                            {
                            // InternalKim.g:10154:8: ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) )
                            // InternalKim.g:10155:9: (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' )
                            {
                            // InternalKim.g:10155:9: (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' )
                            int alt213=3;
                            switch ( input.LA(1) ) {
                            case 160:
                                {
                                alt213=1;
                                }
                                break;
                            case 161:
                                {
                                alt213=2;
                                }
                                break;
                            case 162:
                                {
                                alt213=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 213, 0, input);

                                throw nvae;
                            }

                            switch (alt213) {
                                case 1 :
                                    // InternalKim.g:10156:10: lv_agentSpecifier_1_1= 'deliberative'
                                    {
                                    lv_agentSpecifier_1_1=(Token)match(input,160,FOLLOW_123); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_1, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierDeliberativeKeyword_1_0_0_0_0_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_1, null);
                                      									
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:10167:10: lv_agentSpecifier_1_2= 'interactive'
                                    {
                                    lv_agentSpecifier_1_2=(Token)match(input,161,FOLLOW_123); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_2, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierInteractiveKeyword_1_0_0_0_0_0_1());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_2, null);
                                      									
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:10178:10: lv_agentSpecifier_1_3= 'reactive'
                                    {
                                    lv_agentSpecifier_1_3=(Token)match(input,162,FOLLOW_123); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_3, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierReactiveKeyword_1_0_0_0_0_0_2());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_3, null);
                                      									
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalKim.g:10191:7: ( (lv_concept_2_0= 'agent' ) )
                            // InternalKim.g:10192:8: (lv_concept_2_0= 'agent' )
                            {
                            // InternalKim.g:10192:8: (lv_concept_2_0= 'agent' )
                            // InternalKim.g:10193:9: lv_concept_2_0= 'agent'
                            {
                            lv_concept_2_0=(Token)match(input,163,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									newLeafNode(lv_concept_2_0, grammarAccess.getUpperOntologyDefinitionAccess().getConceptAgentKeyword_1_0_0_0_1_0());
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                              									}
                              									setWithLastConsumed(current, "concept", lv_concept_2_0, "agent");
                              								
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:10207:6: ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )?
                            {
                            // InternalKim.g:10207:6: ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )?
                            int alt215=2;
                            int LA215_0 = input.LA(1);

                            if ( ((LA215_0>=243 && LA215_0<=244)) ) {
                                alt215=1;
                            }
                            switch (alt215) {
                                case 1 :
                                    // InternalKim.g:10208:7: ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) )
                                    {
                                    // InternalKim.g:10208:7: ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) )
                                    // InternalKim.g:10209:8: (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE )
                                    {
                                    // InternalKim.g:10209:8: (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE )
                                    // InternalKim.g:10210:9: lv_propertySpecifiers_3_0= rulePROPERTY_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_0_0_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_125);
                                    lv_propertySpecifiers_3_0=rulePROPERTY_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                                      									}
                                      									add(
                                      										current,
                                      										"propertySpecifiers",
                                      										lv_propertySpecifiers_3_0,
                                      										"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }

                                    // InternalKim.g:10227:7: ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )*
                                    loop214:
                                    do {
                                        int alt214=2;
                                        int LA214_0 = input.LA(1);

                                        if ( ((LA214_0>=243 && LA214_0<=244)) ) {
                                            alt214=1;
                                        }


                                        switch (alt214) {
                                    	case 1 :
                                    	    // InternalKim.g:10228:8: (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE )
                                    	    {
                                    	    // InternalKim.g:10228:8: (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE )
                                    	    // InternalKim.g:10229:9: lv_propertySpecifiers_4_0= rulePROPERTY_TYPE
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      									newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_0_0_1_1_0());
                                    	      								
                                    	    }
                                    	    pushFollow(FOLLOW_125);
                                    	    lv_propertySpecifiers_4_0=rulePROPERTY_TYPE();

                                    	    state._fsp--;
                                    	    if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      									if (current==null) {
                                    	      										current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                                    	      									}
                                    	      									add(
                                    	      										current,
                                    	      										"propertySpecifiers",
                                    	      										lv_propertySpecifiers_4_0,
                                    	      										"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
                                    	      									afterParserOrEnumRuleCall();
                                    	      								
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    break loop214;
                                        }
                                    } while (true);

                                    // InternalKim.g:10246:7: ( (lv_concept_5_0= 'relationship' ) )
                                    // InternalKim.g:10247:8: (lv_concept_5_0= 'relationship' )
                                    {
                                    // InternalKim.g:10247:8: (lv_concept_5_0= 'relationship' )
                                    // InternalKim.g:10248:9: lv_concept_5_0= 'relationship'
                                    {
                                    lv_concept_5_0=(Token)match(input,164,FOLLOW_124); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_concept_5_0, grammarAccess.getUpperOntologyDefinitionAccess().getConceptRelationshipKeyword_1_0_0_1_2_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      									}
                                      									setWithLastConsumed(current, "concept", lv_concept_5_0, "relationship");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,31,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getUpperOntologyDefinitionAccess().getUsingKeyword_1_0_1());
                      				
                    }
                    // InternalKim.g:10266:5: ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) )
                    // InternalKim.g:10267:6: ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) )
                    {
                    // InternalKim.g:10267:6: ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) )
                    // InternalKim.g:10268:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )
                    {
                    // InternalKim.g:10268:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )
                    int alt217=2;
                    alt217 = dfa217.predict(input);
                    switch (alt217) {
                        case 1 :
                            // InternalKim.g:10269:8: lv_coreconcept_7_1= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getCoreconceptNamespaceIdParserRuleCall_1_0_2_0_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_coreconcept_7_1=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"coreconcept",
                              									lv_coreconcept_7_1,
                              									"org.integratedmodelling.kim.Kim.NamespaceId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:10285:8: lv_coreconcept_7_2= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getCoreconceptPropertyIdParserRuleCall_1_0_2_0_1());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_coreconcept_7_2=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"coreconcept",
                              									lv_coreconcept_7_2,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:10305:4: ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) )
                    {
                    // InternalKim.g:10305:4: ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) )
                    // InternalKim.g:10306:5: ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) )
                    {
                    // InternalKim.g:10306:5: ( (lv_operand_8_0= ruleOPERATOR_TARGET ) )
                    // InternalKim.g:10307:6: (lv_operand_8_0= ruleOPERATOR_TARGET )
                    {
                    // InternalKim.g:10307:6: (lv_operand_8_0= ruleOPERATOR_TARGET )
                    // InternalKim.g:10308:7: lv_operand_8_0= ruleOPERATOR_TARGET
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getOperandOPERATOR_TARGETParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_124);
                    lv_operand_8_0=ruleOPERATOR_TARGET();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                      							}
                      							set(
                      								current,
                      								"operand",
                      								lv_operand_8_0,
                      								"org.integratedmodelling.kim.Kim.OPERATOR_TARGET");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,31,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getUpperOntologyDefinitionAccess().getUsingKeyword_1_1_1());
                      				
                    }
                    // InternalKim.g:10329:5: ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) )
                    // InternalKim.g:10330:6: ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:10330:6: ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) )
                    // InternalKim.g:10331:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )
                    {
                    // InternalKim.g:10331:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )
                    int alt218=2;
                    alt218 = dfa218.predict(input);
                    switch (alt218) {
                        case 1 :
                            // InternalKim.g:10332:8: lv_property_10_1= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertyPropertyIdParserRuleCall_1_1_2_0_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_property_10_1=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"property",
                              									lv_property_10_1,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:10348:8: lv_property_10_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertyNamespaceIdParserRuleCall_1_1_2_0_1());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_property_10_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"property",
                              									lv_property_10_2,
                              									"org.integratedmodelling.kim.Kim.NamespaceId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUpperOntologyDefinition"


    // $ANTLR start "entryRuleConceptStatement"
    // InternalKim.g:10372:1: entryRuleConceptStatement returns [EObject current=null] : iv_ruleConceptStatement= ruleConceptStatement EOF ;
    public final EObject entryRuleConceptStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptStatement = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:10376:2: (iv_ruleConceptStatement= ruleConceptStatement EOF )
            // InternalKim.g:10377:2: iv_ruleConceptStatement= ruleConceptStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptStatement=ruleConceptStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptStatement"


    // $ANTLR start "ruleConceptStatement"
    // InternalKim.g:10386:1: ruleConceptStatement returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )? ) ;
    public final EObject ruleConceptStatement() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_2_0=null;
        Token lv_deniable_3_0=null;
        Token lv_subjective_4_0=null;
        Token lv_agentSpecifier_5_1=null;
        Token lv_agentSpecifier_5_2=null;
        Token lv_agentSpecifier_5_3=null;
        Token lv_attributeSpecifier_8_0=null;
        Token otherlv_11=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_6_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;

        AntlrDatatypeRuleToken lv_concept_9_0 = null;

        EObject lv_body_10_0 = null;

        AntlrDatatypeRuleToken lv_name_12_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:10395:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )? ) )
            // InternalKim.g:10396:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )? )
            {
            // InternalKim.g:10396:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )? )
            // InternalKim.g:10397:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )?
            {
            // InternalKim.g:10397:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop220:
            do {
                int alt220=2;
                int LA220_0 = input.LA(1);

                if ( (LA220_0==RULE_ANNOTATION_ID) ) {
                    alt220=1;
                }


                switch (alt220) {
            	case 1 :
            	    // InternalKim.g:10398:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:10398:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:10399:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_126);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop220;
                }
            } while (true);

            // InternalKim.g:10416:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:10417:4: ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:10417:4: ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) )
            // InternalKim.g:10418:5: ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());
            // InternalKim.g:10421:5: ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* )
            // InternalKim.g:10422:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )*
            {
            // InternalKim.g:10422:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )*
            loop224:
            do {
                int alt224=5;
                alt224 = dfa224.predict(input);
                switch (alt224) {
            	case 1 :
            	    // InternalKim.g:10423:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
            	    {
            	    // InternalKim.g:10423:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
            	    // InternalKim.g:10424:5: {...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:10424:113: ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
            	    // InternalKim.g:10425:6: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:10428:9: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
            	    // InternalKim.g:10428:10: {...}? => ( (lv_abstract_2_0= 'abstract' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:10428:19: ( (lv_abstract_2_0= 'abstract' ) )
            	    // InternalKim.g:10428:20: (lv_abstract_2_0= 'abstract' )
            	    {
            	    // InternalKim.g:10428:20: (lv_abstract_2_0= 'abstract' )
            	    // InternalKim.g:10429:10: lv_abstract_2_0= 'abstract'
            	    {
            	    lv_abstract_2_0=(Token)match(input,165,FOLLOW_126); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_abstract_2_0, grammarAccess.getConceptStatementAccess().getAbstractAbstractKeyword_1_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "abstract", true, "abstract");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:10446:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
            	    {
            	    // InternalKim.g:10446:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
            	    // InternalKim.g:10447:5: {...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:10447:113: ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
            	    // InternalKim.g:10448:6: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:10451:9: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
            	    // InternalKim.g:10451:10: {...}? => ( (lv_deniable_3_0= 'deniable' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:10451:19: ( (lv_deniable_3_0= 'deniable' ) )
            	    // InternalKim.g:10451:20: (lv_deniable_3_0= 'deniable' )
            	    {
            	    // InternalKim.g:10451:20: (lv_deniable_3_0= 'deniable' )
            	    // InternalKim.g:10452:10: lv_deniable_3_0= 'deniable'
            	    {
            	    lv_deniable_3_0=(Token)match(input,166,FOLLOW_126); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_deniable_3_0, grammarAccess.getConceptStatementAccess().getDeniableDeniableKeyword_1_1_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "deniable", true, "deniable");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:10469:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
            	    {
            	    // InternalKim.g:10469:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
            	    // InternalKim.g:10470:5: {...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // InternalKim.g:10470:113: ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
            	    // InternalKim.g:10471:6: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2);
            	    // InternalKim.g:10474:9: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
            	    // InternalKim.g:10474:10: {...}? => ( (lv_subjective_4_0= 'subjective' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:10474:19: ( (lv_subjective_4_0= 'subjective' ) )
            	    // InternalKim.g:10474:20: (lv_subjective_4_0= 'subjective' )
            	    {
            	    // InternalKim.g:10474:20: (lv_subjective_4_0= 'subjective' )
            	    // InternalKim.g:10475:10: lv_subjective_4_0= 'subjective'
            	    {
            	    lv_subjective_4_0=(Token)match(input,167,FOLLOW_126); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_subjective_4_0, grammarAccess.getConceptStatementAccess().getSubjectiveSubjectiveKeyword_1_2_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "subjective", true, "subjective");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:10492:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) )
            	    {
            	    // InternalKim.g:10492:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) )
            	    // InternalKim.g:10493:5: {...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // InternalKim.g:10493:113: ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) )
            	    // InternalKim.g:10494:6: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3);
            	    // InternalKim.g:10497:9: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) )
            	    // InternalKim.g:10497:10: {...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:10497:19: ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) )
            	    int alt223=3;
            	    switch ( input.LA(1) ) {
            	    case 160:
            	    case 161:
            	    case 162:
            	        {
            	        alt223=1;
            	        }
            	        break;
            	    case 243:
            	    case 244:
            	        {
            	        alt223=2;
            	        }
            	        break;
            	    case 168:
            	        {
            	        alt223=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 223, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt223) {
            	        case 1 :
            	            // InternalKim.g:10497:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
            	            {
            	            // InternalKim.g:10497:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
            	            // InternalKim.g:10498:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
            	            {
            	            // InternalKim.g:10498:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
            	            // InternalKim.g:10499:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
            	            {
            	            // InternalKim.g:10499:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
            	            int alt221=3;
            	            switch ( input.LA(1) ) {
            	            case 160:
            	                {
            	                alt221=1;
            	                }
            	                break;
            	            case 161:
            	                {
            	                alt221=2;
            	                }
            	                break;
            	            case 162:
            	                {
            	                alt221=3;
            	                }
            	                break;
            	            default:
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 221, 0, input);

            	                throw nvae;
            	            }

            	            switch (alt221) {
            	                case 1 :
            	                    // InternalKim.g:10500:12: lv_agentSpecifier_5_1= 'deliberative'
            	                    {
            	                    lv_agentSpecifier_5_1=(Token)match(input,160,FOLLOW_126); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_1, grammarAccess.getConceptStatementAccess().getAgentSpecifierDeliberativeKeyword_1_3_0_0_0());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_1, null);
            	                      											
            	                    }

            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:10511:12: lv_agentSpecifier_5_2= 'interactive'
            	                    {
            	                    lv_agentSpecifier_5_2=(Token)match(input,161,FOLLOW_126); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_2, grammarAccess.getConceptStatementAccess().getAgentSpecifierInteractiveKeyword_1_3_0_0_1());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_2, null);
            	                      											
            	                    }

            	                    }
            	                    break;
            	                case 3 :
            	                    // InternalKim.g:10522:12: lv_agentSpecifier_5_3= 'reactive'
            	                    {
            	                    lv_agentSpecifier_5_3=(Token)match(input,162,FOLLOW_126); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_3, grammarAccess.getConceptStatementAccess().getAgentSpecifierReactiveKeyword_1_3_0_0_2());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_3, null);
            	                      											
            	                    }

            	                    }
            	                    break;

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:10536:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
            	            {
            	            // InternalKim.g:10536:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
            	            // InternalKim.g:10537:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
            	            {
            	            // InternalKim.g:10537:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) )
            	            // InternalKim.g:10538:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
            	            {
            	            // InternalKim.g:10538:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
            	            // InternalKim.g:10539:12: lv_propertySpecifiers_6_0= rulePROPERTY_TYPE
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_0_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_126);
            	            lv_propertySpecifiers_6_0=rulePROPERTY_TYPE();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	              												}
            	              												add(
            	              													current,
            	              													"propertySpecifiers",
            	              													lv_propertySpecifiers_6_0,
            	              													"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:10556:10: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
            	            loop222:
            	            do {
            	                int alt222=2;
            	                int LA222_0 = input.LA(1);

            	                if ( (LA222_0==243) ) {
            	                    int LA222_2 = input.LA(2);

            	                    if ( (synpred401_InternalKim()) ) {
            	                        alt222=1;
            	                    }


            	                }
            	                else if ( (LA222_0==244) ) {
            	                    int LA222_3 = input.LA(2);

            	                    if ( (synpred401_InternalKim()) ) {
            	                        alt222=1;
            	                    }


            	                }


            	                switch (alt222) {
            	            	case 1 :
            	            	    // InternalKim.g:10557:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
            	            	    {
            	            	    // InternalKim.g:10557:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
            	            	    // InternalKim.g:10558:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
            	            	      											
            	            	    }
            	            	    pushFollow(FOLLOW_126);
            	            	    lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      												if (current==null) {
            	            	      													current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	            	      												}
            	            	      												add(
            	            	      													current,
            	            	      													"propertySpecifiers",
            	            	      													lv_propertySpecifiers_7_0,
            	            	      													"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
            	            	      												afterParserOrEnumRuleCall();
            	            	      											
            	            	    }

            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop222;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:10577:9: ( (lv_attributeSpecifier_8_0= 'rescaling' ) )
            	            {
            	            // InternalKim.g:10577:9: ( (lv_attributeSpecifier_8_0= 'rescaling' ) )
            	            // InternalKim.g:10578:10: (lv_attributeSpecifier_8_0= 'rescaling' )
            	            {
            	            // InternalKim.g:10578:10: (lv_attributeSpecifier_8_0= 'rescaling' )
            	            // InternalKim.g:10579:11: lv_attributeSpecifier_8_0= 'rescaling'
            	            {
            	            lv_attributeSpecifier_8_0=(Token)match(input,168,FOLLOW_126); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_attributeSpecifier_8_0, grammarAccess.getConceptStatementAccess().getAttributeSpecifierRescalingKeyword_1_3_2_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getConceptStatementRule());
            	              											}
            	              											setWithLastConsumed(current, "attributeSpecifier", lv_attributeSpecifier_8_0, "rescaling");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop224;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            }

            // InternalKim.g:10604:3: ( (lv_concept_9_0= ruleCONCEPT_TYPE ) )
            // InternalKim.g:10605:4: (lv_concept_9_0= ruleCONCEPT_TYPE )
            {
            // InternalKim.g:10605:4: (lv_concept_9_0= ruleCONCEPT_TYPE )
            // InternalKim.g:10606:5: lv_concept_9_0= ruleCONCEPT_TYPE
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConceptStatementAccess().getConceptCONCEPT_TYPEParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_127);
            lv_concept_9_0=ruleCONCEPT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
              					}
              					set(
              						current,
              						"concept",
              						lv_concept_9_0,
              						"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:10623:3: ( (lv_body_10_0= ruleConceptStatementBody ) )
            // InternalKim.g:10624:4: (lv_body_10_0= ruleConceptStatementBody )
            {
            // InternalKim.g:10624:4: (lv_body_10_0= ruleConceptStatementBody )
            // InternalKim.g:10625:5: lv_body_10_0= ruleConceptStatementBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConceptStatementAccess().getBodyConceptStatementBodyParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_128);
            lv_body_10_0=ruleConceptStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_10_0,
              						"org.integratedmodelling.kim.Kim.ConceptStatementBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:10642:3: (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )?
            int alt225=2;
            int LA225_0 = input.LA(1);

            if ( (LA225_0==116) ) {
                alt225=1;
            }
            switch (alt225) {
                case 1 :
                    // InternalKim.g:10643:4: otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) )
                    {
                    otherlv_11=(Token)match(input,116,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getConceptStatementAccess().getNamedKeyword_4_0());
                      			
                    }
                    // InternalKim.g:10647:4: ( (lv_name_12_0= ruleNamespaceId ) )
                    // InternalKim.g:10648:5: (lv_name_12_0= ruleNamespaceId )
                    {
                    // InternalKim.g:10648:5: (lv_name_12_0= ruleNamespaceId )
                    // InternalKim.g:10649:6: lv_name_12_0= ruleNamespaceId
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptStatementAccess().getNameNamespaceIdParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_12_0=ruleNamespaceId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptStatementRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_12_0,
                      							"org.integratedmodelling.kim.Kim.NamespaceId");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptStatement"


    // $ANTLR start "entryRuleConceptStatementBody"
    // InternalKim.g:10674:1: entryRuleConceptStatementBody returns [EObject current=null] : iv_ruleConceptStatementBody= ruleConceptStatementBody EOF ;
    public final EObject entryRuleConceptStatementBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptStatementBody = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:10678:2: (iv_ruleConceptStatementBody= ruleConceptStatementBody EOF )
            // InternalKim.g:10679:2: iv_ruleConceptStatementBody= ruleConceptStatementBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptStatementBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptStatementBody=ruleConceptStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptStatementBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptStatementBody"


    // $ANTLR start "ruleConceptStatementBody"
    // InternalKim.g:10688:1: ruleConceptStatementBody returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+ ) ) )* ) ) ) ) ;
    public final EObject ruleConceptStatementBody() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_1_0=null;
        Token lv_root_2_0=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_stringIdentifier_6_1=null;
        Token lv_stringIdentifier_6_2=null;
        Token lv_intIdentifier_7_0=null;
        Token otherlv_8=null;
        Token lv_authority_9_1=null;
        Token lv_authority_9_2=null;
        Token lv_docstring_11_0=null;
        Token otherlv_12=null;
        Token lv_alias_13_0=null;
        Token lv_coreConcept_14_0=null;
        Token lv_nothing_15_0=null;
        Token lv_connectors_17_1=null;
        Token lv_connectors_17_2=null;
        Token lv_connectors_17_3=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token lv_specific_23_0=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_definedAuthority_29_0=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token otherlv_35=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        Token otherlv_43=null;
        Token otherlv_45=null;
        Token otherlv_47=null;
        Token otherlv_49=null;
        Token otherlv_51=null;
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token otherlv_60=null;
        Token otherlv_62=null;
        Token otherlv_64=null;
        Token otherlv_66=null;
        Token otherlv_68=null;
        Token otherlv_70=null;
        Token otherlv_72=null;
        Token otherlv_74=null;
        Token lv_constituent_75_0=null;
        Token lv_constitutes_76_0=null;
        Token lv_partOf_77_0=null;
        Token otherlv_79=null;
        Token otherlv_81=null;
        Token otherlv_83=null;
        Token otherlv_84=null;
        Token otherlv_86=null;
        Token otherlv_88=null;
        Token otherlv_90=null;
        Token otherlv_92=null;
        Token otherlv_94=null;
        Token otherlv_96=null;
        Token otherlv_97=null;
        Token otherlv_99=null;
        Token otherlv_101=null;
        Token otherlv_103=null;
        Token lv_disjoint_104_0=null;
        Token otherlv_105=null;
        Token otherlv_107=null;
        Token otherlv_109=null;
        Token otherlv_110=null;
        Token lv_authorities_111_1=null;
        Token lv_authorities_111_2=null;
        Token otherlv_112=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parents_16_0 = null;

        EObject lv_parents_18_0 = null;

        EObject lv_contextualizedTraits_20_0 = null;

        EObject lv_contextualizedTraits_22_0 = null;

        EObject lv_contextualizesTraits_24_0 = null;

        EObject lv_contextualizesTraits_26_0 = null;

        EObject lv_upperConcept_30_0 = null;

        EObject lv_requirements_32_0 = null;

        EObject lv_requirements_34_0 = null;

        EObject lv_describedQuality_36_0 = null;

        EObject lv_describedProportionality_39_0 = null;

        EObject lv_describedInverseProportionalityQuality_42_0 = null;

        EObject lv_describedNonzeroQuality_44_0 = null;

        EObject lv_classifiesQuality_46_0 = null;

        EObject lv_discretizesQuality_48_0 = null;

        EObject lv_actuallyInheritedTraits_50_0 = null;

        EObject lv_actuallyInheritedTraits_52_0 = null;

        EObject lv_roles_55_0 = null;

        EObject lv_roles_57_0 = null;

        EObject lv_targetObservables_59_0 = null;

        EObject lv_targetObservables_61_0 = null;

        EObject lv_restrictedObservables_63_0 = null;

        EObject lv_restrictedObservables_65_0 = null;

        EObject lv_conferredTraits_67_0 = null;

        EObject lv_conferredTraits_69_0 = null;

        EObject lv_conferredTargets_71_0 = null;

        EObject lv_conferredTargets_73_0 = null;

        EObject lv_whole_78_0 = null;

        EObject lv_creates_80_0 = null;

        EObject lv_creates_82_0 = null;

        EObject lv_traitTargets_85_0 = null;

        EObject lv_traitTargets_87_0 = null;

        EObject lv_domains_89_0 = null;

        EObject lv_ranges_91_0 = null;

        EObject lv_domains_93_0 = null;

        EObject lv_ranges_95_0 = null;

        EObject lv_inverse_98_0 = null;

        EObject lv_qualitiesAffected_100_0 = null;

        EObject lv_qualitiesAffected_102_0 = null;

        EObject lv_children_106_0 = null;

        EObject lv_children_108_0 = null;

        EObject lv_metadata_113_0 = null;

        EObject lv_properties_114_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:10697:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+ ) ) )* ) ) ) ) )
            // InternalKim.g:10698:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+ ) ) )* ) ) ) )
            {
            // InternalKim.g:10698:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+ ) ) )* ) ) ) )
            // InternalKim.g:10699:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+ ) ) )* ) ) )
            {
            // InternalKim.g:10699:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop226:
            do {
                int alt226=2;
                int LA226_0 = input.LA(1);

                if ( (LA226_0==RULE_ANNOTATION_ID) ) {
                    alt226=1;
                }


                switch (alt226) {
            	case 1 :
            	    // InternalKim.g:10700:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:10700:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:10701:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_127);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop226;
                }
            } while (true);

            // InternalKim.g:10718:3: ( (lv_abstract_1_0= 'abstract' ) )?
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( (LA227_0==165) ) {
                alt227=1;
            }
            switch (alt227) {
                case 1 :
                    // InternalKim.g:10719:4: (lv_abstract_1_0= 'abstract' )
                    {
                    // InternalKim.g:10719:4: (lv_abstract_1_0= 'abstract' )
                    // InternalKim.g:10720:5: lv_abstract_1_0= 'abstract'
                    {
                    lv_abstract_1_0=(Token)match(input,165,FOLLOW_129); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_abstract_1_0, grammarAccess.getConceptStatementBodyAccess().getAbstractAbstractKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      					}
                      					setWithLastConsumed(current, "abstract", true, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:10732:3: ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) )
            int alt232=2;
            int LA232_0 = input.LA(1);

            if ( (LA232_0==96) ) {
                alt232=1;
            }
            else if ( (LA232_0==RULE_CAMELCASE_ID) ) {
                alt232=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 232, 0, input);

                throw nvae;
            }
            switch (alt232) {
                case 1 :
                    // InternalKim.g:10733:4: ( (lv_root_2_0= 'root' ) )
                    {
                    // InternalKim.g:10733:4: ( (lv_root_2_0= 'root' ) )
                    // InternalKim.g:10734:5: (lv_root_2_0= 'root' )
                    {
                    // InternalKim.g:10734:5: (lv_root_2_0= 'root' )
                    // InternalKim.g:10735:6: lv_root_2_0= 'root'
                    {
                    lv_root_2_0=(Token)match(input,96,FOLLOW_130); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_root_2_0, grammarAccess.getConceptStatementBodyAccess().getRootRootKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      						}
                      						setWithLastConsumed(current, "root", true, "root");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:10748:4: ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    {
                    // InternalKim.g:10748:4: ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    // InternalKim.g:10749:5: ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )?
                    {
                    // InternalKim.g:10749:5: ( (lv_name_3_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:10750:6: (lv_name_3_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:10750:6: (lv_name_3_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:10751:7: lv_name_3_0= RULE_CAMELCASE_ID
                    {
                    lv_name_3_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_131); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_name_3_0, grammarAccess.getConceptStatementBodyAccess().getNameCAMELCASE_IDTerminalRuleCall_2_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"name",
                      								lv_name_3_0,
                      								"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      						
                    }

                    }


                    }

                    // InternalKim.g:10767:5: (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )?
                    int alt231=2;
                    int LA231_0 = input.LA(1);

                    if ( (LA231_0==139) ) {
                        alt231=1;
                    }
                    switch (alt231) {
                        case 1 :
                            // InternalKim.g:10768:6: otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) )
                            {
                            otherlv_4=(Token)match(input,139,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_4, grammarAccess.getConceptStatementBodyAccess().getIdentifiedKeyword_2_1_1_0());
                              					
                            }
                            otherlv_5=(Token)match(input,25,FOLLOW_132); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getConceptStatementBodyAccess().getAsKeyword_2_1_1_1());
                              					
                            }
                            // InternalKim.g:10776:6: ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) )
                            int alt229=2;
                            int LA229_0 = input.LA(1);

                            if ( (LA229_0==RULE_STRING||LA229_0==RULE_ID) ) {
                                alt229=1;
                            }
                            else if ( (LA229_0==RULE_INT) ) {
                                alt229=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 229, 0, input);

                                throw nvae;
                            }
                            switch (alt229) {
                                case 1 :
                                    // InternalKim.g:10777:7: ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) )
                                    {
                                    // InternalKim.g:10777:7: ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) )
                                    // InternalKim.g:10778:8: ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) )
                                    {
                                    // InternalKim.g:10778:8: ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) )
                                    // InternalKim.g:10779:9: (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING )
                                    {
                                    // InternalKim.g:10779:9: (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING )
                                    int alt228=2;
                                    int LA228_0 = input.LA(1);

                                    if ( (LA228_0==RULE_ID) ) {
                                        alt228=1;
                                    }
                                    else if ( (LA228_0==RULE_STRING) ) {
                                        alt228=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 228, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt228) {
                                        case 1 :
                                            // InternalKim.g:10780:10: lv_stringIdentifier_6_1= RULE_ID
                                            {
                                            lv_stringIdentifier_6_1=(Token)match(input,RULE_ID,FOLLOW_106); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										newLeafNode(lv_stringIdentifier_6_1, grammarAccess.getConceptStatementBodyAccess().getStringIdentifierIDTerminalRuleCall_2_1_1_2_0_0_0());
                                              									
                                            }
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                              										}
                                              										setWithLastConsumed(
                                              											current,
                                              											"stringIdentifier",
                                              											lv_stringIdentifier_6_1,
                                              											"org.eclipse.xtext.common.Terminals.ID");
                                              									
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalKim.g:10795:10: lv_stringIdentifier_6_2= RULE_STRING
                                            {
                                            lv_stringIdentifier_6_2=(Token)match(input,RULE_STRING,FOLLOW_106); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										newLeafNode(lv_stringIdentifier_6_2, grammarAccess.getConceptStatementBodyAccess().getStringIdentifierSTRINGTerminalRuleCall_2_1_1_2_0_0_1());
                                              									
                                            }
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                              										}
                                              										setWithLastConsumed(
                                              											current,
                                              											"stringIdentifier",
                                              											lv_stringIdentifier_6_2,
                                              											"org.eclipse.xtext.common.Terminals.STRING");
                                              									
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:10813:7: ( (lv_intIdentifier_7_0= RULE_INT ) )
                                    {
                                    // InternalKim.g:10813:7: ( (lv_intIdentifier_7_0= RULE_INT ) )
                                    // InternalKim.g:10814:8: (lv_intIdentifier_7_0= RULE_INT )
                                    {
                                    // InternalKim.g:10814:8: (lv_intIdentifier_7_0= RULE_INT )
                                    // InternalKim.g:10815:9: lv_intIdentifier_7_0= RULE_INT
                                    {
                                    lv_intIdentifier_7_0=(Token)match(input,RULE_INT,FOLLOW_106); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_intIdentifier_7_0, grammarAccess.getConceptStatementBodyAccess().getIntIdentifierINTTerminalRuleCall_2_1_1_2_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"intIdentifier",
                                      										lv_intIdentifier_7_0,
                                      										"org.eclipse.xtext.common.Terminals.INT");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_8=(Token)match(input,88,FOLLOW_114); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getConceptStatementBodyAccess().getByKeyword_2_1_1_3());
                              					
                            }
                            // InternalKim.g:10836:6: ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) )
                            // InternalKim.g:10837:7: ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) )
                            {
                            // InternalKim.g:10837:7: ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) )
                            // InternalKim.g:10838:8: (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH )
                            {
                            // InternalKim.g:10838:8: (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH )
                            int alt230=2;
                            int LA230_0 = input.LA(1);

                            if ( (LA230_0==RULE_UPPERCASE_ID) ) {
                                alt230=1;
                            }
                            else if ( (LA230_0==RULE_UPPERCASE_PATH) ) {
                                alt230=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 230, 0, input);

                                throw nvae;
                            }
                            switch (alt230) {
                                case 1 :
                                    // InternalKim.g:10839:9: lv_authority_9_1= RULE_UPPERCASE_ID
                                    {
                                    lv_authority_9_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_130); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_authority_9_1, grammarAccess.getConceptStatementBodyAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_2_1_1_4_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"authority",
                                      										lv_authority_9_1,
                                      										"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:10854:9: lv_authority_9_2= RULE_UPPERCASE_PATH
                                    {
                                    lv_authority_9_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_130); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_authority_9_2, grammarAccess.getConceptStatementBodyAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_2_1_1_4_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"authority",
                                      										lv_authority_9_2,
                                      										"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:10874:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+ ) ) )* ) ) )
            // InternalKim.g:10875:4: ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+ ) ) )* ) )
            {
            // InternalKim.g:10875:4: ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+ ) ) )* ) )
            // InternalKim.g:10876:5: ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+ ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
            // InternalKim.g:10879:5: ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+ ) ) )* )
            // InternalKim.g:10880:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+ ) ) )*
            {
            // InternalKim.g:10880:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+ ) ) )*
            loop260:
            do {
                int alt260=25;
                alt260 = dfa260.predict(input);
                switch (alt260) {
            	case 1 :
            	    // InternalKim.g:10881:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
            	    {
            	    // InternalKim.g:10881:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:10882:5: {...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:10882:117: ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
            	    // InternalKim.g:10883:6: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:10886:9: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
            	    // InternalKim.g:10886:10: {...}? => ( (lv_docstring_11_0= RULE_STRING ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10886:19: ( (lv_docstring_11_0= RULE_STRING ) )
            	    // InternalKim.g:10886:20: (lv_docstring_11_0= RULE_STRING )
            	    {
            	    // InternalKim.g:10886:20: (lv_docstring_11_0= RULE_STRING )
            	    // InternalKim.g:10887:10: lv_docstring_11_0= RULE_STRING
            	    {
            	    lv_docstring_11_0=(Token)match(input,RULE_STRING,FOLLOW_130); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_docstring_11_0, grammarAccess.getConceptStatementBodyAccess().getDocstringSTRINGTerminalRuleCall_3_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	      										}
            	      										setWithLastConsumed(
            	      											current,
            	      											"docstring",
            	      											lv_docstring_11_0,
            	      											"org.eclipse.xtext.common.Terminals.STRING");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:10908:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
            	    {
            	    // InternalKim.g:10908:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
            	    // InternalKim.g:10909:5: {...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:10909:117: ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:10910:6: ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:10913:9: ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:10913:10: {...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10913:19: ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:10913:20: ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    // InternalKim.g:10913:20: ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? )
            	    // InternalKim.g:10914:10: (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )?
            	    {
            	    // InternalKim.g:10914:10: (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) )
            	    int alt233=2;
            	    int LA233_0 = input.LA(1);

            	    if ( (LA233_0==169) ) {
            	        alt233=1;
            	    }
            	    else if ( (LA233_0==170) ) {
            	        alt233=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 233, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt233) {
            	        case 1 :
            	            // InternalKim.g:10915:11: otherlv_12= 'is'
            	            {
            	            otherlv_12=(Token)match(input,169,FOLLOW_133); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_12, grammarAccess.getConceptStatementBodyAccess().getIsKeyword_3_1_0_0_0());
            	              										
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:10920:11: ( (lv_alias_13_0= 'equals' ) )
            	            {
            	            // InternalKim.g:10920:11: ( (lv_alias_13_0= 'equals' ) )
            	            // InternalKim.g:10921:12: (lv_alias_13_0= 'equals' )
            	            {
            	            // InternalKim.g:10921:12: (lv_alias_13_0= 'equals' )
            	            // InternalKim.g:10922:13: lv_alias_13_0= 'equals'
            	            {
            	            lv_alias_13_0=(Token)match(input,170,FOLLOW_133); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_alias_13_0, grammarAccess.getConceptStatementBodyAccess().getAliasEqualsKeyword_3_1_0_0_1_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              													}
            	              													setWithLastConsumed(current, "alias", true, "equals");
            	              												
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:10935:10: ( (lv_coreConcept_14_0= 'core' ) )?
            	    int alt234=2;
            	    int LA234_0 = input.LA(1);

            	    if ( (LA234_0==171) ) {
            	        alt234=1;
            	    }
            	    switch (alt234) {
            	        case 1 :
            	            // InternalKim.g:10936:11: (lv_coreConcept_14_0= 'core' )
            	            {
            	            // InternalKim.g:10936:11: (lv_coreConcept_14_0= 'core' )
            	            // InternalKim.g:10937:12: lv_coreConcept_14_0= 'core'
            	            {
            	            lv_coreConcept_14_0=(Token)match(input,171,FOLLOW_134); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_coreConcept_14_0, grammarAccess.getConceptStatementBodyAccess().getCoreConceptCoreKeyword_3_1_0_1_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "coreConcept", true, "core");
            	              											
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }

            	    // InternalKim.g:10950:9: ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
            	    int alt237=2;
            	    int LA237_0 = input.LA(1);

            	    if ( (LA237_0==172) ) {
            	        alt237=1;
            	    }
            	    else if ( ((LA237_0>=RULE_UPPERCASE_ID && LA237_0<=RULE_LOWERCASE_ID)||LA237_0==RULE_CAMELCASE_ID||LA237_0==RULE_LOWERCASE_DASHID||LA237_0==38||(LA237_0>=128 && LA237_0<=129)||(LA237_0>=137 && LA237_0<=138)||(LA237_0>=140 && LA237_0<=156)) ) {
            	        alt237=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 237, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt237) {
            	        case 1 :
            	            // InternalKim.g:10951:10: ( (lv_nothing_15_0= 'nothing' ) )
            	            {
            	            // InternalKim.g:10951:10: ( (lv_nothing_15_0= 'nothing' ) )
            	            // InternalKim.g:10952:11: (lv_nothing_15_0= 'nothing' )
            	            {
            	            // InternalKim.g:10952:11: (lv_nothing_15_0= 'nothing' )
            	            // InternalKim.g:10953:12: lv_nothing_15_0= 'nothing'
            	            {
            	            lv_nothing_15_0=(Token)match(input,172,FOLLOW_130); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_nothing_15_0, grammarAccess.getConceptStatementBodyAccess().getNothingNothingKeyword_3_1_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "nothing", true, "nothing");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:10966:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
            	            {
            	            // InternalKim.g:10966:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
            	            // InternalKim.g:10967:11: ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
            	            {
            	            // InternalKim.g:10967:11: ( (lv_parents_16_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:10968:12: (lv_parents_16_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:10968:12: (lv_parents_16_0= ruleConceptDeclaration )
            	            // InternalKim.g:10969:13: lv_parents_16_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_0_0());
            	              												
            	            }
            	            pushFollow(FOLLOW_135);
            	            lv_parents_16_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              													}
            	              													add(
            	              														current,
            	              														"parents",
            	              														lv_parents_16_0,
            	              														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              													afterParserOrEnumRuleCall();
            	              												
            	            }

            	            }


            	            }

            	            // InternalKim.g:10986:11: ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
            	            loop236:
            	            do {
            	                int alt236=2;
            	                int LA236_0 = input.LA(1);

            	                if ( (LA236_0==27||(LA236_0>=157 && LA236_0<=158)) ) {
            	                    alt236=1;
            	                }


            	                switch (alt236) {
            	            	case 1 :
            	            	    // InternalKim.g:10987:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    // InternalKim.g:10987:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) )
            	            	    // InternalKim.g:10988:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
            	            	    {
            	            	    // InternalKim.g:10988:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
            	            	    // InternalKim.g:10989:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
            	            	    {
            	            	    // InternalKim.g:10989:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
            	            	    int alt235=3;
            	            	    switch ( input.LA(1) ) {
            	            	    case 27:
            	            	        {
            	            	        alt235=1;
            	            	        }
            	            	        break;
            	            	    case 157:
            	            	        {
            	            	        alt235=2;
            	            	        }
            	            	        break;
            	            	    case 158:
            	            	        {
            	            	        alt235=3;
            	            	        }
            	            	        break;
            	            	    default:
            	            	        if (state.backtracking>0) {state.failed=true; return current;}
            	            	        NoViableAltException nvae =
            	            	            new NoViableAltException("", 235, 0, input);

            	            	        throw nvae;
            	            	    }

            	            	    switch (alt235) {
            	            	        case 1 :
            	            	            // InternalKim.g:10990:15: lv_connectors_17_1= ','
            	            	            {
            	            	            lv_connectors_17_1=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_1, grammarAccess.getConceptStatementBodyAccess().getConnectorsCommaKeyword_3_1_1_1_1_0_0_0());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_1, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;
            	            	        case 2 :
            	            	            // InternalKim.g:11001:15: lv_connectors_17_2= 'or'
            	            	            {
            	            	            lv_connectors_17_2=(Token)match(input,157,FOLLOW_23); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_2, grammarAccess.getConceptStatementBodyAccess().getConnectorsOrKeyword_3_1_1_1_1_0_0_1());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_2, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;
            	            	        case 3 :
            	            	            // InternalKim.g:11012:15: lv_connectors_17_3= 'and'
            	            	            {
            	            	            lv_connectors_17_3=(Token)match(input,158,FOLLOW_23); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_3, grammarAccess.getConceptStatementBodyAccess().getConnectorsAndKeyword_3_1_1_1_1_0_0_2());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_3, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;

            	            	    }


            	            	    }


            	            	    }

            	            	    // InternalKim.g:11025:12: ( (lv_parents_18_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:11026:13: (lv_parents_18_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:11026:13: (lv_parents_18_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:11027:14: lv_parents_18_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      														newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_1_1_0());
            	            	      													
            	            	    }
            	            	    pushFollow(FOLLOW_135);
            	            	    lv_parents_18_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      														if (current==null) {
            	            	      															current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      														}
            	            	      														add(
            	            	      															current,
            	            	      															"parents",
            	            	      															lv_parents_18_0,
            	            	      															"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      														afterParserOrEnumRuleCall();
            	            	      													
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop236;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:11053:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:11053:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:11054:5: {...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:11054:117: ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:11055:6: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:11058:9: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:11058:10: {...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11058:19: ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
            	    int alt240=2;
            	    int LA240_0 = input.LA(1);

            	    if ( (LA240_0==173) ) {
            	        alt240=1;
            	    }
            	    else if ( (LA240_0==174) ) {
            	        alt240=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 240, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt240) {
            	        case 1 :
            	            // InternalKim.g:11058:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
            	            {
            	            // InternalKim.g:11058:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
            	            // InternalKim.g:11059:10: otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
            	            {
            	            otherlv_19=(Token)match(input,173,FOLLOW_92); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_19, grammarAccess.getConceptStatementBodyAccess().getExposesKeyword_3_2_0_0());
            	              									
            	            }
            	            // InternalKim.g:11063:10: ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) )
            	            // InternalKim.g:11064:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
            	            {
            	            // InternalKim.g:11064:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
            	            // InternalKim.g:11065:12: lv_contextualizedTraits_20_0= ruleObservableSemantics
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_136);
            	            lv_contextualizedTraits_20_0=ruleObservableSemantics();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"contextualizedTraits",
            	              													lv_contextualizedTraits_20_0,
            	              													"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:11082:10: (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
            	            loop238:
            	            do {
            	                int alt238=2;
            	                int LA238_0 = input.LA(1);

            	                if ( (LA238_0==27) ) {
            	                    alt238=1;
            	                }


            	                switch (alt238) {
            	            	case 1 :
            	            	    // InternalKim.g:11083:11: otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
            	            	    {
            	            	    otherlv_21=(Token)match(input,27,FOLLOW_92); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_21, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_2_0_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:11087:11: ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
            	            	    // InternalKim.g:11088:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
            	            	    {
            	            	    // InternalKim.g:11088:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
            	            	    // InternalKim.g:11089:13: lv_contextualizedTraits_22_0= ruleObservableSemantics
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_136);
            	            	    lv_contextualizedTraits_22_0=ruleObservableSemantics();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"contextualizedTraits",
            	            	      														lv_contextualizedTraits_22_0,
            	            	      														"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop238;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:11109:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
            	            {
            	            // InternalKim.g:11109:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
            	            // InternalKim.g:11110:10: ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
            	            {
            	            // InternalKim.g:11110:10: ( (lv_specific_23_0= 'exposing' ) )
            	            // InternalKim.g:11111:11: (lv_specific_23_0= 'exposing' )
            	            {
            	            // InternalKim.g:11111:11: (lv_specific_23_0= 'exposing' )
            	            // InternalKim.g:11112:12: lv_specific_23_0= 'exposing'
            	            {
            	            lv_specific_23_0=(Token)match(input,174,FOLLOW_23); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_specific_23_0, grammarAccess.getConceptStatementBodyAccess().getSpecificExposingKeyword_3_2_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "specific", true, "exposing");
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:11124:10: ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:11125:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:11125:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
            	            // InternalKim.g:11126:12: lv_contextualizesTraits_24_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_136);
            	            lv_contextualizesTraits_24_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"contextualizesTraits",
            	              													lv_contextualizesTraits_24_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:11143:10: (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
            	            loop239:
            	            do {
            	                int alt239=2;
            	                int LA239_0 = input.LA(1);

            	                if ( (LA239_0==27) ) {
            	                    alt239=1;
            	                }


            	                switch (alt239) {
            	            	case 1 :
            	            	    // InternalKim.g:11144:11: otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_25=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_25, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_2_1_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:11148:11: ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:11149:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:11149:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:11150:13: lv_contextualizesTraits_26_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_136);
            	            	    lv_contextualizesTraits_26_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"contextualizesTraits",
            	            	      														lv_contextualizesTraits_26_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop239;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:11175:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11175:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
            	    // InternalKim.g:11176:5: {...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:11176:117: ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:11177:6: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:11180:9: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:11180:10: {...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11180:19: (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
            	    // InternalKim.g:11180:20: otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
            	    {
            	    otherlv_27=(Token)match(input,175,FOLLOW_137); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getConceptStatementBodyAccess().getDefinesKeyword_3_3_0());
            	      								
            	    }
            	    // InternalKim.g:11184:9: ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
            	    int alt241=2;
            	    int LA241_0 = input.LA(1);

            	    if ( (LA241_0==176) ) {
            	        alt241=1;
            	    }
            	    else if ( ((LA241_0>=RULE_UPPERCASE_ID && LA241_0<=RULE_LOWERCASE_ID)||LA241_0==RULE_CAMELCASE_ID||LA241_0==RULE_LOWERCASE_DASHID||LA241_0==38||(LA241_0>=128 && LA241_0<=129)||(LA241_0>=137 && LA241_0<=138)||(LA241_0>=140 && LA241_0<=156)) ) {
            	        alt241=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 241, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt241) {
            	        case 1 :
            	            // InternalKim.g:11185:10: (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) )
            	            {
            	            // InternalKim.g:11185:10: (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) )
            	            // InternalKim.g:11186:11: otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) )
            	            {
            	            otherlv_28=(Token)match(input,176,FOLLOW_138); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_28, grammarAccess.getConceptStatementBodyAccess().getAuthorityKeyword_3_3_1_0_0());
            	              										
            	            }
            	            // InternalKim.g:11190:11: ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) )
            	            // InternalKim.g:11191:12: (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH )
            	            {
            	            // InternalKim.g:11191:12: (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH )
            	            // InternalKim.g:11192:13: lv_definedAuthority_29_0= RULE_UPPERCASE_PATH
            	            {
            	            lv_definedAuthority_29_0=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_130); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_definedAuthority_29_0, grammarAccess.getConceptStatementBodyAccess().getDefinedAuthorityUPPERCASE_PATHTerminalRuleCall_3_3_1_0_1_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              													}
            	              													setWithLastConsumed(
            	              														current,
            	              														"definedAuthority",
            	              														lv_definedAuthority_29_0,
            	              														"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
            	              												
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:11210:10: ( (lv_upperConcept_30_0= ruleConcept ) )
            	            {
            	            // InternalKim.g:11210:10: ( (lv_upperConcept_30_0= ruleConcept ) )
            	            // InternalKim.g:11211:11: (lv_upperConcept_30_0= ruleConcept )
            	            {
            	            // InternalKim.g:11211:11: (lv_upperConcept_30_0= ruleConcept )
            	            // InternalKim.g:11212:12: lv_upperConcept_30_0= ruleConcept
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getUpperConceptConceptParserRuleCall_3_3_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_130);
            	            lv_upperConcept_30_0=ruleConcept();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												set(
            	              													current,
            	              													"upperConcept",
            	              													lv_upperConcept_30_0,
            	              													"org.integratedmodelling.kim.Kim.Concept");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:11236:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:11236:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
            	    // InternalKim.g:11237:5: {...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalKim.g:11237:117: ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
            	    // InternalKim.g:11238:6: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4);
            	    // InternalKim.g:11241:9: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
            	    // InternalKim.g:11241:10: {...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11241:19: (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
            	    // InternalKim.g:11241:20: otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
            	    {
            	    otherlv_31=(Token)match(input,177,FOLLOW_139); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_31, grammarAccess.getConceptStatementBodyAccess().getRequiresKeyword_3_4_0());
            	      								
            	    }
            	    // InternalKim.g:11245:9: ( (lv_requirements_32_0= ruleIdentityRequirement ) )
            	    // InternalKim.g:11246:10: (lv_requirements_32_0= ruleIdentityRequirement )
            	    {
            	    // InternalKim.g:11246:10: (lv_requirements_32_0= ruleIdentityRequirement )
            	    // InternalKim.g:11247:11: lv_requirements_32_0= ruleIdentityRequirement
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_136);
            	    lv_requirements_32_0=ruleIdentityRequirement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"requirements",
            	      												lv_requirements_32_0,
            	      												"org.integratedmodelling.kim.Kim.IdentityRequirement");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:11264:9: (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
            	    loop242:
            	    do {
            	        int alt242=2;
            	        int LA242_0 = input.LA(1);

            	        if ( (LA242_0==27) ) {
            	            alt242=1;
            	        }


            	        switch (alt242) {
            	    	case 1 :
            	    	    // InternalKim.g:11265:10: otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) )
            	    	    {
            	    	    otherlv_33=(Token)match(input,27,FOLLOW_139); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_33, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_4_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:11269:10: ( (lv_requirements_34_0= ruleIdentityRequirement ) )
            	    	    // InternalKim.g:11270:11: (lv_requirements_34_0= ruleIdentityRequirement )
            	    	    {
            	    	    // InternalKim.g:11270:11: (lv_requirements_34_0= ruleIdentityRequirement )
            	    	    // InternalKim.g:11271:12: lv_requirements_34_0= ruleIdentityRequirement
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_136);
            	    	    lv_requirements_34_0=ruleIdentityRequirement();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"requirements",
            	    	      													lv_requirements_34_0,
            	    	      													"org.integratedmodelling.kim.Kim.IdentityRequirement");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop242;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:11295:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11295:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:11296:5: {...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalKim.g:11296:117: ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:11297:6: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5);
            	    // InternalKim.g:11300:9: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:11300:10: {...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11300:19: (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:11300:20: otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_35=(Token)match(input,178,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_35, grammarAccess.getConceptStatementBodyAccess().getDescribesKeyword_3_5_0());
            	      								
            	    }
            	    // InternalKim.g:11304:9: ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11305:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11305:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
            	    // InternalKim.g:11306:11: lv_describedQuality_36_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedQualityConceptDeclarationParserRuleCall_3_5_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_130);
            	    lv_describedQuality_36_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedQuality",
            	      												lv_describedQuality_36_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:11329:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11329:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:11330:5: {...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6)");
            	    }
            	    // InternalKim.g:11330:117: ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:11331:6: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6);
            	    // InternalKim.g:11334:9: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:11334:10: {...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11334:19: (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:11334:20: otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_37=(Token)match(input,179,FOLLOW_73); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_37, grammarAccess.getConceptStatementBodyAccess().getIncreasesKeyword_3_6_0());
            	      								
            	    }
            	    otherlv_38=(Token)match(input,98,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_38, grammarAccess.getConceptStatementBodyAccess().getWithKeyword_3_6_1());
            	      								
            	    }
            	    // InternalKim.g:11342:9: ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11343:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11343:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
            	    // InternalKim.g:11344:11: lv_describedProportionality_39_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedProportionalityConceptDeclarationParserRuleCall_3_6_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_130);
            	    lv_describedProportionality_39_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedProportionality",
            	      												lv_describedProportionality_39_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalKim.g:11367:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11367:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:11368:5: {...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7)");
            	    }
            	    // InternalKim.g:11368:117: ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:11369:6: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7);
            	    // InternalKim.g:11372:9: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:11372:10: {...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11372:19: (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:11372:20: otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_40=(Token)match(input,180,FOLLOW_73); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_40, grammarAccess.getConceptStatementBodyAccess().getDecreasesKeyword_3_7_0());
            	      								
            	    }
            	    otherlv_41=(Token)match(input,98,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_41, grammarAccess.getConceptStatementBodyAccess().getWithKeyword_3_7_1());
            	      								
            	    }
            	    // InternalKim.g:11380:9: ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11381:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11381:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
            	    // InternalKim.g:11382:11: lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedInverseProportionalityQualityConceptDeclarationParserRuleCall_3_7_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_130);
            	    lv_describedInverseProportionalityQuality_42_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedInverseProportionalityQuality",
            	      												lv_describedInverseProportionalityQuality_42_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalKim.g:11405:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11405:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:11406:5: {...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8)");
            	    }
            	    // InternalKim.g:11406:117: ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:11407:6: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8);
            	    // InternalKim.g:11410:9: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:11410:10: {...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11410:19: (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:11410:20: otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_43=(Token)match(input,181,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_43, grammarAccess.getConceptStatementBodyAccess().getMarksKeyword_3_8_0());
            	      								
            	    }
            	    // InternalKim.g:11414:9: ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11415:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11415:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
            	    // InternalKim.g:11416:11: lv_describedNonzeroQuality_44_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedNonzeroQualityConceptDeclarationParserRuleCall_3_8_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_130);
            	    lv_describedNonzeroQuality_44_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedNonzeroQuality",
            	      												lv_describedNonzeroQuality_44_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalKim.g:11439:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11439:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:11440:5: {...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9)");
            	    }
            	    // InternalKim.g:11440:117: ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:11441:6: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9);
            	    // InternalKim.g:11444:9: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:11444:10: {...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11444:19: (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:11444:20: otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_45=(Token)match(input,182,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_45, grammarAccess.getConceptStatementBodyAccess().getClassifiesKeyword_3_9_0());
            	      								
            	    }
            	    // InternalKim.g:11448:9: ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11449:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11449:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
            	    // InternalKim.g:11450:11: lv_classifiesQuality_46_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getClassifiesQualityConceptDeclarationParserRuleCall_3_9_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_130);
            	    lv_classifiesQuality_46_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"classifiesQuality",
            	      												lv_classifiesQuality_46_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalKim.g:11473:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11473:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:11474:5: {...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10)");
            	    }
            	    // InternalKim.g:11474:118: ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:11475:6: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10);
            	    // InternalKim.g:11478:9: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:11478:10: {...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11478:19: (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:11478:20: otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_47=(Token)match(input,183,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_47, grammarAccess.getConceptStatementBodyAccess().getDiscretizesKeyword_3_10_0());
            	      								
            	    }
            	    // InternalKim.g:11482:9: ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11483:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11483:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
            	    // InternalKim.g:11484:11: lv_discretizesQuality_48_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDiscretizesQualityConceptDeclarationParserRuleCall_3_10_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_130);
            	    lv_discretizesQuality_48_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"discretizesQuality",
            	      												lv_discretizesQuality_48_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalKim.g:11507:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:11507:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:11508:5: {...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11)");
            	    }
            	    // InternalKim.g:11508:118: ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:11509:6: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11);
            	    // InternalKim.g:11512:9: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:11512:10: {...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11512:19: (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:11512:20: otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_49=(Token)match(input,184,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_49, grammarAccess.getConceptStatementBodyAccess().getInheritsKeyword_3_11_0());
            	      								
            	    }
            	    // InternalKim.g:11516:9: ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11517:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11517:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
            	    // InternalKim.g:11518:11: lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_136);
            	    lv_actuallyInheritedTraits_50_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"actuallyInheritedTraits",
            	      												lv_actuallyInheritedTraits_50_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:11535:9: (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
            	    loop243:
            	    do {
            	        int alt243=2;
            	        int LA243_0 = input.LA(1);

            	        if ( (LA243_0==27) ) {
            	            alt243=1;
            	        }


            	        switch (alt243) {
            	    	case 1 :
            	    	    // InternalKim.g:11536:10: otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_51=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_51, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_11_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:11540:10: ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:11541:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:11541:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:11542:12: lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_136);
            	    	    lv_actuallyInheritedTraits_52_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"actuallyInheritedTraits",
            	    	      													lv_actuallyInheritedTraits_52_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop243;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 13 :
            	    // InternalKim.g:11566:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:11566:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:11567:5: {...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12)");
            	    }
            	    // InternalKim.g:11567:118: ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:11568:6: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12);
            	    // InternalKim.g:11571:9: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:11571:10: {...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11571:19: (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:11571:20: otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    otherlv_53=(Token)match(input,185,FOLLOW_140); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_53, grammarAccess.getConceptStatementBodyAccess().getHasKeyword_3_12_0());
            	      								
            	    }
            	    otherlv_54=(Token)match(input,186,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_54, grammarAccess.getConceptStatementBodyAccess().getRoleKeyword_3_12_1());
            	      								
            	    }
            	    // InternalKim.g:11579:9: ( (lv_roles_55_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11580:10: (lv_roles_55_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11580:10: (lv_roles_55_0= ruleConceptDeclaration )
            	    // InternalKim.g:11581:11: lv_roles_55_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_141);
            	    lv_roles_55_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"roles",
            	      												lv_roles_55_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:11598:9: (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )*
            	    loop244:
            	    do {
            	        int alt244=2;
            	        int LA244_0 = input.LA(1);

            	        if ( (LA244_0==27) ) {
            	            alt244=1;
            	        }


            	        switch (alt244) {
            	    	case 1 :
            	    	    // InternalKim.g:11599:10: otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_56=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_56, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_3_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:11603:10: ( (lv_roles_57_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:11604:11: (lv_roles_57_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:11604:11: (lv_roles_57_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:11605:12: lv_roles_57_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_141);
            	    	    lv_roles_57_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"roles",
            	    	      													lv_roles_57_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop244;
            	        }
            	    } while (true);

            	    // InternalKim.g:11623:9: (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )?
            	    int alt246=2;
            	    int LA246_0 = input.LA(1);

            	    if ( (LA246_0==187) ) {
            	        alt246=1;
            	    }
            	    switch (alt246) {
            	        case 1 :
            	            // InternalKim.g:11624:10: otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
            	            {
            	            otherlv_58=(Token)match(input,187,FOLLOW_23); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_58, grammarAccess.getConceptStatementBodyAccess().getTargetingKeyword_3_12_4_0());
            	              									
            	            }
            	            // InternalKim.g:11628:10: ( (lv_targetObservables_59_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:11629:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:11629:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
            	            // InternalKim.g:11630:12: lv_targetObservables_59_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_142);
            	            lv_targetObservables_59_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"targetObservables",
            	              													lv_targetObservables_59_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:11647:10: (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
            	            loop245:
            	            do {
            	                int alt245=2;
            	                int LA245_0 = input.LA(1);

            	                if ( (LA245_0==27) ) {
            	                    alt245=1;
            	                }


            	                switch (alt245) {
            	            	case 1 :
            	            	    // InternalKim.g:11648:11: otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_60=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_60, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_4_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:11652:11: ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:11653:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:11653:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:11654:13: lv_targetObservables_61_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_142);
            	            	    lv_targetObservables_61_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"targetObservables",
            	            	      														lv_targetObservables_61_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop245;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    // InternalKim.g:11673:9: (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:11674:10: otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_62=(Token)match(input,48,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_62, grammarAccess.getConceptStatementBodyAccess().getInKeyword_3_12_5_0());
            	      									
            	    }
            	    // InternalKim.g:11678:10: ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11679:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11679:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
            	    // InternalKim.g:11680:12: lv_restrictedObservables_63_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_1_0());
            	      											
            	    }
            	    pushFollow(FOLLOW_136);
            	    lv_restrictedObservables_63_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      												if (current==null) {
            	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      												}
            	      												add(
            	      													current,
            	      													"restrictedObservables",
            	      													lv_restrictedObservables_63_0,
            	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      												afterParserOrEnumRuleCall();
            	      											
            	    }

            	    }


            	    }

            	    // InternalKim.g:11697:10: (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
            	    loop247:
            	    do {
            	        int alt247=2;
            	        int LA247_0 = input.LA(1);

            	        if ( (LA247_0==27) ) {
            	            alt247=1;
            	        }


            	        switch (alt247) {
            	    	case 1 :
            	    	    // InternalKim.g:11698:11: otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_64=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_64, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_5_2_0());
            	    	      										
            	    	    }
            	    	    // InternalKim.g:11702:11: ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:11703:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:11703:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:11704:13: lv_restrictedObservables_65_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_2_1_0());
            	    	      												
            	    	    }
            	    	    pushFollow(FOLLOW_136);
            	    	    lv_restrictedObservables_65_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      													if (current==null) {
            	    	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      													}
            	    	      													add(
            	    	      														current,
            	    	      														"restrictedObservables",
            	    	      														lv_restrictedObservables_65_0,
            	    	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      													afterParserOrEnumRuleCall();
            	    	      												
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop247;
            	        }
            	    } while (true);


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 14 :
            	    // InternalKim.g:11729:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
            	    {
            	    // InternalKim.g:11729:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
            	    // InternalKim.g:11730:5: {...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13)");
            	    }
            	    // InternalKim.g:11730:118: ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
            	    // InternalKim.g:11731:6: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13);
            	    // InternalKim.g:11734:9: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
            	    // InternalKim.g:11734:10: {...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11734:19: (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
            	    // InternalKim.g:11734:20: otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
            	    {
            	    otherlv_66=(Token)match(input,188,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_66, grammarAccess.getConceptStatementBodyAccess().getConfersKeyword_3_13_0());
            	      								
            	    }
            	    // InternalKim.g:11738:9: ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11739:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11739:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
            	    // InternalKim.g:11740:11: lv_conferredTraits_67_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_143);
            	    lv_conferredTraits_67_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"conferredTraits",
            	      												lv_conferredTraits_67_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:11757:9: (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )*
            	    loop248:
            	    do {
            	        int alt248=2;
            	        int LA248_0 = input.LA(1);

            	        if ( (LA248_0==27) ) {
            	            alt248=1;
            	        }


            	        switch (alt248) {
            	    	case 1 :
            	    	    // InternalKim.g:11758:10: otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_68=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_68, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_13_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:11762:10: ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:11763:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:11763:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:11764:12: lv_conferredTraits_69_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_143);
            	    	    lv_conferredTraits_69_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"conferredTraits",
            	    	      													lv_conferredTraits_69_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop248;
            	        }
            	    } while (true);

            	    // InternalKim.g:11782:9: (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
            	    int alt250=2;
            	    int LA250_0 = input.LA(1);

            	    if ( (LA250_0==36) ) {
            	        alt250=1;
            	    }
            	    switch (alt250) {
            	        case 1 :
            	            // InternalKim.g:11783:10: otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
            	            {
            	            otherlv_70=(Token)match(input,36,FOLLOW_23); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_70, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_13_3_0());
            	              									
            	            }
            	            // InternalKim.g:11787:10: ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:11788:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:11788:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
            	            // InternalKim.g:11789:12: lv_conferredTargets_71_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_136);
            	            lv_conferredTargets_71_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"conferredTargets",
            	              													lv_conferredTargets_71_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:11806:10: (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
            	            loop249:
            	            do {
            	                int alt249=2;
            	                int LA249_0 = input.LA(1);

            	                if ( (LA249_0==27) ) {
            	                    alt249=1;
            	                }


            	                switch (alt249) {
            	            	case 1 :
            	            	    // InternalKim.g:11807:11: otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_72=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_72, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_13_3_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:11811:11: ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:11812:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:11812:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:11813:13: lv_conferredTargets_73_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_136);
            	            	    lv_conferredTargets_73_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"conferredTargets",
            	            	      														lv_conferredTargets_73_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop249;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 15 :
            	    // InternalKim.g:11838:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11838:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:11839:5: {...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14)");
            	    }
            	    // InternalKim.g:11839:118: ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:11840:6: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14);
            	    // InternalKim.g:11843:9: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:11843:10: {...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11843:19: ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:11843:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) )
            	    {
            	    // InternalKim.g:11843:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) )
            	    int alt251=3;
            	    switch ( input.LA(1) ) {
            	    case 189:
            	        {
            	        alt251=1;
            	        }
            	        break;
            	    case 190:
            	        {
            	        alt251=2;
            	        }
            	        break;
            	    case 191:
            	        {
            	        alt251=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 251, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt251) {
            	        case 1 :
            	            // InternalKim.g:11844:10: otherlv_74= 'part'
            	            {
            	            otherlv_74=(Token)match(input,189,FOLLOW_115); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_74, grammarAccess.getConceptStatementBodyAccess().getPartKeyword_3_14_0_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:11849:10: ( (lv_constituent_75_0= 'constituent' ) )
            	            {
            	            // InternalKim.g:11849:10: ( (lv_constituent_75_0= 'constituent' ) )
            	            // InternalKim.g:11850:11: (lv_constituent_75_0= 'constituent' )
            	            {
            	            // InternalKim.g:11850:11: (lv_constituent_75_0= 'constituent' )
            	            // InternalKim.g:11851:12: lv_constituent_75_0= 'constituent'
            	            {
            	            lv_constituent_75_0=(Token)match(input,190,FOLLOW_115); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_constituent_75_0, grammarAccess.getConceptStatementBodyAccess().getConstituentConstituentKeyword_3_14_0_1_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "constituent", true, "constituent");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:11864:10: ( (lv_constitutes_76_0= 'consists' ) )
            	            {
            	            // InternalKim.g:11864:10: ( (lv_constitutes_76_0= 'consists' ) )
            	            // InternalKim.g:11865:11: (lv_constitutes_76_0= 'consists' )
            	            {
            	            // InternalKim.g:11865:11: (lv_constitutes_76_0= 'consists' )
            	            // InternalKim.g:11866:12: lv_constitutes_76_0= 'consists'
            	            {
            	            lv_constitutes_76_0=(Token)match(input,191,FOLLOW_115); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_constitutes_76_0, grammarAccess.getConceptStatementBodyAccess().getConstitutesConsistsKeyword_3_14_0_2_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "constitutes", true, "consists");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:11879:9: ( (lv_partOf_77_0= 'of' ) )
            	    // InternalKim.g:11880:10: (lv_partOf_77_0= 'of' )
            	    {
            	    // InternalKim.g:11880:10: (lv_partOf_77_0= 'of' )
            	    // InternalKim.g:11881:11: lv_partOf_77_0= 'of'
            	    {
            	    lv_partOf_77_0=(Token)match(input,119,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_partOf_77_0, grammarAccess.getConceptStatementBodyAccess().getPartOfOfKeyword_3_14_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											setWithLastConsumed(current, "partOf", true, "of");
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:11893:9: ( (lv_whole_78_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11894:10: (lv_whole_78_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11894:10: (lv_whole_78_0= ruleConceptDeclaration )
            	    // InternalKim.g:11895:11: lv_whole_78_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getWholeConceptDeclarationParserRuleCall_3_14_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_130);
            	    lv_whole_78_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"whole",
            	      												lv_whole_78_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 16 :
            	    // InternalKim.g:11918:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:11918:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:11919:5: {...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15)");
            	    }
            	    // InternalKim.g:11919:118: ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:11920:6: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15);
            	    // InternalKim.g:11923:9: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:11923:10: {...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11923:19: (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:11923:20: otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_79=(Token)match(input,192,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_79, grammarAccess.getConceptStatementBodyAccess().getCreatesKeyword_3_15_0());
            	      								
            	    }
            	    // InternalKim.g:11927:9: ( (lv_creates_80_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11928:10: (lv_creates_80_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11928:10: (lv_creates_80_0= ruleConceptDeclaration )
            	    // InternalKim.g:11929:11: lv_creates_80_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_136);
            	    lv_creates_80_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"creates",
            	      												lv_creates_80_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:11946:9: (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
            	    loop252:
            	    do {
            	        int alt252=2;
            	        int LA252_0 = input.LA(1);

            	        if ( (LA252_0==27) ) {
            	            alt252=1;
            	        }


            	        switch (alt252) {
            	    	case 1 :
            	    	    // InternalKim.g:11947:10: otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_81=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_81, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_15_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:11951:10: ( (lv_creates_82_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:11952:11: (lv_creates_82_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:11952:11: (lv_creates_82_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:11953:12: lv_creates_82_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_136);
            	    	    lv_creates_82_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"creates",
            	    	      													lv_creates_82_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop252;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 17 :
            	    // InternalKim.g:11977:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:11977:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
            	    // InternalKim.g:11978:5: {...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16)");
            	    }
            	    // InternalKim.g:11978:118: ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
            	    // InternalKim.g:11979:6: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16);
            	    // InternalKim.g:11982:9: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
            	    // InternalKim.g:11982:10: {...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11982:19: (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
            	    // InternalKim.g:11982:20: otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
            	    {
            	    otherlv_83=(Token)match(input,193,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_83, grammarAccess.getConceptStatementBodyAccess().getAppliesKeyword_3_16_0());
            	      								
            	    }
            	    otherlv_84=(Token)match(input,36,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_84, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_16_1());
            	      								
            	    }
            	    // InternalKim.g:11990:9: ( (lv_traitTargets_85_0= ruleApplicableTarget ) )
            	    // InternalKim.g:11991:10: (lv_traitTargets_85_0= ruleApplicableTarget )
            	    {
            	    // InternalKim.g:11991:10: (lv_traitTargets_85_0= ruleApplicableTarget )
            	    // InternalKim.g:11992:11: lv_traitTargets_85_0= ruleApplicableTarget
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_136);
            	    lv_traitTargets_85_0=ruleApplicableTarget();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"traitTargets",
            	      												lv_traitTargets_85_0,
            	      												"org.integratedmodelling.kim.Kim.ApplicableTarget");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12009:9: (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
            	    loop253:
            	    do {
            	        int alt253=2;
            	        int LA253_0 = input.LA(1);

            	        if ( (LA253_0==27) ) {
            	            alt253=1;
            	        }


            	        switch (alt253) {
            	    	case 1 :
            	    	    // InternalKim.g:12010:10: otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
            	    	    {
            	    	    otherlv_86=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_86, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_16_3_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12014:10: ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
            	    	    // InternalKim.g:12015:11: (lv_traitTargets_87_0= ruleApplicableTarget )
            	    	    {
            	    	    // InternalKim.g:12015:11: (lv_traitTargets_87_0= ruleApplicableTarget )
            	    	    // InternalKim.g:12016:12: lv_traitTargets_87_0= ruleApplicableTarget
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_136);
            	    	    lv_traitTargets_87_0=ruleApplicableTarget();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"traitTargets",
            	    	      													lv_traitTargets_87_0,
            	    	      													"org.integratedmodelling.kim.Kim.ApplicableTarget");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop253;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 18 :
            	    // InternalKim.g:12040:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12040:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:12041:5: {...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17)");
            	    }
            	    // InternalKim.g:12041:118: ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:12042:6: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17);
            	    // InternalKim.g:12045:9: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:12045:10: {...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12045:19: (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
            	    // InternalKim.g:12045:20: otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
            	    {
            	    otherlv_88=(Token)match(input,194,FOLLOW_104); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_88, grammarAccess.getConceptStatementBodyAccess().getLinksKeyword_3_17_0());
            	      								
            	    }
            	    // InternalKim.g:12049:9: ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:12050:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:12050:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:12051:11: lv_domains_89_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_domains_89_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"domains",
            	      												lv_domains_89_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12068:9: ( ( 'to' )=>otherlv_90= 'to' )
            	    // InternalKim.g:12069:10: ( 'to' )=>otherlv_90= 'to'
            	    {
            	    otherlv_90=(Token)match(input,36,FOLLOW_104); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_90, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_17_2());
            	      									
            	    }

            	    }

            	    // InternalKim.g:12075:9: ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:12076:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:12076:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:12077:11: lv_ranges_91_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_136);
            	    lv_ranges_91_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"ranges",
            	      												lv_ranges_91_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12094:9: (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
            	    loop254:
            	    do {
            	        int alt254=2;
            	        int LA254_0 = input.LA(1);

            	        if ( (LA254_0==27) ) {
            	            alt254=1;
            	        }


            	        switch (alt254) {
            	    	case 1 :
            	    	    // InternalKim.g:12095:10: otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_92=(Token)match(input,27,FOLLOW_104); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_92, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_17_4_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12099:10: ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) )
            	    	    // InternalKim.g:12100:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12100:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
            	    	    // InternalKim.g:12101:12: lv_domains_93_0= ruleSimpleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_4_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_25);
            	    	    lv_domains_93_0=ruleSimpleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"domains",
            	    	      													lv_domains_93_0,
            	    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }

            	    	    // InternalKim.g:12118:10: ( ( 'to' )=>otherlv_94= 'to' )
            	    	    // InternalKim.g:12119:11: ( 'to' )=>otherlv_94= 'to'
            	    	    {
            	    	    otherlv_94=(Token)match(input,36,FOLLOW_104); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_94, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_17_4_2());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:12125:10: ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
            	    	    // InternalKim.g:12126:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12126:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
            	    	    // InternalKim.g:12127:12: lv_ranges_95_0= ruleSimpleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_4_3_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_136);
            	    	    lv_ranges_95_0=ruleSimpleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"ranges",
            	    	      													lv_ranges_95_0,
            	    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop254;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 19 :
            	    // InternalKim.g:12151:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:12151:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:12152:5: {...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18)");
            	    }
            	    // InternalKim.g:12152:118: ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:12153:6: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18);
            	    // InternalKim.g:12156:9: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:12156:10: {...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12156:19: (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:12156:20: otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_96=(Token)match(input,195,FOLLOW_115); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_96, grammarAccess.getConceptStatementBodyAccess().getInverseKeyword_3_18_0());
            	      								
            	    }
            	    otherlv_97=(Token)match(input,119,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_97, grammarAccess.getConceptStatementBodyAccess().getOfKeyword_3_18_1());
            	      								
            	    }
            	    // InternalKim.g:12164:9: ( (lv_inverse_98_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12165:10: (lv_inverse_98_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12165:10: (lv_inverse_98_0= ruleConceptDeclaration )
            	    // InternalKim.g:12166:11: lv_inverse_98_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getInverseConceptDeclarationParserRuleCall_3_18_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_130);
            	    lv_inverse_98_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"inverse",
            	      												lv_inverse_98_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 20 :
            	    // InternalKim.g:12189:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12189:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:12190:5: {...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19)");
            	    }
            	    // InternalKim.g:12190:118: ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:12191:6: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19);
            	    // InternalKim.g:12194:9: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:12194:10: {...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12194:19: (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:12194:20: otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_99=(Token)match(input,196,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_99, grammarAccess.getConceptStatementBodyAccess().getAffectsKeyword_3_19_0());
            	      								
            	    }
            	    // InternalKim.g:12198:9: ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12199:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12199:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
            	    // InternalKim.g:12200:11: lv_qualitiesAffected_100_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_136);
            	    lv_qualitiesAffected_100_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"qualitiesAffected",
            	      												lv_qualitiesAffected_100_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12217:9: (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
            	    loop255:
            	    do {
            	        int alt255=2;
            	        int LA255_0 = input.LA(1);

            	        if ( (LA255_0==27) ) {
            	            alt255=1;
            	        }


            	        switch (alt255) {
            	    	case 1 :
            	    	    // InternalKim.g:12218:10: otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_101=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_101, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_19_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12222:10: ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:12223:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12223:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:12224:12: lv_qualitiesAffected_102_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_136);
            	    	    lv_qualitiesAffected_102_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"qualitiesAffected",
            	    	      													lv_qualitiesAffected_102_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop255;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 21 :
            	    // InternalKim.g:12248:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12248:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
            	    // InternalKim.g:12249:5: {...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20)");
            	    }
            	    // InternalKim.g:12249:118: ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
            	    // InternalKim.g:12250:6: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20);
            	    // InternalKim.g:12253:9: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
            	    // InternalKim.g:12253:10: {...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12253:19: (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
            	    // InternalKim.g:12253:20: otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
            	    {
            	    otherlv_103=(Token)match(input,185,FOLLOW_144); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_103, grammarAccess.getConceptStatementBodyAccess().getHasKeyword_3_20_0());
            	      								
            	    }
            	    // InternalKim.g:12257:9: ( (lv_disjoint_104_0= 'disjoint' ) )?
            	    int alt256=2;
            	    int LA256_0 = input.LA(1);

            	    if ( (LA256_0==97) ) {
            	        alt256=1;
            	    }
            	    switch (alt256) {
            	        case 1 :
            	            // InternalKim.g:12258:10: (lv_disjoint_104_0= 'disjoint' )
            	            {
            	            // InternalKim.g:12258:10: (lv_disjoint_104_0= 'disjoint' )
            	            // InternalKim.g:12259:11: lv_disjoint_104_0= 'disjoint'
            	            {
            	            lv_disjoint_104_0=(Token)match(input,97,FOLLOW_145); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_disjoint_104_0, grammarAccess.getConceptStatementBodyAccess().getDisjointDisjointKeyword_3_20_1_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              											}
            	              											setWithLastConsumed(current, "disjoint", true, "disjoint");
            	              										
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    otherlv_105=(Token)match(input,111,FOLLOW_146); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_105, grammarAccess.getConceptStatementBodyAccess().getChildrenKeyword_3_20_2());
            	      								
            	    }
            	    // InternalKim.g:12275:9: ( (lv_children_106_0= ruleChildConcept ) )
            	    // InternalKim.g:12276:10: (lv_children_106_0= ruleChildConcept )
            	    {
            	    // InternalKim.g:12276:10: (lv_children_106_0= ruleChildConcept )
            	    // InternalKim.g:12277:11: lv_children_106_0= ruleChildConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_136);
            	    lv_children_106_0=ruleChildConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"children",
            	      												lv_children_106_0,
            	      												"org.integratedmodelling.kim.Kim.ChildConcept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12294:9: (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
            	    loop257:
            	    do {
            	        int alt257=2;
            	        int LA257_0 = input.LA(1);

            	        if ( (LA257_0==27) ) {
            	            alt257=1;
            	        }


            	        switch (alt257) {
            	    	case 1 :
            	    	    // InternalKim.g:12295:10: otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) )
            	    	    {
            	    	    otherlv_107=(Token)match(input,27,FOLLOW_146); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_107, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_20_4_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12299:10: ( (lv_children_108_0= ruleChildConcept ) )
            	    	    // InternalKim.g:12300:11: (lv_children_108_0= ruleChildConcept )
            	    	    {
            	    	    // InternalKim.g:12300:11: (lv_children_108_0= ruleChildConcept )
            	    	    // InternalKim.g:12301:12: lv_children_108_0= ruleChildConcept
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_4_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_136);
            	    	    lv_children_108_0=ruleChildConcept();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"children",
            	    	      													lv_children_108_0,
            	    	      													"org.integratedmodelling.kim.Kim.ChildConcept");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop257;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 22 :
            	    // InternalKim.g:12325:4: ({...}? => ( ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:12325:4: ({...}? => ( ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) )
            	    // InternalKim.g:12326:5: {...}? => ( ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21)");
            	    }
            	    // InternalKim.g:12326:118: ( ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
            	    // InternalKim.g:12327:6: ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21);
            	    // InternalKim.g:12330:9: ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) )
            	    // InternalKim.g:12330:10: {...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12330:19: (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) )
            	    // InternalKim.g:12330:20: otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) )
            	    {
            	    otherlv_109=(Token)match(input,197,FOLLOW_147); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_109, grammarAccess.getConceptStatementBodyAccess().getUsesKeyword_3_21_0());
            	      								
            	    }
            	    otherlv_110=(Token)match(input,176,FOLLOW_114); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_110, grammarAccess.getConceptStatementBodyAccess().getAuthorityKeyword_3_21_1());
            	      								
            	    }
            	    // InternalKim.g:12338:9: ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) )
            	    // InternalKim.g:12339:10: ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) )
            	    {
            	    // InternalKim.g:12339:10: ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) )
            	    // InternalKim.g:12340:11: (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH )
            	    {
            	    // InternalKim.g:12340:11: (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH )
            	    int alt258=2;
            	    int LA258_0 = input.LA(1);

            	    if ( (LA258_0==RULE_UPPERCASE_ID) ) {
            	        alt258=1;
            	    }
            	    else if ( (LA258_0==RULE_UPPERCASE_PATH) ) {
            	        alt258=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 258, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt258) {
            	        case 1 :
            	            // InternalKim.g:12341:12: lv_authorities_111_1= RULE_UPPERCASE_ID
            	            {
            	            lv_authorities_111_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_130); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_authorities_111_1, grammarAccess.getConceptStatementBodyAccess().getAuthoritiesUPPERCASE_IDTerminalRuleCall_3_21_2_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												addWithLastConsumed(
            	              													current,
            	              													"authorities",
            	              													lv_authorities_111_1,
            	              													"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
            	              											
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:12356:12: lv_authorities_111_2= RULE_UPPERCASE_PATH
            	            {
            	            lv_authorities_111_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_130); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_authorities_111_2, grammarAccess.getConceptStatementBodyAccess().getAuthoritiesUPPERCASE_PATHTerminalRuleCall_3_21_2_0_1());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												addWithLastConsumed(
            	              													current,
            	              													"authorities",
            	              													lv_authorities_111_2,
            	              													"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
            	              											
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 23 :
            	    // InternalKim.g:12379:4: ({...}? => ( ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) ) ) )
            	    {
            	    // InternalKim.g:12379:4: ({...}? => ( ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) ) ) )
            	    // InternalKim.g:12380:5: {...}? => ( ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22)");
            	    }
            	    // InternalKim.g:12380:118: ( ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) ) )
            	    // InternalKim.g:12381:6: ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22);
            	    // InternalKim.g:12384:9: ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) )
            	    // InternalKim.g:12384:10: {...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12384:19: (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) )
            	    // InternalKim.g:12384:20: otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) )
            	    {
            	    otherlv_112=(Token)match(input,42,FOLLOW_33); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_112, grammarAccess.getConceptStatementBodyAccess().getMetadataKeyword_3_22_0());
            	      								
            	    }
            	    // InternalKim.g:12388:9: ( (lv_metadata_113_0= ruleMetadata ) )
            	    // InternalKim.g:12389:10: (lv_metadata_113_0= ruleMetadata )
            	    {
            	    // InternalKim.g:12389:10: (lv_metadata_113_0= ruleMetadata )
            	    // InternalKim.g:12390:11: lv_metadata_113_0= ruleMetadata
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getMetadataMetadataParserRuleCall_3_22_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_130);
            	    lv_metadata_113_0=ruleMetadata();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"metadata",
            	      												lv_metadata_113_0,
            	      												"org.integratedmodelling.kim.Kim.Metadata");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 24 :
            	    // InternalKim.g:12413:4: ({...}? => ( ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+ ) )
            	    {
            	    // InternalKim.g:12413:4: ({...}? => ( ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+ ) )
            	    // InternalKim.g:12414:5: {...}? => ( ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23)");
            	    }
            	    // InternalKim.g:12414:118: ( ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+ )
            	    // InternalKim.g:12415:6: ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23);
            	    // InternalKim.g:12418:9: ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+
            	    int cnt259=0;
            	    loop259:
            	    do {
            	        int alt259=2;
            	        alt259 = dfa259.predict(input);
            	        switch (alt259) {
            	    	case 1 :
            	    	    // InternalKim.g:12418:10: {...}? => ( (lv_properties_114_0= rulePropertyStatement ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    	    }
            	    	    // InternalKim.g:12418:19: ( (lv_properties_114_0= rulePropertyStatement ) )
            	    	    // InternalKim.g:12418:20: (lv_properties_114_0= rulePropertyStatement )
            	    	    {
            	    	    // InternalKim.g:12418:20: (lv_properties_114_0= rulePropertyStatement )
            	    	    // InternalKim.g:12419:10: lv_properties_114_0= rulePropertyStatement
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getPropertiesPropertyStatementParserRuleCall_3_23_0());
            	    	      									
            	    	    }
            	    	    pushFollow(FOLLOW_130);
            	    	    lv_properties_114_0=rulePropertyStatement();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										if (current==null) {
            	    	      											current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      										}
            	    	      										add(
            	    	      											current,
            	    	      											"properties",
            	    	      											lv_properties_114_0,
            	    	      											"org.integratedmodelling.kim.Kim.PropertyStatement");
            	    	      										afterParserOrEnumRuleCall();
            	    	      									
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt259 >= 1 ) break loop259;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(259, input);
            	                throw eee;
            	        }
            	        cnt259++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop260;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptStatementBody"


    // $ANTLR start "entryRulePropertyStatement"
    // InternalKim.g:12455:1: entryRulePropertyStatement returns [EObject current=null] : iv_rulePropertyStatement= rulePropertyStatement EOF ;
    public final EObject entryRulePropertyStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyStatement = null;


        try {
            // InternalKim.g:12455:58: (iv_rulePropertyStatement= rulePropertyStatement EOF )
            // InternalKim.g:12456:2: iv_rulePropertyStatement= rulePropertyStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyStatement=rulePropertyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePropertyStatement"


    // $ANTLR start "rulePropertyStatement"
    // InternalKim.g:12462:1: rulePropertyStatement returns [EObject current=null] : ( ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) ) ) ;
    public final EObject rulePropertyStatement() throws RecognitionException {
        EObject current = null;

        Token lv_property_0_2=null;
        Token lv_has_1_0=null;
        Token lv_contains_2_0=null;
        Token lv_uses_3_0=null;
        Token lv_only_4_0=null;
        Token lv_exactly_5_0=null;
        Token otherlv_6=null;
        Token lv_atLeast_7_0=null;
        Token lv_atMost_8_0=null;
        Token lv_cardinality_9_0=null;
        Token otherlv_10=null;
        Token lv_orMore_11_0=null;
        AntlrDatatypeRuleToken lv_property_0_1 = null;

        EObject lv_propertyTarget_12_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12468:2: ( ( ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) ) ) )
            // InternalKim.g:12469:2: ( ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) ) )
            {
            // InternalKim.g:12469:2: ( ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) ) )
            // InternalKim.g:12470:3: ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) )
            {
            // InternalKim.g:12470:3: ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) )
            int alt262=4;
            switch ( input.LA(1) ) {
            case RULE_UPPERCASE_ID:
            case RULE_LOWERCASE_ID:
            case RULE_LOWERCASE_DASHID:
            case RULE_BACKCASE_ID:
                {
                alt262=1;
                }
                break;
            case 185:
                {
                alt262=2;
                }
                break;
            case 198:
                {
                alt262=3;
                }
                break;
            case 197:
                {
                alt262=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 262, 0, input);

                throw nvae;
            }

            switch (alt262) {
                case 1 :
                    // InternalKim.g:12471:4: ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) )
                    {
                    // InternalKim.g:12471:4: ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) )
                    // InternalKim.g:12472:5: ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) )
                    {
                    // InternalKim.g:12472:5: ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) )
                    // InternalKim.g:12473:6: (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID )
                    {
                    // InternalKim.g:12473:6: (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID )
                    int alt261=2;
                    int LA261_0 = input.LA(1);

                    if ( ((LA261_0>=RULE_UPPERCASE_ID && LA261_0<=RULE_LOWERCASE_ID)||LA261_0==RULE_LOWERCASE_DASHID) ) {
                        alt261=1;
                    }
                    else if ( (LA261_0==RULE_BACKCASE_ID) ) {
                        alt261=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 261, 0, input);

                        throw nvae;
                    }
                    switch (alt261) {
                        case 1 :
                            // InternalKim.g:12474:7: lv_property_0_1= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getPropertyStatementAccess().getPropertyPropertyIdParserRuleCall_0_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_148);
                            lv_property_0_1=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getPropertyStatementRule());
                              							}
                              							set(
                              								current,
                              								"property",
                              								lv_property_0_1,
                              								"org.integratedmodelling.kim.Kim.PropertyId");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:12490:7: lv_property_0_2= RULE_BACKCASE_ID
                            {
                            lv_property_0_2=(Token)match(input,RULE_BACKCASE_ID,FOLLOW_148); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_property_0_2, grammarAccess.getPropertyStatementAccess().getPropertyBACKCASE_IDTerminalRuleCall_0_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getPropertyStatementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"property",
                              								lv_property_0_2,
                              								"org.integratedmodelling.kim.Kim.BACKCASE_ID");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12508:4: ( (lv_has_1_0= 'has' ) )
                    {
                    // InternalKim.g:12508:4: ( (lv_has_1_0= 'has' ) )
                    // InternalKim.g:12509:5: (lv_has_1_0= 'has' )
                    {
                    // InternalKim.g:12509:5: (lv_has_1_0= 'has' )
                    // InternalKim.g:12510:6: lv_has_1_0= 'has'
                    {
                    lv_has_1_0=(Token)match(input,185,FOLLOW_148); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_has_1_0, grammarAccess.getPropertyStatementAccess().getHasHasKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPropertyStatementRule());
                      						}
                      						setWithLastConsumed(current, "has", true, "has");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:12523:4: ( (lv_contains_2_0= 'contains' ) )
                    {
                    // InternalKim.g:12523:4: ( (lv_contains_2_0= 'contains' ) )
                    // InternalKim.g:12524:5: (lv_contains_2_0= 'contains' )
                    {
                    // InternalKim.g:12524:5: (lv_contains_2_0= 'contains' )
                    // InternalKim.g:12525:6: lv_contains_2_0= 'contains'
                    {
                    lv_contains_2_0=(Token)match(input,198,FOLLOW_148); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_contains_2_0, grammarAccess.getPropertyStatementAccess().getContainsContainsKeyword_0_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPropertyStatementRule());
                      						}
                      						setWithLastConsumed(current, "contains", true, "contains");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:12538:4: ( (lv_uses_3_0= 'uses' ) )
                    {
                    // InternalKim.g:12538:4: ( (lv_uses_3_0= 'uses' ) )
                    // InternalKim.g:12539:5: (lv_uses_3_0= 'uses' )
                    {
                    // InternalKim.g:12539:5: (lv_uses_3_0= 'uses' )
                    // InternalKim.g:12540:6: lv_uses_3_0= 'uses'
                    {
                    lv_uses_3_0=(Token)match(input,197,FOLLOW_148); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_uses_3_0, grammarAccess.getPropertyStatementAccess().getUsesUsesKeyword_0_3_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPropertyStatementRule());
                      						}
                      						setWithLastConsumed(current, "uses", true, "uses");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:12553:3: ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )?
            int alt266=3;
            int LA266_0 = input.LA(1);

            if ( (LA266_0==199) ) {
                alt266=1;
            }
            else if ( (LA266_0==RULE_INT||(LA266_0>=200 && LA266_0<=201)) ) {
                alt266=2;
            }
            switch (alt266) {
                case 1 :
                    // InternalKim.g:12554:4: ( (lv_only_4_0= 'only' ) )
                    {
                    // InternalKim.g:12554:4: ( (lv_only_4_0= 'only' ) )
                    // InternalKim.g:12555:5: (lv_only_4_0= 'only' )
                    {
                    // InternalKim.g:12555:5: (lv_only_4_0= 'only' )
                    // InternalKim.g:12556:6: lv_only_4_0= 'only'
                    {
                    lv_only_4_0=(Token)match(input,199,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_only_4_0, grammarAccess.getPropertyStatementAccess().getOnlyOnlyKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPropertyStatementRule());
                      						}
                      						setWithLastConsumed(current, "only", true, "only");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12569:4: ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? )
                    {
                    // InternalKim.g:12569:4: ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? )
                    // InternalKim.g:12570:5: ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )?
                    {
                    // InternalKim.g:12570:5: ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )?
                    int alt264=3;
                    int LA264_0 = input.LA(1);

                    if ( (LA264_0==200) ) {
                        alt264=1;
                    }
                    else if ( (LA264_0==201) ) {
                        alt264=2;
                    }
                    switch (alt264) {
                        case 1 :
                            // InternalKim.g:12571:6: ( (lv_exactly_5_0= 'exactly' ) )
                            {
                            // InternalKim.g:12571:6: ( (lv_exactly_5_0= 'exactly' ) )
                            // InternalKim.g:12572:7: (lv_exactly_5_0= 'exactly' )
                            {
                            // InternalKim.g:12572:7: (lv_exactly_5_0= 'exactly' )
                            // InternalKim.g:12573:8: lv_exactly_5_0= 'exactly'
                            {
                            lv_exactly_5_0=(Token)match(input,200,FOLLOW_76); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exactly_5_0, grammarAccess.getPropertyStatementAccess().getExactlyExactlyKeyword_1_1_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getPropertyStatementRule());
                              								}
                              								setWithLastConsumed(current, "exactly", true, "exactly");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:12586:6: (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) )
                            {
                            // InternalKim.g:12586:6: (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) )
                            // InternalKim.g:12587:7: otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) )
                            {
                            otherlv_6=(Token)match(input,201,FOLLOW_149); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_6, grammarAccess.getPropertyStatementAccess().getAtKeyword_1_1_0_1_0());
                              						
                            }
                            // InternalKim.g:12591:7: ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) )
                            int alt263=2;
                            int LA263_0 = input.LA(1);

                            if ( (LA263_0==202) ) {
                                alt263=1;
                            }
                            else if ( (LA263_0==203) ) {
                                alt263=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 263, 0, input);

                                throw nvae;
                            }
                            switch (alt263) {
                                case 1 :
                                    // InternalKim.g:12592:8: ( (lv_atLeast_7_0= 'least' ) )
                                    {
                                    // InternalKim.g:12592:8: ( (lv_atLeast_7_0= 'least' ) )
                                    // InternalKim.g:12593:9: (lv_atLeast_7_0= 'least' )
                                    {
                                    // InternalKim.g:12593:9: (lv_atLeast_7_0= 'least' )
                                    // InternalKim.g:12594:10: lv_atLeast_7_0= 'least'
                                    {
                                    lv_atLeast_7_0=(Token)match(input,202,FOLLOW_76); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_atLeast_7_0, grammarAccess.getPropertyStatementAccess().getAtLeastLeastKeyword_1_1_0_1_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getPropertyStatementRule());
                                      										}
                                      										setWithLastConsumed(current, "atLeast", true, "least");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:12607:8: ( (lv_atMost_8_0= 'most' ) )
                                    {
                                    // InternalKim.g:12607:8: ( (lv_atMost_8_0= 'most' ) )
                                    // InternalKim.g:12608:9: (lv_atMost_8_0= 'most' )
                                    {
                                    // InternalKim.g:12608:9: (lv_atMost_8_0= 'most' )
                                    // InternalKim.g:12609:10: lv_atMost_8_0= 'most'
                                    {
                                    lv_atMost_8_0=(Token)match(input,203,FOLLOW_76); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_atMost_8_0, grammarAccess.getPropertyStatementAccess().getAtMostMostKeyword_1_1_0_1_1_1_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getPropertyStatementRule());
                                      										}
                                      										setWithLastConsumed(current, "atMost", true, "most");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:12624:5: ( (lv_cardinality_9_0= RULE_INT ) )
                    // InternalKim.g:12625:6: (lv_cardinality_9_0= RULE_INT )
                    {
                    // InternalKim.g:12625:6: (lv_cardinality_9_0= RULE_INT )
                    // InternalKim.g:12626:7: lv_cardinality_9_0= RULE_INT
                    {
                    lv_cardinality_9_0=(Token)match(input,RULE_INT,FOLLOW_150); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_cardinality_9_0, grammarAccess.getPropertyStatementAccess().getCardinalityINTTerminalRuleCall_1_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getPropertyStatementRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"cardinality",
                      								lv_cardinality_9_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }

                    // InternalKim.g:12642:5: (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )?
                    int alt265=2;
                    int LA265_0 = input.LA(1);

                    if ( (LA265_0==157) ) {
                        alt265=1;
                    }
                    switch (alt265) {
                        case 1 :
                            // InternalKim.g:12643:6: otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) )
                            {
                            otherlv_10=(Token)match(input,157,FOLLOW_151); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getPropertyStatementAccess().getOrKeyword_1_1_2_0());
                              					
                            }
                            // InternalKim.g:12647:6: ( (lv_orMore_11_0= 'more' ) )
                            // InternalKim.g:12648:7: (lv_orMore_11_0= 'more' )
                            {
                            // InternalKim.g:12648:7: (lv_orMore_11_0= 'more' )
                            // InternalKim.g:12649:8: lv_orMore_11_0= 'more'
                            {
                            lv_orMore_11_0=(Token)match(input,204,FOLLOW_104); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orMore_11_0, grammarAccess.getPropertyStatementAccess().getOrMoreMoreKeyword_1_1_2_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getPropertyStatementRule());
                              								}
                              								setWithLastConsumed(current, "orMore", true, "more");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:12664:3: ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) )
            // InternalKim.g:12665:4: (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration )
            {
            // InternalKim.g:12665:4: (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration )
            // InternalKim.g:12666:5: lv_propertyTarget_12_0= ruleSimpleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPropertyStatementAccess().getPropertyTargetSimpleConceptDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_propertyTarget_12_0=ruleSimpleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPropertyStatementRule());
              					}
              					set(
              						current,
              						"propertyTarget",
              						lv_propertyTarget_12_0,
              						"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePropertyStatement"


    // $ANTLR start "entryRuleApplicableTarget"
    // InternalKim.g:12687:1: entryRuleApplicableTarget returns [EObject current=null] : iv_ruleApplicableTarget= ruleApplicableTarget EOF ;
    public final EObject entryRuleApplicableTarget() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleApplicableTarget = null;


        try {
            // InternalKim.g:12687:57: (iv_ruleApplicableTarget= ruleApplicableTarget EOF )
            // InternalKim.g:12688:2: iv_ruleApplicableTarget= ruleApplicableTarget EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getApplicableTargetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleApplicableTarget=ruleApplicableTarget();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleApplicableTarget; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleApplicableTarget"


    // $ANTLR start "ruleApplicableTarget"
    // InternalKim.g:12694:1: ruleApplicableTarget returns [EObject current=null] : ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? ) ;
    public final EObject ruleApplicableTarget() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_target_0_0 = null;

        EObject lv_linkFrom_2_0 = null;

        EObject lv_linkTo_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12700:2: ( ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? ) )
            // InternalKim.g:12701:2: ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? )
            {
            // InternalKim.g:12701:2: ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? )
            // InternalKim.g:12702:3: ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )?
            {
            // InternalKim.g:12702:3: ( (lv_target_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:12703:4: (lv_target_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:12703:4: (lv_target_0_0= ruleConceptDeclaration )
            // InternalKim.g:12704:5: lv_target_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getApplicableTargetAccess().getTargetConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_152);
            lv_target_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
              					}
              					set(
              						current,
              						"target",
              						lv_target_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:12721:3: (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )?
            int alt267=2;
            int LA267_0 = input.LA(1);

            if ( (LA267_0==205) ) {
                alt267=1;
            }
            switch (alt267) {
                case 1 :
                    // InternalKim.g:12722:4: otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) )
                    {
                    otherlv_1=(Token)match(input,205,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getApplicableTargetAccess().getBetweenKeyword_1_0());
                      			
                    }
                    // InternalKim.g:12726:4: ( (lv_linkFrom_2_0= ruleConceptDeclaration ) )
                    // InternalKim.g:12727:5: (lv_linkFrom_2_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:12727:5: (lv_linkFrom_2_0= ruleConceptDeclaration )
                    // InternalKim.g:12728:6: lv_linkFrom_2_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getApplicableTargetAccess().getLinkFromConceptDeclarationParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_153);
                    lv_linkFrom_2_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
                      						}
                      						set(
                      							current,
                      							"linkFrom",
                      							lv_linkFrom_2_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,158,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getApplicableTargetAccess().getAndKeyword_1_2());
                      			
                    }
                    // InternalKim.g:12749:4: ( (lv_linkTo_4_0= ruleConceptDeclaration ) )
                    // InternalKim.g:12750:5: (lv_linkTo_4_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:12750:5: (lv_linkTo_4_0= ruleConceptDeclaration )
                    // InternalKim.g:12751:6: lv_linkTo_4_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getApplicableTargetAccess().getLinkToConceptDeclarationParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_linkTo_4_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
                      						}
                      						set(
                      							current,
                      							"linkTo",
                      							lv_linkTo_4_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleApplicableTarget"


    // $ANTLR start "entryRuleChildConcept"
    // InternalKim.g:12773:1: entryRuleChildConcept returns [EObject current=null] : iv_ruleChildConcept= ruleChildConcept EOF ;
    public final EObject entryRuleChildConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChildConcept = null;


        try {
            // InternalKim.g:12773:53: (iv_ruleChildConcept= ruleChildConcept EOF )
            // InternalKim.g:12774:2: iv_ruleChildConcept= ruleChildConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChildConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChildConcept=ruleChildConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChildConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChildConcept"


    // $ANTLR start "ruleChildConcept"
    // InternalKim.g:12780:1: ruleChildConcept returns [EObject current=null] : ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) ) ;
    public final EObject ruleChildConcept() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_0_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_ConceptStatementBody_3 = null;



        	enterRule();

        try {
            // InternalKim.g:12786:2: ( ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) ) )
            // InternalKim.g:12787:2: ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) )
            {
            // InternalKim.g:12787:2: ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) )
            int alt269=2;
            int LA269_0 = input.LA(1);

            if ( (LA269_0==RULE_CAMELCASE_ID||LA269_0==165) ) {
                alt269=1;
            }
            else if ( (LA269_0==38) ) {
                alt269=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 269, 0, input);

                throw nvae;
            }
            switch (alt269) {
                case 1 :
                    // InternalKim.g:12788:3: ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:12788:3: ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:12789:4: ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:12789:4: ( (lv_abstract_0_0= 'abstract' ) )?
                    int alt268=2;
                    int LA268_0 = input.LA(1);

                    if ( (LA268_0==165) ) {
                        alt268=1;
                    }
                    switch (alt268) {
                        case 1 :
                            // InternalKim.g:12790:5: (lv_abstract_0_0= 'abstract' )
                            {
                            // InternalKim.g:12790:5: (lv_abstract_0_0= 'abstract' )
                            // InternalKim.g:12791:6: lv_abstract_0_0= 'abstract'
                            {
                            lv_abstract_0_0=(Token)match(input,165,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_abstract_0_0, grammarAccess.getChildConceptAccess().getAbstractAbstractKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getChildConceptRule());
                              						}
                              						setWithLastConsumed(current, "abstract", true, "abstract");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:12803:4: ( (lv_name_1_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:12804:5: (lv_name_1_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:12804:5: (lv_name_1_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:12805:6: lv_name_1_0= RULE_CAMELCASE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_1_0, grammarAccess.getChildConceptAccess().getNameCAMELCASE_IDTerminalRuleCall_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getChildConceptRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12823:3: (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' )
                    {
                    // InternalKim.g:12823:3: (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' )
                    // InternalKim.g:12824:4: otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,38,FOLLOW_127); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getChildConceptAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getChildConceptAccess().getConceptStatementBodyParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_93);
                    this_ConceptStatementBody_3=ruleConceptStatementBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ConceptStatementBody_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_4=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getChildConceptAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChildConcept"


    // $ANTLR start "entryRuleIdentityRequirement"
    // InternalKim.g:12848:1: entryRuleIdentityRequirement returns [EObject current=null] : iv_ruleIdentityRequirement= ruleIdentityRequirement EOF ;
    public final EObject entryRuleIdentityRequirement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIdentityRequirement = null;


        try {
            // InternalKim.g:12848:60: (iv_ruleIdentityRequirement= ruleIdentityRequirement EOF )
            // InternalKim.g:12849:2: iv_ruleIdentityRequirement= ruleIdentityRequirement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentityRequirementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentityRequirement=ruleIdentityRequirement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentityRequirement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentityRequirement"


    // $ANTLR start "ruleIdentityRequirement"
    // InternalKim.g:12855:1: ruleIdentityRequirement returns [EObject current=null] : ( ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* ) | (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) ) ) ;
    public final EObject ruleIdentityRequirement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_authority_8_1=null;
        Token lv_authority_8_2=null;
        EObject lv_identities_4_0 = null;

        EObject lv_identities_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12861:2: ( ( ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* ) | (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
            // InternalKim.g:12862:2: ( ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* ) | (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) ) )
            {
            // InternalKim.g:12862:2: ( ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* ) | (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) ) )
            int alt273=2;
            int LA273_0 = input.LA(1);

            if ( (LA273_0==156||(LA273_0>=206 && LA273_0<=208)) ) {
                alt273=1;
            }
            else if ( (LA273_0==176) ) {
                alt273=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 273, 0, input);

                throw nvae;
            }
            switch (alt273) {
                case 1 :
                    // InternalKim.g:12863:3: ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* )
                    {
                    // InternalKim.g:12863:3: ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* )
                    // InternalKim.g:12864:4: (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )*
                    {
                    // InternalKim.g:12864:4: (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' )
                    int alt270=4;
                    switch ( input.LA(1) ) {
                    case 156:
                        {
                        alt270=1;
                        }
                        break;
                    case 206:
                        {
                        alt270=2;
                        }
                        break;
                    case 207:
                        {
                        alt270=3;
                        }
                        break;
                    case 208:
                        {
                        alt270=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 270, 0, input);

                        throw nvae;
                    }

                    switch (alt270) {
                        case 1 :
                            // InternalKim.g:12865:5: otherlv_0= 'identity'
                            {
                            otherlv_0=(Token)match(input,156,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_0, grammarAccess.getIdentityRequirementAccess().getIdentityKeyword_0_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:12870:5: otherlv_1= 'attribute'
                            {
                            otherlv_1=(Token)match(input,206,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getIdentityRequirementAccess().getAttributeKeyword_0_0_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:12875:5: otherlv_2= 'realm'
                            {
                            otherlv_2=(Token)match(input,207,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getIdentityRequirementAccess().getRealmKeyword_0_0_2());
                              				
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:12880:5: otherlv_3= 'extent'
                            {
                            otherlv_3=(Token)match(input,208,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getIdentityRequirementAccess().getExtentKeyword_0_0_3());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:12885:4: ( (lv_identities_4_0= ruleConceptDeclaration ) )
                    // InternalKim.g:12886:5: (lv_identities_4_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:12886:5: (lv_identities_4_0= ruleConceptDeclaration )
                    // InternalKim.g:12887:6: lv_identities_4_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIdentityRequirementAccess().getIdentitiesConceptDeclarationParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_34);
                    lv_identities_4_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIdentityRequirementRule());
                      						}
                      						add(
                      							current,
                      							"identities",
                      							lv_identities_4_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:12904:4: (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )*
                    loop271:
                    do {
                        int alt271=2;
                        int LA271_0 = input.LA(1);

                        if ( (LA271_0==27) ) {
                            int LA271_1 = input.LA(2);

                            if ( (LA271_1==156) ) {
                                switch ( input.LA(3) ) {
                                case RULE_STRING:
                                case RULE_INT:
                                case RULE_ID:
                                    {
                                    alt271=1;
                                    }
                                    break;
                                case RULE_UPPERCASE_ID:
                                    {
                                    int LA271_5 = input.LA(4);

                                    if ( (LA271_5==88) ) {
                                        alt271=1;
                                    }


                                    }
                                    break;
                                case RULE_CAMELCASE_ID:
                                    {
                                    int LA271_6 = input.LA(4);

                                    if ( (LA271_6==88) ) {
                                        alt271=1;
                                    }


                                    }
                                    break;

                                }

                            }
                            else if ( ((LA271_1>=RULE_UPPERCASE_ID && LA271_1<=RULE_LOWERCASE_ID)||LA271_1==RULE_CAMELCASE_ID||LA271_1==RULE_LOWERCASE_DASHID||LA271_1==38||(LA271_1>=128 && LA271_1<=129)||(LA271_1>=137 && LA271_1<=138)||(LA271_1>=140 && LA271_1<=155)) ) {
                                alt271=1;
                            }


                        }


                        switch (alt271) {
                    	case 1 :
                    	    // InternalKim.g:12905:5: otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) )
                    	    {
                    	    otherlv_5=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getIdentityRequirementAccess().getCommaKeyword_0_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:12909:5: ( (lv_identities_6_0= ruleConceptDeclaration ) )
                    	    // InternalKim.g:12910:6: (lv_identities_6_0= ruleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:12910:6: (lv_identities_6_0= ruleConceptDeclaration )
                    	    // InternalKim.g:12911:7: lv_identities_6_0= ruleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getIdentityRequirementAccess().getIdentitiesConceptDeclarationParserRuleCall_0_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_34);
                    	    lv_identities_6_0=ruleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getIdentityRequirementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"identities",
                    	      								lv_identities_6_0,
                    	      								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop271;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12931:3: (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) )
                    {
                    // InternalKim.g:12931:3: (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) )
                    // InternalKim.g:12932:4: otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) )
                    {
                    otherlv_7=(Token)match(input,176,FOLLOW_114); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getIdentityRequirementAccess().getAuthorityKeyword_1_0());
                      			
                    }
                    // InternalKim.g:12936:4: ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) )
                    // InternalKim.g:12937:5: ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) )
                    {
                    // InternalKim.g:12937:5: ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) )
                    // InternalKim.g:12938:6: (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH )
                    {
                    // InternalKim.g:12938:6: (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH )
                    int alt272=2;
                    int LA272_0 = input.LA(1);

                    if ( (LA272_0==RULE_UPPERCASE_ID) ) {
                        alt272=1;
                    }
                    else if ( (LA272_0==RULE_UPPERCASE_PATH) ) {
                        alt272=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 272, 0, input);

                        throw nvae;
                    }
                    switch (alt272) {
                        case 1 :
                            // InternalKim.g:12939:7: lv_authority_8_1= RULE_UPPERCASE_ID
                            {
                            lv_authority_8_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authority_8_1, grammarAccess.getIdentityRequirementAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"authority",
                              								lv_authority_8_1,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:12954:7: lv_authority_8_2= RULE_UPPERCASE_PATH
                            {
                            lv_authority_8_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authority_8_2, grammarAccess.getIdentityRequirementAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"authority",
                              								lv_authority_8_2,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentityRequirement"


    // $ANTLR start "entryRuleAnnotation"
    // InternalKim.g:12976:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalKim.g:12976:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalKim.g:12977:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalKim.g:12983:1: ruleAnnotation returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_parameters_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12989:2: ( ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? ) )
            // InternalKim.g:12990:2: ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? )
            {
            // InternalKim.g:12990:2: ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? )
            // InternalKim.g:12991:3: ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )?
            {
            // InternalKim.g:12991:3: ( (lv_name_0_0= RULE_ANNOTATION_ID ) )
            // InternalKim.g:12992:4: (lv_name_0_0= RULE_ANNOTATION_ID )
            {
            // InternalKim.g:12992:4: (lv_name_0_0= RULE_ANNOTATION_ID )
            // InternalKim.g:12993:5: lv_name_0_0= RULE_ANNOTATION_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ANNOTATION_ID,FOLLOW_155); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getAnnotationAccess().getNameANNOTATION_IDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAnnotationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.integratedmodelling.kim.Kim.ANNOTATION_ID");
              				
            }

            }


            }

            // InternalKim.g:13009:3: (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )?
            int alt275=2;
            alt275 = dfa275.predict(input);
            switch (alt275) {
                case 1 :
                    // InternalKim.g:13010:4: otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,38,FOLLOW_156); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    // InternalKim.g:13014:4: ( (lv_parameters_2_0= ruleParameterList ) )?
                    int alt274=2;
                    int LA274_0 = input.LA(1);

                    if ( ((LA274_0>=RULE_UPPERCASE_ID && LA274_0<=RULE_STRING)||(LA274_0>=RULE_EXPR && LA274_0<=RULE_LOWERCASE_DASHID)||(LA274_0>=28 && LA274_0<=29)||LA274_0==38||(LA274_0>=49 && LA274_0<=50)||(LA274_0>=128 && LA274_0<=129)||(LA274_0>=137 && LA274_0<=138)||(LA274_0>=140 && LA274_0<=156)||LA274_0==209||(LA274_0>=246 && LA274_0<=247)) ) {
                        alt274=1;
                    }
                    switch (alt274) {
                        case 1 :
                            // InternalKim.g:13015:5: (lv_parameters_2_0= ruleParameterList )
                            {
                            // InternalKim.g:13015:5: (lv_parameters_2_0= ruleParameterList )
                            // InternalKim.g:13016:6: lv_parameters_2_0= ruleParameterList
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getAnnotationAccess().getParametersParameterListParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FOLLOW_93);
                            lv_parameters_2_0=ruleParameterList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getAnnotationRule());
                              						}
                              						set(
                              							current,
                              							"parameters",
                              							lv_parameters_2_0,
                              							"org.integratedmodelling.kim.Kim.ParameterList");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleList"
    // InternalKim.g:13042:1: entryRuleList returns [EObject current=null] : iv_ruleList= ruleList EOF ;
    public final EObject entryRuleList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleList = null;


        try {
            // InternalKim.g:13042:45: (iv_ruleList= ruleList EOF )
            // InternalKim.g:13043:2: iv_ruleList= ruleList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleList=ruleList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleList"


    // $ANTLR start "ruleList"
    // InternalKim.g:13049:1: ruleList returns [EObject current=null] : ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')' ) ;
    public final EObject ruleList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_contents_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13055:2: ( ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')' ) )
            // InternalKim.g:13056:2: ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')' )
            {
            // InternalKim.g:13056:2: ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')' )
            // InternalKim.g:13057:3: () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')'
            {
            // InternalKim.g:13057:3: ()
            // InternalKim.g:13058:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getListAccess().getListAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,38,FOLLOW_157); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getListAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalKim.g:13071:3: ( (lv_contents_2_0= ruleValue ) )*
            loop276:
            do {
                int alt276=2;
                int LA276_0 = input.LA(1);

                if ( ((LA276_0>=RULE_UPPERCASE_ID && LA276_0<=RULE_STRING)||(LA276_0>=RULE_EXPR && LA276_0<=RULE_ID)||(LA276_0>=27 && LA276_0<=29)||LA276_0==38||(LA276_0>=49 && LA276_0<=50)||LA276_0==209||(LA276_0>=246 && LA276_0<=247)) ) {
                    alt276=1;
                }


                switch (alt276) {
            	case 1 :
            	    // InternalKim.g:13072:4: (lv_contents_2_0= ruleValue )
            	    {
            	    // InternalKim.g:13072:4: (lv_contents_2_0= ruleValue )
            	    // InternalKim.g:13073:5: lv_contents_2_0= ruleValue
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getListAccess().getContentsValueParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_157);
            	    lv_contents_2_0=ruleValue();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getListRule());
            	      					}
            	      					add(
            	      						current,
            	      						"contents",
            	      						lv_contents_2_0,
            	      						"org.integratedmodelling.kim.Kim.Value");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop276;
                }
            } while (true);

            otherlv_3=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getListAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleList"


    // $ANTLR start "entryRuleLiteral"
    // InternalKim.g:13098:1: entryRuleLiteral returns [EObject current=null] : iv_ruleLiteral= ruleLiteral EOF ;
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteral = null;


        try {
            // InternalKim.g:13098:48: (iv_ruleLiteral= ruleLiteral EOF )
            // InternalKim.g:13099:2: iv_ruleLiteral= ruleLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteral=ruleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalKim.g:13105:1: ruleLiteral returns [EObject current=null] : ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) ;
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_string_4_0=null;
        Token lv_boolean_5_1=null;
        Token lv_boolean_5_2=null;
        EObject lv_from_0_0 = null;

        EObject lv_to_2_0 = null;

        EObject lv_number_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13111:2: ( ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) )
            // InternalKim.g:13112:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )
            {
            // InternalKim.g:13112:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )
            int alt278=4;
            alt278 = dfa278.predict(input);
            switch (alt278) {
                case 1 :
                    // InternalKim.g:13113:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:13113:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    // InternalKim.g:13114:4: ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    {
                    // InternalKim.g:13114:4: ( (lv_from_0_0= ruleNumber ) )
                    // InternalKim.g:13115:5: (lv_from_0_0= ruleNumber )
                    {
                    // InternalKim.g:13115:5: (lv_from_0_0= ruleNumber )
                    // InternalKim.g:13116:6: lv_from_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralAccess().getFromNumberParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    lv_from_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralRule());
                      						}
                      						set(
                      							current,
                      							"from",
                      							lv_from_0_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:13133:4: ( ( 'to' )=>otherlv_1= 'to' )
                    // InternalKim.g:13134:5: ( 'to' )=>otherlv_1= 'to'
                    {
                    otherlv_1=(Token)match(input,36,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getLiteralAccess().getToKeyword_0_1());
                      				
                    }

                    }

                    // InternalKim.g:13140:4: ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    // InternalKim.g:13141:5: ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber )
                    {
                    // InternalKim.g:13145:5: (lv_to_2_0= ruleNumber )
                    // InternalKim.g:13146:6: lv_to_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralAccess().getToNumberParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_to_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralRule());
                      						}
                      						set(
                      							current,
                      							"to",
                      							lv_to_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13165:3: ( (lv_number_3_0= ruleNumber ) )
                    {
                    // InternalKim.g:13165:3: ( (lv_number_3_0= ruleNumber ) )
                    // InternalKim.g:13166:4: (lv_number_3_0= ruleNumber )
                    {
                    // InternalKim.g:13166:4: (lv_number_3_0= ruleNumber )
                    // InternalKim.g:13167:5: lv_number_3_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getNumberNumberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_3_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"number",
                      						lv_number_3_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:13185:3: ( (lv_string_4_0= RULE_STRING ) )
                    {
                    // InternalKim.g:13185:3: ( (lv_string_4_0= RULE_STRING ) )
                    // InternalKim.g:13186:4: (lv_string_4_0= RULE_STRING )
                    {
                    // InternalKim.g:13186:4: (lv_string_4_0= RULE_STRING )
                    // InternalKim.g:13187:5: lv_string_4_0= RULE_STRING
                    {
                    lv_string_4_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_4_0, grammarAccess.getLiteralAccess().getStringSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_4_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:13204:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    {
                    // InternalKim.g:13204:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    // InternalKim.g:13205:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    {
                    // InternalKim.g:13205:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    // InternalKim.g:13206:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    {
                    // InternalKim.g:13206:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    int alt277=2;
                    int LA277_0 = input.LA(1);

                    if ( (LA277_0==28) ) {
                        alt277=1;
                    }
                    else if ( (LA277_0==29) ) {
                        alt277=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 277, 0, input);

                        throw nvae;
                    }
                    switch (alt277) {
                        case 1 :
                            // InternalKim.g:13207:6: lv_boolean_5_1= 'true'
                            {
                            lv_boolean_5_1=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_1, grammarAccess.getLiteralAccess().getBooleanTrueKeyword_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:13218:6: lv_boolean_5_2= 'false'
                            {
                            lv_boolean_5_2=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_2, grammarAccess.getLiteralAccess().getBooleanFalseKeyword_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleLiteralOrID"
    // InternalKim.g:13235:1: entryRuleLiteralOrID returns [EObject current=null] : iv_ruleLiteralOrID= ruleLiteralOrID EOF ;
    public final EObject entryRuleLiteralOrID() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralOrID = null;


        try {
            // InternalKim.g:13235:52: (iv_ruleLiteralOrID= ruleLiteralOrID EOF )
            // InternalKim.g:13236:2: iv_ruleLiteralOrID= ruleLiteralOrID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralOrIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralOrID=ruleLiteralOrID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralOrID; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralOrID"


    // $ANTLR start "ruleLiteralOrID"
    // InternalKim.g:13242:1: ruleLiteralOrID returns [EObject current=null] : ( ( (lv_number_0_0= ruleNumber ) ) | ( (lv_string_1_0= RULE_STRING ) ) | ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) ) | ( (lv_id_3_0= RULE_ID ) ) ) ;
    public final EObject ruleLiteralOrID() throws RecognitionException {
        EObject current = null;

        Token lv_string_1_0=null;
        Token lv_boolean_2_1=null;
        Token lv_boolean_2_2=null;
        Token lv_id_3_0=null;
        EObject lv_number_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13248:2: ( ( ( (lv_number_0_0= ruleNumber ) ) | ( (lv_string_1_0= RULE_STRING ) ) | ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) ) | ( (lv_id_3_0= RULE_ID ) ) ) )
            // InternalKim.g:13249:2: ( ( (lv_number_0_0= ruleNumber ) ) | ( (lv_string_1_0= RULE_STRING ) ) | ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) ) | ( (lv_id_3_0= RULE_ID ) ) )
            {
            // InternalKim.g:13249:2: ( ( (lv_number_0_0= ruleNumber ) ) | ( (lv_string_1_0= RULE_STRING ) ) | ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) ) | ( (lv_id_3_0= RULE_ID ) ) )
            int alt280=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case 246:
            case 247:
                {
                alt280=1;
                }
                break;
            case RULE_STRING:
                {
                alt280=2;
                }
                break;
            case 28:
            case 29:
                {
                alt280=3;
                }
                break;
            case RULE_ID:
                {
                alt280=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 280, 0, input);

                throw nvae;
            }

            switch (alt280) {
                case 1 :
                    // InternalKim.g:13250:3: ( (lv_number_0_0= ruleNumber ) )
                    {
                    // InternalKim.g:13250:3: ( (lv_number_0_0= ruleNumber ) )
                    // InternalKim.g:13251:4: (lv_number_0_0= ruleNumber )
                    {
                    // InternalKim.g:13251:4: (lv_number_0_0= ruleNumber )
                    // InternalKim.g:13252:5: lv_number_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralOrIDAccess().getNumberNumberParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralOrIDRule());
                      					}
                      					set(
                      						current,
                      						"number",
                      						lv_number_0_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13270:3: ( (lv_string_1_0= RULE_STRING ) )
                    {
                    // InternalKim.g:13270:3: ( (lv_string_1_0= RULE_STRING ) )
                    // InternalKim.g:13271:4: (lv_string_1_0= RULE_STRING )
                    {
                    // InternalKim.g:13271:4: (lv_string_1_0= RULE_STRING )
                    // InternalKim.g:13272:5: lv_string_1_0= RULE_STRING
                    {
                    lv_string_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_1_0, grammarAccess.getLiteralOrIDAccess().getStringSTRINGTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIDRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_1_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:13289:3: ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) )
                    {
                    // InternalKim.g:13289:3: ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) )
                    // InternalKim.g:13290:4: ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) )
                    {
                    // InternalKim.g:13290:4: ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) )
                    // InternalKim.g:13291:5: (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' )
                    {
                    // InternalKim.g:13291:5: (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' )
                    int alt279=2;
                    int LA279_0 = input.LA(1);

                    if ( (LA279_0==28) ) {
                        alt279=1;
                    }
                    else if ( (LA279_0==29) ) {
                        alt279=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 279, 0, input);

                        throw nvae;
                    }
                    switch (alt279) {
                        case 1 :
                            // InternalKim.g:13292:6: lv_boolean_2_1= 'true'
                            {
                            lv_boolean_2_1=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_2_1, grammarAccess.getLiteralOrIDAccess().getBooleanTrueKeyword_2_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIDRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_2_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:13303:6: lv_boolean_2_2= 'false'
                            {
                            lv_boolean_2_2=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_2_2, grammarAccess.getLiteralOrIDAccess().getBooleanFalseKeyword_2_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIDRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_2_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:13317:3: ( (lv_id_3_0= RULE_ID ) )
                    {
                    // InternalKim.g:13317:3: ( (lv_id_3_0= RULE_ID ) )
                    // InternalKim.g:13318:4: (lv_id_3_0= RULE_ID )
                    {
                    // InternalKim.g:13318:4: (lv_id_3_0= RULE_ID )
                    // InternalKim.g:13319:5: lv_id_3_0= RULE_ID
                    {
                    lv_id_3_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_id_3_0, grammarAccess.getLiteralOrIDAccess().getIdIDTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIDRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"id",
                      						lv_id_3_0,
                      						"org.eclipse.xtext.common.Terminals.ID");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralOrID"


    // $ANTLR start "entryRuleLiteralOrIdOrComma"
    // InternalKim.g:13339:1: entryRuleLiteralOrIdOrComma returns [EObject current=null] : iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF ;
    public final EObject entryRuleLiteralOrIdOrComma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralOrIdOrComma = null;


        try {
            // InternalKim.g:13339:59: (iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF )
            // InternalKim.g:13340:2: iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralOrIdOrCommaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralOrIdOrComma=ruleLiteralOrIdOrComma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralOrIdOrComma; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralOrIdOrComma"


    // $ANTLR start "ruleLiteralOrIdOrComma"
    // InternalKim.g:13346:1: ruleLiteralOrIdOrComma returns [EObject current=null] : ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) ) ;
    public final EObject ruleLiteralOrIdOrComma() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_string_4_0=null;
        Token lv_boolean_5_1=null;
        Token lv_boolean_5_2=null;
        Token lv_id_6_0=null;
        Token lv_comma_7_0=null;
        EObject lv_from_0_0 = null;

        EObject lv_to_2_0 = null;

        EObject lv_number_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13352:2: ( ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) ) )
            // InternalKim.g:13353:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )
            {
            // InternalKim.g:13353:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )
            int alt282=6;
            alt282 = dfa282.predict(input);
            switch (alt282) {
                case 1 :
                    // InternalKim.g:13354:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:13354:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    // InternalKim.g:13355:4: ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    {
                    // InternalKim.g:13355:4: ( (lv_from_0_0= ruleNumber ) )
                    // InternalKim.g:13356:5: (lv_from_0_0= ruleNumber )
                    {
                    // InternalKim.g:13356:5: (lv_from_0_0= ruleNumber )
                    // InternalKim.g:13357:6: lv_from_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getFromNumberParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    lv_from_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      						}
                      						set(
                      							current,
                      							"from",
                      							lv_from_0_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:13374:4: ( ( 'to' )=>otherlv_1= 'to' )
                    // InternalKim.g:13375:5: ( 'to' )=>otherlv_1= 'to'
                    {
                    otherlv_1=(Token)match(input,36,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getLiteralOrIdOrCommaAccess().getToKeyword_0_1());
                      				
                    }

                    }

                    // InternalKim.g:13381:4: ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    // InternalKim.g:13382:5: ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber )
                    {
                    // InternalKim.g:13386:5: (lv_to_2_0= ruleNumber )
                    // InternalKim.g:13387:6: lv_to_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getToNumberParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_to_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      						}
                      						set(
                      							current,
                      							"to",
                      							lv_to_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13406:3: ( (lv_number_3_0= ruleNumber ) )
                    {
                    // InternalKim.g:13406:3: ( (lv_number_3_0= ruleNumber ) )
                    // InternalKim.g:13407:4: (lv_number_3_0= ruleNumber )
                    {
                    // InternalKim.g:13407:4: (lv_number_3_0= ruleNumber )
                    // InternalKim.g:13408:5: lv_number_3_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getNumberNumberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_3_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					set(
                      						current,
                      						"number",
                      						lv_number_3_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:13426:3: ( (lv_string_4_0= RULE_STRING ) )
                    {
                    // InternalKim.g:13426:3: ( (lv_string_4_0= RULE_STRING ) )
                    // InternalKim.g:13427:4: (lv_string_4_0= RULE_STRING )
                    {
                    // InternalKim.g:13427:4: (lv_string_4_0= RULE_STRING )
                    // InternalKim.g:13428:5: lv_string_4_0= RULE_STRING
                    {
                    lv_string_4_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_4_0, grammarAccess.getLiteralOrIdOrCommaAccess().getStringSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_4_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:13445:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    {
                    // InternalKim.g:13445:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    // InternalKim.g:13446:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    {
                    // InternalKim.g:13446:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    // InternalKim.g:13447:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    {
                    // InternalKim.g:13447:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    int alt281=2;
                    int LA281_0 = input.LA(1);

                    if ( (LA281_0==28) ) {
                        alt281=1;
                    }
                    else if ( (LA281_0==29) ) {
                        alt281=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 281, 0, input);

                        throw nvae;
                    }
                    switch (alt281) {
                        case 1 :
                            // InternalKim.g:13448:6: lv_boolean_5_1= 'true'
                            {
                            lv_boolean_5_1=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_1, grammarAccess.getLiteralOrIdOrCommaAccess().getBooleanTrueKeyword_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:13459:6: lv_boolean_5_2= 'false'
                            {
                            lv_boolean_5_2=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_2, grammarAccess.getLiteralOrIdOrCommaAccess().getBooleanFalseKeyword_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:13473:3: ( (lv_id_6_0= RULE_ID ) )
                    {
                    // InternalKim.g:13473:3: ( (lv_id_6_0= RULE_ID ) )
                    // InternalKim.g:13474:4: (lv_id_6_0= RULE_ID )
                    {
                    // InternalKim.g:13474:4: (lv_id_6_0= RULE_ID )
                    // InternalKim.g:13475:5: lv_id_6_0= RULE_ID
                    {
                    lv_id_6_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_id_6_0, grammarAccess.getLiteralOrIdOrCommaAccess().getIdIDTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"id",
                      						lv_id_6_0,
                      						"org.eclipse.xtext.common.Terminals.ID");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:13492:3: ( (lv_comma_7_0= ',' ) )
                    {
                    // InternalKim.g:13492:3: ( (lv_comma_7_0= ',' ) )
                    // InternalKim.g:13493:4: (lv_comma_7_0= ',' )
                    {
                    // InternalKim.g:13493:4: (lv_comma_7_0= ',' )
                    // InternalKim.g:13494:5: lv_comma_7_0= ','
                    {
                    lv_comma_7_0=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_comma_7_0, grammarAccess.getLiteralOrIdOrCommaAccess().getCommaCommaKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(current, "comma", true, ",");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralOrIdOrComma"


    // $ANTLR start "entryRuleMetadata"
    // InternalKim.g:13510:1: entryRuleMetadata returns [EObject current=null] : iv_ruleMetadata= ruleMetadata EOF ;
    public final EObject entryRuleMetadata() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetadata = null;


        try {
            // InternalKim.g:13510:49: (iv_ruleMetadata= ruleMetadata EOF )
            // InternalKim.g:13511:2: iv_ruleMetadata= ruleMetadata EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetadataRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetadata=ruleMetadata();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetadata; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetadata"


    // $ANTLR start "ruleMetadata"
    // InternalKim.g:13517:1: ruleMetadata returns [EObject current=null] : ( () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}' ) ;
    public final EObject ruleMetadata() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_ids_2_2=null;
        Token lv_ids_2_4=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_ids_2_1 = null;

        AntlrDatatypeRuleToken lv_ids_2_3 = null;

        EObject lv_values_3_1 = null;

        EObject lv_values_3_2 = null;

        EObject lv_values_3_3 = null;



        	enterRule();

        try {
            // InternalKim.g:13523:2: ( ( () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}' ) )
            // InternalKim.g:13524:2: ( () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}' )
            {
            // InternalKim.g:13524:2: ( () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}' )
            // InternalKim.g:13525:3: () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}'
            {
            // InternalKim.g:13525:3: ()
            // InternalKim.g:13526:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMetadataAccess().getMetadataAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,209,FOLLOW_158); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMetadataAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:13539:3: ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )*
            loop285:
            do {
                int alt285=2;
                int LA285_0 = input.LA(1);

                if ( ((LA285_0>=RULE_UPPERCASE_ID && LA285_0<=RULE_STRING)||LA285_0==RULE_LOWERCASE_DASHID) ) {
                    alt285=1;
                }


                switch (alt285) {
            	case 1 :
            	    // InternalKim.g:13540:4: ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) )
            	    {
            	    // InternalKim.g:13540:4: ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) )
            	    // InternalKim.g:13541:5: ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) )
            	    {
            	    // InternalKim.g:13541:5: ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) )
            	    // InternalKim.g:13542:6: (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING )
            	    {
            	    // InternalKim.g:13542:6: (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING )
            	    int alt283=4;
            	    alt283 = dfa283.predict(input);
            	    switch (alt283) {
            	        case 1 :
            	            // InternalKim.g:13543:7: lv_ids_2_1= rulePathName
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getIdsPathNameParserRuleCall_2_0_0_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_159);
            	            lv_ids_2_1=rulePathName();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"ids",
            	              								lv_ids_2_1,
            	              								"org.integratedmodelling.kim.Kim.PathName");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:13559:7: lv_ids_2_2= RULE_LOWERCASE_ID
            	            {
            	            lv_ids_2_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_159); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_ids_2_2, grammarAccess.getMetadataAccess().getIdsLOWERCASE_IDTerminalRuleCall_2_0_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getMetadataRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"ids",
            	              								lv_ids_2_2,
            	              								"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              						
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:13574:7: lv_ids_2_3= rulePropertyId
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getIdsPropertyIdParserRuleCall_2_0_0_2());
            	              						
            	            }
            	            pushFollow(FOLLOW_159);
            	            lv_ids_2_3=rulePropertyId();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"ids",
            	              								lv_ids_2_3,
            	              								"org.integratedmodelling.kim.Kim.PropertyId");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // InternalKim.g:13590:7: lv_ids_2_4= RULE_STRING
            	            {
            	            lv_ids_2_4=(Token)match(input,RULE_STRING,FOLLOW_159); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_ids_2_4, grammarAccess.getMetadataAccess().getIdsSTRINGTerminalRuleCall_2_0_0_3());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getMetadataRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"ids",
            	              								lv_ids_2_4,
            	              								"org.eclipse.xtext.common.Terminals.STRING");
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalKim.g:13607:4: ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) )
            	    // InternalKim.g:13608:5: ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) )
            	    {
            	    // InternalKim.g:13608:5: ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) )
            	    // InternalKim.g:13609:6: (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList )
            	    {
            	    // InternalKim.g:13609:6: (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList )
            	    int alt284=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_STRING:
            	    case RULE_INT:
            	    case RULE_ID:
            	    case 28:
            	    case 29:
            	    case 246:
            	    case 247:
            	        {
            	        alt284=1;
            	        }
            	        break;
            	    case 209:
            	        {
            	        alt284=2;
            	        }
            	        break;
            	    case 38:
            	        {
            	        alt284=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 284, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt284) {
            	        case 1 :
            	            // InternalKim.g:13610:7: lv_values_3_1= ruleLiteralOrID
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getValuesLiteralOrIDParserRuleCall_2_1_0_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_158);
            	            lv_values_3_1=ruleLiteralOrID();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"values",
            	              								lv_values_3_1,
            	              								"org.integratedmodelling.kim.Kim.LiteralOrID");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:13626:7: lv_values_3_2= ruleMetadata
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getValuesMetadataParserRuleCall_2_1_0_1());
            	              						
            	            }
            	            pushFollow(FOLLOW_158);
            	            lv_values_3_2=ruleMetadata();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"values",
            	              								lv_values_3_2,
            	              								"org.integratedmodelling.kim.Kim.Metadata");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:13642:7: lv_values_3_3= ruleList
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getValuesListParserRuleCall_2_1_0_2());
            	              						
            	            }
            	            pushFollow(FOLLOW_158);
            	            lv_values_3_3=ruleList();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"values",
            	              								lv_values_3_3,
            	              								"org.integratedmodelling.kim.Kim.List");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop285;
                }
            } while (true);

            otherlv_4=(Token)match(input,136,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getMetadataAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadata"


    // $ANTLR start "entryRuleMap"
    // InternalKim.g:13669:1: entryRuleMap returns [EObject current=null] : iv_ruleMap= ruleMap EOF ;
    public final EObject entryRuleMap() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMap = null;


        try {
            // InternalKim.g:13669:44: (iv_ruleMap= ruleMap EOF )
            // InternalKim.g:13670:2: iv_ruleMap= ruleMap EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMap=ruleMap();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMap; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMap"


    // $ANTLR start "ruleMap"
    // InternalKim.g:13676:1: ruleMap returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleMap() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_entries_2_0 = null;

        EObject lv_entries_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13682:2: ( ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' ) )
            // InternalKim.g:13683:2: ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' )
            {
            // InternalKim.g:13683:2: ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' )
            // InternalKim.g:13684:3: () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}'
            {
            // InternalKim.g:13684:3: ()
            // InternalKim.g:13685:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMapAccess().getMapAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,209,FOLLOW_160); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:13698:3: ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )?
            int alt287=2;
            int LA287_0 = input.LA(1);

            if ( ((LA287_0>=RULE_UPPERCASE_ID && LA287_0<=RULE_STRING)||(LA287_0>=RULE_CAMELCASE_ID && LA287_0<=RULE_LOWERCASE_DASHID)||(LA287_0>=28 && LA287_0<=29)||LA287_0==38||LA287_0==40||(LA287_0>=48 && LA287_0<=49)||(LA287_0>=76 && LA287_0<=79)||LA287_0==82||LA287_0==84||(LA287_0>=128 && LA287_0<=129)||(LA287_0>=137 && LA287_0<=138)||(LA287_0>=140 && LA287_0<=156)||(LA287_0>=246 && LA287_0<=247)) ) {
                alt287=1;
            }
            switch (alt287) {
                case 1 :
                    // InternalKim.g:13699:4: ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )*
                    {
                    // InternalKim.g:13699:4: ( (lv_entries_2_0= ruleMapEntry ) )
                    // InternalKim.g:13700:5: (lv_entries_2_0= ruleMapEntry )
                    {
                    // InternalKim.g:13700:5: (lv_entries_2_0= ruleMapEntry )
                    // InternalKim.g:13701:6: lv_entries_2_0= ruleMapEntry
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_161);
                    lv_entries_2_0=ruleMapEntry();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMapRule());
                      						}
                      						add(
                      							current,
                      							"entries",
                      							lv_entries_2_0,
                      							"org.integratedmodelling.kim.Kim.MapEntry");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:13718:4: ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )*
                    loop286:
                    do {
                        int alt286=2;
                        int LA286_0 = input.LA(1);

                        if ( (LA286_0==27) ) {
                            alt286=1;
                        }


                        switch (alt286) {
                    	case 1 :
                    	    // InternalKim.g:13719:5: ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) )
                    	    {
                    	    // InternalKim.g:13719:5: ( ( ',' )=>otherlv_3= ',' )
                    	    // InternalKim.g:13720:6: ( ',' )=>otherlv_3= ','
                    	    {
                    	    otherlv_3=(Token)match(input,27,FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_3, grammarAccess.getMapAccess().getCommaKeyword_2_1_0_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:13727:5: ( (lv_entries_4_0= ruleMapEntry ) )
                    	    // InternalKim.g:13728:6: (lv_entries_4_0= ruleMapEntry )
                    	    {
                    	    // InternalKim.g:13728:6: (lv_entries_4_0= ruleMapEntry )
                    	    // InternalKim.g:13729:7: lv_entries_4_0= ruleMapEntry
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_161);
                    	    lv_entries_4_0=ruleMapEntry();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMapRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"entries",
                    	      								lv_entries_4_0,
                    	      								"org.integratedmodelling.kim.Kim.MapEntry");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop286;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,136,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getMapAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMap"


    // $ANTLR start "entryRuleMapEntry"
    // InternalKim.g:13756:1: entryRuleMapEntry returns [EObject current=null] : iv_ruleMapEntry= ruleMapEntry EOF ;
    public final EObject entryRuleMapEntry() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapEntry = null;


        try {
            // InternalKim.g:13756:49: (iv_ruleMapEntry= ruleMapEntry EOF )
            // InternalKim.g:13757:2: iv_ruleMapEntry= ruleMapEntry EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapEntryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMapEntry=ruleMapEntry();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapEntry; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapEntry"


    // $ANTLR start "ruleMapEntry"
    // InternalKim.g:13763:1: ruleMapEntry returns [EObject current=null] : ( ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) ) ;
    public final EObject ruleMapEntry() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_classifier_0_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13769:2: ( ( ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) ) )
            // InternalKim.g:13770:2: ( ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) )
            {
            // InternalKim.g:13770:2: ( ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) )
            // InternalKim.g:13771:3: ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) )
            {
            // InternalKim.g:13771:3: ( (lv_classifier_0_0= ruleClassifierRHSWithId ) )
            // InternalKim.g:13772:4: (lv_classifier_0_0= ruleClassifierRHSWithId )
            {
            // InternalKim.g:13772:4: (lv_classifier_0_0= ruleClassifierRHSWithId )
            // InternalKim.g:13773:5: lv_classifier_0_0= ruleClassifierRHSWithId
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapEntryAccess().getClassifierClassifierRHSWithIdParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_80);
            lv_classifier_0_0=ruleClassifierRHSWithId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapEntryRule());
              					}
              					set(
              						current,
              						"classifier",
              						lv_classifier_0_0,
              						"org.integratedmodelling.kim.Kim.ClassifierRHSWithId");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,105,FOLLOW_162); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapEntryAccess().getColonKeyword_1());
              		
            }
            // InternalKim.g:13794:3: ( (lv_value_2_0= ruleValueWithIdAndConcept ) )
            // InternalKim.g:13795:4: (lv_value_2_0= ruleValueWithIdAndConcept )
            {
            // InternalKim.g:13795:4: (lv_value_2_0= ruleValueWithIdAndConcept )
            // InternalKim.g:13796:5: lv_value_2_0= ruleValueWithIdAndConcept
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapEntryAccess().getValueValueWithIdAndConceptParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapEntryRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapEntry"


    // $ANTLR start "entryRuleDocSelector"
    // InternalKim.g:13817:1: entryRuleDocSelector returns [EObject current=null] : iv_ruleDocSelector= ruleDocSelector EOF ;
    public final EObject entryRuleDocSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDocSelector = null;


        try {
            // InternalKim.g:13817:52: (iv_ruleDocSelector= ruleDocSelector EOF )
            // InternalKim.g:13818:2: iv_ruleDocSelector= ruleDocSelector EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDocSelectorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDocSelector=ruleDocSelector();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDocSelector; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDocSelector"


    // $ANTLR start "ruleDocSelector"
    // InternalKim.g:13824:1: ruleDocSelector returns [EObject current=null] : ( ( (lv_id_0_0= rulePropertyId ) ) | (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) ) ) ;
    public final EObject ruleDocSelector() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_definition_2_0=null;
        Token lv_initialization_3_0=null;
        Token lv_termination_4_0=null;
        Token lv_transition_5_0=null;
        AntlrDatatypeRuleToken lv_id_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13830:2: ( ( ( (lv_id_0_0= rulePropertyId ) ) | (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) ) ) )
            // InternalKim.g:13831:2: ( ( (lv_id_0_0= rulePropertyId ) ) | (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) ) )
            {
            // InternalKim.g:13831:2: ( ( (lv_id_0_0= rulePropertyId ) ) | (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) ) )
            int alt289=2;
            int LA289_0 = input.LA(1);

            if ( ((LA289_0>=RULE_UPPERCASE_ID && LA289_0<=RULE_LOWERCASE_ID)||LA289_0==RULE_LOWERCASE_DASHID) ) {
                alt289=1;
            }
            else if ( (LA289_0==56) ) {
                alt289=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 289, 0, input);

                throw nvae;
            }
            switch (alt289) {
                case 1 :
                    // InternalKim.g:13832:3: ( (lv_id_0_0= rulePropertyId ) )
                    {
                    // InternalKim.g:13832:3: ( (lv_id_0_0= rulePropertyId ) )
                    // InternalKim.g:13833:4: (lv_id_0_0= rulePropertyId )
                    {
                    // InternalKim.g:13833:4: (lv_id_0_0= rulePropertyId )
                    // InternalKim.g:13834:5: lv_id_0_0= rulePropertyId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDocSelectorAccess().getIdPropertyIdParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_id_0_0=rulePropertyId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDocSelectorRule());
                      					}
                      					set(
                      						current,
                      						"id",
                      						lv_id_0_0,
                      						"org.integratedmodelling.kim.Kim.PropertyId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13852:3: (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) )
                    {
                    // InternalKim.g:13852:3: (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) )
                    // InternalKim.g:13853:4: otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) )
                    {
                    otherlv_1=(Token)match(input,56,FOLLOW_163); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDocSelectorAccess().getOnKeyword_1_0());
                      			
                    }
                    // InternalKim.g:13857:4: ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) )
                    int alt288=4;
                    switch ( input.LA(1) ) {
                    case 57:
                        {
                        alt288=1;
                        }
                        break;
                    case 210:
                        {
                        alt288=2;
                        }
                        break;
                    case 59:
                        {
                        alt288=3;
                        }
                        break;
                    case 211:
                        {
                        alt288=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 288, 0, input);

                        throw nvae;
                    }

                    switch (alt288) {
                        case 1 :
                            // InternalKim.g:13858:5: ( (lv_definition_2_0= 'definition' ) )
                            {
                            // InternalKim.g:13858:5: ( (lv_definition_2_0= 'definition' ) )
                            // InternalKim.g:13859:6: (lv_definition_2_0= 'definition' )
                            {
                            // InternalKim.g:13859:6: (lv_definition_2_0= 'definition' )
                            // InternalKim.g:13860:7: lv_definition_2_0= 'definition'
                            {
                            lv_definition_2_0=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_definition_2_0, grammarAccess.getDocSelectorAccess().getDefinitionDefinitionKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDocSelectorRule());
                              							}
                              							setWithLastConsumed(current, "definition", true, "definition");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:13873:5: ( (lv_initialization_3_0= 'initialization' ) )
                            {
                            // InternalKim.g:13873:5: ( (lv_initialization_3_0= 'initialization' ) )
                            // InternalKim.g:13874:6: (lv_initialization_3_0= 'initialization' )
                            {
                            // InternalKim.g:13874:6: (lv_initialization_3_0= 'initialization' )
                            // InternalKim.g:13875:7: lv_initialization_3_0= 'initialization'
                            {
                            lv_initialization_3_0=(Token)match(input,210,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_initialization_3_0, grammarAccess.getDocSelectorAccess().getInitializationInitializationKeyword_1_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDocSelectorRule());
                              							}
                              							setWithLastConsumed(current, "initialization", true, "initialization");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:13888:5: ( (lv_termination_4_0= 'termination' ) )
                            {
                            // InternalKim.g:13888:5: ( (lv_termination_4_0= 'termination' ) )
                            // InternalKim.g:13889:6: (lv_termination_4_0= 'termination' )
                            {
                            // InternalKim.g:13889:6: (lv_termination_4_0= 'termination' )
                            // InternalKim.g:13890:7: lv_termination_4_0= 'termination'
                            {
                            lv_termination_4_0=(Token)match(input,59,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_termination_4_0, grammarAccess.getDocSelectorAccess().getTerminationTerminationKeyword_1_1_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDocSelectorRule());
                              							}
                              							setWithLastConsumed(current, "termination", true, "termination");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:13903:5: ( (lv_transition_5_0= 'transition' ) )
                            {
                            // InternalKim.g:13903:5: ( (lv_transition_5_0= 'transition' ) )
                            // InternalKim.g:13904:6: (lv_transition_5_0= 'transition' )
                            {
                            // InternalKim.g:13904:6: (lv_transition_5_0= 'transition' )
                            // InternalKim.g:13905:7: lv_transition_5_0= 'transition'
                            {
                            lv_transition_5_0=(Token)match(input,211,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_transition_5_0, grammarAccess.getDocSelectorAccess().getTransitionTransitionKeyword_1_1_3_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDocSelectorRule());
                              							}
                              							setWithLastConsumed(current, "transition", true, "transition");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDocSelector"


    // $ANTLR start "entryRuleKeyValuePair"
    // InternalKim.g:13923:1: entryRuleKeyValuePair returns [EObject current=null] : iv_ruleKeyValuePair= ruleKeyValuePair EOF ;
    public final EObject entryRuleKeyValuePair() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyValuePair = null;


        try {
            // InternalKim.g:13923:53: (iv_ruleKeyValuePair= ruleKeyValuePair EOF )
            // InternalKim.g:13924:2: iv_ruleKeyValuePair= ruleKeyValuePair EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyValuePairRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKeyValuePair=ruleKeyValuePair();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyValuePair; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyValuePair"


    // $ANTLR start "ruleKeyValuePair"
    // InternalKim.g:13930:1: ruleKeyValuePair returns [EObject current=null] : ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) ) ;
    public final EObject ruleKeyValuePair() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_2=null;
        Token lv_name_0_3=null;
        Token lv_interactive_1_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_0_1 = null;

        EObject lv_value_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13936:2: ( ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) ) )
            // InternalKim.g:13937:2: ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) )
            {
            // InternalKim.g:13937:2: ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) )
            // InternalKim.g:13938:3: ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) )
            {
            // InternalKim.g:13938:3: ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) )
            // InternalKim.g:13939:4: ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) )
            {
            // InternalKim.g:13939:4: ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) )
            // InternalKim.g:13940:5: (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' )
            {
            // InternalKim.g:13940:5: (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' )
            int alt290=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                int LA290_1 = input.LA(2);

                if ( (synpred520_InternalKim()) ) {
                    alt290=1;
                }
                else if ( (synpred521_InternalKim()) ) {
                    alt290=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 290, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_UPPERCASE_ID:
            case RULE_LOWERCASE_DASHID:
                {
                alt290=1;
                }
                break;
            case 154:
                {
                alt290=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 290, 0, input);

                throw nvae;
            }

            switch (alt290) {
                case 1 :
                    // InternalKim.g:13941:6: lv_name_0_1= rulePathName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKeyValuePairAccess().getNamePathNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_164);
                    lv_name_0_1=rulePathName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_0_1,
                      							"org.integratedmodelling.kim.Kim.PathName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13957:6: lv_name_0_2= RULE_LOWERCASE_ID
                    {
                    lv_name_0_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_164); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_2, grammarAccess.getKeyValuePairAccess().getNameLOWERCASE_IDTerminalRuleCall_0_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKeyValuePairRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_0_2,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:13972:6: lv_name_0_3= 'value'
                    {
                    lv_name_0_3=(Token)match(input,154,FOLLOW_164); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_3, grammarAccess.getKeyValuePairAccess().getNameValueKeyword_0_0_2());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKeyValuePairRule());
                      						}
                      						setWithLastConsumed(current, "name", lv_name_0_3, null);
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalKim.g:13985:3: ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' )
            int alt291=2;
            int LA291_0 = input.LA(1);

            if ( (LA291_0==212) ) {
                alt291=1;
            }
            else if ( (LA291_0==82) ) {
                alt291=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 291, 0, input);

                throw nvae;
            }
            switch (alt291) {
                case 1 :
                    // InternalKim.g:13986:4: ( (lv_interactive_1_0= '?=' ) )
                    {
                    // InternalKim.g:13986:4: ( (lv_interactive_1_0= '?=' ) )
                    // InternalKim.g:13987:5: (lv_interactive_1_0= '?=' )
                    {
                    // InternalKim.g:13987:5: (lv_interactive_1_0= '?=' )
                    // InternalKim.g:13988:6: lv_interactive_1_0= '?='
                    {
                    lv_interactive_1_0=(Token)match(input,212,FOLLOW_162); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_interactive_1_0, grammarAccess.getKeyValuePairAccess().getInteractiveQuestionMarkEqualsSignKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKeyValuePairRule());
                      						}
                      						setWithLastConsumed(current, "interactive", true, "?=");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14001:4: otherlv_2= '='
                    {
                    otherlv_2=(Token)match(input,82,FOLLOW_162); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getKeyValuePairAccess().getEqualsSignKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:14006:3: ( (lv_value_3_0= ruleValueWithIdAndConcept ) )
            // InternalKim.g:14007:4: (lv_value_3_0= ruleValueWithIdAndConcept )
            {
            // InternalKim.g:14007:4: (lv_value_3_0= ruleValueWithIdAndConcept )
            // InternalKim.g:14008:5: lv_value_3_0= ruleValueWithIdAndConcept
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyValuePairAccess().getValueValueWithIdAndConceptParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_3_0=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_3_0,
              						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyValuePair"


    // $ANTLR start "entryRuleParameterList"
    // InternalKim.g:14029:1: entryRuleParameterList returns [EObject current=null] : iv_ruleParameterList= ruleParameterList EOF ;
    public final EObject entryRuleParameterList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterList = null;


        try {
            // InternalKim.g:14029:54: (iv_ruleParameterList= ruleParameterList EOF )
            // InternalKim.g:14030:2: iv_ruleParameterList= ruleParameterList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterList=ruleParameterList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterList"


    // $ANTLR start "ruleParameterList"
    // InternalKim.g:14036:1: ruleParameterList returns [EObject current=null] : ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) )* ) ) ;
    public final EObject ruleParameterList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_pairs_0_0 = null;

        EObject lv_pairs_2_0 = null;

        EObject lv_singleValue_3_0 = null;

        EObject lv_singleValue_5_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14042:2: ( ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) )* ) ) )
            // InternalKim.g:14043:2: ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) )* ) )
            {
            // InternalKim.g:14043:2: ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) )* ) )
            int alt294=2;
            alt294 = dfa294.predict(input);
            switch (alt294) {
                case 1 :
                    // InternalKim.g:14044:3: ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* )
                    {
                    // InternalKim.g:14044:3: ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* )
                    // InternalKim.g:14045:4: ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )*
                    {
                    // InternalKim.g:14045:4: ( (lv_pairs_0_0= ruleKeyValuePair ) )
                    // InternalKim.g:14046:5: (lv_pairs_0_0= ruleKeyValuePair )
                    {
                    // InternalKim.g:14046:5: (lv_pairs_0_0= ruleKeyValuePair )
                    // InternalKim.g:14047:6: lv_pairs_0_0= ruleKeyValuePair
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_34);
                    lv_pairs_0_0=ruleKeyValuePair();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameterListRule());
                      						}
                      						add(
                      							current,
                      							"pairs",
                      							lv_pairs_0_0,
                      							"org.integratedmodelling.kim.Kim.KeyValuePair");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:14064:4: ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )*
                    loop292:
                    do {
                        int alt292=2;
                        int LA292_0 = input.LA(1);

                        if ( (LA292_0==27) ) {
                            alt292=1;
                        }


                        switch (alt292) {
                    	case 1 :
                    	    // InternalKim.g:14065:5: ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) )
                    	    {
                    	    // InternalKim.g:14065:5: ( ( ',' )=>otherlv_1= ',' )
                    	    // InternalKim.g:14066:6: ( ',' )=>otherlv_1= ','
                    	    {
                    	    otherlv_1=(Token)match(input,27,FOLLOW_165); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getCommaKeyword_0_1_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:14072:5: ( (lv_pairs_2_0= ruleKeyValuePair ) )
                    	    // InternalKim.g:14073:6: (lv_pairs_2_0= ruleKeyValuePair )
                    	    {
                    	    // InternalKim.g:14073:6: (lv_pairs_2_0= ruleKeyValuePair )
                    	    // InternalKim.g:14074:7: lv_pairs_2_0= ruleKeyValuePair
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_0_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_34);
                    	    lv_pairs_2_0=ruleKeyValuePair();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getParameterListRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"pairs",
                    	      								lv_pairs_2_0,
                    	      								"org.integratedmodelling.kim.Kim.KeyValuePair");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop292;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14094:3: ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) )* )
                    {
                    // InternalKim.g:14094:3: ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) )* )
                    // InternalKim.g:14095:4: ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) )*
                    {
                    // InternalKim.g:14095:4: ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) )
                    // InternalKim.g:14096:5: (lv_singleValue_3_0= ruleValueWithIdAndConcept )
                    {
                    // InternalKim.g:14096:5: (lv_singleValue_3_0= ruleValueWithIdAndConcept )
                    // InternalKim.g:14097:6: lv_singleValue_3_0= ruleValueWithIdAndConcept
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameterListAccess().getSingleValueValueWithIdAndConceptParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_34);
                    lv_singleValue_3_0=ruleValueWithIdAndConcept();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameterListRule());
                      						}
                      						add(
                      							current,
                      							"singleValue",
                      							lv_singleValue_3_0,
                      							"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:14114:4: ( ( ( ',' )=>otherlv_4= ',' ) ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) )*
                    loop293:
                    do {
                        int alt293=2;
                        int LA293_0 = input.LA(1);

                        if ( (LA293_0==27) ) {
                            alt293=1;
                        }


                        switch (alt293) {
                    	case 1 :
                    	    // InternalKim.g:14115:5: ( ( ',' )=>otherlv_4= ',' ) ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) )
                    	    {
                    	    // InternalKim.g:14115:5: ( ( ',' )=>otherlv_4= ',' )
                    	    // InternalKim.g:14116:6: ( ',' )=>otherlv_4= ','
                    	    {
                    	    otherlv_4=(Token)match(input,27,FOLLOW_162); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getParameterListAccess().getCommaKeyword_1_1_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:14122:5: ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) )
                    	    // InternalKim.g:14123:6: (lv_singleValue_5_0= ruleValueWithIdAndConcept )
                    	    {
                    	    // InternalKim.g:14123:6: (lv_singleValue_5_0= ruleValueWithIdAndConcept )
                    	    // InternalKim.g:14124:7: lv_singleValue_5_0= ruleValueWithIdAndConcept
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getParameterListAccess().getSingleValueValueWithIdAndConceptParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_34);
                    	    lv_singleValue_5_0=ruleValueWithIdAndConcept();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getParameterListRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"singleValue",
                    	      								lv_singleValue_5_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop293;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterList"


    // $ANTLR start "entryRuleValueWithIdAndConcept"
    // InternalKim.g:14147:1: entryRuleValueWithIdAndConcept returns [EObject current=null] : iv_ruleValueWithIdAndConcept= ruleValueWithIdAndConcept EOF ;
    public final EObject entryRuleValueWithIdAndConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueWithIdAndConcept = null;


        try {
            // InternalKim.g:14147:62: (iv_ruleValueWithIdAndConcept= ruleValueWithIdAndConcept EOF )
            // InternalKim.g:14148:2: iv_ruleValueWithIdAndConcept= ruleValueWithIdAndConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueWithIdAndConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueWithIdAndConcept=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueWithIdAndConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueWithIdAndConcept"


    // $ANTLR start "ruleValueWithIdAndConcept"
    // InternalKim.g:14154:1: ruleValueWithIdAndConcept returns [EObject current=null] : ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_date_7_0= ruleDate ) ) | ( (lv_map_8_0= ruleMap ) ) | ( (lv_quantity_9_0= ruleQuantity ) ) | ( (lv_null_10_0= 'unknown' ) ) ) ;
    public final EObject ruleValueWithIdAndConcept() throws RecognitionException {
        EObject current = null;

        Token lv_expr_3_0=null;
        Token lv_id_4_2=null;
        Token lv_id_4_3=null;
        Token lv_id_4_4=null;
        Token lv_null_10_0=null;
        EObject lv_concept_0_0 = null;

        EObject lv_function_1_0 = null;

        EObject lv_literal_2_0 = null;

        AntlrDatatypeRuleToken lv_id_4_1 = null;

        EObject lv_list_5_0 = null;

        EObject lv_table_6_0 = null;

        EObject lv_date_7_0 = null;

        EObject lv_map_8_0 = null;

        EObject lv_quantity_9_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14160:2: ( ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_date_7_0= ruleDate ) ) | ( (lv_map_8_0= ruleMap ) ) | ( (lv_quantity_9_0= ruleQuantity ) ) | ( (lv_null_10_0= 'unknown' ) ) ) )
            // InternalKim.g:14161:2: ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_date_7_0= ruleDate ) ) | ( (lv_map_8_0= ruleMap ) ) | ( (lv_quantity_9_0= ruleQuantity ) ) | ( (lv_null_10_0= 'unknown' ) ) )
            {
            // InternalKim.g:14161:2: ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_date_7_0= ruleDate ) ) | ( (lv_map_8_0= ruleMap ) ) | ( (lv_quantity_9_0= ruleQuantity ) ) | ( (lv_null_10_0= 'unknown' ) ) )
            int alt296=11;
            alt296 = dfa296.predict(input);
            switch (alt296) {
                case 1 :
                    // InternalKim.g:14162:3: ( (lv_concept_0_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:14162:3: ( (lv_concept_0_0= ruleConceptDeclaration ) )
                    // InternalKim.g:14163:4: (lv_concept_0_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:14163:4: (lv_concept_0_0= ruleConceptDeclaration )
                    // InternalKim.g:14164:5: lv_concept_0_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getConceptConceptDeclarationParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_0_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_0_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14182:3: ( (lv_function_1_0= ruleFunction ) )
                    {
                    // InternalKim.g:14182:3: ( (lv_function_1_0= ruleFunction ) )
                    // InternalKim.g:14183:4: (lv_function_1_0= ruleFunction )
                    {
                    // InternalKim.g:14183:4: (lv_function_1_0= ruleFunction )
                    // InternalKim.g:14184:5: lv_function_1_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getFunctionFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_1_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_1_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:14202:3: ( (lv_literal_2_0= ruleLiteral ) )
                    {
                    // InternalKim.g:14202:3: ( (lv_literal_2_0= ruleLiteral ) )
                    // InternalKim.g:14203:4: (lv_literal_2_0= ruleLiteral )
                    {
                    // InternalKim.g:14203:4: (lv_literal_2_0= ruleLiteral )
                    // InternalKim.g:14204:5: lv_literal_2_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getLiteralLiteralParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_2_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_2_0,
                      						"org.integratedmodelling.kim.Kim.Literal");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:14222:3: ( (lv_expr_3_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:14222:3: ( (lv_expr_3_0= RULE_EXPR ) )
                    // InternalKim.g:14223:4: (lv_expr_3_0= RULE_EXPR )
                    {
                    // InternalKim.g:14223:4: (lv_expr_3_0= RULE_EXPR )
                    // InternalKim.g:14224:5: lv_expr_3_0= RULE_EXPR
                    {
                    lv_expr_3_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_3_0, grammarAccess.getValueWithIdAndConceptAccess().getExprEXPRTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_3_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:14241:3: ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:14241:3: ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:14242:4: ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:14242:4: ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:14243:5: (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:14243:5: (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID )
                    int alt295=4;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        int LA295_1 = input.LA(2);

                        if ( (synpred532_InternalKim()) ) {
                            alt295=1;
                        }
                        else if ( (synpred533_InternalKim()) ) {
                            alt295=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 295, 1, input);

                            throw nvae;
                        }
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        int LA295_2 = input.LA(2);

                        if ( (synpred532_InternalKim()) ) {
                            alt295=1;
                        }
                        else if ( (synpred534_InternalKim()) ) {
                            alt295=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 295, 2, input);

                            throw nvae;
                        }
                        }
                        break;
                    case RULE_LOWERCASE_DASHID:
                        {
                        alt295=1;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt295=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 295, 0, input);

                        throw nvae;
                    }

                    switch (alt295) {
                        case 1 :
                            // InternalKim.g:14244:6: lv_id_4_1= rulePathName
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getIdPathNameParserRuleCall_4_0_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_id_4_1=rulePathName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						set(
                              							current,
                              							"id",
                              							lv_id_4_1,
                              							"org.integratedmodelling.kim.Kim.PathName");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14260:6: lv_id_4_2= RULE_LOWERCASE_ID
                            {
                            lv_id_4_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_4_2, grammarAccess.getValueWithIdAndConceptAccess().getIdLOWERCASE_IDTerminalRuleCall_4_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_4_2,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:14275:6: lv_id_4_3= RULE_UPPERCASE_ID
                            {
                            lv_id_4_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_4_3, grammarAccess.getValueWithIdAndConceptAccess().getIdUPPERCASE_IDTerminalRuleCall_4_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_4_3,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:14290:6: lv_id_4_4= RULE_CAMELCASE_ID
                            {
                            lv_id_4_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_4_4, grammarAccess.getValueWithIdAndConceptAccess().getIdCAMELCASE_IDTerminalRuleCall_4_0_3());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_4_4,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:14308:3: ( (lv_list_5_0= ruleList ) )
                    {
                    // InternalKim.g:14308:3: ( (lv_list_5_0= ruleList ) )
                    // InternalKim.g:14309:4: (lv_list_5_0= ruleList )
                    {
                    // InternalKim.g:14309:4: (lv_list_5_0= ruleList )
                    // InternalKim.g:14310:5: lv_list_5_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getListListParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_5_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_5_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:14328:3: ( (lv_table_6_0= ruleLookupTable ) )
                    {
                    // InternalKim.g:14328:3: ( (lv_table_6_0= ruleLookupTable ) )
                    // InternalKim.g:14329:4: (lv_table_6_0= ruleLookupTable )
                    {
                    // InternalKim.g:14329:4: (lv_table_6_0= ruleLookupTable )
                    // InternalKim.g:14330:5: lv_table_6_0= ruleLookupTable
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getTableLookupTableParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_table_6_0=ruleLookupTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"table",
                      						lv_table_6_0,
                      						"org.integratedmodelling.kim.Kim.LookupTable");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:14348:3: ( (lv_date_7_0= ruleDate ) )
                    {
                    // InternalKim.g:14348:3: ( (lv_date_7_0= ruleDate ) )
                    // InternalKim.g:14349:4: (lv_date_7_0= ruleDate )
                    {
                    // InternalKim.g:14349:4: (lv_date_7_0= ruleDate )
                    // InternalKim.g:14350:5: lv_date_7_0= ruleDate
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getDateDateParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_date_7_0=ruleDate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"date",
                      						lv_date_7_0,
                      						"org.integratedmodelling.kim.Kim.Date");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:14368:3: ( (lv_map_8_0= ruleMap ) )
                    {
                    // InternalKim.g:14368:3: ( (lv_map_8_0= ruleMap ) )
                    // InternalKim.g:14369:4: (lv_map_8_0= ruleMap )
                    {
                    // InternalKim.g:14369:4: (lv_map_8_0= ruleMap )
                    // InternalKim.g:14370:5: lv_map_8_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getMapMapParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_map_8_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"map",
                      						lv_map_8_0,
                      						"org.integratedmodelling.kim.Kim.Map");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:14388:3: ( (lv_quantity_9_0= ruleQuantity ) )
                    {
                    // InternalKim.g:14388:3: ( (lv_quantity_9_0= ruleQuantity ) )
                    // InternalKim.g:14389:4: (lv_quantity_9_0= ruleQuantity )
                    {
                    // InternalKim.g:14389:4: (lv_quantity_9_0= ruleQuantity )
                    // InternalKim.g:14390:5: lv_quantity_9_0= ruleQuantity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getQuantityQuantityParserRuleCall_9_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_quantity_9_0=ruleQuantity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"quantity",
                      						lv_quantity_9_0,
                      						"org.integratedmodelling.kim.Kim.Quantity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalKim.g:14408:3: ( (lv_null_10_0= 'unknown' ) )
                    {
                    // InternalKim.g:14408:3: ( (lv_null_10_0= 'unknown' ) )
                    // InternalKim.g:14409:4: (lv_null_10_0= 'unknown' )
                    {
                    // InternalKim.g:14409:4: (lv_null_10_0= 'unknown' )
                    // InternalKim.g:14410:5: lv_null_10_0= 'unknown'
                    {
                    lv_null_10_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_10_0, grammarAccess.getValueWithIdAndConceptAccess().getNullUnknownKeyword_10_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					setWithLastConsumed(current, "null", true, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueWithIdAndConcept"


    // $ANTLR start "entryRuleValue"
    // InternalKim.g:14426:1: entryRuleValue returns [EObject current=null] : iv_ruleValue= ruleValue EOF ;
    public final EObject entryRuleValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValue = null;


        try {
            // InternalKim.g:14426:46: (iv_ruleValue= ruleValue EOF )
            // InternalKim.g:14427:2: iv_ruleValue= ruleValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValue=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValue"


    // $ANTLR start "ruleValue"
    // InternalKim.g:14433:1: ruleValue returns [EObject current=null] : ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) ) ;
    public final EObject ruleValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_2_0=null;
        Token otherlv_3=null;
        Token lv_language_4_0=null;
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;
        Token lv_null_11_0=null;
        EObject lv_literal_0_0 = null;

        EObject lv_function_1_0 = null;

        EObject lv_list_6_0 = null;

        EObject lv_table_7_0 = null;

        EObject lv_quantity_8_0 = null;

        EObject lv_date_9_0 = null;

        EObject lv_map_10_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14439:2: ( ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) ) )
            // InternalKim.g:14440:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) )
            {
            // InternalKim.g:14440:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) )
            int alt299=10;
            alt299 = dfa299.predict(input);
            switch (alt299) {
                case 1 :
                    // InternalKim.g:14441:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    {
                    // InternalKim.g:14441:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    // InternalKim.g:14442:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    {
                    // InternalKim.g:14442:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    // InternalKim.g:14443:5: lv_literal_0_0= ruleLiteralOrIdOrComma
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleLiteralOrIdOrComma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.integratedmodelling.kim.Kim.LiteralOrIdOrComma");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14461:3: ( (lv_function_1_0= ruleFunction ) )
                    {
                    // InternalKim.g:14461:3: ( (lv_function_1_0= ruleFunction ) )
                    // InternalKim.g:14462:4: (lv_function_1_0= ruleFunction )
                    {
                    // InternalKim.g:14462:4: (lv_function_1_0= ruleFunction )
                    // InternalKim.g:14463:5: lv_function_1_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getFunctionFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_1_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_1_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:14481:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? )
                    {
                    // InternalKim.g:14481:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? )
                    // InternalKim.g:14482:4: ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )?
                    {
                    // InternalKim.g:14482:4: ( (lv_expr_2_0= RULE_EXPR ) )
                    // InternalKim.g:14483:5: (lv_expr_2_0= RULE_EXPR )
                    {
                    // InternalKim.g:14483:5: (lv_expr_2_0= RULE_EXPR )
                    // InternalKim.g:14484:6: lv_expr_2_0= RULE_EXPR
                    {
                    lv_expr_2_0=(Token)match(input,RULE_EXPR,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_expr_2_0, grammarAccess.getValueAccess().getExprEXPRTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getValueRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"expr",
                      							lv_expr_2_0,
                      							"org.integratedmodelling.kim.Kim.EXPR");
                      					
                    }

                    }


                    }

                    // InternalKim.g:14500:4: (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )?
                    int alt297=2;
                    int LA297_0 = input.LA(1);

                    if ( (LA297_0==48) ) {
                        alt297=1;
                    }
                    switch (alt297) {
                        case 1 :
                            // InternalKim.g:14501:5: otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) )
                            {
                            otherlv_3=(Token)match(input,48,FOLLOW_10); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getValueAccess().getInKeyword_2_1_0());
                              				
                            }
                            // InternalKim.g:14505:5: ( (lv_language_4_0= RULE_UPPERCASE_ID ) )
                            // InternalKim.g:14506:6: (lv_language_4_0= RULE_UPPERCASE_ID )
                            {
                            // InternalKim.g:14506:6: (lv_language_4_0= RULE_UPPERCASE_ID )
                            // InternalKim.g:14507:7: lv_language_4_0= RULE_UPPERCASE_ID
                            {
                            lv_language_4_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_language_4_0, grammarAccess.getValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_2_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getValueRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"language",
                              								lv_language_4_0,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:14526:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:14526:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:14527:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:14527:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:14528:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:14528:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    int alt298=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt298=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt298=2;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt298=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 298, 0, input);

                        throw nvae;
                    }

                    switch (alt298) {
                        case 1 :
                            // InternalKim.g:14529:6: lv_id_5_1= RULE_LOWERCASE_ID
                            {
                            lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_1, grammarAccess.getValueAccess().getIdLOWERCASE_IDTerminalRuleCall_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14544:6: lv_id_5_2= RULE_UPPERCASE_ID
                            {
                            lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_2, grammarAccess.getValueAccess().getIdUPPERCASE_IDTerminalRuleCall_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_2,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:14559:6: lv_id_5_3= RULE_CAMELCASE_ID
                            {
                            lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_3, grammarAccess.getValueAccess().getIdCAMELCASE_IDTerminalRuleCall_3_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_3,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:14577:3: ( (lv_list_6_0= ruleList ) )
                    {
                    // InternalKim.g:14577:3: ( (lv_list_6_0= ruleList ) )
                    // InternalKim.g:14578:4: (lv_list_6_0= ruleList )
                    {
                    // InternalKim.g:14578:4: (lv_list_6_0= ruleList )
                    // InternalKim.g:14579:5: lv_list_6_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getListListParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_6_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_6_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:14597:3: ( (lv_table_7_0= ruleLookupTable ) )
                    {
                    // InternalKim.g:14597:3: ( (lv_table_7_0= ruleLookupTable ) )
                    // InternalKim.g:14598:4: (lv_table_7_0= ruleLookupTable )
                    {
                    // InternalKim.g:14598:4: (lv_table_7_0= ruleLookupTable )
                    // InternalKim.g:14599:5: lv_table_7_0= ruleLookupTable
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getTableLookupTableParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_table_7_0=ruleLookupTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"table",
                      						lv_table_7_0,
                      						"org.integratedmodelling.kim.Kim.LookupTable");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:14617:3: ( (lv_quantity_8_0= ruleQuantity ) )
                    {
                    // InternalKim.g:14617:3: ( (lv_quantity_8_0= ruleQuantity ) )
                    // InternalKim.g:14618:4: (lv_quantity_8_0= ruleQuantity )
                    {
                    // InternalKim.g:14618:4: (lv_quantity_8_0= ruleQuantity )
                    // InternalKim.g:14619:5: lv_quantity_8_0= ruleQuantity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getQuantityQuantityParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_quantity_8_0=ruleQuantity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"quantity",
                      						lv_quantity_8_0,
                      						"org.integratedmodelling.kim.Kim.Quantity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:14637:3: ( (lv_date_9_0= ruleDate ) )
                    {
                    // InternalKim.g:14637:3: ( (lv_date_9_0= ruleDate ) )
                    // InternalKim.g:14638:4: (lv_date_9_0= ruleDate )
                    {
                    // InternalKim.g:14638:4: (lv_date_9_0= ruleDate )
                    // InternalKim.g:14639:5: lv_date_9_0= ruleDate
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getDateDateParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_date_9_0=ruleDate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"date",
                      						lv_date_9_0,
                      						"org.integratedmodelling.kim.Kim.Date");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:14657:3: ( (lv_map_10_0= ruleMap ) )
                    {
                    // InternalKim.g:14657:3: ( (lv_map_10_0= ruleMap ) )
                    // InternalKim.g:14658:4: (lv_map_10_0= ruleMap )
                    {
                    // InternalKim.g:14658:4: (lv_map_10_0= ruleMap )
                    // InternalKim.g:14659:5: lv_map_10_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getMapMapParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_map_10_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"map",
                      						lv_map_10_0,
                      						"org.integratedmodelling.kim.Kim.Map");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:14677:3: ( (lv_null_11_0= 'unknown' ) )
                    {
                    // InternalKim.g:14677:3: ( (lv_null_11_0= 'unknown' ) )
                    // InternalKim.g:14678:4: (lv_null_11_0= 'unknown' )
                    {
                    // InternalKim.g:14678:4: (lv_null_11_0= 'unknown' )
                    // InternalKim.g:14679:5: lv_null_11_0= 'unknown'
                    {
                    lv_null_11_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_11_0, grammarAccess.getValueAccess().getNullUnknownKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueRule());
                      					}
                      					setWithLastConsumed(current, "null", true, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValue"


    // $ANTLR start "entryRuleLiteralValueWithConcept"
    // InternalKim.g:14695:1: entryRuleLiteralValueWithConcept returns [EObject current=null] : iv_ruleLiteralValueWithConcept= ruleLiteralValueWithConcept EOF ;
    public final EObject entryRuleLiteralValueWithConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralValueWithConcept = null;


        try {
            // InternalKim.g:14695:64: (iv_ruleLiteralValueWithConcept= ruleLiteralValueWithConcept EOF )
            // InternalKim.g:14696:2: iv_ruleLiteralValueWithConcept= ruleLiteralValueWithConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralValueWithConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralValueWithConcept=ruleLiteralValueWithConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralValueWithConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralValueWithConcept"


    // $ANTLR start "ruleLiteralValueWithConcept"
    // InternalKim.g:14702:1: ruleLiteralValueWithConcept returns [EObject current=null] : ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) ) ;
    public final EObject ruleLiteralValueWithConcept() throws RecognitionException {
        EObject current = null;

        Token lv_expr_3_0=null;
        Token lv_id_6_1=null;
        Token lv_id_6_2=null;
        Token lv_id_6_3=null;
        EObject lv_literal_0_0 = null;

        EObject lv_concept_1_0 = null;

        EObject lv_function_2_0 = null;

        EObject lv_quantity_4_0 = null;

        EObject lv_date_5_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14708:2: ( ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) ) )
            // InternalKim.g:14709:2: ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) )
            {
            // InternalKim.g:14709:2: ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) )
            int alt301=7;
            alt301 = dfa301.predict(input);
            switch (alt301) {
                case 1 :
                    // InternalKim.g:14710:3: ( (lv_literal_0_0= ruleLiteral ) )
                    {
                    // InternalKim.g:14710:3: ( (lv_literal_0_0= ruleLiteral ) )
                    // InternalKim.g:14711:4: (lv_literal_0_0= ruleLiteral )
                    {
                    // InternalKim.g:14711:4: (lv_literal_0_0= ruleLiteral )
                    // InternalKim.g:14712:5: lv_literal_0_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getLiteralLiteralParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.integratedmodelling.kim.Kim.Literal");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14730:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:14730:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
                    // InternalKim.g:14731:4: (lv_concept_1_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:14731:4: (lv_concept_1_0= ruleConceptDeclaration )
                    // InternalKim.g:14732:5: lv_concept_1_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getConceptConceptDeclarationParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_1_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_1_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:14750:3: ( (lv_function_2_0= ruleFunction ) )
                    {
                    // InternalKim.g:14750:3: ( (lv_function_2_0= ruleFunction ) )
                    // InternalKim.g:14751:4: (lv_function_2_0= ruleFunction )
                    {
                    // InternalKim.g:14751:4: (lv_function_2_0= ruleFunction )
                    // InternalKim.g:14752:5: lv_function_2_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getFunctionFunctionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_2_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_2_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:14770:3: ( (lv_expr_3_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:14770:3: ( (lv_expr_3_0= RULE_EXPR ) )
                    // InternalKim.g:14771:4: (lv_expr_3_0= RULE_EXPR )
                    {
                    // InternalKim.g:14771:4: (lv_expr_3_0= RULE_EXPR )
                    // InternalKim.g:14772:5: lv_expr_3_0= RULE_EXPR
                    {
                    lv_expr_3_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_3_0, grammarAccess.getLiteralValueWithConceptAccess().getExprEXPRTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_3_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:14789:3: ( (lv_quantity_4_0= ruleQuantity ) )
                    {
                    // InternalKim.g:14789:3: ( (lv_quantity_4_0= ruleQuantity ) )
                    // InternalKim.g:14790:4: (lv_quantity_4_0= ruleQuantity )
                    {
                    // InternalKim.g:14790:4: (lv_quantity_4_0= ruleQuantity )
                    // InternalKim.g:14791:5: lv_quantity_4_0= ruleQuantity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getQuantityQuantityParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_quantity_4_0=ruleQuantity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"quantity",
                      						lv_quantity_4_0,
                      						"org.integratedmodelling.kim.Kim.Quantity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:14809:3: ( (lv_date_5_0= ruleDate ) )
                    {
                    // InternalKim.g:14809:3: ( (lv_date_5_0= ruleDate ) )
                    // InternalKim.g:14810:4: (lv_date_5_0= ruleDate )
                    {
                    // InternalKim.g:14810:4: (lv_date_5_0= ruleDate )
                    // InternalKim.g:14811:5: lv_date_5_0= ruleDate
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getDateDateParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_date_5_0=ruleDate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"date",
                      						lv_date_5_0,
                      						"org.integratedmodelling.kim.Kim.Date");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:14829:3: ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:14829:3: ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:14830:4: ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:14830:4: ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:14831:5: (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:14831:5: (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID )
                    int alt300=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt300=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt300=2;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt300=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 300, 0, input);

                        throw nvae;
                    }

                    switch (alt300) {
                        case 1 :
                            // InternalKim.g:14832:6: lv_id_6_1= RULE_LOWERCASE_ID
                            {
                            lv_id_6_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_6_1, grammarAccess.getLiteralValueWithConceptAccess().getIdLOWERCASE_IDTerminalRuleCall_6_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralValueWithConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_6_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14847:6: lv_id_6_2= RULE_UPPERCASE_ID
                            {
                            lv_id_6_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_6_2, grammarAccess.getLiteralValueWithConceptAccess().getIdUPPERCASE_IDTerminalRuleCall_6_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralValueWithConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_6_2,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:14862:6: lv_id_6_3= RULE_CAMELCASE_ID
                            {
                            lv_id_6_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_6_3, grammarAccess.getLiteralValueWithConceptAccess().getIdCAMELCASE_IDTerminalRuleCall_6_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralValueWithConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_6_3,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralValueWithConcept"


    // $ANTLR start "entryRuleFunction"
    // InternalKim.g:14883:1: entryRuleFunction returns [EObject current=null] : iv_ruleFunction= ruleFunction EOF ;
    public final EObject entryRuleFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunction = null;


        try {
            // InternalKim.g:14883:49: (iv_ruleFunction= ruleFunction EOF )
            // InternalKim.g:14884:2: iv_ruleFunction= ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunction=ruleFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalKim.g:14890:1: ruleFunction returns [EObject current=null] : ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' ) ;
    public final EObject ruleFunction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_parameters_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14896:2: ( ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' ) )
            // InternalKim.g:14897:2: ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )
            {
            // InternalKim.g:14897:2: ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )
            // InternalKim.g:14898:3: ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')'
            {
            // InternalKim.g:14898:3: ( (lv_name_0_0= rulePathName ) )
            // InternalKim.g:14899:4: (lv_name_0_0= rulePathName )
            {
            // InternalKim.g:14899:4: (lv_name_0_0= rulePathName )
            // InternalKim.g:14900:5: lv_name_0_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionAccess().getNamePathNameParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_40);
            lv_name_0_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,38,FOLLOW_156); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalKim.g:14921:3: ( (lv_parameters_2_0= ruleParameterList ) )?
            int alt302=2;
            int LA302_0 = input.LA(1);

            if ( ((LA302_0>=RULE_UPPERCASE_ID && LA302_0<=RULE_STRING)||(LA302_0>=RULE_EXPR && LA302_0<=RULE_LOWERCASE_DASHID)||(LA302_0>=28 && LA302_0<=29)||LA302_0==38||(LA302_0>=49 && LA302_0<=50)||(LA302_0>=128 && LA302_0<=129)||(LA302_0>=137 && LA302_0<=138)||(LA302_0>=140 && LA302_0<=156)||LA302_0==209||(LA302_0>=246 && LA302_0<=247)) ) {
                alt302=1;
            }
            switch (alt302) {
                case 1 :
                    // InternalKim.g:14922:4: (lv_parameters_2_0= ruleParameterList )
                    {
                    // InternalKim.g:14922:4: (lv_parameters_2_0= ruleParameterList )
                    // InternalKim.g:14923:5: lv_parameters_2_0= ruleParameterList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterListParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_93);
                    lv_parameters_2_0=ruleParameterList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionRule());
                      					}
                      					set(
                      						current,
                      						"parameters",
                      						lv_parameters_2_0,
                      						"org.integratedmodelling.kim.Kim.ParameterList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "entryRuleCONCEPT_TYPE"
    // InternalKim.g:14948:1: entryRuleCONCEPT_TYPE returns [String current=null] : iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF ;
    public final String entryRuleCONCEPT_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCONCEPT_TYPE = null;


        try {
            // InternalKim.g:14948:52: (iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF )
            // InternalKim.g:14949:2: iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCONCEPT_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCONCEPT_TYPE=ruleCONCEPT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCONCEPT_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCONCEPT_TYPE"


    // $ANTLR start "ruleCONCEPT_TYPE"
    // InternalKim.g:14955:1: ruleCONCEPT_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE ) ;
    public final AntlrDatatypeRuleToken ruleCONCEPT_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_DECLARABLE_TYPE_1 = null;



        	enterRule();

        try {
            // InternalKim.g:14961:2: ( (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE ) )
            // InternalKim.g:14962:2: (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE )
            {
            // InternalKim.g:14962:2: (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE )
            int alt303=2;
            int LA303_0 = input.LA(1);

            if ( (LA303_0==213) ) {
                alt303=1;
            }
            else if ( (LA303_0==95||LA303_0==156||(LA303_0>=163 && LA303_0<=164)||LA303_0==186||(LA303_0>=206 && LA303_0<=208)||(LA303_0>=214 && LA303_0<=242)) ) {
                alt303=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 303, 0, input);

                throw nvae;
            }
            switch (alt303) {
                case 1 :
                    // InternalKim.g:14963:3: kw= 'quality'
                    {
                    kw=(Token)match(input,213,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCONCEPT_TYPEAccess().getQualityKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:14969:3: this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCONCEPT_TYPEAccess().getDECLARABLE_TYPEParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DECLARABLE_TYPE_1=ruleDECLARABLE_TYPE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_DECLARABLE_TYPE_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCONCEPT_TYPE"


    // $ANTLR start "entryRuleDECLARABLE_TYPE"
    // InternalKim.g:14983:1: entryRuleDECLARABLE_TYPE returns [String current=null] : iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF ;
    public final String entryRuleDECLARABLE_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDECLARABLE_TYPE = null;


        try {
            // InternalKim.g:14983:55: (iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF )
            // InternalKim.g:14984:2: iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDECLARABLE_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDECLARABLE_TYPE=ruleDECLARABLE_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDECLARABLE_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDECLARABLE_TYPE"


    // $ANTLR start "ruleDECLARABLE_TYPE"
    // InternalKim.g:14990:1: ruleDECLARABLE_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT ) ;
    public final AntlrDatatypeRuleToken ruleDECLARABLE_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_EXTENSIVE_PROPERTY_6 = null;

        AntlrDatatypeRuleToken this_INTENSIVE_PROPERTY_7 = null;

        AntlrDatatypeRuleToken this_AGENT_TYPE_8 = null;

        AntlrDatatypeRuleToken this_TRAIT_9 = null;



        	enterRule();

        try {
            // InternalKim.g:14996:2: ( (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT ) )
            // InternalKim.g:14997:2: (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT )
            {
            // InternalKim.g:14997:2: (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT )
            int alt304=10;
            switch ( input.LA(1) ) {
            case 214:
                {
                alt304=1;
                }
                break;
            case 215:
                {
                alt304=2;
                }
                break;
            case 216:
                {
                alt304=3;
                }
                break;
            case 164:
                {
                alt304=4;
                }
                break;
            case 217:
                {
                alt304=5;
                }
                break;
            case 208:
                {
                alt304=6;
                }
                break;
            case 219:
            case 220:
            case 221:
            case 222:
            case 223:
            case 224:
            case 225:
            case 226:
                {
                alt304=7;
                }
                break;
            case 227:
            case 228:
            case 229:
            case 230:
            case 231:
            case 232:
            case 233:
            case 234:
            case 235:
            case 236:
            case 237:
            case 238:
            case 239:
                {
                alt304=8;
                }
                break;
            case 163:
            case 240:
            case 241:
            case 242:
                {
                alt304=9;
                }
                break;
            case 95:
            case 156:
            case 186:
            case 206:
            case 207:
            case 218:
                {
                alt304=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 304, 0, input);

                throw nvae;
            }

            switch (alt304) {
                case 1 :
                    // InternalKim.g:14998:3: kw= 'class'
                    {
                    kw=(Token)match(input,214,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getClassKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15004:3: kw= 'quantity'
                    {
                    kw=(Token)match(input,215,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getQuantityKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:15010:3: kw= 'configuration'
                    {
                    kw=(Token)match(input,216,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getConfigurationKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:15016:3: kw= 'relationship'
                    {
                    kw=(Token)match(input,164,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getRelationshipKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:15022:3: kw= 'bond'
                    {
                    kw=(Token)match(input,217,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getBondKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:15028:3: kw= 'extent'
                    {
                    kw=(Token)match(input,208,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getExtentKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:15034:3: this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getEXTENSIVE_PROPERTYParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EXTENSIVE_PROPERTY_6=ruleEXTENSIVE_PROPERTY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_EXTENSIVE_PROPERTY_6);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:15045:3: this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getINTENSIVE_PROPERTYParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_INTENSIVE_PROPERTY_7=ruleINTENSIVE_PROPERTY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_INTENSIVE_PROPERTY_7);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:15056:3: this_AGENT_TYPE_8= ruleAGENT_TYPE
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getAGENT_TYPEParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AGENT_TYPE_8=ruleAGENT_TYPE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_AGENT_TYPE_8);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:15067:3: this_TRAIT_9= ruleTRAIT
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getTRAITParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TRAIT_9=ruleTRAIT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_TRAIT_9);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDECLARABLE_TYPE"


    // $ANTLR start "entryRuleTRAIT"
    // InternalKim.g:15081:1: entryRuleTRAIT returns [String current=null] : iv_ruleTRAIT= ruleTRAIT EOF ;
    public final String entryRuleTRAIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTRAIT = null;


        try {
            // InternalKim.g:15081:45: (iv_ruleTRAIT= ruleTRAIT EOF )
            // InternalKim.g:15082:2: iv_ruleTRAIT= ruleTRAIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTRAITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTRAIT=ruleTRAIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTRAIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTRAIT"


    // $ANTLR start "ruleTRAIT"
    // InternalKim.g:15088:1: ruleTRAIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' ) ;
    public final AntlrDatatypeRuleToken ruleTRAIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:15094:2: ( (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' ) )
            // InternalKim.g:15095:2: (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' )
            {
            // InternalKim.g:15095:2: (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' )
            int alt305=6;
            switch ( input.LA(1) ) {
            case 218:
                {
                alt305=1;
                }
                break;
            case 206:
                {
                alt305=2;
                }
                break;
            case 156:
                {
                alt305=3;
                }
                break;
            case 186:
                {
                alt305=4;
                }
                break;
            case 207:
                {
                alt305=5;
                }
                break;
            case 95:
                {
                alt305=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 305, 0, input);

                throw nvae;
            }

            switch (alt305) {
                case 1 :
                    // InternalKim.g:15096:3: kw= 'ordering'
                    {
                    kw=(Token)match(input,218,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getOrderingKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15102:3: kw= 'attribute'
                    {
                    kw=(Token)match(input,206,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getAttributeKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:15108:3: kw= 'identity'
                    {
                    kw=(Token)match(input,156,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getIdentityKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:15114:3: kw= 'role'
                    {
                    kw=(Token)match(input,186,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getRoleKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:15120:3: kw= 'realm'
                    {
                    kw=(Token)match(input,207,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getRealmKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:15126:3: kw= 'domain'
                    {
                    kw=(Token)match(input,95,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getDomainKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTRAIT"


    // $ANTLR start "entryRuleEXTENSIVE_PROPERTY"
    // InternalKim.g:15135:1: entryRuleEXTENSIVE_PROPERTY returns [String current=null] : iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF ;
    public final String entryRuleEXTENSIVE_PROPERTY() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEXTENSIVE_PROPERTY = null;


        try {
            // InternalKim.g:15135:58: (iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF )
            // InternalKim.g:15136:2: iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEXTENSIVE_PROPERTYRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEXTENSIVE_PROPERTY=ruleEXTENSIVE_PROPERTY();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEXTENSIVE_PROPERTY.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEXTENSIVE_PROPERTY"


    // $ANTLR start "ruleEXTENSIVE_PROPERTY"
    // InternalKim.g:15142:1: ruleEXTENSIVE_PROPERTY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' ) ;
    public final AntlrDatatypeRuleToken ruleEXTENSIVE_PROPERTY() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:15148:2: ( (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' ) )
            // InternalKim.g:15149:2: (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' )
            {
            // InternalKim.g:15149:2: (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' )
            int alt306=8;
            switch ( input.LA(1) ) {
            case 219:
                {
                alt306=1;
                }
                break;
            case 220:
                {
                alt306=2;
                }
                break;
            case 221:
                {
                alt306=3;
                }
                break;
            case 222:
                {
                alt306=4;
                }
                break;
            case 223:
                {
                alt306=5;
                }
                break;
            case 224:
                {
                alt306=6;
                }
                break;
            case 225:
                {
                alt306=7;
                }
                break;
            case 226:
                {
                alt306=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 306, 0, input);

                throw nvae;
            }

            switch (alt306) {
                case 1 :
                    // InternalKim.g:15150:3: kw= 'amount'
                    {
                    kw=(Token)match(input,219,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getAmountKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15156:3: kw= 'length'
                    {
                    kw=(Token)match(input,220,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getLengthKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:15162:3: kw= 'mass'
                    {
                    kw=(Token)match(input,221,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getMassKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:15168:3: kw= 'volume'
                    {
                    kw=(Token)match(input,222,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getVolumeKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:15174:3: kw= 'weight'
                    {
                    kw=(Token)match(input,223,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getWeightKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:15180:3: kw= 'money'
                    {
                    kw=(Token)match(input,224,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getMoneyKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:15186:3: kw= 'duration'
                    {
                    kw=(Token)match(input,225,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getDurationKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:15192:3: kw= 'area'
                    {
                    kw=(Token)match(input,226,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getAreaKeyword_7());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEXTENSIVE_PROPERTY"


    // $ANTLR start "entryRuleINTENSIVE_PROPERTY"
    // InternalKim.g:15201:1: entryRuleINTENSIVE_PROPERTY returns [String current=null] : iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF ;
    public final String entryRuleINTENSIVE_PROPERTY() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleINTENSIVE_PROPERTY = null;


        try {
            // InternalKim.g:15201:58: (iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF )
            // InternalKim.g:15202:2: iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getINTENSIVE_PROPERTYRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleINTENSIVE_PROPERTY=ruleINTENSIVE_PROPERTY();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleINTENSIVE_PROPERTY.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleINTENSIVE_PROPERTY"


    // $ANTLR start "ruleINTENSIVE_PROPERTY"
    // InternalKim.g:15208:1: ruleINTENSIVE_PROPERTY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' ) ;
    public final AntlrDatatypeRuleToken ruleINTENSIVE_PROPERTY() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:15214:2: ( (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' ) )
            // InternalKim.g:15215:2: (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' )
            {
            // InternalKim.g:15215:2: (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' )
            int alt307=13;
            switch ( input.LA(1) ) {
            case 227:
                {
                alt307=1;
                }
                break;
            case 228:
                {
                alt307=2;
                }
                break;
            case 229:
                {
                alt307=3;
                }
                break;
            case 230:
                {
                alt307=4;
                }
                break;
            case 231:
                {
                alt307=5;
                }
                break;
            case 232:
                {
                alt307=6;
                }
                break;
            case 233:
                {
                alt307=7;
                }
                break;
            case 234:
                {
                alt307=8;
                }
                break;
            case 235:
                {
                alt307=9;
                }
                break;
            case 236:
                {
                alt307=10;
                }
                break;
            case 237:
                {
                alt307=11;
                }
                break;
            case 238:
                {
                alt307=12;
                }
                break;
            case 239:
                {
                alt307=13;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 307, 0, input);

                throw nvae;
            }

            switch (alt307) {
                case 1 :
                    // InternalKim.g:15216:3: kw= 'acceleration'
                    {
                    kw=(Token)match(input,227,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getAccelerationKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15222:3: kw= 'energy'
                    {
                    kw=(Token)match(input,228,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getEnergyKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:15228:3: kw= 'entropy'
                    {
                    kw=(Token)match(input,229,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getEntropyKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:15234:3: kw= 'priority'
                    {
                    kw=(Token)match(input,230,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getPriorityKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:15240:3: kw= 'electric-potential'
                    {
                    kw=(Token)match(input,231,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getElectricPotentialKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:15246:3: kw= 'charge'
                    {
                    kw=(Token)match(input,232,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getChargeKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:15252:3: kw= 'resistance'
                    {
                    kw=(Token)match(input,233,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getResistanceKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:15258:3: kw= 'resistivity'
                    {
                    kw=(Token)match(input,234,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getResistivityKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:15264:3: kw= 'pressure'
                    {
                    kw=(Token)match(input,235,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getPressureKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:15270:3: kw= 'angle'
                    {
                    kw=(Token)match(input,236,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getAngleKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalKim.g:15276:3: kw= 'velocity'
                    {
                    kw=(Token)match(input,237,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getVelocityKeyword_10());
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalKim.g:15282:3: kw= 'temperature'
                    {
                    kw=(Token)match(input,238,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getTemperatureKeyword_11());
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalKim.g:15288:3: kw= 'viscosity'
                    {
                    kw=(Token)match(input,239,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getViscosityKeyword_12());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleINTENSIVE_PROPERTY"


    // $ANTLR start "entryRuleAGENT_TYPE"
    // InternalKim.g:15297:1: entryRuleAGENT_TYPE returns [String current=null] : iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF ;
    public final String entryRuleAGENT_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAGENT_TYPE = null;


        try {
            // InternalKim.g:15297:50: (iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF )
            // InternalKim.g:15298:2: iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAGENT_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAGENT_TYPE=ruleAGENT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAGENT_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAGENT_TYPE"


    // $ANTLR start "ruleAGENT_TYPE"
    // InternalKim.g:15304:1: ruleAGENT_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' ) ;
    public final AntlrDatatypeRuleToken ruleAGENT_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:15310:2: ( (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' ) )
            // InternalKim.g:15311:2: (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' )
            {
            // InternalKim.g:15311:2: (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' )
            int alt308=4;
            switch ( input.LA(1) ) {
            case 240:
                {
                alt308=1;
                }
                break;
            case 241:
                {
                alt308=2;
                }
                break;
            case 163:
                {
                alt308=3;
                }
                break;
            case 242:
                {
                alt308=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 308, 0, input);

                throw nvae;
            }

            switch (alt308) {
                case 1 :
                    // InternalKim.g:15312:3: kw= 'thing'
                    {
                    kw=(Token)match(input,240,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getThingKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15318:3: kw= 'process'
                    {
                    kw=(Token)match(input,241,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getProcessKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:15324:3: kw= 'agent'
                    {
                    kw=(Token)match(input,163,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getAgentKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:15330:3: kw= 'event'
                    {
                    kw=(Token)match(input,242,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getEventKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAGENT_TYPE"


    // $ANTLR start "entryRulePROPERTY_TYPE"
    // InternalKim.g:15339:1: entryRulePROPERTY_TYPE returns [String current=null] : iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF ;
    public final String entryRulePROPERTY_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePROPERTY_TYPE = null;


        try {
            // InternalKim.g:15339:53: (iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF )
            // InternalKim.g:15340:2: iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPROPERTY_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePROPERTY_TYPE=rulePROPERTY_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePROPERTY_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePROPERTY_TYPE"


    // $ANTLR start "rulePROPERTY_TYPE"
    // InternalKim.g:15346:1: rulePROPERTY_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'functional' | kw= 'structural' ) ;
    public final AntlrDatatypeRuleToken rulePROPERTY_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:15352:2: ( (kw= 'functional' | kw= 'structural' ) )
            // InternalKim.g:15353:2: (kw= 'functional' | kw= 'structural' )
            {
            // InternalKim.g:15353:2: (kw= 'functional' | kw= 'structural' )
            int alt309=2;
            int LA309_0 = input.LA(1);

            if ( (LA309_0==243) ) {
                alt309=1;
            }
            else if ( (LA309_0==244) ) {
                alt309=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 309, 0, input);

                throw nvae;
            }
            switch (alt309) {
                case 1 :
                    // InternalKim.g:15354:3: kw= 'functional'
                    {
                    kw=(Token)match(input,243,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPROPERTY_TYPEAccess().getFunctionalKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15360:3: kw= 'structural'
                    {
                    kw=(Token)match(input,244,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPROPERTY_TYPEAccess().getStructuralKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePROPERTY_TYPE"


    // $ANTLR start "entryRuleSimpleObservableSemantics"
    // InternalKim.g:15369:1: entryRuleSimpleObservableSemantics returns [EObject current=null] : iv_ruleSimpleObservableSemantics= ruleSimpleObservableSemantics EOF ;
    public final EObject entryRuleSimpleObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:15373:2: (iv_ruleSimpleObservableSemantics= ruleSimpleObservableSemantics EOF )
            // InternalKim.g:15374:2: iv_ruleSimpleObservableSemantics= ruleSimpleObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleObservableSemantics=ruleSimpleObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleObservableSemantics"


    // $ANTLR start "ruleSimpleObservableSemantics"
    // InternalKim.g:15383:1: ruleSimpleObservableSemantics returns [EObject current=null] : ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleSimpleObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        Token lv_optional_15_0=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token lv_name_18_1=null;
        Token lv_name_18_2=null;
        EObject lv_declaration_0_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_4_0 = null;

        EObject lv_unit_6_0 = null;

        EObject lv_currency_7_0 = null;

        EObject lv_unit_9_0 = null;

        EObject lv_from_10_0 = null;

        EObject lv_to_12_0 = null;

        EObject lv_valueOperators_13_0 = null;

        EObject lv_valueOperators_14_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:15392:2: ( ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:15393:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:15393:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:15394:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:15394:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:15395:4: (lv_declaration_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:15395:4: (lv_declaration_0_0= ruleConceptDeclaration )
            // InternalKim.g:15396:5: lv_declaration_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_97);
            lv_declaration_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:15413:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:15414:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:15414:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            // InternalKim.g:15415:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());
            // InternalKim.g:15418:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) ) ) ) )* )
            // InternalKim.g:15419:6: ( ({...}? => ( ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) ) ) ) )*
            {
            // InternalKim.g:15419:6: ( ({...}? => ( ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) ) ) ) )*
            loop315:
            do {
                int alt315=7;
                alt315 = dfa315.predict(input);
                switch (alt315) {
            	case 1 :
            	    // InternalKim.g:15420:4: ({...}? => ( ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:15420:4: ({...}? => ( ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:15421:5: {...}? => ( ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:15421:122: ( ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:15422:6: ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:15425:9: ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:15425:10: {...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:15425:19: (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) )
            	    // InternalKim.g:15425:20: otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) )
            	    {
            	    otherlv_2=(Token)match(input,35,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_2, grammarAccess.getSimpleObservableSemanticsAccess().getAccordingKeyword_1_0_0());
            	      								
            	    }
            	    otherlv_3=(Token)match(input,36,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getSimpleObservableSemanticsAccess().getToKeyword_1_0_1());
            	      								
            	    }
            	    // InternalKim.g:15433:9: ( (lv_accordingTo_4_0= rulePropertyId ) )
            	    // InternalKim.g:15434:10: (lv_accordingTo_4_0= rulePropertyId )
            	    {
            	    // InternalKim.g:15434:10: (lv_accordingTo_4_0= rulePropertyId )
            	    // InternalKim.g:15435:11: lv_accordingTo_4_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_1_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_97);
            	    lv_accordingTo_4_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_4_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:15458:4: ({...}? => ( ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:15458:4: ({...}? => ( ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:15459:5: {...}? => ( ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:15459:122: ( ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:15460:6: ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:15463:9: ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:15463:10: {...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:15463:19: ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) )
            	    int alt311=2;
            	    int LA311_0 = input.LA(1);

            	    if ( (LA311_0==48) ) {
            	        alt311=1;
            	    }
            	    else if ( (LA311_0==113) ) {
            	        alt311=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 311, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt311) {
            	        case 1 :
            	            // InternalKim.g:15463:20: (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:15463:20: (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:15464:10: otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) )
            	            {
            	            otherlv_5=(Token)match(input,48,FOLLOW_98); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_5, grammarAccess.getSimpleObservableSemanticsAccess().getInKeyword_1_1_0_0());
            	              									
            	            }
            	            // InternalKim.g:15468:10: ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) )
            	            int alt310=2;
            	            int LA310_0 = input.LA(1);

            	            if ( (LA310_0==EOF||LA310_0==RULE_LOWERCASE_ID||(LA310_0>=RULE_CAMELCASE_ID && LA310_0<=RULE_INT)||LA310_0==RULE_BACKCASE_ID||LA310_0==25||LA310_0==35||LA310_0==38||LA310_0==40||LA310_0==48||LA310_0==55||(LA310_0>=76 && LA310_0<=88)||LA310_0==107||(LA310_0>=113 && LA310_0<=118)||(LA310_0>=246 && LA310_0<=247)||LA310_0==254) ) {
            	                alt310=1;
            	            }
            	            else if ( (LA310_0==RULE_UPPERCASE_ID) ) {
            	                int LA310_2 = input.LA(2);

            	                if ( (LA310_2==245) ) {
            	                    alt310=2;
            	                }
            	                else if ( (LA310_2==EOF||LA310_2==RULE_INT||LA310_2==25||LA310_2==35||LA310_2==40||LA310_2==48||LA310_2==55||(LA310_2>=76 && LA310_2<=88)||LA310_2==107||(LA310_2>=113 && LA310_2<=118)||(LA310_2>=246 && LA310_2<=247)||LA310_2==254) ) {
            	                    alt310=1;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 310, 2, input);

            	                    throw nvae;
            	                }
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 310, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt310) {
            	                case 1 :
            	                    // InternalKim.g:15469:11: ( (lv_unit_6_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:15469:11: ( (lv_unit_6_0= ruleUnit ) )
            	                    // InternalKim.g:15470:12: (lv_unit_6_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:15470:12: (lv_unit_6_0= ruleUnit )
            	                    // InternalKim.g:15471:13: lv_unit_6_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_1_1_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_97);
            	                    lv_unit_6_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_6_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:15489:11: ( (lv_currency_7_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:15489:11: ( (lv_currency_7_0= ruleCurrency ) )
            	                    // InternalKim.g:15490:12: (lv_currency_7_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:15490:12: (lv_currency_7_0= ruleCurrency )
            	                    // InternalKim.g:15491:13: lv_currency_7_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_1_1_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_97);
            	                    lv_currency_7_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_7_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:15511:9: (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:15511:9: (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) )
            	            // InternalKim.g:15512:10: otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) )
            	            {
            	            otherlv_8=(Token)match(input,113,FOLLOW_98); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_8, grammarAccess.getSimpleObservableSemanticsAccess().getPerKeyword_1_1_1_0());
            	              									
            	            }
            	            // InternalKim.g:15516:10: ( (lv_unit_9_0= ruleUnit ) )
            	            // InternalKim.g:15517:11: (lv_unit_9_0= ruleUnit )
            	            {
            	            // InternalKim.g:15517:11: (lv_unit_9_0= ruleUnit )
            	            // InternalKim.g:15518:12: lv_unit_9_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_1_1_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_97);
            	            lv_unit_9_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_9_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:15542:4: ({...}? => ( ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:15542:4: ({...}? => ( ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:15543:5: {...}? => ( ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // InternalKim.g:15543:122: ( ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:15544:6: ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2);
            	    // InternalKim.g:15547:9: ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) )
            	    // InternalKim.g:15547:10: {...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:15547:19: ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) )
            	    // InternalKim.g:15547:20: ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:15547:20: ( (lv_from_10_0= ruleNumber ) )
            	    // InternalKim.g:15548:10: (lv_from_10_0= ruleNumber )
            	    {
            	    // InternalKim.g:15548:10: (lv_from_10_0= ruleNumber )
            	    // InternalKim.g:15549:11: lv_from_10_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getFromNumberParserRuleCall_1_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_from_10_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_10_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_11=(Token)match(input,36,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_11, grammarAccess.getSimpleObservableSemanticsAccess().getToKeyword_1_2_1());
            	      								
            	    }
            	    // InternalKim.g:15570:9: ( (lv_to_12_0= ruleNumber ) )
            	    // InternalKim.g:15571:10: (lv_to_12_0= ruleNumber )
            	    {
            	    // InternalKim.g:15571:10: (lv_to_12_0= ruleNumber )
            	    // InternalKim.g:15572:11: lv_to_12_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getToNumberParserRuleCall_1_2_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_97);
            	    lv_to_12_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_12_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:15595:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) )
            	    {
            	    // InternalKim.g:15595:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) )
            	    // InternalKim.g:15596:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // InternalKim.g:15596:122: ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) )
            	    // InternalKim.g:15597:6: ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3);
            	    // InternalKim.g:15600:9: ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) )
            	    // InternalKim.g:15600:10: {...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:15600:19: ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* )
            	    // InternalKim.g:15600:20: ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )*
            	    {
            	    // InternalKim.g:15600:20: ( (lv_valueOperators_13_0= ruleValueOperator ) )
            	    // InternalKim.g:15601:10: (lv_valueOperators_13_0= ruleValueOperator )
            	    {
            	    // InternalKim.g:15601:10: (lv_valueOperators_13_0= ruleValueOperator )
            	    // InternalKim.g:15602:11: lv_valueOperators_13_0= ruleValueOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_1_3_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_97);
            	    lv_valueOperators_13_0=ruleValueOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											add(
            	      												current,
            	      												"valueOperators",
            	      												lv_valueOperators_13_0,
            	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:15619:9: ( (lv_valueOperators_14_0= ruleValueOperator ) )*
            	    loop312:
            	    do {
            	        int alt312=2;
            	        alt312 = dfa312.predict(input);
            	        switch (alt312) {
            	    	case 1 :
            	    	    // InternalKim.g:15620:10: (lv_valueOperators_14_0= ruleValueOperator )
            	    	    {
            	    	    // InternalKim.g:15620:10: (lv_valueOperators_14_0= ruleValueOperator )
            	    	    // InternalKim.g:15621:11: lv_valueOperators_14_0= ruleValueOperator
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_1_3_1_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_97);
            	    	    lv_valueOperators_14_0=ruleValueOperator();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"valueOperators",
            	    	      												lv_valueOperators_14_0,
            	    	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop312;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:15644:4: ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) )
            	    {
            	    // InternalKim.g:15644:4: ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) )
            	    // InternalKim.g:15645:5: {...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // InternalKim.g:15645:122: ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) )
            	    // InternalKim.g:15646:6: ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4);
            	    // InternalKim.g:15649:9: ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) )
            	    // InternalKim.g:15649:10: {...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:15649:19: ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' )
            	    int alt313=2;
            	    int LA313_0 = input.LA(1);

            	    if ( (LA313_0==114) ) {
            	        alt313=1;
            	    }
            	    else if ( (LA313_0==115) ) {
            	        alt313=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 313, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt313) {
            	        case 1 :
            	            // InternalKim.g:15649:20: ( (lv_optional_15_0= 'optional' ) )
            	            {
            	            // InternalKim.g:15649:20: ( (lv_optional_15_0= 'optional' ) )
            	            // InternalKim.g:15650:10: (lv_optional_15_0= 'optional' )
            	            {
            	            // InternalKim.g:15650:10: (lv_optional_15_0= 'optional' )
            	            // InternalKim.g:15651:11: lv_optional_15_0= 'optional'
            	            {
            	            lv_optional_15_0=(Token)match(input,114,FOLLOW_97); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_optional_15_0, grammarAccess.getSimpleObservableSemanticsAccess().getOptionalOptionalKeyword_1_4_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getSimpleObservableSemanticsRule());
            	              											}
            	              											setWithLastConsumed(current, "optional", true, "optional");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:15664:9: otherlv_16= 'required'
            	            {
            	            otherlv_16=(Token)match(input,115,FOLLOW_97); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_16, grammarAccess.getSimpleObservableSemanticsAccess().getRequiredKeyword_1_4_1());
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:15674:4: ({...}? => ( ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:15674:4: ({...}? => ( ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) ) ) )
            	    // InternalKim.g:15675:5: {...}? => ( ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // InternalKim.g:15675:122: ( ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) ) )
            	    // InternalKim.g:15676:6: ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5);
            	    // InternalKim.g:15679:9: ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:15679:10: {...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:15679:19: (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) )
            	    // InternalKim.g:15679:20: otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) )
            	    {
            	    otherlv_17=(Token)match(input,116,FOLLOW_45); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_17, grammarAccess.getSimpleObservableSemanticsAccess().getNamedKeyword_1_5_0());
            	      								
            	    }
            	    // InternalKim.g:15683:9: ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) )
            	    // InternalKim.g:15684:10: ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) )
            	    {
            	    // InternalKim.g:15684:10: ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) )
            	    // InternalKim.g:15685:11: (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING )
            	    {
            	    // InternalKim.g:15685:11: (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING )
            	    int alt314=2;
            	    int LA314_0 = input.LA(1);

            	    if ( (LA314_0==RULE_LOWERCASE_ID) ) {
            	        alt314=1;
            	    }
            	    else if ( (LA314_0==RULE_STRING) ) {
            	        alt314=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 314, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt314) {
            	        case 1 :
            	            // InternalKim.g:15686:12: lv_name_18_1= RULE_LOWERCASE_ID
            	            {
            	            lv_name_18_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_97); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_18_1, grammarAccess.getSimpleObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_1_5_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getSimpleObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_18_1,
            	              													"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              											
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:15701:12: lv_name_18_2= RULE_STRING
            	            {
            	            lv_name_18_2=(Token)match(input,RULE_STRING,FOLLOW_97); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_18_2, grammarAccess.getSimpleObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_1_5_1_0_1());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getSimpleObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_18_2,
            	              													"org.eclipse.xtext.common.Terminals.STRING");
            	              											
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop315;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleSimpleObservableSemantics"


    // $ANTLR start "entryRuleDependencyObservableSemantics"
    // InternalKim.g:15738:1: entryRuleDependencyObservableSemantics returns [EObject current=null] : iv_ruleDependencyObservableSemantics= ruleDependencyObservableSemantics EOF ;
    public final EObject entryRuleDependencyObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDependencyObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:15742:2: (iv_ruleDependencyObservableSemantics= ruleDependencyObservableSemantics EOF )
            // InternalKim.g:15743:2: iv_ruleDependencyObservableSemantics= ruleDependencyObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDependencyObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDependencyObservableSemantics=ruleDependencyObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDependencyObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleDependencyObservableSemantics"


    // $ANTLR start "ruleDependencyObservableSemantics"
    // InternalKim.g:15752:1: ruleDependencyObservableSemantics returns [EObject current=null] : ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleDependencyObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_generic_2_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        Token otherlv_14=null;
        Token lv_optional_18_0=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token lv_name_21_1=null;
        Token lv_name_21_2=null;
        EObject lv_value_0_0 = null;

        EObject lv_declaration_3_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;

        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;

        EObject lv_from_13_0 = null;

        EObject lv_to_15_0 = null;

        EObject lv_valueOperators_16_0 = null;

        EObject lv_valueOperators_17_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:15761:2: ( ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:15762:2: ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:15762:2: ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:15763:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:15763:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )?
            int alt316=2;
            alt316 = dfa316.predict(input);
            switch (alt316) {
                case 1 :
                    // InternalKim.g:15764:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as'
                    {
                    // InternalKim.g:15764:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) )
                    // InternalKim.g:15765:5: (lv_value_0_0= ruleLiteralValueWithConcept )
                    {
                    // InternalKim.g:15765:5: (lv_value_0_0= ruleLiteralValueWithConcept )
                    // InternalKim.g:15766:6: lv_value_0_0= ruleLiteralValueWithConcept
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_value_0_0=ruleLiteralValueWithConcept();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_0_0,
                      							"org.integratedmodelling.kim.Kim.LiteralValueWithConcept");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,25,FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDependencyObservableSemanticsAccess().getAsKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:15788:3: ( (lv_generic_2_0= 'any' ) )?
            int alt317=2;
            int LA317_0 = input.LA(1);

            if ( (LA317_0==112) ) {
                alt317=1;
            }
            switch (alt317) {
                case 1 :
                    // InternalKim.g:15789:4: (lv_generic_2_0= 'any' )
                    {
                    // InternalKim.g:15789:4: (lv_generic_2_0= 'any' )
                    // InternalKim.g:15790:5: lv_generic_2_0= 'any'
                    {
                    lv_generic_2_0=(Token)match(input,112,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generic_2_0, grammarAccess.getDependencyObservableSemanticsAccess().getGenericAnyKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
                      					}
                      					setWithLastConsumed(current, "generic", true, "any");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:15802:3: ( (lv_declaration_3_0= ruleConceptDeclaration ) )
            // InternalKim.g:15803:4: (lv_declaration_3_0= ruleConceptDeclaration )
            {
            // InternalKim.g:15803:4: (lv_declaration_3_0= ruleConceptDeclaration )
            // InternalKim.g:15804:5: lv_declaration_3_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_97);
            lv_declaration_3_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_3_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:15821:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:15822:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:15822:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            // InternalKim.g:15823:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());
            // InternalKim.g:15826:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* )
            // InternalKim.g:15827:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )*
            {
            // InternalKim.g:15827:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )*
            loop323:
            do {
                int alt323=7;
                alt323 = dfa323.predict(input);
                switch (alt323) {
            	case 1 :
            	    // InternalKim.g:15828:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:15828:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:15829:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:15829:126: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:15830:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:15833:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:15833:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:15833:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    // InternalKim.g:15833:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    {
            	    otherlv_5=(Token)match(input,35,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getDependencyObservableSemanticsAccess().getAccordingKeyword_3_0_0());
            	      								
            	    }
            	    otherlv_6=(Token)match(input,36,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getDependencyObservableSemanticsAccess().getToKeyword_3_0_1());
            	      								
            	    }
            	    // InternalKim.g:15841:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    // InternalKim.g:15842:10: (lv_accordingTo_7_0= rulePropertyId )
            	    {
            	    // InternalKim.g:15842:10: (lv_accordingTo_7_0= rulePropertyId )
            	    // InternalKim.g:15843:11: lv_accordingTo_7_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_97);
            	    lv_accordingTo_7_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_7_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:15866:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:15866:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:15867:5: {...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:15867:126: ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:15868:6: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:15871:9: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:15871:10: {...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:15871:19: ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    int alt319=2;
            	    int LA319_0 = input.LA(1);

            	    if ( (LA319_0==48) ) {
            	        alt319=1;
            	    }
            	    else if ( (LA319_0==113) ) {
            	        alt319=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 319, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt319) {
            	        case 1 :
            	            // InternalKim.g:15871:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:15871:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:15872:10: otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            {
            	            otherlv_8=(Token)match(input,48,FOLLOW_98); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_8, grammarAccess.getDependencyObservableSemanticsAccess().getInKeyword_3_1_0_0());
            	              									
            	            }
            	            // InternalKim.g:15876:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            int alt318=2;
            	            int LA318_0 = input.LA(1);

            	            if ( (LA318_0==EOF||LA318_0==RULE_LOWERCASE_ID||(LA318_0>=RULE_CAMELCASE_ID && LA318_0<=RULE_INT)||LA318_0==RULE_BACKCASE_ID||LA318_0==20||LA318_0==27||(LA318_0>=31 && LA318_0<=33)||LA318_0==35||(LA318_0>=37 && LA318_0<=38)||LA318_0==40||LA318_0==42||LA318_0==48||(LA318_0>=54 && LA318_0<=56)||(LA318_0>=62 && LA318_0<=67)||(LA318_0>=76 && LA318_0<=88)||LA318_0==107||(LA318_0>=113 && LA318_0<=118)||(LA318_0>=246 && LA318_0<=247)||LA318_0==254) ) {
            	                alt318=1;
            	            }
            	            else if ( (LA318_0==RULE_UPPERCASE_ID) ) {
            	                int LA318_2 = input.LA(2);

            	                if ( (LA318_2==EOF||LA318_2==RULE_INT||LA318_2==20||LA318_2==27||(LA318_2>=31 && LA318_2<=33)||LA318_2==35||LA318_2==37||LA318_2==40||LA318_2==42||LA318_2==48||(LA318_2>=54 && LA318_2<=56)||(LA318_2>=62 && LA318_2<=67)||(LA318_2>=76 && LA318_2<=88)||LA318_2==107||(LA318_2>=113 && LA318_2<=118)||(LA318_2>=246 && LA318_2<=247)||LA318_2==254) ) {
            	                    alt318=1;
            	                }
            	                else if ( (LA318_2==245) ) {
            	                    alt318=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 318, 2, input);

            	                    throw nvae;
            	                }
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 318, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt318) {
            	                case 1 :
            	                    // InternalKim.g:15877:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:15877:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    // InternalKim.g:15878:12: (lv_unit_9_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:15878:12: (lv_unit_9_0= ruleUnit )
            	                    // InternalKim.g:15879:13: lv_unit_9_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_97);
            	                    lv_unit_9_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_9_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:15897:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:15897:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    // InternalKim.g:15898:12: (lv_currency_10_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:15898:12: (lv_currency_10_0= ruleCurrency )
            	                    // InternalKim.g:15899:13: lv_currency_10_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_97);
            	                    lv_currency_10_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_10_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:15919:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:15919:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
            	            // InternalKim.g:15920:10: otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) )
            	            {
            	            otherlv_11=(Token)match(input,113,FOLLOW_98); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_11, grammarAccess.getDependencyObservableSemanticsAccess().getPerKeyword_3_1_1_0());
            	              									
            	            }
            	            // InternalKim.g:15924:10: ( (lv_unit_12_0= ruleUnit ) )
            	            // InternalKim.g:15925:11: (lv_unit_12_0= ruleUnit )
            	            {
            	            // InternalKim.g:15925:11: (lv_unit_12_0= ruleUnit )
            	            // InternalKim.g:15926:12: lv_unit_12_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_97);
            	            lv_unit_12_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_12_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:15950:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:15950:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:15951:5: {...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:15951:126: ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:15952:6: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:15955:9: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
            	    // InternalKim.g:15955:10: {...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:15955:19: ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
            	    // InternalKim.g:15955:20: ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:15955:20: ( (lv_from_13_0= ruleNumber ) )
            	    // InternalKim.g:15956:10: (lv_from_13_0= ruleNumber )
            	    {
            	    // InternalKim.g:15956:10: (lv_from_13_0= ruleNumber )
            	    // InternalKim.g:15957:11: lv_from_13_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getFromNumberParserRuleCall_3_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_from_13_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_13_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_14=(Token)match(input,36,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_14, grammarAccess.getDependencyObservableSemanticsAccess().getToKeyword_3_2_1());
            	      								
            	    }
            	    // InternalKim.g:15978:9: ( (lv_to_15_0= ruleNumber ) )
            	    // InternalKim.g:15979:10: (lv_to_15_0= ruleNumber )
            	    {
            	    // InternalKim.g:15979:10: (lv_to_15_0= ruleNumber )
            	    // InternalKim.g:15980:11: lv_to_15_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getToNumberParserRuleCall_3_2_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_97);
            	    lv_to_15_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_15_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:16003:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
            	    {
            	    // InternalKim.g:16003:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
            	    // InternalKim.g:16004:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:16004:126: ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
            	    // InternalKim.g:16005:6: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:16008:9: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
            	    // InternalKim.g:16008:10: {...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16008:19: ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
            	    // InternalKim.g:16008:20: ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )*
            	    {
            	    // InternalKim.g:16008:20: ( (lv_valueOperators_16_0= ruleValueOperator ) )
            	    // InternalKim.g:16009:10: (lv_valueOperators_16_0= ruleValueOperator )
            	    {
            	    // InternalKim.g:16009:10: (lv_valueOperators_16_0= ruleValueOperator )
            	    // InternalKim.g:16010:11: lv_valueOperators_16_0= ruleValueOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_97);
            	    lv_valueOperators_16_0=ruleValueOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	      											}
            	      											add(
            	      												current,
            	      												"valueOperators",
            	      												lv_valueOperators_16_0,
            	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:16027:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*
            	    loop320:
            	    do {
            	        int alt320=2;
            	        alt320 = dfa320.predict(input);
            	        switch (alt320) {
            	    	case 1 :
            	    	    // InternalKim.g:16028:10: (lv_valueOperators_17_0= ruleValueOperator )
            	    	    {
            	    	    // InternalKim.g:16028:10: (lv_valueOperators_17_0= ruleValueOperator )
            	    	    // InternalKim.g:16029:11: lv_valueOperators_17_0= ruleValueOperator
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_97);
            	    	    lv_valueOperators_17_0=ruleValueOperator();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"valueOperators",
            	    	      												lv_valueOperators_17_0,
            	    	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop320;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:16052:4: ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) )
            	    {
            	    // InternalKim.g:16052:4: ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) )
            	    // InternalKim.g:16053:5: {...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalKim.g:16053:126: ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) )
            	    // InternalKim.g:16054:6: ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4);
            	    // InternalKim.g:16057:9: ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) )
            	    // InternalKim.g:16057:10: {...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16057:19: ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' )
            	    int alt321=2;
            	    int LA321_0 = input.LA(1);

            	    if ( (LA321_0==114) ) {
            	        alt321=1;
            	    }
            	    else if ( (LA321_0==115) ) {
            	        alt321=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 321, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt321) {
            	        case 1 :
            	            // InternalKim.g:16057:20: ( (lv_optional_18_0= 'optional' ) )
            	            {
            	            // InternalKim.g:16057:20: ( (lv_optional_18_0= 'optional' ) )
            	            // InternalKim.g:16058:10: (lv_optional_18_0= 'optional' )
            	            {
            	            // InternalKim.g:16058:10: (lv_optional_18_0= 'optional' )
            	            // InternalKim.g:16059:11: lv_optional_18_0= 'optional'
            	            {
            	            lv_optional_18_0=(Token)match(input,114,FOLLOW_97); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_optional_18_0, grammarAccess.getDependencyObservableSemanticsAccess().getOptionalOptionalKeyword_3_4_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
            	              											}
            	              											setWithLastConsumed(current, "optional", true, "optional");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:16072:9: otherlv_19= 'required'
            	            {
            	            otherlv_19=(Token)match(input,115,FOLLOW_97); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_19, grammarAccess.getDependencyObservableSemanticsAccess().getRequiredKeyword_3_4_1());
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:16082:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:16082:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
            	    // InternalKim.g:16083:5: {...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalKim.g:16083:126: ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
            	    // InternalKim.g:16084:6: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5);
            	    // InternalKim.g:16087:9: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:16087:10: {...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16087:19: (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
            	    // InternalKim.g:16087:20: otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
            	    {
            	    otherlv_20=(Token)match(input,116,FOLLOW_45); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_20, grammarAccess.getDependencyObservableSemanticsAccess().getNamedKeyword_3_5_0());
            	      								
            	    }
            	    // InternalKim.g:16091:9: ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
            	    // InternalKim.g:16092:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
            	    {
            	    // InternalKim.g:16092:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
            	    // InternalKim.g:16093:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
            	    {
            	    // InternalKim.g:16093:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
            	    int alt322=2;
            	    int LA322_0 = input.LA(1);

            	    if ( (LA322_0==RULE_LOWERCASE_ID) ) {
            	        alt322=1;
            	    }
            	    else if ( (LA322_0==RULE_STRING) ) {
            	        alt322=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 322, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt322) {
            	        case 1 :
            	            // InternalKim.g:16094:12: lv_name_21_1= RULE_LOWERCASE_ID
            	            {
            	            lv_name_21_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_97); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_21_1, grammarAccess.getDependencyObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_3_5_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_21_1,
            	              													"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              											
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:16109:12: lv_name_21_2= RULE_STRING
            	            {
            	            lv_name_21_2=(Token)match(input,RULE_STRING,FOLLOW_97); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_21_2, grammarAccess.getDependencyObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_3_5_1_0_1());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_21_2,
            	              													"org.eclipse.xtext.common.Terminals.STRING");
            	              											
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop323;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleDependencyObservableSemantics"


    // $ANTLR start "entryRuleAlternativeDependencyObservableSemantics"
    // InternalKim.g:16146:1: entryRuleAlternativeDependencyObservableSemantics returns [EObject current=null] : iv_ruleAlternativeDependencyObservableSemantics= ruleAlternativeDependencyObservableSemantics EOF ;
    public final EObject entryRuleAlternativeDependencyObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAlternativeDependencyObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:16150:2: (iv_ruleAlternativeDependencyObservableSemantics= ruleAlternativeDependencyObservableSemantics EOF )
            // InternalKim.g:16151:2: iv_ruleAlternativeDependencyObservableSemantics= ruleAlternativeDependencyObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAlternativeDependencyObservableSemantics=ruleAlternativeDependencyObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAlternativeDependencyObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleAlternativeDependencyObservableSemantics"


    // $ANTLR start "ruleAlternativeDependencyObservableSemantics"
    // InternalKim.g:16160:1: ruleAlternativeDependencyObservableSemantics returns [EObject current=null] : ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )? ) ;
    public final EObject ruleAlternativeDependencyObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_generic_2_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        Token otherlv_14=null;
        Token otherlv_18=null;
        Token lv_condition_19_0=null;
        EObject lv_value_0_0 = null;

        EObject lv_declaration_3_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;

        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;

        EObject lv_from_13_0 = null;

        EObject lv_to_15_0 = null;

        EObject lv_valueOperators_16_0 = null;

        EObject lv_valueOperators_17_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:16169:2: ( ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )? ) )
            // InternalKim.g:16170:2: ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )? )
            {
            // InternalKim.g:16170:2: ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )? )
            // InternalKim.g:16171:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )?
            {
            // InternalKim.g:16171:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )?
            int alt324=2;
            alt324 = dfa324.predict(input);
            switch (alt324) {
                case 1 :
                    // InternalKim.g:16172:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as'
                    {
                    // InternalKim.g:16172:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) )
                    // InternalKim.g:16173:5: (lv_value_0_0= ruleLiteralValueWithConcept )
                    {
                    // InternalKim.g:16173:5: (lv_value_0_0= ruleLiteralValueWithConcept )
                    // InternalKim.g:16174:6: lv_value_0_0= ruleLiteralValueWithConcept
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_value_0_0=ruleLiteralValueWithConcept();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_0_0,
                      							"org.integratedmodelling.kim.Kim.LiteralValueWithConcept");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,25,FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getAsKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:16196:3: ( (lv_generic_2_0= 'any' ) )?
            int alt325=2;
            int LA325_0 = input.LA(1);

            if ( (LA325_0==112) ) {
                alt325=1;
            }
            switch (alt325) {
                case 1 :
                    // InternalKim.g:16197:4: (lv_generic_2_0= 'any' )
                    {
                    // InternalKim.g:16197:4: (lv_generic_2_0= 'any' )
                    // InternalKim.g:16198:5: lv_generic_2_0= 'any'
                    {
                    lv_generic_2_0=(Token)match(input,112,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generic_2_0, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getGenericAnyKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
                      					}
                      					setWithLastConsumed(current, "generic", true, "any");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:16210:3: ( (lv_declaration_3_0= ruleConceptDeclaration ) )
            // InternalKim.g:16211:4: (lv_declaration_3_0= ruleConceptDeclaration )
            {
            // InternalKim.g:16211:4: (lv_declaration_3_0= ruleConceptDeclaration )
            // InternalKim.g:16212:5: lv_declaration_3_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_166);
            lv_declaration_3_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_3_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:16229:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) )
            // InternalKim.g:16230:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) )
            {
            // InternalKim.g:16230:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) )
            // InternalKim.g:16231:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());
            // InternalKim.g:16234:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* )
            // InternalKim.g:16235:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )*
            {
            // InternalKim.g:16235:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )*
            loop329:
            do {
                int alt329=5;
                alt329 = dfa329.predict(input);
                switch (alt329) {
            	case 1 :
            	    // InternalKim.g:16236:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:16236:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:16237:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:16237:137: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:16238:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:16241:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:16241:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16241:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    // InternalKim.g:16241:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    {
            	    otherlv_5=(Token)match(input,35,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getAccordingKeyword_3_0_0());
            	      								
            	    }
            	    otherlv_6=(Token)match(input,36,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getToKeyword_3_0_1());
            	      								
            	    }
            	    // InternalKim.g:16249:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    // InternalKim.g:16250:10: (lv_accordingTo_7_0= rulePropertyId )
            	    {
            	    // InternalKim.g:16250:10: (lv_accordingTo_7_0= rulePropertyId )
            	    // InternalKim.g:16251:11: lv_accordingTo_7_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_166);
            	    lv_accordingTo_7_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_7_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:16274:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:16274:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:16275:5: {...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:16275:137: ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:16276:6: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:16279:9: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:16279:10: {...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16279:19: ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    int alt327=2;
            	    int LA327_0 = input.LA(1);

            	    if ( (LA327_0==48) ) {
            	        alt327=1;
            	    }
            	    else if ( (LA327_0==113) ) {
            	        alt327=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 327, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt327) {
            	        case 1 :
            	            // InternalKim.g:16279:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:16279:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:16280:10: otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            {
            	            otherlv_8=(Token)match(input,48,FOLLOW_167); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_8, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getInKeyword_3_1_0_0());
            	              									
            	            }
            	            // InternalKim.g:16284:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            int alt326=2;
            	            int LA326_0 = input.LA(1);

            	            if ( (LA326_0==EOF||LA326_0==RULE_LOWERCASE_ID||(LA326_0>=RULE_CAMELCASE_ID && LA326_0<=RULE_INT)||LA326_0==RULE_BACKCASE_ID||LA326_0==27||LA326_0==35||LA326_0==38||(LA326_0>=40 && LA326_0<=41)||LA326_0==44||LA326_0==48||LA326_0==55||(LA326_0>=76 && LA326_0<=88)||LA326_0==107||LA326_0==113||(LA326_0>=117 && LA326_0<=118)||(LA326_0>=246 && LA326_0<=247)||LA326_0==254) ) {
            	                alt326=1;
            	            }
            	            else if ( (LA326_0==RULE_UPPERCASE_ID) ) {
            	                int LA326_2 = input.LA(2);

            	                if ( (LA326_2==EOF||LA326_2==RULE_INT||LA326_2==27||LA326_2==35||(LA326_2>=40 && LA326_2<=41)||LA326_2==44||LA326_2==48||LA326_2==55||(LA326_2>=76 && LA326_2<=88)||LA326_2==107||LA326_2==113||(LA326_2>=117 && LA326_2<=118)||(LA326_2>=246 && LA326_2<=247)||LA326_2==254) ) {
            	                    alt326=1;
            	                }
            	                else if ( (LA326_2==245) ) {
            	                    alt326=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 326, 2, input);

            	                    throw nvae;
            	                }
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 326, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt326) {
            	                case 1 :
            	                    // InternalKim.g:16285:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:16285:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    // InternalKim.g:16286:12: (lv_unit_9_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:16286:12: (lv_unit_9_0= ruleUnit )
            	                    // InternalKim.g:16287:13: lv_unit_9_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_166);
            	                    lv_unit_9_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_9_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:16305:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:16305:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    // InternalKim.g:16306:12: (lv_currency_10_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:16306:12: (lv_currency_10_0= ruleCurrency )
            	                    // InternalKim.g:16307:13: lv_currency_10_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_166);
            	                    lv_currency_10_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_10_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:16327:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:16327:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
            	            // InternalKim.g:16328:10: otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) )
            	            {
            	            otherlv_11=(Token)match(input,113,FOLLOW_168); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_11, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getPerKeyword_3_1_1_0());
            	              									
            	            }
            	            // InternalKim.g:16332:10: ( (lv_unit_12_0= ruleUnit ) )
            	            // InternalKim.g:16333:11: (lv_unit_12_0= ruleUnit )
            	            {
            	            // InternalKim.g:16333:11: (lv_unit_12_0= ruleUnit )
            	            // InternalKim.g:16334:12: lv_unit_12_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_166);
            	            lv_unit_12_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_12_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:16358:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:16358:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:16359:5: {...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:16359:137: ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:16360:6: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:16363:9: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
            	    // InternalKim.g:16363:10: {...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16363:19: ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
            	    // InternalKim.g:16363:20: ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:16363:20: ( (lv_from_13_0= ruleNumber ) )
            	    // InternalKim.g:16364:10: (lv_from_13_0= ruleNumber )
            	    {
            	    // InternalKim.g:16364:10: (lv_from_13_0= ruleNumber )
            	    // InternalKim.g:16365:11: lv_from_13_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getFromNumberParserRuleCall_3_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_from_13_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_13_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_14=(Token)match(input,36,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_14, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getToKeyword_3_2_1());
            	      								
            	    }
            	    // InternalKim.g:16386:9: ( (lv_to_15_0= ruleNumber ) )
            	    // InternalKim.g:16387:10: (lv_to_15_0= ruleNumber )
            	    {
            	    // InternalKim.g:16387:10: (lv_to_15_0= ruleNumber )
            	    // InternalKim.g:16388:11: lv_to_15_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getToNumberParserRuleCall_3_2_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_166);
            	    lv_to_15_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_15_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:16411:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
            	    {
            	    // InternalKim.g:16411:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
            	    // InternalKim.g:16412:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:16412:137: ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
            	    // InternalKim.g:16413:6: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:16416:9: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
            	    // InternalKim.g:16416:10: {...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16416:19: ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
            	    // InternalKim.g:16416:20: ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )*
            	    {
            	    // InternalKim.g:16416:20: ( (lv_valueOperators_16_0= ruleValueOperator ) )
            	    // InternalKim.g:16417:10: (lv_valueOperators_16_0= ruleValueOperator )
            	    {
            	    // InternalKim.g:16417:10: (lv_valueOperators_16_0= ruleValueOperator )
            	    // InternalKim.g:16418:11: lv_valueOperators_16_0= ruleValueOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_166);
            	    lv_valueOperators_16_0=ruleValueOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	      											}
            	      											add(
            	      												current,
            	      												"valueOperators",
            	      												lv_valueOperators_16_0,
            	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:16435:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*
            	    loop328:
            	    do {
            	        int alt328=2;
            	        alt328 = dfa328.predict(input);
            	        switch (alt328) {
            	    	case 1 :
            	    	    // InternalKim.g:16436:10: (lv_valueOperators_17_0= ruleValueOperator )
            	    	    {
            	    	    // InternalKim.g:16436:10: (lv_valueOperators_17_0= ruleValueOperator )
            	    	    // InternalKim.g:16437:11: lv_valueOperators_17_0= ruleValueOperator
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_166);
            	    	    lv_valueOperators_17_0=ruleValueOperator();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"valueOperators",
            	    	      												lv_valueOperators_17_0,
            	    	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop328;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop329;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            }

            // InternalKim.g:16467:3: (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )?
            int alt330=2;
            int LA330_0 = input.LA(1);

            if ( (LA330_0==44) ) {
                alt330=1;
            }
            switch (alt330) {
                case 1 :
                    // InternalKim.g:16468:4: otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) )
                    {
                    otherlv_18=(Token)match(input,44,FOLLOW_169); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getIfKeyword_4_0());
                      			
                    }
                    // InternalKim.g:16472:4: ( (lv_condition_19_0= RULE_EXPR ) )
                    // InternalKim.g:16473:5: (lv_condition_19_0= RULE_EXPR )
                    {
                    // InternalKim.g:16473:5: (lv_condition_19_0= RULE_EXPR )
                    // InternalKim.g:16474:6: lv_condition_19_0= RULE_EXPR
                    {
                    lv_condition_19_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_condition_19_0, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getConditionEXPRTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"condition",
                      							lv_condition_19_0,
                      							"org.integratedmodelling.kim.Kim.EXPR");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleAlternativeDependencyObservableSemantics"


    // $ANTLR start "entryRuleNamedObservableSemantics"
    // InternalKim.g:16498:1: entryRuleNamedObservableSemantics returns [EObject current=null] : iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF ;
    public final EObject entryRuleNamedObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedObservableSemantics = null;


        try {
            // InternalKim.g:16498:65: (iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF )
            // InternalKim.g:16499:2: iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedObservableSemantics=ruleNamedObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamedObservableSemantics"


    // $ANTLR start "ruleNamedObservableSemantics"
    // InternalKim.g:16505:1: ruleNamedObservableSemantics returns [EObject current=null] : ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) ) ) ;
    public final EObject ruleNamedObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_1=null;
        Token lv_name_2_2=null;
        Token lv_name_2_3=null;
        EObject lv_declaration_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:16511:2: ( ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) ) ) )
            // InternalKim.g:16512:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) ) )
            {
            // InternalKim.g:16512:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) ) )
            // InternalKim.g:16513:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) )
            {
            // InternalKim.g:16513:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:16514:4: (lv_declaration_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:16514:4: (lv_declaration_0_0= ruleConceptDeclaration )
            // InternalKim.g:16515:5: lv_declaration_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_170);
            lv_declaration_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,116,FOLLOW_171); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNamedObservableSemanticsAccess().getNamedKeyword_1());
              		
            }
            // InternalKim.g:16536:3: ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) )
            // InternalKim.g:16537:4: ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) )
            {
            // InternalKim.g:16537:4: ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) )
            // InternalKim.g:16538:5: (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING )
            {
            // InternalKim.g:16538:5: (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING )
            int alt331=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                alt331=1;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt331=2;
                }
                break;
            case RULE_STRING:
                {
                alt331=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 331, 0, input);

                throw nvae;
            }

            switch (alt331) {
                case 1 :
                    // InternalKim.g:16539:6: lv_name_2_1= RULE_LOWERCASE_ID
                    {
                    lv_name_2_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_1, grammarAccess.getNamedObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_1,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:16554:6: lv_name_2_2= RULE_LOWERCASE_DASHID
                    {
                    lv_name_2_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_2, grammarAccess.getNamedObservableSemanticsAccess().getNameLOWERCASE_DASHIDTerminalRuleCall_2_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_2,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_DASHID");
                      					
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:16569:6: lv_name_2_3= RULE_STRING
                    {
                    lv_name_2_3=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_3, grammarAccess.getNamedObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_2_0_2());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_3,
                      							"org.eclipse.xtext.common.Terminals.STRING");
                      					
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedObservableSemantics"


    // $ANTLR start "entryRuleUnitElement"
    // InternalKim.g:16590:1: entryRuleUnitElement returns [EObject current=null] : iv_ruleUnitElement= ruleUnitElement EOF ;
    public final EObject entryRuleUnitElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnitElement = null;


        try {
            // InternalKim.g:16590:52: (iv_ruleUnitElement= ruleUnitElement EOF )
            // InternalKim.g:16591:2: iv_ruleUnitElement= ruleUnitElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnitElement=ruleUnitElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnitElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnitElement"


    // $ANTLR start "ruleUnitElement"
    // InternalKim.g:16597:1: ruleUnitElement returns [EObject current=null] : ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) ) | (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' ) ) ;
    public final EObject ruleUnitElement() throws RecognitionException {
        EObject current = null;

        Token lv_id_0_1=null;
        Token lv_id_0_2=null;
        Token lv_id_0_3=null;
        Token lv_id_0_4=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_unit_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:16603:2: ( ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) ) | (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' ) ) )
            // InternalKim.g:16604:2: ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) ) | (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' ) )
            {
            // InternalKim.g:16604:2: ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) ) | (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' ) )
            int alt333=2;
            int LA333_0 = input.LA(1);

            if ( ((LA333_0>=RULE_UPPERCASE_ID && LA333_0<=RULE_LOWERCASE_ID)||LA333_0==RULE_CAMELCASE_ID||LA333_0==RULE_BACKCASE_ID) ) {
                alt333=1;
            }
            else if ( (LA333_0==38) ) {
                alt333=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 333, 0, input);

                throw nvae;
            }
            switch (alt333) {
                case 1 :
                    // InternalKim.g:16605:3: ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) )
                    {
                    // InternalKim.g:16605:3: ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) )
                    // InternalKim.g:16606:4: ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) )
                    {
                    // InternalKim.g:16606:4: ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) )
                    // InternalKim.g:16607:5: (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID )
                    {
                    // InternalKim.g:16607:5: (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID )
                    int alt332=4;
                    switch ( input.LA(1) ) {
                    case RULE_CAMELCASE_ID:
                        {
                        alt332=1;
                        }
                        break;
                    case RULE_LOWERCASE_ID:
                        {
                        alt332=2;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt332=3;
                        }
                        break;
                    case RULE_BACKCASE_ID:
                        {
                        alt332=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 332, 0, input);

                        throw nvae;
                    }

                    switch (alt332) {
                        case 1 :
                            // InternalKim.g:16608:6: lv_id_0_1= RULE_CAMELCASE_ID
                            {
                            lv_id_0_1=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_1, grammarAccess.getUnitElementAccess().getIdCAMELCASE_IDTerminalRuleCall_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_1,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:16623:6: lv_id_0_2= RULE_LOWERCASE_ID
                            {
                            lv_id_0_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_2, grammarAccess.getUnitElementAccess().getIdLOWERCASE_IDTerminalRuleCall_0_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_2,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:16638:6: lv_id_0_3= RULE_UPPERCASE_ID
                            {
                            lv_id_0_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_3, grammarAccess.getUnitElementAccess().getIdUPPERCASE_IDTerminalRuleCall_0_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_3,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:16653:6: lv_id_0_4= RULE_BACKCASE_ID
                            {
                            lv_id_0_4=(Token)match(input,RULE_BACKCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_4, grammarAccess.getUnitElementAccess().getIdBACKCASE_IDTerminalRuleCall_0_0_3());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_4,
                              							"org.integratedmodelling.kim.Kim.BACKCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:16671:3: (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' )
                    {
                    // InternalKim.g:16671:3: (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' )
                    // InternalKim.g:16672:4: otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,38,FOLLOW_172); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getUnitElementAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    // InternalKim.g:16676:4: ( (lv_unit_2_0= ruleUnit ) )
                    // InternalKim.g:16677:5: (lv_unit_2_0= ruleUnit )
                    {
                    // InternalKim.g:16677:5: (lv_unit_2_0= ruleUnit )
                    // InternalKim.g:16678:6: lv_unit_2_0= ruleUnit
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnitElementAccess().getUnitUnitParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_93);
                    lv_unit_2_0=ruleUnit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnitElementRule());
                      						}
                      						set(
                      							current,
                      							"unit",
                      							lv_unit_2_0,
                      							"org.integratedmodelling.kim.Kim.Unit");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getUnitElementAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitElement"


    // $ANTLR start "entryRuleREL_OPERATOR"
    // InternalKim.g:16704:1: entryRuleREL_OPERATOR returns [EObject current=null] : iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF ;
    public final EObject entryRuleREL_OPERATOR() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleREL_OPERATOR = null;


        try {
            // InternalKim.g:16704:53: (iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF )
            // InternalKim.g:16705:2: iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getREL_OPERATORRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleREL_OPERATOR=ruleREL_OPERATOR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleREL_OPERATOR; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleREL_OPERATOR"


    // $ANTLR start "ruleREL_OPERATOR"
    // InternalKim.g:16711:1: ruleREL_OPERATOR returns [EObject current=null] : ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) ) ;
    public final EObject ruleREL_OPERATOR() throws RecognitionException {
        EObject current = null;

        Token lv_gt_0_0=null;
        Token lv_lt_1_0=null;
        Token lv_eq_2_0=null;
        Token lv_ne_3_0=null;
        Token lv_le_4_0=null;
        Token lv_ge_5_0=null;


        	enterRule();

        try {
            // InternalKim.g:16717:2: ( ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) ) )
            // InternalKim.g:16718:2: ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) )
            {
            // InternalKim.g:16718:2: ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) )
            int alt334=6;
            switch ( input.LA(1) ) {
            case 76:
                {
                alt334=1;
                }
                break;
            case 79:
                {
                alt334=2;
                }
                break;
            case 82:
                {
                alt334=3;
                }
                break;
            case 84:
                {
                alt334=4;
                }
                break;
            case 78:
                {
                alt334=5;
                }
                break;
            case 77:
                {
                alt334=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 334, 0, input);

                throw nvae;
            }

            switch (alt334) {
                case 1 :
                    // InternalKim.g:16719:3: ( (lv_gt_0_0= '>' ) )
                    {
                    // InternalKim.g:16719:3: ( (lv_gt_0_0= '>' ) )
                    // InternalKim.g:16720:4: (lv_gt_0_0= '>' )
                    {
                    // InternalKim.g:16720:4: (lv_gt_0_0= '>' )
                    // InternalKim.g:16721:5: lv_gt_0_0= '>'
                    {
                    lv_gt_0_0=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_gt_0_0, grammarAccess.getREL_OPERATORAccess().getGtGreaterThanSignKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "gt", true, ">");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:16734:3: ( (lv_lt_1_0= '<' ) )
                    {
                    // InternalKim.g:16734:3: ( (lv_lt_1_0= '<' ) )
                    // InternalKim.g:16735:4: (lv_lt_1_0= '<' )
                    {
                    // InternalKim.g:16735:4: (lv_lt_1_0= '<' )
                    // InternalKim.g:16736:5: lv_lt_1_0= '<'
                    {
                    lv_lt_1_0=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_lt_1_0, grammarAccess.getREL_OPERATORAccess().getLtLessThanSignKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "lt", true, "<");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:16749:3: ( (lv_eq_2_0= '=' ) )
                    {
                    // InternalKim.g:16749:3: ( (lv_eq_2_0= '=' ) )
                    // InternalKim.g:16750:4: (lv_eq_2_0= '=' )
                    {
                    // InternalKim.g:16750:4: (lv_eq_2_0= '=' )
                    // InternalKim.g:16751:5: lv_eq_2_0= '='
                    {
                    lv_eq_2_0=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_eq_2_0, grammarAccess.getREL_OPERATORAccess().getEqEqualsSignKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "eq", true, "=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:16764:3: ( (lv_ne_3_0= '!=' ) )
                    {
                    // InternalKim.g:16764:3: ( (lv_ne_3_0= '!=' ) )
                    // InternalKim.g:16765:4: (lv_ne_3_0= '!=' )
                    {
                    // InternalKim.g:16765:4: (lv_ne_3_0= '!=' )
                    // InternalKim.g:16766:5: lv_ne_3_0= '!='
                    {
                    lv_ne_3_0=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_ne_3_0, grammarAccess.getREL_OPERATORAccess().getNeExclamationMarkEqualsSignKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "ne", true, "!=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:16779:3: ( (lv_le_4_0= '<=' ) )
                    {
                    // InternalKim.g:16779:3: ( (lv_le_4_0= '<=' ) )
                    // InternalKim.g:16780:4: (lv_le_4_0= '<=' )
                    {
                    // InternalKim.g:16780:4: (lv_le_4_0= '<=' )
                    // InternalKim.g:16781:5: lv_le_4_0= '<='
                    {
                    lv_le_4_0=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_le_4_0, grammarAccess.getREL_OPERATORAccess().getLeLessThanSignEqualsSignKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "le", true, "<=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:16794:3: ( (lv_ge_5_0= '>=' ) )
                    {
                    // InternalKim.g:16794:3: ( (lv_ge_5_0= '>=' ) )
                    // InternalKim.g:16795:4: (lv_ge_5_0= '>=' )
                    {
                    // InternalKim.g:16795:4: (lv_ge_5_0= '>=' )
                    // InternalKim.g:16796:5: lv_ge_5_0= '>='
                    {
                    lv_ge_5_0=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_ge_5_0, grammarAccess.getREL_OPERATORAccess().getGeGreaterThanSignEqualsSignKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "ge", true, ">=");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleREL_OPERATOR"


    // $ANTLR start "entryRuleUnit"
    // InternalKim.g:16812:1: entryRuleUnit returns [EObject current=null] : iv_ruleUnit= ruleUnit EOF ;
    public final EObject entryRuleUnit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnit = null;


        try {
            // InternalKim.g:16812:45: (iv_ruleUnit= ruleUnit EOF )
            // InternalKim.g:16813:2: iv_ruleUnit= ruleUnit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnit=ruleUnit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnit"


    // $ANTLR start "ruleUnit"
    // InternalKim.g:16819:1: ruleUnit returns [EObject current=null] : ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* ) ;
    public final EObject ruleUnit() throws RecognitionException {
        EObject current = null;

        EObject lv_root_1_0 = null;

        Enumerator lv_connectors_2_0 = null;

        EObject lv_units_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:16825:2: ( ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* ) )
            // InternalKim.g:16826:2: ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* )
            {
            // InternalKim.g:16826:2: ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* )
            // InternalKim.g:16827:3: () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )*
            {
            // InternalKim.g:16827:3: ()
            // InternalKim.g:16828:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getUnitAccess().getUnitAction_0(),
              					current);
              			
            }

            }

            // InternalKim.g:16837:3: ( (lv_root_1_0= ruleUnitElement ) )?
            int alt335=2;
            alt335 = dfa335.predict(input);
            switch (alt335) {
                case 1 :
                    // InternalKim.g:16838:4: (lv_root_1_0= ruleUnitElement )
                    {
                    // InternalKim.g:16838:4: (lv_root_1_0= ruleUnitElement )
                    // InternalKim.g:16839:5: lv_root_1_0= ruleUnitElement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnitAccess().getRootUnitElementParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_173);
                    lv_root_1_0=ruleUnitElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUnitRule());
                      					}
                      					set(
                      						current,
                      						"root",
                      						lv_root_1_0,
                      						"org.integratedmodelling.kim.Kim.UnitElement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:16856:3: ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )*
            loop336:
            do {
                int alt336=2;
                int LA336_0 = input.LA(1);

                if ( (LA336_0==40||LA336_0==107||LA336_0==254) ) {
                    alt336=1;
                }


                switch (alt336) {
            	case 1 :
            	    // InternalKim.g:16857:4: ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) )
            	    {
            	    // InternalKim.g:16857:4: ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) )
            	    // InternalKim.g:16858:5: ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) )
            	    {
            	    // InternalKim.g:16864:5: ( (lv_connectors_2_0= ruleUnitOp ) )
            	    // InternalKim.g:16865:6: (lv_connectors_2_0= ruleUnitOp )
            	    {
            	    // InternalKim.g:16865:6: (lv_connectors_2_0= ruleUnitOp )
            	    // InternalKim.g:16866:7: lv_connectors_2_0= ruleUnitOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getUnitAccess().getConnectorsUnitOpEnumRuleCall_2_0_0_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_174);
            	    lv_connectors_2_0=ruleUnitOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getUnitRule());
            	      							}
            	      							add(
            	      								current,
            	      								"connectors",
            	      								lv_connectors_2_0,
            	      								"org.integratedmodelling.kim.Kim.UnitOp");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }

            	    // InternalKim.g:16884:4: ( (lv_units_3_0= ruleUnitElement ) )
            	    // InternalKim.g:16885:5: (lv_units_3_0= ruleUnitElement )
            	    {
            	    // InternalKim.g:16885:5: (lv_units_3_0= ruleUnitElement )
            	    // InternalKim.g:16886:6: lv_units_3_0= ruleUnitElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getUnitAccess().getUnitsUnitElementParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_173);
            	    lv_units_3_0=ruleUnitElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getUnitRule());
            	      						}
            	      						add(
            	      							current,
            	      							"units",
            	      							lv_units_3_0,
            	      							"org.integratedmodelling.kim.Kim.UnitElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop336;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnit"


    // $ANTLR start "entryRuleCurrency"
    // InternalKim.g:16908:1: entryRuleCurrency returns [EObject current=null] : iv_ruleCurrency= ruleCurrency EOF ;
    public final EObject entryRuleCurrency() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCurrency = null;


        try {
            // InternalKim.g:16908:49: (iv_ruleCurrency= ruleCurrency EOF )
            // InternalKim.g:16909:2: iv_ruleCurrency= ruleCurrency EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCurrencyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCurrency=ruleCurrency();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCurrency; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCurrency"


    // $ANTLR start "ruleCurrency"
    // InternalKim.g:16915:1: ruleCurrency returns [EObject current=null] : ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_3_0= ruleUnitOp ) ) ) ( (lv_units_4_0= ruleUnitElement ) ) )* ) ;
    public final EObject ruleCurrency() throws RecognitionException {
        EObject current = null;

        Token lv_id_0_0=null;
        Token otherlv_1=null;
        Token lv_year_2_0=null;
        Enumerator lv_connectors_3_0 = null;

        EObject lv_units_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:16921:2: ( ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_3_0= ruleUnitOp ) ) ) ( (lv_units_4_0= ruleUnitElement ) ) )* ) )
            // InternalKim.g:16922:2: ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_3_0= ruleUnitOp ) ) ) ( (lv_units_4_0= ruleUnitElement ) ) )* )
            {
            // InternalKim.g:16922:2: ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_3_0= ruleUnitOp ) ) ) ( (lv_units_4_0= ruleUnitElement ) ) )* )
            // InternalKim.g:16923:3: ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_3_0= ruleUnitOp ) ) ) ( (lv_units_4_0= ruleUnitElement ) ) )*
            {
            // InternalKim.g:16923:3: ( (lv_id_0_0= RULE_UPPERCASE_ID ) )
            // InternalKim.g:16924:4: (lv_id_0_0= RULE_UPPERCASE_ID )
            {
            // InternalKim.g:16924:4: (lv_id_0_0= RULE_UPPERCASE_ID )
            // InternalKim.g:16925:5: lv_id_0_0= RULE_UPPERCASE_ID
            {
            lv_id_0_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_175); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_id_0_0, grammarAccess.getCurrencyAccess().getIdUPPERCASE_IDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getCurrencyRule());
              					}
              					setWithLastConsumed(
              						current,
              						"id",
              						lv_id_0_0,
              						"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
              				
            }

            }


            }

            // InternalKim.g:16941:3: (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) )
            // InternalKim.g:16942:4: otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) )
            {
            otherlv_1=(Token)match(input,245,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getCurrencyAccess().getCommercialAtKeyword_1_0());
              			
            }
            // InternalKim.g:16946:4: ( (lv_year_2_0= RULE_INT ) )
            // InternalKim.g:16947:5: (lv_year_2_0= RULE_INT )
            {
            // InternalKim.g:16947:5: (lv_year_2_0= RULE_INT )
            // InternalKim.g:16948:6: lv_year_2_0= RULE_INT
            {
            lv_year_2_0=(Token)match(input,RULE_INT,FOLLOW_173); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						newLeafNode(lv_year_2_0, grammarAccess.getCurrencyAccess().getYearINTTerminalRuleCall_1_1_0());
              					
            }
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getCurrencyRule());
              						}
              						setWithLastConsumed(
              							current,
              							"year",
              							lv_year_2_0,
              							"org.eclipse.xtext.common.Terminals.INT");
              					
            }

            }


            }


            }

            // InternalKim.g:16965:3: ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_3_0= ruleUnitOp ) ) ) ( (lv_units_4_0= ruleUnitElement ) ) )*
            loop337:
            do {
                int alt337=2;
                int LA337_0 = input.LA(1);

                if ( (LA337_0==40||LA337_0==107||LA337_0==254) ) {
                    alt337=1;
                }


                switch (alt337) {
            	case 1 :
            	    // InternalKim.g:16966:4: ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_3_0= ruleUnitOp ) ) ) ( (lv_units_4_0= ruleUnitElement ) )
            	    {
            	    // InternalKim.g:16966:4: ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_3_0= ruleUnitOp ) ) )
            	    // InternalKim.g:16967:5: ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_3_0= ruleUnitOp ) )
            	    {
            	    // InternalKim.g:16973:5: ( (lv_connectors_3_0= ruleUnitOp ) )
            	    // InternalKim.g:16974:6: (lv_connectors_3_0= ruleUnitOp )
            	    {
            	    // InternalKim.g:16974:6: (lv_connectors_3_0= ruleUnitOp )
            	    // InternalKim.g:16975:7: lv_connectors_3_0= ruleUnitOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getCurrencyAccess().getConnectorsUnitOpEnumRuleCall_2_0_0_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_174);
            	    lv_connectors_3_0=ruleUnitOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getCurrencyRule());
            	      							}
            	      							add(
            	      								current,
            	      								"connectors",
            	      								lv_connectors_3_0,
            	      								"org.integratedmodelling.kim.Kim.UnitOp");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }

            	    // InternalKim.g:16993:4: ( (lv_units_4_0= ruleUnitElement ) )
            	    // InternalKim.g:16994:5: (lv_units_4_0= ruleUnitElement )
            	    {
            	    // InternalKim.g:16994:5: (lv_units_4_0= ruleUnitElement )
            	    // InternalKim.g:16995:6: lv_units_4_0= ruleUnitElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getCurrencyAccess().getUnitsUnitElementParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_173);
            	    lv_units_4_0=ruleUnitElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getCurrencyRule());
            	      						}
            	      						add(
            	      							current,
            	      							"units",
            	      							lv_units_4_0,
            	      							"org.integratedmodelling.kim.Kim.UnitElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop337;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCurrency"


    // $ANTLR start "entryRuleNumber"
    // InternalKim.g:17017:1: entryRuleNumber returns [EObject current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final EObject entryRuleNumber() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumber = null;


        try {
            // InternalKim.g:17017:47: (iv_ruleNumber= ruleNumber EOF )
            // InternalKim.g:17018:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalKim.g:17024:1: ruleNumber returns [EObject current=null] : ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )? ) ;
    public final EObject ruleNumber() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_negative_1_0=null;
        Token lv_real_2_0=null;
        Token lv_long_3_0=null;
        Token lv_decimal_4_0=null;
        Token lv_decimalPart_5_0=null;
        Token lv_exponential_6_1=null;
        Token lv_exponential_6_2=null;
        Token otherlv_7=null;
        Token lv_expNegative_8_0=null;
        Token lv_exp_9_0=null;


        	enterRule();

        try {
            // InternalKim.g:17030:2: ( ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )? ) )
            // InternalKim.g:17031:2: ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )? )
            {
            // InternalKim.g:17031:2: ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )? )
            // InternalKim.g:17032:3: (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )?
            {
            // InternalKim.g:17032:3: (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )?
            int alt338=3;
            int LA338_0 = input.LA(1);

            if ( (LA338_0==246) ) {
                alt338=1;
            }
            else if ( (LA338_0==247) ) {
                alt338=2;
            }
            switch (alt338) {
                case 1 :
                    // InternalKim.g:17033:4: otherlv_0= '+'
                    {
                    otherlv_0=(Token)match(input,246,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getNumberAccess().getPlusSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:17038:4: ( (lv_negative_1_0= '-' ) )
                    {
                    // InternalKim.g:17038:4: ( (lv_negative_1_0= '-' ) )
                    // InternalKim.g:17039:5: (lv_negative_1_0= '-' )
                    {
                    // InternalKim.g:17039:5: (lv_negative_1_0= '-' )
                    // InternalKim.g:17040:6: lv_negative_1_0= '-'
                    {
                    lv_negative_1_0=(Token)match(input,247,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_negative_1_0, grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNumberRule());
                      						}
                      						setWithLastConsumed(current, "negative", true, "-");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:17053:3: ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) )
            // InternalKim.g:17054:4: ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT )
            {
            // InternalKim.g:17058:4: (lv_real_2_0= RULE_INT )
            // InternalKim.g:17059:5: lv_real_2_0= RULE_INT
            {
            lv_real_2_0=(Token)match(input,RULE_INT,FOLLOW_176); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_real_2_0, grammarAccess.getNumberAccess().getRealINTTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getNumberRule());
              					}
              					setWithLastConsumed(
              						current,
              						"real",
              						lv_real_2_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            // InternalKim.g:17075:3: ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )?
            int alt339=2;
            int LA339_0 = input.LA(1);

            if ( (LA339_0==248) && (synpred653_InternalKim())) {
                alt339=1;
            }
            switch (alt339) {
                case 1 :
                    // InternalKim.g:17076:4: ( ( 'l' ) )=> (lv_long_3_0= 'l' )
                    {
                    // InternalKim.g:17080:4: (lv_long_3_0= 'l' )
                    // InternalKim.g:17081:5: lv_long_3_0= 'l'
                    {
                    lv_long_3_0=(Token)match(input,248,FOLLOW_177); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_long_3_0, grammarAccess.getNumberAccess().getLongLKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getNumberRule());
                      					}
                      					setWithLastConsumed(current, "long", true, "l");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:17093:3: ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )?
            int alt340=2;
            int LA340_0 = input.LA(1);

            if ( (LA340_0==108) ) {
                int LA340_1 = input.LA(2);

                if ( (LA340_1==RULE_INT) ) {
                    int LA340_3 = input.LA(3);

                    if ( (synpred654_InternalKim()) ) {
                        alt340=1;
                    }
                }
            }
            switch (alt340) {
                case 1 :
                    // InternalKim.g:17094:4: ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) )
                    {
                    // InternalKim.g:17107:4: ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) )
                    // InternalKim.g:17108:5: ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) )
                    {
                    // InternalKim.g:17108:5: ( (lv_decimal_4_0= '.' ) )
                    // InternalKim.g:17109:6: (lv_decimal_4_0= '.' )
                    {
                    // InternalKim.g:17109:6: (lv_decimal_4_0= '.' )
                    // InternalKim.g:17110:7: lv_decimal_4_0= '.'
                    {
                    lv_decimal_4_0=(Token)match(input,108,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_decimal_4_0, grammarAccess.getNumberAccess().getDecimalFullStopKeyword_3_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(current, "decimal", true, ".");
                      						
                    }

                    }


                    }

                    // InternalKim.g:17122:5: ( (lv_decimalPart_5_0= RULE_INT ) )
                    // InternalKim.g:17123:6: (lv_decimalPart_5_0= RULE_INT )
                    {
                    // InternalKim.g:17123:6: (lv_decimalPart_5_0= RULE_INT )
                    // InternalKim.g:17124:7: lv_decimalPart_5_0= RULE_INT
                    {
                    lv_decimalPart_5_0=(Token)match(input,RULE_INT,FOLLOW_178); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_decimalPart_5_0, grammarAccess.getNumberAccess().getDecimalPartINTTerminalRuleCall_3_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"decimalPart",
                      								lv_decimalPart_5_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:17142:3: ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )?
            int alt343=2;
            int LA343_0 = input.LA(1);

            if ( (LA343_0==249) && (synpred658_InternalKim())) {
                alt343=1;
            }
            else if ( (LA343_0==250) && (synpred658_InternalKim())) {
                alt343=1;
            }
            switch (alt343) {
                case 1 :
                    // InternalKim.g:17143:4: ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) )
                    {
                    // InternalKim.g:17169:4: ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) )
                    // InternalKim.g:17170:5: ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) )
                    {
                    // InternalKim.g:17170:5: ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) )
                    // InternalKim.g:17171:6: ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) )
                    {
                    // InternalKim.g:17171:6: ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) )
                    // InternalKim.g:17172:7: (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' )
                    {
                    // InternalKim.g:17172:7: (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' )
                    int alt341=2;
                    int LA341_0 = input.LA(1);

                    if ( (LA341_0==249) ) {
                        alt341=1;
                    }
                    else if ( (LA341_0==250) ) {
                        alt341=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 341, 0, input);

                        throw nvae;
                    }
                    switch (alt341) {
                        case 1 :
                            // InternalKim.g:17173:8: lv_exponential_6_1= 'e'
                            {
                            lv_exponential_6_1=(Token)match(input,249,FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exponential_6_1, grammarAccess.getNumberAccess().getExponentialEKeyword_4_0_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "exponential", true, null);
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:17184:8: lv_exponential_6_2= 'E'
                            {
                            lv_exponential_6_2=(Token)match(input,250,FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exponential_6_2, grammarAccess.getNumberAccess().getExponentialEKeyword_4_0_0_0_1());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "exponential", true, null);
                              							
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:17197:5: (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )?
                    int alt342=3;
                    int LA342_0 = input.LA(1);

                    if ( (LA342_0==246) ) {
                        alt342=1;
                    }
                    else if ( (LA342_0==247) ) {
                        alt342=2;
                    }
                    switch (alt342) {
                        case 1 :
                            // InternalKim.g:17198:6: otherlv_7= '+'
                            {
                            otherlv_7=(Token)match(input,246,FOLLOW_76); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_7, grammarAccess.getNumberAccess().getPlusSignKeyword_4_0_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:17203:6: ( (lv_expNegative_8_0= '-' ) )
                            {
                            // InternalKim.g:17203:6: ( (lv_expNegative_8_0= '-' ) )
                            // InternalKim.g:17204:7: (lv_expNegative_8_0= '-' )
                            {
                            // InternalKim.g:17204:7: (lv_expNegative_8_0= '-' )
                            // InternalKim.g:17205:8: lv_expNegative_8_0= '-'
                            {
                            lv_expNegative_8_0=(Token)match(input,247,FOLLOW_76); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_expNegative_8_0, grammarAccess.getNumberAccess().getExpNegativeHyphenMinusKeyword_4_0_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "expNegative", true, "-");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:17218:5: ( (lv_exp_9_0= RULE_INT ) )
                    // InternalKim.g:17219:6: (lv_exp_9_0= RULE_INT )
                    {
                    // InternalKim.g:17219:6: (lv_exp_9_0= RULE_INT )
                    // InternalKim.g:17220:7: lv_exp_9_0= RULE_INT
                    {
                    lv_exp_9_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_exp_9_0, grammarAccess.getNumberAccess().getExpINTTerminalRuleCall_4_0_2_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"exp",
                      								lv_exp_9_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleQuantity"
    // InternalKim.g:17242:1: entryRuleQuantity returns [EObject current=null] : iv_ruleQuantity= ruleQuantity EOF ;
    public final EObject entryRuleQuantity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuantity = null;


        try {
            // InternalKim.g:17242:49: (iv_ruleQuantity= ruleQuantity EOF )
            // InternalKim.g:17243:2: iv_ruleQuantity= ruleQuantity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuantityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQuantity=ruleQuantity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuantity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuantity"


    // $ANTLR start "ruleQuantity"
    // InternalKim.g:17249:1: ruleQuantity returns [EObject current=null] : ( ( (lv_value_0_0= ruleNumber ) ) otherlv_1= '.' ( ( (lv_unit_2_0= ruleUnit ) ) | ( (lv_currency_3_0= ruleCurrency ) ) ) ) ;
    public final EObject ruleQuantity() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_value_0_0 = null;

        EObject lv_unit_2_0 = null;

        EObject lv_currency_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:17255:2: ( ( ( (lv_value_0_0= ruleNumber ) ) otherlv_1= '.' ( ( (lv_unit_2_0= ruleUnit ) ) | ( (lv_currency_3_0= ruleCurrency ) ) ) ) )
            // InternalKim.g:17256:2: ( ( (lv_value_0_0= ruleNumber ) ) otherlv_1= '.' ( ( (lv_unit_2_0= ruleUnit ) ) | ( (lv_currency_3_0= ruleCurrency ) ) ) )
            {
            // InternalKim.g:17256:2: ( ( (lv_value_0_0= ruleNumber ) ) otherlv_1= '.' ( ( (lv_unit_2_0= ruleUnit ) ) | ( (lv_currency_3_0= ruleCurrency ) ) ) )
            // InternalKim.g:17257:3: ( (lv_value_0_0= ruleNumber ) ) otherlv_1= '.' ( ( (lv_unit_2_0= ruleUnit ) ) | ( (lv_currency_3_0= ruleCurrency ) ) )
            {
            // InternalKim.g:17257:3: ( (lv_value_0_0= ruleNumber ) )
            // InternalKim.g:17258:4: (lv_value_0_0= ruleNumber )
            {
            // InternalKim.g:17258:4: (lv_value_0_0= ruleNumber )
            // InternalKim.g:17259:5: lv_value_0_0= ruleNumber
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuantityAccess().getValueNumberParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_179);
            lv_value_0_0=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuantityRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_0_0,
              						"org.integratedmodelling.kim.Kim.Number");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,108,FOLLOW_98); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getQuantityAccess().getFullStopKeyword_1());
              		
            }
            // InternalKim.g:17280:3: ( ( (lv_unit_2_0= ruleUnit ) ) | ( (lv_currency_3_0= ruleCurrency ) ) )
            int alt344=2;
            int LA344_0 = input.LA(1);

            if ( (LA344_0==EOF||(LA344_0>=RULE_LOWERCASE_ID && LA344_0<=RULE_STRING)||(LA344_0>=RULE_EXPR && LA344_0<=RULE_ID)||LA344_0==RULE_BACKCASE_ID||LA344_0==20||LA344_0==25||(LA344_0>=27 && LA344_0<=33)||LA344_0==35||(LA344_0>=37 && LA344_0<=38)||(LA344_0>=40 && LA344_0<=42)||(LA344_0>=44 && LA344_0<=45)||(LA344_0>=48 && LA344_0<=50)||(LA344_0>=54 && LA344_0<=56)||(LA344_0>=62 && LA344_0<=67)||LA344_0==69||(LA344_0>=76 && LA344_0<=88)||LA344_0==104||LA344_0==107||LA344_0==111||(LA344_0>=113 && LA344_0<=118)||(LA344_0>=128 && LA344_0<=129)||(LA344_0>=136 && LA344_0<=138)||(LA344_0>=140 && LA344_0<=156)||(LA344_0>=169 && LA344_0<=170)||(LA344_0>=173 && LA344_0<=175)||(LA344_0>=177 && LA344_0<=185)||(LA344_0>=188 && LA344_0<=198)||LA344_0==209||(LA344_0>=246 && LA344_0<=247)||LA344_0==254) ) {
                alt344=1;
            }
            else if ( (LA344_0==RULE_UPPERCASE_ID) ) {
                int LA344_2 = input.LA(2);

                if ( (LA344_2==EOF||(LA344_2>=RULE_UPPERCASE_ID && LA344_2<=RULE_STRING)||(LA344_2>=RULE_EXPR && LA344_2<=RULE_ID)||LA344_2==RULE_BACKCASE_ID||LA344_2==20||LA344_2==25||(LA344_2>=27 && LA344_2<=33)||LA344_2==35||(LA344_2>=37 && LA344_2<=38)||(LA344_2>=40 && LA344_2<=42)||(LA344_2>=44 && LA344_2<=45)||(LA344_2>=48 && LA344_2<=50)||(LA344_2>=54 && LA344_2<=56)||(LA344_2>=62 && LA344_2<=67)||LA344_2==69||(LA344_2>=76 && LA344_2<=88)||(LA344_2>=104 && LA344_2<=105)||(LA344_2>=107 && LA344_2<=108)||LA344_2==111||(LA344_2>=113 && LA344_2<=118)||(LA344_2>=128 && LA344_2<=129)||(LA344_2>=136 && LA344_2<=138)||(LA344_2>=140 && LA344_2<=156)||(LA344_2>=169 && LA344_2<=170)||(LA344_2>=173 && LA344_2<=175)||(LA344_2>=177 && LA344_2<=185)||(LA344_2>=188 && LA344_2<=198)||LA344_2==209||(LA344_2>=246 && LA344_2<=247)||LA344_2==254) ) {
                    alt344=1;
                }
                else if ( (LA344_2==245) ) {
                    alt344=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 344, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 344, 0, input);

                throw nvae;
            }
            switch (alt344) {
                case 1 :
                    // InternalKim.g:17281:4: ( (lv_unit_2_0= ruleUnit ) )
                    {
                    // InternalKim.g:17281:4: ( (lv_unit_2_0= ruleUnit ) )
                    // InternalKim.g:17282:5: (lv_unit_2_0= ruleUnit )
                    {
                    // InternalKim.g:17282:5: (lv_unit_2_0= ruleUnit )
                    // InternalKim.g:17283:6: lv_unit_2_0= ruleUnit
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQuantityAccess().getUnitUnitParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_unit_2_0=ruleUnit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQuantityRule());
                      						}
                      						set(
                      							current,
                      							"unit",
                      							lv_unit_2_0,
                      							"org.integratedmodelling.kim.Kim.Unit");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:17301:4: ( (lv_currency_3_0= ruleCurrency ) )
                    {
                    // InternalKim.g:17301:4: ( (lv_currency_3_0= ruleCurrency ) )
                    // InternalKim.g:17302:5: (lv_currency_3_0= ruleCurrency )
                    {
                    // InternalKim.g:17302:5: (lv_currency_3_0= ruleCurrency )
                    // InternalKim.g:17303:6: lv_currency_3_0= ruleCurrency
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQuantityAccess().getCurrencyCurrencyParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_currency_3_0=ruleCurrency();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQuantityRule());
                      						}
                      						set(
                      							current,
                      							"currency",
                      							lv_currency_3_0,
                      							"org.integratedmodelling.kim.Kim.Currency");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuantity"


    // $ANTLR start "entryRuleDate"
    // InternalKim.g:17325:1: entryRuleDate returns [EObject current=null] : iv_ruleDate= ruleDate EOF ;
    public final EObject entryRuleDate() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDate = null;


        try {
            // InternalKim.g:17325:45: (iv_ruleDate= ruleDate EOF )
            // InternalKim.g:17326:2: iv_ruleDate= ruleDate EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDate=ruleDate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDate; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDate"


    // $ANTLR start "ruleDate"
    // InternalKim.g:17332:1: ruleDate returns [EObject current=null] : ( ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )? ) ;
    public final EObject ruleDate() throws RecognitionException {
        EObject current = null;

        Token lv_year_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_bc_3_0=null;
        Token otherlv_4=null;
        Token lv_month_5_0=null;
        Token otherlv_6=null;
        Token lv_day_7_0=null;
        Token lv_hour_8_0=null;
        Token otherlv_9=null;
        Token lv_min_10_0=null;
        Token otherlv_11=null;
        Token lv_sec_12_0=null;
        Token otherlv_13=null;
        Token lv_ms_14_0=null;


        	enterRule();

        try {
            // InternalKim.g:17338:2: ( ( ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )? ) )
            // InternalKim.g:17339:2: ( ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )? )
            {
            // InternalKim.g:17339:2: ( ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )? )
            // InternalKim.g:17340:3: ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )?
            {
            // InternalKim.g:17340:3: ( (lv_year_0_0= RULE_INT ) )
            // InternalKim.g:17341:4: (lv_year_0_0= RULE_INT )
            {
            // InternalKim.g:17341:4: (lv_year_0_0= RULE_INT )
            // InternalKim.g:17342:5: lv_year_0_0= RULE_INT
            {
            lv_year_0_0=(Token)match(input,RULE_INT,FOLLOW_180); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_year_0_0, grammarAccess.getDateAccess().getYearINTTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"year",
              						lv_year_0_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            // InternalKim.g:17358:3: (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )?
            int alt345=4;
            switch ( input.LA(1) ) {
                case 251:
                    {
                    alt345=1;
                    }
                    break;
                case 252:
                    {
                    alt345=2;
                    }
                    break;
                case 253:
                    {
                    alt345=3;
                    }
                    break;
            }

            switch (alt345) {
                case 1 :
                    // InternalKim.g:17359:4: otherlv_1= 'AD'
                    {
                    otherlv_1=(Token)match(input,251,FOLLOW_181); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDateAccess().getADKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:17364:4: otherlv_2= 'CE'
                    {
                    otherlv_2=(Token)match(input,252,FOLLOW_181); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDateAccess().getCEKeyword_1_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:17369:4: ( (lv_bc_3_0= 'BC' ) )
                    {
                    // InternalKim.g:17369:4: ( (lv_bc_3_0= 'BC' ) )
                    // InternalKim.g:17370:5: (lv_bc_3_0= 'BC' )
                    {
                    // InternalKim.g:17370:5: (lv_bc_3_0= 'BC' )
                    // InternalKim.g:17371:6: lv_bc_3_0= 'BC'
                    {
                    lv_bc_3_0=(Token)match(input,253,FOLLOW_181); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_bc_3_0, grammarAccess.getDateAccess().getBcBCKeyword_1_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDateRule());
                      						}
                      						setWithLastConsumed(current, "bc", true, "BC");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,247,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getDateAccess().getHyphenMinusKeyword_2());
              		
            }
            // InternalKim.g:17388:3: ( (lv_month_5_0= RULE_INT ) )
            // InternalKim.g:17389:4: (lv_month_5_0= RULE_INT )
            {
            // InternalKim.g:17389:4: (lv_month_5_0= RULE_INT )
            // InternalKim.g:17390:5: lv_month_5_0= RULE_INT
            {
            lv_month_5_0=(Token)match(input,RULE_INT,FOLLOW_181); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_month_5_0, grammarAccess.getDateAccess().getMonthINTTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"month",
              						lv_month_5_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            otherlv_6=(Token)match(input,247,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getDateAccess().getHyphenMinusKeyword_4());
              		
            }
            // InternalKim.g:17410:3: ( (lv_day_7_0= RULE_INT ) )
            // InternalKim.g:17411:4: (lv_day_7_0= RULE_INT )
            {
            // InternalKim.g:17411:4: (lv_day_7_0= RULE_INT )
            // InternalKim.g:17412:5: lv_day_7_0= RULE_INT
            {
            lv_day_7_0=(Token)match(input,RULE_INT,FOLLOW_182); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_day_7_0, grammarAccess.getDateAccess().getDayINTTerminalRuleCall_5_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"day",
              						lv_day_7_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            // InternalKim.g:17428:3: ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )?
            int alt348=2;
            int LA348_0 = input.LA(1);

            if ( (LA348_0==RULE_INT) ) {
                int LA348_1 = input.LA(2);

                if ( (LA348_1==105) ) {
                    alt348=1;
                }
            }
            switch (alt348) {
                case 1 :
                    // InternalKim.g:17429:4: ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )?
                    {
                    // InternalKim.g:17429:4: ( (lv_hour_8_0= RULE_INT ) )
                    // InternalKim.g:17430:5: (lv_hour_8_0= RULE_INT )
                    {
                    // InternalKim.g:17430:5: (lv_hour_8_0= RULE_INT )
                    // InternalKim.g:17431:6: lv_hour_8_0= RULE_INT
                    {
                    lv_hour_8_0=(Token)match(input,RULE_INT,FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_hour_8_0, grammarAccess.getDateAccess().getHourINTTerminalRuleCall_6_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDateRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"hour",
                      							lv_hour_8_0,
                      							"org.eclipse.xtext.common.Terminals.INT");
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,105,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getDateAccess().getColonKeyword_6_1());
                      			
                    }
                    // InternalKim.g:17451:4: ( (lv_min_10_0= RULE_INT ) )
                    // InternalKim.g:17452:5: (lv_min_10_0= RULE_INT )
                    {
                    // InternalKim.g:17452:5: (lv_min_10_0= RULE_INT )
                    // InternalKim.g:17453:6: lv_min_10_0= RULE_INT
                    {
                    lv_min_10_0=(Token)match(input,RULE_INT,FOLLOW_183); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_min_10_0, grammarAccess.getDateAccess().getMinINTTerminalRuleCall_6_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDateRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"min",
                      							lv_min_10_0,
                      							"org.eclipse.xtext.common.Terminals.INT");
                      					
                    }

                    }


                    }

                    // InternalKim.g:17469:4: (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )?
                    int alt347=2;
                    int LA347_0 = input.LA(1);

                    if ( (LA347_0==105) ) {
                        alt347=1;
                    }
                    switch (alt347) {
                        case 1 :
                            // InternalKim.g:17470:5: otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )?
                            {
                            otherlv_11=(Token)match(input,105,FOLLOW_76); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_11, grammarAccess.getDateAccess().getColonKeyword_6_3_0());
                              				
                            }
                            // InternalKim.g:17474:5: ( (lv_sec_12_0= RULE_INT ) )
                            // InternalKim.g:17475:6: (lv_sec_12_0= RULE_INT )
                            {
                            // InternalKim.g:17475:6: (lv_sec_12_0= RULE_INT )
                            // InternalKim.g:17476:7: lv_sec_12_0= RULE_INT
                            {
                            lv_sec_12_0=(Token)match(input,RULE_INT,FOLLOW_184); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_sec_12_0, grammarAccess.getDateAccess().getSecINTTerminalRuleCall_6_3_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDateRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"sec",
                              								lv_sec_12_0,
                              								"org.eclipse.xtext.common.Terminals.INT");
                              						
                            }

                            }


                            }

                            // InternalKim.g:17492:5: (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )?
                            int alt346=2;
                            int LA346_0 = input.LA(1);

                            if ( (LA346_0==108) ) {
                                alt346=1;
                            }
                            switch (alt346) {
                                case 1 :
                                    // InternalKim.g:17493:6: otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) )
                                    {
                                    otherlv_13=(Token)match(input,108,FOLLOW_76); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(otherlv_13, grammarAccess.getDateAccess().getFullStopKeyword_6_3_2_0());
                                      					
                                    }
                                    // InternalKim.g:17497:6: ( (lv_ms_14_0= RULE_INT ) )
                                    // InternalKim.g:17498:7: (lv_ms_14_0= RULE_INT )
                                    {
                                    // InternalKim.g:17498:7: (lv_ms_14_0= RULE_INT )
                                    // InternalKim.g:17499:8: lv_ms_14_0= RULE_INT
                                    {
                                    lv_ms_14_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_ms_14_0, grammarAccess.getDateAccess().getMsINTTerminalRuleCall_6_3_2_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getDateRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"ms",
                                      									lv_ms_14_0,
                                      									"org.eclipse.xtext.common.Terminals.INT");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDate"


    // $ANTLR start "entryRulePathName"
    // InternalKim.g:17522:1: entryRulePathName returns [String current=null] : iv_rulePathName= rulePathName EOF ;
    public final String entryRulePathName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePathName = null;


        try {
            // InternalKim.g:17522:48: (iv_rulePathName= rulePathName EOF )
            // InternalKim.g:17523:2: iv_rulePathName= rulePathName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePathName=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePathName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePathName"


    // $ANTLR start "rulePathName"
    // InternalKim.g:17529:1: rulePathName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* ) ;
    public final AntlrDatatypeRuleToken rulePathName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_0=null;
        Token this_UPPERCASE_ID_1=null;
        Token this_LOWERCASE_DASHID_2=null;
        Token kw=null;
        Token this_LOWERCASE_ID_4=null;
        Token this_UPPERCASE_ID_5=null;
        Token this_LOWERCASE_DASHID_6=null;


        	enterRule();

        try {
            // InternalKim.g:17535:2: ( ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* ) )
            // InternalKim.g:17536:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* )
            {
            // InternalKim.g:17536:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* )
            // InternalKim.g:17537:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )*
            {
            // InternalKim.g:17537:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID )
            int alt349=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                alt349=1;
                }
                break;
            case RULE_UPPERCASE_ID:
                {
                alt349=2;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt349=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 349, 0, input);

                throw nvae;
            }

            switch (alt349) {
                case 1 :
                    // InternalKim.g:17538:4: this_LOWERCASE_ID_0= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_184); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:17546:4: this_UPPERCASE_ID_1= RULE_UPPERCASE_ID
                    {
                    this_UPPERCASE_ID_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_184); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UPPERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UPPERCASE_ID_1, grammarAccess.getPathNameAccess().getUPPERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:17554:4: this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_184); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_2, grammarAccess.getPathNameAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:17562:3: (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )*
            loop351:
            do {
                int alt351=2;
                int LA351_0 = input.LA(1);

                if ( (LA351_0==108) ) {
                    alt351=1;
                }


                switch (alt351) {
            	case 1 :
            	    // InternalKim.g:17563:4: kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    {
            	    kw=(Token)match(input,108,FOLLOW_185); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getPathNameAccess().getFullStopKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:17568:4: (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    int alt350=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_LOWERCASE_ID:
            	        {
            	        alt350=1;
            	        }
            	        break;
            	    case RULE_UPPERCASE_ID:
            	        {
            	        alt350=2;
            	        }
            	        break;
            	    case RULE_LOWERCASE_DASHID:
            	        {
            	        alt350=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 350, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt350) {
            	        case 1 :
            	            // InternalKim.g:17569:5: this_LOWERCASE_ID_4= RULE_LOWERCASE_ID
            	            {
            	            this_LOWERCASE_ID_4=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_184); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_ID_4);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_ID_4, grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_1_1_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:17577:5: this_UPPERCASE_ID_5= RULE_UPPERCASE_ID
            	            {
            	            this_UPPERCASE_ID_5=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_184); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_UPPERCASE_ID_5);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_UPPERCASE_ID_5, grammarAccess.getPathNameAccess().getUPPERCASE_IDTerminalRuleCall_1_1_1());
            	              				
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:17585:5: this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID
            	            {
            	            this_LOWERCASE_DASHID_6=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_184); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_DASHID_6);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_DASHID_6, grammarAccess.getPathNameAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_2());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop351;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePathName"


    // $ANTLR start "entryRulePath"
    // InternalKim.g:17598:1: entryRulePath returns [String current=null] : iv_rulePath= rulePath EOF ;
    public final String entryRulePath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePath = null;


        try {
            // InternalKim.g:17598:44: (iv_rulePath= rulePath EOF )
            // InternalKim.g:17599:2: iv_rulePath= rulePath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePath=rulePath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePath"


    // $ANTLR start "rulePath"
    // InternalKim.g:17605:1: rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )* ) ;
    public final AntlrDatatypeRuleToken rulePath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_0=null;
        Token this_UPPERCASE_ID_1=null;
        Token this_LOWERCASE_DASHID_2=null;
        Token kw=null;
        Token this_LOWERCASE_ID_5=null;
        Token this_UPPERCASE_ID_6=null;
        Token this_LOWERCASE_DASHID_7=null;


        	enterRule();

        try {
            // InternalKim.g:17611:2: ( ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )* ) )
            // InternalKim.g:17612:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )* )
            {
            // InternalKim.g:17612:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )* )
            // InternalKim.g:17613:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )*
            {
            // InternalKim.g:17613:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID )
            int alt352=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                alt352=1;
                }
                break;
            case RULE_UPPERCASE_ID:
                {
                alt352=2;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt352=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 352, 0, input);

                throw nvae;
            }

            switch (alt352) {
                case 1 :
                    // InternalKim.g:17614:4: this_LOWERCASE_ID_0= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_186); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:17622:4: this_UPPERCASE_ID_1= RULE_UPPERCASE_ID
                    {
                    this_UPPERCASE_ID_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_186); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UPPERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UPPERCASE_ID_1, grammarAccess.getPathAccess().getUPPERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:17630:4: this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_186); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_2, grammarAccess.getPathAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:17638:3: ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )*
            loop355:
            do {
                int alt355=2;
                int LA355_0 = input.LA(1);

                if ( ((LA355_0>=107 && LA355_0<=108)) ) {
                    alt355=1;
                }


                switch (alt355) {
            	case 1 :
            	    // InternalKim.g:17639:4: (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID )
            	    {
            	    // InternalKim.g:17639:4: (kw= '.' | kw= '/' )
            	    int alt353=2;
            	    int LA353_0 = input.LA(1);

            	    if ( (LA353_0==108) ) {
            	        alt353=1;
            	    }
            	    else if ( (LA353_0==107) ) {
            	        alt353=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 353, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt353) {
            	        case 1 :
            	            // InternalKim.g:17640:5: kw= '.'
            	            {
            	            kw=(Token)match(input,108,FOLLOW_185); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getPathAccess().getFullStopKeyword_1_0_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:17646:5: kw= '/'
            	            {
            	            kw=(Token)match(input,107,FOLLOW_185); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getPathAccess().getSolidusKeyword_1_0_1());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    // InternalKim.g:17652:4: (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID )
            	    int alt354=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_LOWERCASE_ID:
            	        {
            	        alt354=1;
            	        }
            	        break;
            	    case RULE_UPPERCASE_ID:
            	        {
            	        alt354=2;
            	        }
            	        break;
            	    case RULE_LOWERCASE_DASHID:
            	        {
            	        alt354=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 354, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt354) {
            	        case 1 :
            	            // InternalKim.g:17653:5: this_LOWERCASE_ID_5= RULE_LOWERCASE_ID
            	            {
            	            this_LOWERCASE_ID_5=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_186); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_ID_5);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_ID_5, grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_1_1_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:17661:5: this_UPPERCASE_ID_6= RULE_UPPERCASE_ID
            	            {
            	            this_UPPERCASE_ID_6=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_186); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_UPPERCASE_ID_6);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_UPPERCASE_ID_6, grammarAccess.getPathAccess().getUPPERCASE_IDTerminalRuleCall_1_1_1());
            	              				
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:17669:5: this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID
            	            {
            	            this_LOWERCASE_DASHID_7=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_186); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_DASHID_7);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_DASHID_7, grammarAccess.getPathAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_2());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop355;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePath"


    // $ANTLR start "entryRuleNamespaceId"
    // InternalKim.g:17682:1: entryRuleNamespaceId returns [String current=null] : iv_ruleNamespaceId= ruleNamespaceId EOF ;
    public final String entryRuleNamespaceId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNamespaceId = null;


        try {
            // InternalKim.g:17682:51: (iv_ruleNamespaceId= ruleNamespaceId EOF )
            // InternalKim.g:17683:2: iv_ruleNamespaceId= ruleNamespaceId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespaceId=ruleNamespaceId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceId"


    // $ANTLR start "ruleNamespaceId"
    // InternalKim.g:17689:1: ruleNamespaceId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID ) ;
    public final AntlrDatatypeRuleToken ruleNamespaceId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_CAMELCASE_ID_2=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;



        	enterRule();

        try {
            // InternalKim.g:17695:2: ( (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID ) )
            // InternalKim.g:17696:2: (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID )
            {
            // InternalKim.g:17696:2: (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID )
            // InternalKim.g:17697:3: this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getNamespaceIdAccess().getPathNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_80);
            this_PathName_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,105,FOLLOW_154); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getNamespaceIdAccess().getColonKeyword_1());
              		
            }
            this_CAMELCASE_ID_2=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_CAMELCASE_ID_2);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_CAMELCASE_ID_2, grammarAccess.getNamespaceIdAccess().getCAMELCASE_IDTerminalRuleCall_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceId"


    // $ANTLR start "entryRulePropertyId"
    // InternalKim.g:17723:1: entryRulePropertyId returns [String current=null] : iv_rulePropertyId= rulePropertyId EOF ;
    public final String entryRulePropertyId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePropertyId = null;


        try {
            // InternalKim.g:17723:50: (iv_rulePropertyId= rulePropertyId EOF )
            // InternalKim.g:17724:2: iv_rulePropertyId= rulePropertyId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyId=rulePropertyId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePropertyId"


    // $ANTLR start "rulePropertyId"
    // InternalKim.g:17730:1: rulePropertyId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) ) ;
    public final AntlrDatatypeRuleToken rulePropertyId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_1=null;
        Token kw=null;
        Token this_LOWERCASE_ID_3=null;
        Token this_BACKCASE_ID_4=null;
        Token this_LOWERCASE_DASHID_5=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;



        	enterRule();

        try {
            // InternalKim.g:17736:2: ( ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) ) )
            // InternalKim.g:17737:2: ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) )
            {
            // InternalKim.g:17737:2: ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) )
            // InternalKim.g:17738:3: (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID )
            {
            // InternalKim.g:17738:3: (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID )
            int alt356=2;
            int LA356_0 = input.LA(1);

            if ( (LA356_0==RULE_LOWERCASE_ID) ) {
                int LA356_1 = input.LA(2);

                if ( (synpred680_InternalKim()) ) {
                    alt356=1;
                }
                else if ( (true) ) {
                    alt356=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 356, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA356_0==RULE_UPPERCASE_ID||LA356_0==RULE_LOWERCASE_DASHID) ) {
                alt356=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 356, 0, input);

                throw nvae;
            }
            switch (alt356) {
                case 1 :
                    // InternalKim.g:17739:4: this_PathName_0= rulePathName
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPropertyIdAccess().getPathNameParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_80);
                    this_PathName_0=rulePathName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_PathName_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:17750:4: this_LOWERCASE_ID_1= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_1, grammarAccess.getPropertyIdAccess().getLOWERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,105,FOLLOW_187); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getPropertyIdAccess().getColonKeyword_1());
              		
            }
            // InternalKim.g:17763:3: (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID )
            int alt357=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                alt357=1;
                }
                break;
            case RULE_BACKCASE_ID:
                {
                alt357=2;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt357=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 357, 0, input);

                throw nvae;
            }

            switch (alt357) {
                case 1 :
                    // InternalKim.g:17764:4: this_LOWERCASE_ID_3= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_3=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_3);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_3, grammarAccess.getPropertyIdAccess().getLOWERCASE_IDTerminalRuleCall_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:17772:4: this_BACKCASE_ID_4= RULE_BACKCASE_ID
                    {
                    this_BACKCASE_ID_4=(Token)match(input,RULE_BACKCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_BACKCASE_ID_4);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_BACKCASE_ID_4, grammarAccess.getPropertyIdAccess().getBACKCASE_IDTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:17780:4: this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_5=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_5);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_5, grammarAccess.getPropertyIdAccess().getLOWERCASE_DASHIDTerminalRuleCall_2_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePropertyId"


    // $ANTLR start "entryRuleVersionNumber"
    // InternalKim.g:17792:1: entryRuleVersionNumber returns [String current=null] : iv_ruleVersionNumber= ruleVersionNumber EOF ;
    public final String entryRuleVersionNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleVersionNumber = null;


        try {
            // InternalKim.g:17792:53: (iv_ruleVersionNumber= ruleVersionNumber EOF )
            // InternalKim.g:17793:2: iv_ruleVersionNumber= ruleVersionNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVersionNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVersionNumber=ruleVersionNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVersionNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVersionNumber"


    // $ANTLR start "ruleVersionNumber"
    // InternalKim.g:17799:1: ruleVersionNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? ) ;
    public final AntlrDatatypeRuleToken ruleVersionNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;
        Token kw=null;
        Token this_INT_2=null;
        Token this_INT_4=null;
        Token this_LOWERCASE_ID_6=null;
        Token this_UPPERCASE_ID_7=null;


        	enterRule();

        try {
            // InternalKim.g:17805:2: ( (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? ) )
            // InternalKim.g:17806:2: (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? )
            {
            // InternalKim.g:17806:2: (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? )
            // InternalKim.g:17807:3: this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )?
            {
            this_INT_0=(Token)match(input,RULE_INT,FOLLOW_188); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_0, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_0());
              		
            }
            // InternalKim.g:17814:3: (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )?
            int alt359=2;
            int LA359_0 = input.LA(1);

            if ( (LA359_0==108) ) {
                alt359=1;
            }
            switch (alt359) {
                case 1 :
                    // InternalKim.g:17815:4: kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )?
                    {
                    kw=(Token)match(input,108,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_0());
                      			
                    }
                    this_INT_2=(Token)match(input,RULE_INT,FOLLOW_188); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_2, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_1());
                      			
                    }
                    // InternalKim.g:17827:4: (kw= '.' this_INT_4= RULE_INT )?
                    int alt358=2;
                    int LA358_0 = input.LA(1);

                    if ( (LA358_0==108) ) {
                        alt358=1;
                    }
                    switch (alt358) {
                        case 1 :
                            // InternalKim.g:17828:5: kw= '.' this_INT_4= RULE_INT
                            {
                            kw=(Token)match(input,108,FOLLOW_76); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_2_0());
                              				
                            }
                            this_INT_4=(Token)match(input,RULE_INT,FOLLOW_189); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_4);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_4, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKim.g:17842:3: (kw= '-' )?
            int alt360=2;
            int LA360_0 = input.LA(1);

            if ( (LA360_0==247) ) {
                alt360=1;
            }
            switch (alt360) {
                case 1 :
                    // InternalKim.g:17843:4: kw= '-'
                    {
                    kw=(Token)match(input,247,FOLLOW_190); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getHyphenMinusKeyword_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:17849:3: (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )?
            int alt361=3;
            int LA361_0 = input.LA(1);

            if ( (LA361_0==RULE_LOWERCASE_ID) ) {
                int LA361_1 = input.LA(2);

                if ( (synpred686_InternalKim()) ) {
                    alt361=1;
                }
            }
            else if ( (LA361_0==RULE_UPPERCASE_ID) ) {
                int LA361_2 = input.LA(2);

                if ( (LA361_2==EOF||(LA361_2>=RULE_UPPERCASE_ID && LA361_2<=RULE_STRING)||LA361_2==RULE_CAMELCASE_ID||LA361_2==RULE_LOWERCASE_DASHID||LA361_2==20||LA361_2==25||LA361_2==27||(LA361_2>=31 && LA361_2<=33)||(LA361_2>=37 && LA361_2<=38)||(LA361_2>=41 && LA361_2<=42)||(LA361_2>=44 && LA361_2<=45)||LA361_2==48||(LA361_2>=53 && LA361_2<=56)||(LA361_2>=62 && LA361_2<=67)||LA361_2==69||(LA361_2>=93 && LA361_2<=94)||LA361_2==97||(LA361_2>=99 && LA361_2<=100)||(LA361_2>=102 && LA361_2<=104)||(LA361_2>=128 && LA361_2<=129)||(LA361_2>=137 && LA361_2<=138)||(LA361_2>=140 && LA361_2<=156)) ) {
                    alt361=2;
                }
            }
            switch (alt361) {
                case 1 :
                    // InternalKim.g:17850:4: this_LOWERCASE_ID_6= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_6=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_6);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_6, grammarAccess.getVersionNumberAccess().getLOWERCASE_IDTerminalRuleCall_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:17858:4: this_UPPERCASE_ID_7= RULE_UPPERCASE_ID
                    {
                    this_UPPERCASE_ID_7=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UPPERCASE_ID_7);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UPPERCASE_ID_7, grammarAccess.getVersionNumberAccess().getUPPERCASE_IDTerminalRuleCall_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVersionNumber"


    // $ANTLR start "ruleUnitOp"
    // InternalKim.g:17870:1: ruleUnitOp returns [Enumerator current=null] : ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) ) ;
    public final Enumerator ruleUnitOp() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalKim.g:17876:2: ( ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) ) )
            // InternalKim.g:17877:2: ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) )
            {
            // InternalKim.g:17877:2: ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) )
            int alt362=3;
            switch ( input.LA(1) ) {
            case 107:
                {
                alt362=1;
                }
                break;
            case 254:
                {
                alt362=2;
                }
                break;
            case 40:
                {
                alt362=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 362, 0, input);

                throw nvae;
            }

            switch (alt362) {
                case 1 :
                    // InternalKim.g:17878:3: (enumLiteral_0= '/' )
                    {
                    // InternalKim.g:17878:3: (enumLiteral_0= '/' )
                    // InternalKim.g:17879:4: enumLiteral_0= '/'
                    {
                    enumLiteral_0=(Token)match(input,107,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:17886:3: (enumLiteral_1= '^' )
                    {
                    // InternalKim.g:17886:3: (enumLiteral_1= '^' )
                    // InternalKim.g:17887:4: enumLiteral_1= '^'
                    {
                    enumLiteral_1=(Token)match(input,254,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:17894:3: (enumLiteral_2= '*' )
                    {
                    // InternalKim.g:17894:3: (enumLiteral_2= '*' )
                    // InternalKim.g:17895:4: enumLiteral_2= '*'
                    {
                    enumLiteral_2=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitOp"

    // $ANTLR start synpred2_InternalKim
    public final void synpred2_InternalKim_fragment() throws RecognitionException {   
        EObject lv_namespace_1_0 = null;


        // InternalKim.g:110:5: ( (lv_namespace_1_0= ruleNamespace ) )
        // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
        {
        // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
        // InternalKim.g:111:6: lv_namespace_1_0= ruleNamespace
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getModelAccess().getNamespaceNamespaceParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_namespace_1_0=ruleNamespace();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred2_InternalKim

    // $ANTLR start synpred4_InternalKim
    public final void synpred4_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_conceptStatement_0_0 = null;


        // InternalKim.g:167:3: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) )
        // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
        {
        // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
        // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';'
        {
        // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) )
        // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
        {
        // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
        // InternalKim.g:170:6: lv_conceptStatement_0_0= ruleConceptStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getConceptStatementConceptStatementParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_conceptStatement_0_0=ruleConceptStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,20,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred4_InternalKim

    // $ANTLR start synpred5_InternalKim
    public final void synpred5_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_modelStatement_2_0 = null;


        // InternalKim.g:193:3: ( ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) )
        // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
        {
        // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
        // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';'
        {
        // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) )
        // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
        {
        // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
        // InternalKim.g:196:6: lv_modelStatement_2_0= ruleModelStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getModelStatementModelStatementParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_modelStatement_2_0=ruleModelStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,20,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalKim

    // $ANTLR start synpred6_InternalKim
    public final void synpred6_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_upperOntologyStatement_4_0 = null;


        // InternalKim.g:219:3: ( ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) )
        // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
        {
        // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
        // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';'
        {
        // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) )
        // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
        {
        // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
        // InternalKim.g:222:6: lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getUpperOntologyStatementUpperOntologyDefinitionParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_upperOntologyStatement_4_0=ruleUpperOntologyDefinition();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,20,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred6_InternalKim

    // $ANTLR start synpred7_InternalKim
    public final void synpred7_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        EObject lv_defineStatement_6_0 = null;


        // InternalKim.g:245:3: ( ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) )
        // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
        {
        // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
        // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';'
        {
        // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) )
        // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
        {
        // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
        // InternalKim.g:248:6: lv_defineStatement_6_0= ruleDefineStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getDefineStatementDefineStatementParserRuleCall_3_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_defineStatement_6_0=ruleDefineStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_7=(Token)match(input,20,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred7_InternalKim

    // $ANTLR start synpred10_InternalKim
    public final void synpred10_InternalKim_fragment() throws RecognitionException {   
        Token lv_inactive_3_0=null;

        // InternalKim.g:372:4: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )
        // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        {
        // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        // InternalKim.g:373:5: {...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred10_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:373:111: ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        // InternalKim.g:374:6: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:377:9: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        // InternalKim.g:377:10: {...}? => ( (lv_inactive_3_0= 'void' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred10_InternalKim", "true");
        }
        // InternalKim.g:377:19: ( (lv_inactive_3_0= 'void' ) )
        // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
        {
        // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
        // InternalKim.g:378:10: lv_inactive_3_0= 'void'
        {
        lv_inactive_3_0=(Token)match(input,21,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred10_InternalKim

    // $ANTLR start synpred12_InternalKim
    public final void synpred12_InternalKim_fragment() throws RecognitionException {   
        Token lv_projectPrivate_4_0=null;
        Token lv_private_5_0=null;

        // InternalKim.g:395:4: ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )
        // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
        {
        // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
        // InternalKim.g:396:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred12_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:396:111: ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
        // InternalKim.g:397:6: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:400:9: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
        // InternalKim.g:400:10: {...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred12_InternalKim", "true");
        }
        // InternalKim.g:400:19: ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
        // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) )
        {
        // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )?
        int alt364=2;
        int LA364_0 = input.LA(1);

        if ( (LA364_0==22) ) {
            alt364=1;
        }
        switch (alt364) {
            case 1 :
                // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
                {
                // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
                // InternalKim.g:402:11: lv_projectPrivate_4_0= 'project'
                {
                lv_projectPrivate_4_0=(Token)match(input,22,FOLLOW_7); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:414:9: ( (lv_private_5_0= 'private' ) )
        // InternalKim.g:415:10: (lv_private_5_0= 'private' )
        {
        // InternalKim.g:415:10: (lv_private_5_0= 'private' )
        // InternalKim.g:416:11: lv_private_5_0= 'private'
        {
        lv_private_5_0=(Token)match(input,23,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred12_InternalKim

    // $ANTLR start synpred13_InternalKim
    public final void synpred13_InternalKim_fragment() throws RecognitionException {   
        Token lv_inactive_3_0=null;
        Token lv_projectPrivate_4_0=null;
        Token lv_private_5_0=null;

        // InternalKim.g:366:4: ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )
        // InternalKim.g:366:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) )
        {
        // InternalKim.g:366:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) )
        // InternalKim.g:367:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* )
        {
        getUnorderedGroupHelper().enter(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());
        // InternalKim.g:370:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* )
        // InternalKim.g:371:6: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )*
        {
        // InternalKim.g:371:6: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )*
        loop366:
        do {
            int alt366=3;
            int LA366_0 = input.LA(1);

            if ( LA366_0 == 21 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
                alt366=1;
            }
            else if ( LA366_0 == 22 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                alt366=2;
            }
            else if ( LA366_0 == 23 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                alt366=2;
            }


            switch (alt366) {
        	case 1 :
        	    // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        	    {
        	    // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        	    // InternalKim.g:373:5: {...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred13_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)");
        	    }
        	    // InternalKim.g:373:111: ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        	    // InternalKim.g:374:6: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
        	    // InternalKim.g:377:9: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        	    // InternalKim.g:377:10: {...}? => ( (lv_inactive_3_0= 'void' ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred13_InternalKim", "true");
        	    }
        	    // InternalKim.g:377:19: ( (lv_inactive_3_0= 'void' ) )
        	    // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
        	    {
        	    // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
        	    // InternalKim.g:378:10: lv_inactive_3_0= 'void'
        	    {
        	    lv_inactive_3_0=(Token)match(input,21,FOLLOW_191); if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
        	    {
        	    // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
        	    // InternalKim.g:396:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred13_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)");
        	    }
        	    // InternalKim.g:396:111: ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
        	    // InternalKim.g:397:6: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
        	    // InternalKim.g:400:9: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
        	    // InternalKim.g:400:10: {...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred13_InternalKim", "true");
        	    }
        	    // InternalKim.g:400:19: ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
        	    // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) )
        	    {
        	    // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )?
        	    int alt365=2;
        	    int LA365_0 = input.LA(1);

        	    if ( (LA365_0==22) ) {
        	        alt365=1;
        	    }
        	    switch (alt365) {
        	        case 1 :
        	            // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
        	            {
        	            // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
        	            // InternalKim.g:402:11: lv_projectPrivate_4_0= 'project'
        	            {
        	            lv_projectPrivate_4_0=(Token)match(input,22,FOLLOW_7); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }

        	    // InternalKim.g:414:9: ( (lv_private_5_0= 'private' ) )
        	    // InternalKim.g:415:10: (lv_private_5_0= 'private' )
        	    {
        	    // InternalKim.g:415:10: (lv_private_5_0= 'private' )
        	    // InternalKim.g:416:11: lv_private_5_0= 'private'
        	    {
        	    lv_private_5_0=(Token)match(input,23,FOLLOW_191); if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop366;
            }
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred13_InternalKim

    // $ANTLR start synpred18_InternalKim
    public final void synpred18_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_urns_1_0 = null;

        EObject lv_urns_3_0 = null;


        // InternalKim.g:659:5: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) )
        // InternalKim.g:659:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
        {
        // InternalKim.g:659:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
        // InternalKim.g:660:6: ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
        {
        // InternalKim.g:660:6: ( (lv_urns_1_0= ruleUrn ) )
        // InternalKim.g:661:7: (lv_urns_1_0= ruleUrn )
        {
        // InternalKim.g:661:7: (lv_urns_1_0= ruleUrn )
        // InternalKim.g:662:8: lv_urns_1_0= ruleUrn
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_0_0());
          							
        }
        pushFollow(FOLLOW_34);
        lv_urns_1_0=ruleUrn();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:679:6: (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
        loop368:
        do {
            int alt368=2;
            int LA368_0 = input.LA(1);

            if ( (LA368_0==27) ) {
                alt368=1;
            }


            switch (alt368) {
        	case 1 :
        	    // InternalKim.g:680:7: otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) )
        	    {
        	    otherlv_2=(Token)match(input,27,FOLLOW_14); if (state.failed) return ;
        	    // InternalKim.g:684:7: ( (lv_urns_3_0= ruleUrn ) )
        	    // InternalKim.g:685:8: (lv_urns_3_0= ruleUrn )
        	    {
        	    // InternalKim.g:685:8: (lv_urns_3_0= ruleUrn )
        	    // InternalKim.g:686:9: lv_urns_3_0= ruleUrn
        	    {
        	    if ( state.backtracking==0 ) {

        	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_1_1_0());
        	      								
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_urns_3_0=ruleUrn();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop368;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred18_InternalKim

    // $ANTLR start synpred23_InternalKim
    public final void synpred23_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_boolean_6_1=null;
        Token lv_boolean_6_2=null;
        Token otherlv_8=null;
        EObject lv_urns_1_0 = null;

        EObject lv_urns_3_0 = null;

        EObject lv_function_4_0 = null;

        EObject lv_number_5_0 = null;

        EObject lv_concept_7_0 = null;


        // InternalKim.g:658:4: ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )
        // InternalKim.g:658:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as'
        {
        // InternalKim.g:658:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) )
        int alt372=5;
        alt372 = dfa372.predict(input);
        switch (alt372) {
            case 1 :
                // InternalKim.g:659:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                {
                // InternalKim.g:659:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                // InternalKim.g:660:6: ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                {
                // InternalKim.g:660:6: ( (lv_urns_1_0= ruleUrn ) )
                // InternalKim.g:661:7: (lv_urns_1_0= ruleUrn )
                {
                // InternalKim.g:661:7: (lv_urns_1_0= ruleUrn )
                // InternalKim.g:662:8: lv_urns_1_0= ruleUrn
                {
                if ( state.backtracking==0 ) {

                  								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_0_0());
                  							
                }
                pushFollow(FOLLOW_13);
                lv_urns_1_0=ruleUrn();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:679:6: (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                loop370:
                do {
                    int alt370=2;
                    int LA370_0 = input.LA(1);

                    if ( (LA370_0==27) ) {
                        alt370=1;
                    }


                    switch (alt370) {
                	case 1 :
                	    // InternalKim.g:680:7: otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) )
                	    {
                	    otherlv_2=(Token)match(input,27,FOLLOW_14); if (state.failed) return ;
                	    // InternalKim.g:684:7: ( (lv_urns_3_0= ruleUrn ) )
                	    // InternalKim.g:685:8: (lv_urns_3_0= ruleUrn )
                	    {
                	    // InternalKim.g:685:8: (lv_urns_3_0= ruleUrn )
                	    // InternalKim.g:686:9: lv_urns_3_0= ruleUrn
                	    {
                	    if ( state.backtracking==0 ) {

                	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_1_1_0());
                	      								
                	    }
                	    pushFollow(FOLLOW_13);
                	    lv_urns_3_0=ruleUrn();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop370;
                    }
                } while (true);


                }


                }
                break;
            case 2 :
                // InternalKim.g:706:5: ( (lv_function_4_0= ruleFunction ) )
                {
                // InternalKim.g:706:5: ( (lv_function_4_0= ruleFunction ) )
                // InternalKim.g:707:6: (lv_function_4_0= ruleFunction )
                {
                // InternalKim.g:707:6: (lv_function_4_0= ruleFunction )
                // InternalKim.g:708:7: lv_function_4_0= ruleFunction
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getFunctionFunctionParserRuleCall_1_0_1_0());
                  						
                }
                pushFollow(FOLLOW_11);
                lv_function_4_0=ruleFunction();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalKim.g:726:5: ( (lv_number_5_0= ruleNumber ) )
                {
                // InternalKim.g:726:5: ( (lv_number_5_0= ruleNumber ) )
                // InternalKim.g:727:6: (lv_number_5_0= ruleNumber )
                {
                // InternalKim.g:727:6: (lv_number_5_0= ruleNumber )
                // InternalKim.g:728:7: lv_number_5_0= ruleNumber
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getNumberNumberParserRuleCall_1_0_2_0());
                  						
                }
                pushFollow(FOLLOW_11);
                lv_number_5_0=ruleNumber();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 4 :
                // InternalKim.g:746:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                {
                // InternalKim.g:746:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                // InternalKim.g:747:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                {
                // InternalKim.g:747:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                // InternalKim.g:748:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                {
                // InternalKim.g:748:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                int alt371=2;
                int LA371_0 = input.LA(1);

                if ( (LA371_0==28) ) {
                    alt371=1;
                }
                else if ( (LA371_0==29) ) {
                    alt371=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 371, 0, input);

                    throw nvae;
                }
                switch (alt371) {
                    case 1 :
                        // InternalKim.g:749:8: lv_boolean_6_1= 'true'
                        {
                        lv_boolean_6_1=(Token)match(input,28,FOLLOW_11); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:760:8: lv_boolean_6_2= 'false'
                        {
                        lv_boolean_6_2=(Token)match(input,29,FOLLOW_11); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }
                break;
            case 5 :
                // InternalKim.g:774:5: ( (lv_concept_7_0= ruleSimpleObservableSemantics ) )
                {
                // InternalKim.g:774:5: ( (lv_concept_7_0= ruleSimpleObservableSemantics ) )
                // InternalKim.g:775:6: (lv_concept_7_0= ruleSimpleObservableSemantics )
                {
                // InternalKim.g:775:6: (lv_concept_7_0= ruleSimpleObservableSemantics )
                // InternalKim.g:776:7: lv_concept_7_0= ruleSimpleObservableSemantics
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getConceptSimpleObservableSemanticsParserRuleCall_1_0_4_0());
                  						
                }
                pushFollow(FOLLOW_11);
                lv_concept_7_0=ruleSimpleObservableSemantics();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        otherlv_8=(Token)match(input,25,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred23_InternalKim

    // $ANTLR start synpred53_InternalKim
    public final void synpred53_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:1514:5: ( 'to' )
        // InternalKim.g:1514:6: 'to'
        {
        match(input,36,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred53_InternalKim

    // $ANTLR start synpred57_InternalKim
    public final void synpred57_InternalKim_fragment() throws RecognitionException {   
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;


        // InternalKim.g:1472:3: ( ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) )
        // InternalKim.g:1472:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        {
        // InternalKim.g:1472:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        // InternalKim.g:1473:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        {
        // InternalKim.g:1473:4: ( (lv_int0_2_0= ruleNumber ) )
        // InternalKim.g:1474:5: (lv_int0_2_0= ruleNumber )
        {
        // InternalKim.g:1474:5: (lv_int0_2_0= ruleNumber )
        // InternalKim.g:1475:6: lv_int0_2_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt0NumberParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_37);
        lv_int0_2_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1492:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
        int alt388=3;
        int LA388_0 = input.LA(1);

        if ( (LA388_0==46) ) {
            alt388=1;
        }
        else if ( (LA388_0==47) ) {
            alt388=2;
        }
        switch (alt388) {
            case 1 :
                // InternalKim.g:1493:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                {
                // InternalKim.g:1493:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                // InternalKim.g:1494:6: (lv_leftLimit_3_0= 'inclusive' )
                {
                // InternalKim.g:1494:6: (lv_leftLimit_3_0= 'inclusive' )
                // InternalKim.g:1495:7: lv_leftLimit_3_0= 'inclusive'
                {
                lv_leftLimit_3_0=(Token)match(input,46,FOLLOW_25); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1508:5: otherlv_4= 'exclusive'
                {
                otherlv_4=(Token)match(input,47,FOLLOW_25); if (state.failed) return ;

                }
                break;

        }

        // InternalKim.g:1513:4: ( ( 'to' )=>otherlv_5= 'to' )
        // InternalKim.g:1514:5: ( 'to' )=>otherlv_5= 'to'
        {
        otherlv_5=(Token)match(input,36,FOLLOW_38); if (state.failed) return ;

        }

        // InternalKim.g:1520:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
        // InternalKim.g:1521:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
        {
        // InternalKim.g:1525:5: (lv_int1_6_0= ruleNumber )
        // InternalKim.g:1526:6: lv_int1_6_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt1NumberParserRuleCall_1_3_0());
          					
        }
        pushFollow(FOLLOW_39);
        lv_int1_6_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1543:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        int alt389=3;
        int LA389_0 = input.LA(1);

        if ( (LA389_0==46) ) {
            alt389=1;
        }
        else if ( (LA389_0==47) ) {
            alt389=2;
        }
        switch (alt389) {
            case 1 :
                // InternalKim.g:1544:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                {
                // InternalKim.g:1544:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                // InternalKim.g:1545:6: (lv_rightLimit_7_0= 'inclusive' )
                {
                // InternalKim.g:1545:6: (lv_rightLimit_7_0= 'inclusive' )
                // InternalKim.g:1546:7: lv_rightLimit_7_0= 'inclusive'
                {
                lv_rightLimit_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1559:5: otherlv_8= 'exclusive'
                {
                otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred57_InternalKim

    // $ANTLR start synpred58_InternalKim
    public final void synpred58_InternalKim_fragment() throws RecognitionException {   
        EObject lv_num_9_0 = null;


        // InternalKim.g:1566:3: ( ( (lv_num_9_0= ruleNumber ) ) )
        // InternalKim.g:1566:3: ( (lv_num_9_0= ruleNumber ) )
        {
        // InternalKim.g:1566:3: ( (lv_num_9_0= ruleNumber ) )
        // InternalKim.g:1567:4: (lv_num_9_0= ruleNumber )
        {
        // InternalKim.g:1567:4: (lv_num_9_0= ruleNumber )
        // InternalKim.g:1568:5: lv_num_9_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSAccess().getNumNumberParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_num_9_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred58_InternalKim

    // $ANTLR start synpred61_InternalKim
    public final void synpred61_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_13_0 = null;


        // InternalKim.g:1631:3: ( ( (lv_concept_13_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:1631:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:1631:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        // InternalKim.g:1632:4: (lv_concept_13_0= ruleConceptDeclaration )
        {
        // InternalKim.g:1632:4: (lv_concept_13_0= ruleConceptDeclaration )
        // InternalKim.g:1633:5: lv_concept_13_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSAccess().getConceptConceptDeclarationParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_13_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred61_InternalKim

    // $ANTLR start synpred64_InternalKim
    public final void synpred64_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        EObject lv_toResolve_15_0 = null;

        EObject lv_toResolve_17_0 = null;


        // InternalKim.g:1651:3: ( (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) )
        // InternalKim.g:1651:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
        {
        // InternalKim.g:1651:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
        // InternalKim.g:1652:4: otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')'
        {
        otherlv_14=(Token)match(input,38,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:1656:4: ( (lv_toResolve_15_0= ruleConceptDeclaration ) )
        // InternalKim.g:1657:5: (lv_toResolve_15_0= ruleConceptDeclaration )
        {
        // InternalKim.g:1657:5: (lv_toResolve_15_0= ruleConceptDeclaration )
        // InternalKim.g:1658:6: lv_toResolve_15_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_1_0());
          					
        }
        pushFollow(FOLLOW_29);
        lv_toResolve_15_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1675:4: ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )*
        loop390:
        do {
            int alt390=2;
            int LA390_0 = input.LA(1);

            if ( (LA390_0==27) ) {
                alt390=1;
            }


            switch (alt390) {
        	case 1 :
        	    // InternalKim.g:1676:5: ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:1676:5: ( ( ',' )=>otherlv_16= ',' )
        	    // InternalKim.g:1677:6: ( ',' )=>otherlv_16= ','
        	    {
        	    otherlv_16=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;

        	    }

        	    // InternalKim.g:1683:5: ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:1684:6: (lv_toResolve_17_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:1684:6: (lv_toResolve_17_0= ruleConceptDeclaration )
        	    // InternalKim.g:1685:7: lv_toResolve_17_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_2_1_0());
        	      						
        	    }
        	    pushFollow(FOLLOW_29);
        	    lv_toResolve_17_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop390;
            }
        } while (true);

        otherlv_18=(Token)match(input,41,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred64_InternalKim

    // $ANTLR start synpred71_InternalKim
    public final void synpred71_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:1872:5: ( 'to' )
        // InternalKim.g:1872:6: 'to'
        {
        match(input,36,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred71_InternalKim

    // $ANTLR start synpred75_InternalKim
    public final void synpred75_InternalKim_fragment() throws RecognitionException {   
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;


        // InternalKim.g:1830:3: ( ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) )
        // InternalKim.g:1830:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        {
        // InternalKim.g:1830:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        // InternalKim.g:1831:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        {
        // InternalKim.g:1831:4: ( (lv_int0_2_0= ruleNumber ) )
        // InternalKim.g:1832:5: (lv_int0_2_0= ruleNumber )
        {
        // InternalKim.g:1832:5: (lv_int0_2_0= ruleNumber )
        // InternalKim.g:1833:6: lv_int0_2_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getInt0NumberParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_37);
        lv_int0_2_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1850:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
        int alt392=3;
        int LA392_0 = input.LA(1);

        if ( (LA392_0==46) ) {
            alt392=1;
        }
        else if ( (LA392_0==47) ) {
            alt392=2;
        }
        switch (alt392) {
            case 1 :
                // InternalKim.g:1851:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                {
                // InternalKim.g:1851:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                // InternalKim.g:1852:6: (lv_leftLimit_3_0= 'inclusive' )
                {
                // InternalKim.g:1852:6: (lv_leftLimit_3_0= 'inclusive' )
                // InternalKim.g:1853:7: lv_leftLimit_3_0= 'inclusive'
                {
                lv_leftLimit_3_0=(Token)match(input,46,FOLLOW_25); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1866:5: otherlv_4= 'exclusive'
                {
                otherlv_4=(Token)match(input,47,FOLLOW_25); if (state.failed) return ;

                }
                break;

        }

        // InternalKim.g:1871:4: ( ( 'to' )=>otherlv_5= 'to' )
        // InternalKim.g:1872:5: ( 'to' )=>otherlv_5= 'to'
        {
        otherlv_5=(Token)match(input,36,FOLLOW_38); if (state.failed) return ;

        }

        // InternalKim.g:1878:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
        // InternalKim.g:1879:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
        {
        // InternalKim.g:1883:5: (lv_int1_6_0= ruleNumber )
        // InternalKim.g:1884:6: lv_int1_6_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getInt1NumberParserRuleCall_1_3_0());
          					
        }
        pushFollow(FOLLOW_39);
        lv_int1_6_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1901:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        int alt393=3;
        int LA393_0 = input.LA(1);

        if ( (LA393_0==46) ) {
            alt393=1;
        }
        else if ( (LA393_0==47) ) {
            alt393=2;
        }
        switch (alt393) {
            case 1 :
                // InternalKim.g:1902:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                {
                // InternalKim.g:1902:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                // InternalKim.g:1903:6: (lv_rightLimit_7_0= 'inclusive' )
                {
                // InternalKim.g:1903:6: (lv_rightLimit_7_0= 'inclusive' )
                // InternalKim.g:1904:7: lv_rightLimit_7_0= 'inclusive'
                {
                lv_rightLimit_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1917:5: otherlv_8= 'exclusive'
                {
                otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred75_InternalKim

    // $ANTLR start synpred76_InternalKim
    public final void synpred76_InternalKim_fragment() throws RecognitionException {   
        EObject lv_num_9_0 = null;


        // InternalKim.g:1924:3: ( ( (lv_num_9_0= ruleNumber ) ) )
        // InternalKim.g:1924:3: ( (lv_num_9_0= ruleNumber ) )
        {
        // InternalKim.g:1924:3: ( (lv_num_9_0= ruleNumber ) )
        // InternalKim.g:1925:4: (lv_num_9_0= ruleNumber )
        {
        // InternalKim.g:1925:4: (lv_num_9_0= ruleNumber )
        // InternalKim.g:1926:5: lv_num_9_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getNumNumberParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_num_9_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred76_InternalKim

    // $ANTLR start synpred79_InternalKim
    public final void synpred79_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_13_0 = null;


        // InternalKim.g:1989:3: ( ( (lv_concept_13_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:1989:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:1989:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        // InternalKim.g:1990:4: (lv_concept_13_0= ruleConceptDeclaration )
        {
        // InternalKim.g:1990:4: (lv_concept_13_0= ruleConceptDeclaration )
        // InternalKim.g:1991:5: lv_concept_13_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getConceptConceptDeclarationParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_13_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred79_InternalKim

    // $ANTLR start synpred80_InternalKim
    public final void synpred80_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_14_1=null;

        // InternalKim.g:2012:6: (lv_id_14_1= RULE_LOWERCASE_ID )
        // InternalKim.g:2012:6: lv_id_14_1= RULE_LOWERCASE_ID
        {
        lv_id_14_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred80_InternalKim

    // $ANTLR start synpred81_InternalKim
    public final void synpred81_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_14_1=null;
        AntlrDatatypeRuleToken lv_id_14_2 = null;


        // InternalKim.g:2009:3: ( ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) )
        // InternalKim.g:2009:3: ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) )
        {
        // InternalKim.g:2009:3: ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) )
        // InternalKim.g:2010:4: ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) )
        {
        // InternalKim.g:2010:4: ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) )
        // InternalKim.g:2011:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )
        {
        // InternalKim.g:2011:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )
        int alt394=2;
        int LA394_0 = input.LA(1);

        if ( (LA394_0==RULE_LOWERCASE_ID) ) {
            int LA394_1 = input.LA(2);

            if ( (LA394_1==105||LA394_1==108) ) {
                alt394=2;
            }
            else if ( (LA394_1==EOF) ) {
                alt394=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 394, 1, input);

                throw nvae;
            }
        }
        else if ( (LA394_0==RULE_UPPERCASE_ID||LA394_0==RULE_LOWERCASE_DASHID) ) {
            alt394=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 394, 0, input);

            throw nvae;
        }
        switch (alt394) {
            case 1 :
                // InternalKim.g:2012:6: lv_id_14_1= RULE_LOWERCASE_ID
                {
                lv_id_14_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:2027:6: lv_id_14_2= rulePropertyId
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getIdPropertyIdParserRuleCall_6_0_1());
                  					
                }
                pushFollow(FOLLOW_2);
                lv_id_14_2=rulePropertyId();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred81_InternalKim

    // $ANTLR start synpred97_InternalKim
    public final void synpred97_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:2580:5: ( 'to' )
        // InternalKim.g:2580:6: 'to'
        {
        match(input,36,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred97_InternalKim

    // $ANTLR start synpred115_InternalKim
    public final void synpred115_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_6=null;
        EObject lv_actions_5_0 = null;

        EObject lv_actions_7_0 = null;


        // InternalKim.g:2917:5: ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )
        // InternalKim.g:2917:5: ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
        {
        // InternalKim.g:2917:5: ( (lv_actions_5_0= ruleAction ) )
        // InternalKim.g:2918:6: (lv_actions_5_0= ruleAction )
        {
        // InternalKim.g:2918:6: (lv_actions_5_0= ruleAction )
        // InternalKim.g:2919:7: lv_actions_5_0= ruleAction
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_0_0());
          						
        }
        pushFollow(FOLLOW_34);
        lv_actions_5_0=ruleAction();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:2936:5: ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
        loop399:
        do {
            int alt399=2;
            int LA399_0 = input.LA(1);

            if ( (LA399_0==27) ) {
                alt399=1;
            }


            switch (alt399) {
        	case 1 :
        	    // InternalKim.g:2937:6: ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) )
        	    {
        	    // InternalKim.g:2937:6: ( ( ',' )=>otherlv_6= ',' )
        	    // InternalKim.g:2938:7: ( ',' )=>otherlv_6= ','
        	    {
        	    otherlv_6=(Token)match(input,27,FOLLOW_48); if (state.failed) return ;

        	    }

        	    // InternalKim.g:2944:6: ( (lv_actions_7_0= ruleAction ) )
        	    // InternalKim.g:2945:7: (lv_actions_7_0= ruleAction )
        	    {
        	    // InternalKim.g:2945:7: (lv_actions_7_0= ruleAction )
        	    // InternalKim.g:2946:8: lv_actions_7_0= ruleAction
        	    {
        	    if ( state.backtracking==0 ) {

        	      								newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_1_1_0());
        	      							
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_actions_7_0=ruleAction();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop399;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred115_InternalKim

    // $ANTLR start synpred126_InternalKim
    public final void synpred126_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_0_0 = null;


        // InternalKim.g:3194:3: ( ( (lv_function_0_0= ruleFunction ) ) )
        // InternalKim.g:3194:3: ( (lv_function_0_0= ruleFunction ) )
        {
        // InternalKim.g:3194:3: ( (lv_function_0_0= ruleFunction ) )
        // InternalKim.g:3195:4: (lv_function_0_0= ruleFunction )
        {
        // InternalKim.g:3195:4: (lv_function_0_0= ruleFunction )
        // InternalKim.g:3196:5: lv_function_0_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionFunctionParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_0_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred126_InternalKim

    // $ANTLR start synpred149_InternalKim
    public final void synpred149_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:3690:5: ( ( ruleValue ) )
        // InternalKim.g:3690:6: ( ruleValue )
        {
        // InternalKim.g:3690:6: ( ruleValue )
        // InternalKim.g:3691:6: ruleValue
        {
        pushFollow(FOLLOW_2);
        ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred149_InternalKim

    // $ANTLR start synpred153_InternalKim
    public final void synpred153_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_1_0 = null;


        // InternalKim.g:3814:3: ( ( (lv_function_1_0= ruleFunction ) ) )
        // InternalKim.g:3814:3: ( (lv_function_1_0= ruleFunction ) )
        {
        // InternalKim.g:3814:3: ( (lv_function_1_0= ruleFunction ) )
        // InternalKim.g:3815:4: (lv_function_1_0= ruleFunction )
        {
        // InternalKim.g:3815:4: (lv_function_1_0= ruleFunction )
        // InternalKim.g:3816:5: lv_function_1_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getComputableValueAccess().getFunctionFunctionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_1_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred153_InternalKim

    // $ANTLR start synpred160_InternalKim
    public final void synpred160_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;

        // InternalKim.g:3911:3: ( ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:3911:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:3911:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:3912:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:3912:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        // InternalKim.g:3913:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:3913:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        int alt429=3;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            alt429=1;
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            alt429=2;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt429=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 429, 0, input);

            throw nvae;
        }

        switch (alt429) {
            case 1 :
                // InternalKim.g:3914:6: lv_id_5_1= RULE_LOWERCASE_ID
                {
                lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:3929:6: lv_id_5_2= RULE_UPPERCASE_ID
                {
                lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:3944:6: lv_id_5_3= RULE_CAMELCASE_ID
                {
                lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred160_InternalKim

    // $ANTLR start synpred169_InternalKim
    public final void synpred169_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token lv_conditionNegated_6_0=null;
        EObject lv_condition_7_0 = null;


        // InternalKim.g:4196:4: ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )
        // InternalKim.g:4196:4: (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) )
        {
        // InternalKim.g:4196:4: (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) )
        int alt433=2;
        int LA433_0 = input.LA(1);

        if ( (LA433_0==44) ) {
            alt433=1;
        }
        else if ( (LA433_0==45) ) {
            alt433=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 433, 0, input);

            throw nvae;
        }
        switch (alt433) {
            case 1 :
                // InternalKim.g:4197:5: otherlv_5= 'if'
                {
                otherlv_5=(Token)match(input,44,FOLLOW_12); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:4202:5: ( (lv_conditionNegated_6_0= 'unless' ) )
                {
                // InternalKim.g:4202:5: ( (lv_conditionNegated_6_0= 'unless' ) )
                // InternalKim.g:4203:6: (lv_conditionNegated_6_0= 'unless' )
                {
                // InternalKim.g:4203:6: (lv_conditionNegated_6_0= 'unless' )
                // InternalKim.g:4204:7: lv_conditionNegated_6_0= 'unless'
                {
                lv_conditionNegated_6_0=(Token)match(input,45,FOLLOW_12); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:4217:4: ( (lv_condition_7_0= ruleValue ) )
        // InternalKim.g:4218:5: (lv_condition_7_0= ruleValue )
        {
        // InternalKim.g:4218:5: (lv_condition_7_0= ruleValue )
        // InternalKim.g:4219:6: lv_condition_7_0= ruleValue
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExecutableValueAccess().getConditionValueParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_condition_7_0=ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred169_InternalKim

    // $ANTLR start synpred191_InternalKim
    public final void synpred191_InternalKim_fragment() throws RecognitionException {   
        Token lv_projectPrivate_3_0=null;
        Token lv_private_4_0=null;

        // InternalKim.g:4473:4: ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) )
        // InternalKim.g:4473:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) )
        {
        // InternalKim.g:4473:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) )
        // InternalKim.g:4474:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred191_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:4474:106: ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) )
        // InternalKim.g:4475:6: ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:4478:9: ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) )
        // InternalKim.g:4478:10: {...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred191_InternalKim", "true");
        }
        // InternalKim.g:4478:19: ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) )
        // InternalKim.g:4478:20: ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) )
        {
        // InternalKim.g:4478:20: ( (lv_projectPrivate_3_0= 'project' ) )?
        int alt435=2;
        int LA435_0 = input.LA(1);

        if ( (LA435_0==22) ) {
            alt435=1;
        }
        switch (alt435) {
            case 1 :
                // InternalKim.g:4479:10: (lv_projectPrivate_3_0= 'project' )
                {
                // InternalKim.g:4479:10: (lv_projectPrivate_3_0= 'project' )
                // InternalKim.g:4480:11: lv_projectPrivate_3_0= 'project'
                {
                lv_projectPrivate_3_0=(Token)match(input,22,FOLLOW_7); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:4492:9: ( (lv_private_4_0= 'private' ) )
        // InternalKim.g:4493:10: (lv_private_4_0= 'private' )
        {
        // InternalKim.g:4493:10: (lv_private_4_0= 'private' )
        // InternalKim.g:4494:11: lv_private_4_0= 'private'
        {
        lv_private_4_0=(Token)match(input,23,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred191_InternalKim

    // $ANTLR start synpred192_InternalKim
    public final void synpred192_InternalKim_fragment() throws RecognitionException {   
        Token lv_inactive_5_0=null;

        // InternalKim.g:4512:4: ( ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )
        // InternalKim.g:4512:4: ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) )
        {
        // InternalKim.g:4512:4: ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) )
        // InternalKim.g:4513:5: {...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred192_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:4513:106: ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) )
        // InternalKim.g:4514:6: ({...}? => ( (lv_inactive_5_0= 'void' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:4517:9: ({...}? => ( (lv_inactive_5_0= 'void' ) ) )
        // InternalKim.g:4517:10: {...}? => ( (lv_inactive_5_0= 'void' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred192_InternalKim", "true");
        }
        // InternalKim.g:4517:19: ( (lv_inactive_5_0= 'void' ) )
        // InternalKim.g:4517:20: (lv_inactive_5_0= 'void' )
        {
        // InternalKim.g:4517:20: (lv_inactive_5_0= 'void' )
        // InternalKim.g:4518:10: lv_inactive_5_0= 'void'
        {
        lv_inactive_5_0=(Token)match(input,21,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred192_InternalKim

    // $ANTLR start synpred196_InternalKim
    public final void synpred196_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token lv_language_14_0=null;

        // InternalKim.g:4622:4: ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) )
        // InternalKim.g:4622:4: ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) )
        {
        // InternalKim.g:4622:4: ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) )
        // InternalKim.g:4623:5: {...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred196_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0)");
        }
        // InternalKim.g:4623:106: ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) )
        // InternalKim.g:4624:6: ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0);
        // InternalKim.g:4627:9: ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) )
        // InternalKim.g:4627:10: {...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred196_InternalKim", "true");
        }
        // InternalKim.g:4627:19: (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) )
        // InternalKim.g:4627:20: otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) )
        {
        otherlv_12=(Token)match(input,31,FOLLOW_67); if (state.failed) return ;
        otherlv_13=(Token)match(input,92,FOLLOW_10); if (state.failed) return ;
        // InternalKim.g:4635:9: ( (lv_language_14_0= RULE_UPPERCASE_ID ) )
        // InternalKim.g:4636:10: (lv_language_14_0= RULE_UPPERCASE_ID )
        {
        // InternalKim.g:4636:10: (lv_language_14_0= RULE_UPPERCASE_ID )
        // InternalKim.g:4637:11: lv_language_14_0= RULE_UPPERCASE_ID
        {
        lv_language_14_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred196_InternalKim

    // $ANTLR start synpred199_InternalKim
    public final void synpred199_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_15=null;
        Token otherlv_17=null;
        EObject lv_imported_16_0 = null;

        EObject lv_imported_18_0 = null;


        // InternalKim.g:4659:4: ( ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) )
        // InternalKim.g:4659:4: ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) )
        {
        // InternalKim.g:4659:4: ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) )
        // InternalKim.g:4660:5: {...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred199_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1)");
        }
        // InternalKim.g:4660:106: ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) )
        // InternalKim.g:4661:6: ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1);
        // InternalKim.g:4664:9: ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) )
        // InternalKim.g:4664:10: {...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred199_InternalKim", "true");
        }
        // InternalKim.g:4664:19: (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* )
        // InternalKim.g:4664:20: otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )*
        {
        otherlv_15=(Token)match(input,31,FOLLOW_68); if (state.failed) return ;
        // InternalKim.g:4668:9: ( (lv_imported_16_0= ruleImport ) )
        // InternalKim.g:4669:10: (lv_imported_16_0= ruleImport )
        {
        // InternalKim.g:4669:10: (lv_imported_16_0= ruleImport )
        // InternalKim.g:4670:11: lv_imported_16_0= ruleImport
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_1_1_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_imported_16_0=ruleImport();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4687:9: ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )*
        loop436:
        do {
            int alt436=2;
            int LA436_0 = input.LA(1);

            if ( (LA436_0==27) ) {
                alt436=1;
            }


            switch (alt436) {
        	case 1 :
        	    // InternalKim.g:4688:10: ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) )
        	    {
        	    // InternalKim.g:4688:10: ( ( ',' )=>otherlv_17= ',' )
        	    // InternalKim.g:4689:11: ( ',' )=>otherlv_17= ','
        	    {
        	    otherlv_17=(Token)match(input,27,FOLLOW_68); if (state.failed) return ;

        	    }

        	    // InternalKim.g:4695:10: ( (lv_imported_18_0= ruleImport ) )
        	    // InternalKim.g:4696:11: (lv_imported_18_0= ruleImport )
        	    {
        	    // InternalKim.g:4696:11: (lv_imported_18_0= ruleImport )
        	    // InternalKim.g:4697:12: lv_imported_18_0= ruleImport
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_1_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_imported_18_0=ruleImport();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop436;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred199_InternalKim

    // $ANTLR start synpred201_InternalKim
    public final void synpred201_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        Token otherlv_21=null;
        EObject lv_owlImports_20_0 = null;

        EObject lv_owlImports_22_0 = null;


        // InternalKim.g:4721:4: ( ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) )
        // InternalKim.g:4721:4: ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) )
        {
        // InternalKim.g:4721:4: ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) )
        // InternalKim.g:4722:5: {...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred201_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2)");
        }
        // InternalKim.g:4722:106: ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) )
        // InternalKim.g:4723:6: ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2);
        // InternalKim.g:4726:9: ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) )
        // InternalKim.g:4726:10: {...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred201_InternalKim", "true");
        }
        // InternalKim.g:4726:19: (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* )
        // InternalKim.g:4726:20: otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )*
        {
        otherlv_19=(Token)match(input,93,FOLLOW_70); if (state.failed) return ;
        // InternalKim.g:4730:9: ( (lv_owlImports_20_0= ruleOwlImport ) )
        // InternalKim.g:4731:10: (lv_owlImports_20_0= ruleOwlImport )
        {
        // InternalKim.g:4731:10: (lv_owlImports_20_0= ruleOwlImport )
        // InternalKim.g:4732:11: lv_owlImports_20_0= ruleOwlImport
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_2_1_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_owlImports_20_0=ruleOwlImport();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4749:9: (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )*
        loop437:
        do {
            int alt437=2;
            int LA437_0 = input.LA(1);

            if ( (LA437_0==27) ) {
                alt437=1;
            }


            switch (alt437) {
        	case 1 :
        	    // InternalKim.g:4750:10: otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) )
        	    {
        	    otherlv_21=(Token)match(input,27,FOLLOW_70); if (state.failed) return ;
        	    // InternalKim.g:4754:10: ( (lv_owlImports_22_0= ruleOwlImport ) )
        	    // InternalKim.g:4755:11: (lv_owlImports_22_0= ruleOwlImport )
        	    {
        	    // InternalKim.g:4755:11: (lv_owlImports_22_0= ruleOwlImport )
        	    // InternalKim.g:4756:12: lv_owlImports_22_0= ruleOwlImport
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_2_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_owlImports_22_0=ruleOwlImport();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop437;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred201_InternalKim

    // $ANTLR start synpred204_InternalKim
    public final void synpred204_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        Token otherlv_25=null;
        EObject lv_coverage_24_0 = null;

        EObject lv_coverage_26_0 = null;


        // InternalKim.g:4780:4: ( ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) )
        // InternalKim.g:4780:4: ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) )
        {
        // InternalKim.g:4780:4: ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) )
        // InternalKim.g:4781:5: {...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred204_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3)");
        }
        // InternalKim.g:4781:106: ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) )
        // InternalKim.g:4782:6: ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3);
        // InternalKim.g:4785:9: ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) )
        // InternalKim.g:4785:10: {...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred204_InternalKim", "true");
        }
        // InternalKim.g:4785:19: (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* )
        // InternalKim.g:4785:20: otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )*
        {
        otherlv_23=(Token)match(input,94,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:4789:9: ( (lv_coverage_24_0= ruleFunction ) )
        // InternalKim.g:4790:10: (lv_coverage_24_0= ruleFunction )
        {
        // InternalKim.g:4790:10: (lv_coverage_24_0= ruleFunction )
        // InternalKim.g:4791:11: lv_coverage_24_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_3_1_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_coverage_24_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4808:9: ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )*
        loop438:
        do {
            int alt438=2;
            int LA438_0 = input.LA(1);

            if ( (LA438_0==27) ) {
                alt438=1;
            }


            switch (alt438) {
        	case 1 :
        	    // InternalKim.g:4809:10: ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) )
        	    {
        	    // InternalKim.g:4809:10: ( ( ',' )=>otherlv_25= ',' )
        	    // InternalKim.g:4810:11: ( ',' )=>otherlv_25= ','
        	    {
        	    otherlv_25=(Token)match(input,27,FOLLOW_26); if (state.failed) return ;

        	    }

        	    // InternalKim.g:4816:10: ( (lv_coverage_26_0= ruleFunction ) )
        	    // InternalKim.g:4817:11: (lv_coverage_26_0= ruleFunction )
        	    {
        	    // InternalKim.g:4817:11: (lv_coverage_26_0= ruleFunction )
        	    // InternalKim.g:4818:12: lv_coverage_26_0= ruleFunction
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_3_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_coverage_26_0=ruleFunction();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop438;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred204_InternalKim

    // $ANTLR start synpred206_InternalKim
    public final void synpred206_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_rootDomain_29_0=null;
        EObject lv_domainConcept_30_0 = null;


        // InternalKim.g:4842:4: ( ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) )
        // InternalKim.g:4842:4: ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) )
        {
        // InternalKim.g:4842:4: ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:4843:5: {...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred206_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4)");
        }
        // InternalKim.g:4843:106: ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:4844:6: ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4);
        // InternalKim.g:4847:9: ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) )
        // InternalKim.g:4847:10: {...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred206_InternalKim", "true");
        }
        // InternalKim.g:4847:19: (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) )
        // InternalKim.g:4847:20: otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) )
        {
        otherlv_27=(Token)match(input,48,FOLLOW_71); if (state.failed) return ;
        otherlv_28=(Token)match(input,95,FOLLOW_72); if (state.failed) return ;
        // InternalKim.g:4855:9: ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) )
        int alt439=2;
        int LA439_0 = input.LA(1);

        if ( (LA439_0==96) ) {
            alt439=1;
        }
        else if ( ((LA439_0>=RULE_UPPERCASE_ID && LA439_0<=RULE_LOWERCASE_ID)||LA439_0==RULE_CAMELCASE_ID||LA439_0==RULE_LOWERCASE_DASHID||LA439_0==38||(LA439_0>=128 && LA439_0<=129)||(LA439_0>=137 && LA439_0<=138)||(LA439_0>=140 && LA439_0<=156)) ) {
            alt439=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 439, 0, input);

            throw nvae;
        }
        switch (alt439) {
            case 1 :
                // InternalKim.g:4856:10: ( (lv_rootDomain_29_0= 'root' ) )
                {
                // InternalKim.g:4856:10: ( (lv_rootDomain_29_0= 'root' ) )
                // InternalKim.g:4857:11: (lv_rootDomain_29_0= 'root' )
                {
                // InternalKim.g:4857:11: (lv_rootDomain_29_0= 'root' )
                // InternalKim.g:4858:12: lv_rootDomain_29_0= 'root'
                {
                lv_rootDomain_29_0=(Token)match(input,96,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:4871:10: ( (lv_domainConcept_30_0= ruleConcept ) )
                {
                // InternalKim.g:4871:10: ( (lv_domainConcept_30_0= ruleConcept ) )
                // InternalKim.g:4872:11: (lv_domainConcept_30_0= ruleConcept )
                {
                // InternalKim.g:4872:11: (lv_domainConcept_30_0= ruleConcept )
                // InternalKim.g:4873:12: lv_domainConcept_30_0= ruleConcept
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getNamespaceAccess().getDomainConceptConceptParserRuleCall_5_4_2_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_domainConcept_30_0=ruleConcept();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred206_InternalKim

    // $ANTLR start synpred208_InternalKim
    public final void synpred208_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        AntlrDatatypeRuleToken lv_disjointNamespaces_33_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_35_0 = null;


        // InternalKim.g:4897:4: ( ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) )
        // InternalKim.g:4897:4: ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) )
        {
        // InternalKim.g:4897:4: ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) )
        // InternalKim.g:4898:5: {...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred208_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5)");
        }
        // InternalKim.g:4898:106: ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) )
        // InternalKim.g:4899:6: ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5);
        // InternalKim.g:4902:9: ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) )
        // InternalKim.g:4902:10: {...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred208_InternalKim", "true");
        }
        // InternalKim.g:4902:19: (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) )
        // InternalKim.g:4902:20: otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* )
        {
        otherlv_31=(Token)match(input,97,FOLLOW_73); if (state.failed) return ;
        otherlv_32=(Token)match(input,98,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:4910:9: ( (lv_disjointNamespaces_33_0= rulePathName ) )
        // InternalKim.g:4911:10: (lv_disjointNamespaces_33_0= rulePathName )
        {
        // InternalKim.g:4911:10: (lv_disjointNamespaces_33_0= rulePathName )
        // InternalKim.g:4912:11: lv_disjointNamespaces_33_0= rulePathName
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_5_2_0());
          										
        }
        pushFollow(FOLLOW_74);
        lv_disjointNamespaces_33_0=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4929:9: (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* )
        // InternalKim.g:4930:10: otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )*
        {
        otherlv_34=(Token)match(input,27,FOLLOW_192); if (state.failed) return ;
        // InternalKim.g:4934:10: ( (lv_disjointNamespaces_35_0= rulePathName ) )*
        loop440:
        do {
            int alt440=2;
            int LA440_0 = input.LA(1);

            if ( ((LA440_0>=RULE_UPPERCASE_ID && LA440_0<=RULE_LOWERCASE_ID)||LA440_0==RULE_LOWERCASE_DASHID) ) {
                alt440=1;
            }


            switch (alt440) {
        	case 1 :
        	    // InternalKim.g:4935:11: (lv_disjointNamespaces_35_0= rulePathName )
        	    {
        	    // InternalKim.g:4935:11: (lv_disjointNamespaces_35_0= rulePathName )
        	    // InternalKim.g:4936:12: lv_disjointNamespaces_35_0= rulePathName
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_5_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_192);
        	    lv_disjointNamespaces_35_0=rulePathName();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop440;
            }
        } while (true);


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred208_InternalKim

    // $ANTLR start synpred209_InternalKim
    public final void synpred209_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_36=null;
        AntlrDatatypeRuleToken lv_version_37_0 = null;


        // InternalKim.g:4960:4: ( ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) )
        // InternalKim.g:4960:4: ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) )
        {
        // InternalKim.g:4960:4: ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) )
        // InternalKim.g:4961:5: {...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred209_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6)");
        }
        // InternalKim.g:4961:106: ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) )
        // InternalKim.g:4962:6: ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6);
        // InternalKim.g:4965:9: ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) )
        // InternalKim.g:4965:10: {...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred209_InternalKim", "true");
        }
        // InternalKim.g:4965:19: (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) )
        // InternalKim.g:4965:20: otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) )
        {
        otherlv_36=(Token)match(input,99,FOLLOW_76); if (state.failed) return ;
        // InternalKim.g:4969:9: ( (lv_version_37_0= ruleVersionNumber ) )
        // InternalKim.g:4970:10: (lv_version_37_0= ruleVersionNumber )
        {
        // InternalKim.g:4970:10: (lv_version_37_0= ruleVersionNumber )
        // InternalKim.g:4971:11: lv_version_37_0= ruleVersionNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getVersionVersionNumberParserRuleCall_5_6_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_version_37_0=ruleVersionNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred209_InternalKim

    // $ANTLR start synpred212_InternalKim
    public final void synpred212_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_39=null;
        Token otherlv_40=null;
        AntlrDatatypeRuleToken lv_lookupNamespace_41_0 = null;


        // InternalKim.g:5005:9: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) )
        // InternalKim.g:5005:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
        {
        // InternalKim.g:5005:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
        // InternalKim.g:5006:10: {...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred212_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0)");
        }
        // InternalKim.g:5006:113: ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
        // InternalKim.g:5007:11: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0);
        // InternalKim.g:5010:14: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
        // InternalKim.g:5010:15: {...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred212_InternalKim", "true");
        }
        // InternalKim.g:5010:24: (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
        // InternalKim.g:5010:25: otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
        {
        otherlv_39=(Token)match(input,100,FOLLOW_193); if (state.failed) return ;
        // InternalKim.g:5014:14: (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
        int alt443=2;
        int LA443_0 = input.LA(1);

        if ( (LA443_0==101) ) {
            alt443=1;
        }
        switch (alt443) {
            case 1 :
                // InternalKim.g:5015:15: otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )*
                {
                otherlv_40=(Token)match(input,101,FOLLOW_192); if (state.failed) return ;
                // InternalKim.g:5019:15: ( (lv_lookupNamespace_41_0= rulePathName ) )*
                loop442:
                do {
                    int alt442=2;
                    int LA442_0 = input.LA(1);

                    if ( ((LA442_0>=RULE_UPPERCASE_ID && LA442_0<=RULE_LOWERCASE_ID)||LA442_0==RULE_LOWERCASE_DASHID) ) {
                        alt442=1;
                    }


                    switch (alt442) {
                	case 1 :
                	    // InternalKim.g:5020:16: (lv_lookupNamespace_41_0= rulePathName )
                	    {
                	    // InternalKim.g:5020:16: (lv_lookupNamespace_41_0= rulePathName )
                	    // InternalKim.g:5021:17: lv_lookupNamespace_41_0= rulePathName
                	    {
                	    if ( state.backtracking==0 ) {

                	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_7_0_1_1_0());
                	      																
                	    }
                	    pushFollow(FOLLOW_192);
                	    lv_lookupNamespace_41_0=rulePathName();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }
                	    break;

                	default :
                	    break loop442;
                    }
                } while (true);


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred212_InternalKim

    // $ANTLR start synpred214_InternalKim
    public final void synpred214_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_42=null;
        AntlrDatatypeRuleToken lv_blacklistNamespace_43_0 = null;


        // InternalKim.g:5045:9: ( ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) )
        // InternalKim.g:5045:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
        {
        // InternalKim.g:5045:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
        // InternalKim.g:5046:10: {...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred214_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1)");
        }
        // InternalKim.g:5046:113: ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
        // InternalKim.g:5047:11: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1);
        // InternalKim.g:5050:14: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
        // InternalKim.g:5050:15: {...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred214_InternalKim", "true");
        }
        // InternalKim.g:5050:24: (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
        // InternalKim.g:5050:25: otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )*
        {
        otherlv_42=(Token)match(input,102,FOLLOW_192); if (state.failed) return ;
        // InternalKim.g:5054:14: ( (lv_blacklistNamespace_43_0= rulePathName ) )*
        loop444:
        do {
            int alt444=2;
            int LA444_0 = input.LA(1);

            if ( ((LA444_0>=RULE_UPPERCASE_ID && LA444_0<=RULE_LOWERCASE_ID)||LA444_0==RULE_LOWERCASE_DASHID) ) {
                alt444=1;
            }


            switch (alt444) {
        	case 1 :
        	    // InternalKim.g:5055:15: (lv_blacklistNamespace_43_0= rulePathName )
        	    {
        	    // InternalKim.g:5055:15: (lv_blacklistNamespace_43_0= rulePathName )
        	    // InternalKim.g:5056:16: lv_blacklistNamespace_43_0= rulePathName
        	    {
        	    if ( state.backtracking==0 ) {

        	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_7_1_1_0());
        	      															
        	    }
        	    pushFollow(FOLLOW_192);
        	    lv_blacklistNamespace_43_0=rulePathName();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop444;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred214_InternalKim

    // $ANTLR start synpred215_InternalKim
    public final void synpred215_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_44=null;
        EObject lv_weights_45_0 = null;


        // InternalKim.g:5079:9: ( ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )
        // InternalKim.g:5079:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) )
        {
        // InternalKim.g:5079:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) )
        // InternalKim.g:5080:10: {...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred215_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2)");
        }
        // InternalKim.g:5080:113: ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) )
        // InternalKim.g:5081:11: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2);
        // InternalKim.g:5084:14: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) )
        // InternalKim.g:5084:15: {...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred215_InternalKim", "true");
        }
        // InternalKim.g:5084:24: (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) )
        // InternalKim.g:5084:25: otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) )
        {
        otherlv_44=(Token)match(input,31,FOLLOW_33); if (state.failed) return ;
        // InternalKim.g:5088:14: ( (lv_weights_45_0= ruleMetadata ) )
        // InternalKim.g:5089:15: (lv_weights_45_0= ruleMetadata )
        {
        // InternalKim.g:5089:15: (lv_weights_45_0= ruleMetadata )
        // InternalKim.g:5090:16: lv_weights_45_0= ruleMetadata
        {
        if ( state.backtracking==0 ) {

          																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMetadataParserRuleCall_5_7_2_1_0());
          															
        }
        pushFollow(FOLLOW_2);
        lv_weights_45_0=ruleMetadata();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred215_InternalKim

    // $ANTLR start synpred216_InternalKim
    public final void synpred216_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_42=null;
        Token otherlv_44=null;
        AntlrDatatypeRuleToken lv_lookupNamespace_41_0 = null;

        AntlrDatatypeRuleToken lv_blacklistNamespace_43_0 = null;

        EObject lv_weights_45_0 = null;


        // InternalKim.g:4994:4: ( ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )
        // InternalKim.g:4994:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
        {
        // InternalKim.g:4994:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
        // InternalKim.g:4995:5: {...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred216_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7)");
        }
        // InternalKim.g:4995:106: ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) )
        // InternalKim.g:4996:6: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7);
        // InternalKim.g:4999:9: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
        // InternalKim.g:4999:10: {...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred216_InternalKim", "true");
        }
        // InternalKim.g:4999:19: ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
        // InternalKim.g:4999:20: ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
        {
        // InternalKim.g:4999:20: ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
        // InternalKim.g:5000:10: ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
        {
        getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());
        // InternalKim.g:5003:10: ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
        // InternalKim.g:5004:11: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?
        {
        // InternalKim.g:5004:11: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+
        int cnt448=0;
        loop448:
        do {
            int alt448=4;
            int LA448_0 = input.LA(1);

            if ( LA448_0 == 100 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
                alt448=1;
            }
            else if ( LA448_0 == 102 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
                alt448=2;
            }
            else if ( LA448_0 == 31 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
                alt448=3;
            }


            switch (alt448) {
        	case 1 :
        	    // InternalKim.g:5005:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
        	    {
        	    // InternalKim.g:5005:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
        	    // InternalKim.g:5006:10: {...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred216_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0)");
        	    }
        	    // InternalKim.g:5006:113: ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
        	    // InternalKim.g:5007:11: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0);
        	    // InternalKim.g:5010:14: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
        	    // InternalKim.g:5010:15: {...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred216_InternalKim", "true");
        	    }
        	    // InternalKim.g:5010:24: (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
        	    // InternalKim.g:5010:25: otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
        	    {
        	    otherlv_39=(Token)match(input,100,FOLLOW_194); if (state.failed) return ;
        	    // InternalKim.g:5014:14: (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
        	    int alt446=2;
        	    int LA446_0 = input.LA(1);

        	    if ( (LA446_0==101) ) {
        	        alt446=1;
        	    }
        	    switch (alt446) {
        	        case 1 :
        	            // InternalKim.g:5015:15: otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )*
        	            {
        	            otherlv_40=(Token)match(input,101,FOLLOW_195); if (state.failed) return ;
        	            // InternalKim.g:5019:15: ( (lv_lookupNamespace_41_0= rulePathName ) )*
        	            loop445:
        	            do {
        	                int alt445=2;
        	                int LA445_0 = input.LA(1);

        	                if ( ((LA445_0>=RULE_UPPERCASE_ID && LA445_0<=RULE_LOWERCASE_ID)||LA445_0==RULE_LOWERCASE_DASHID) ) {
        	                    alt445=1;
        	                }


        	                switch (alt445) {
        	            	case 1 :
        	            	    // InternalKim.g:5020:16: (lv_lookupNamespace_41_0= rulePathName )
        	            	    {
        	            	    // InternalKim.g:5020:16: (lv_lookupNamespace_41_0= rulePathName )
        	            	    // InternalKim.g:5021:17: lv_lookupNamespace_41_0= rulePathName
        	            	    {
        	            	    if ( state.backtracking==0 ) {

        	            	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_7_0_1_1_0());
        	            	      																
        	            	    }
        	            	    pushFollow(FOLLOW_195);
        	            	    lv_lookupNamespace_41_0=rulePathName();

        	            	    state._fsp--;
        	            	    if (state.failed) return ;

        	            	    }


        	            	    }
        	            	    break;

        	            	default :
        	            	    break loop445;
        	                }
        	            } while (true);


        	            }
        	            break;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:5045:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
        	    {
        	    // InternalKim.g:5045:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
        	    // InternalKim.g:5046:10: {...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred216_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1)");
        	    }
        	    // InternalKim.g:5046:113: ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
        	    // InternalKim.g:5047:11: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1);
        	    // InternalKim.g:5050:14: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
        	    // InternalKim.g:5050:15: {...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred216_InternalKim", "true");
        	    }
        	    // InternalKim.g:5050:24: (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
        	    // InternalKim.g:5050:25: otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )*
        	    {
        	    otherlv_42=(Token)match(input,102,FOLLOW_195); if (state.failed) return ;
        	    // InternalKim.g:5054:14: ( (lv_blacklistNamespace_43_0= rulePathName ) )*
        	    loop447:
        	    do {
        	        int alt447=2;
        	        int LA447_0 = input.LA(1);

        	        if ( ((LA447_0>=RULE_UPPERCASE_ID && LA447_0<=RULE_LOWERCASE_ID)||LA447_0==RULE_LOWERCASE_DASHID) ) {
        	            alt447=1;
        	        }


        	        switch (alt447) {
        	    	case 1 :
        	    	    // InternalKim.g:5055:15: (lv_blacklistNamespace_43_0= rulePathName )
        	    	    {
        	    	    // InternalKim.g:5055:15: (lv_blacklistNamespace_43_0= rulePathName )
        	    	    // InternalKim.g:5056:16: lv_blacklistNamespace_43_0= rulePathName
        	    	    {
        	    	    if ( state.backtracking==0 ) {

        	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_7_1_1_0());
        	    	      															
        	    	    }
        	    	    pushFollow(FOLLOW_195);
        	    	    lv_blacklistNamespace_43_0=rulePathName();

        	    	    state._fsp--;
        	    	    if (state.failed) return ;

        	    	    }


        	    	    }
        	    	    break;

        	    	default :
        	    	    break loop447;
        	        }
        	    } while (true);


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 3 :
        	    // InternalKim.g:5079:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) )
        	    {
        	    // InternalKim.g:5079:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) )
        	    // InternalKim.g:5080:10: {...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred216_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2)");
        	    }
        	    // InternalKim.g:5080:113: ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) )
        	    // InternalKim.g:5081:11: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2);
        	    // InternalKim.g:5084:14: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) )
        	    // InternalKim.g:5084:15: {...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred216_InternalKim", "true");
        	    }
        	    // InternalKim.g:5084:24: (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) )
        	    // InternalKim.g:5084:25: otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) )
        	    {
        	    otherlv_44=(Token)match(input,31,FOLLOW_33); if (state.failed) return ;
        	    // InternalKim.g:5088:14: ( (lv_weights_45_0= ruleMetadata ) )
        	    // InternalKim.g:5089:15: (lv_weights_45_0= ruleMetadata )
        	    {
        	    // InternalKim.g:5089:15: (lv_weights_45_0= ruleMetadata )
        	    // InternalKim.g:5090:16: lv_weights_45_0= ruleMetadata
        	    {
        	    if ( state.backtracking==0 ) {

        	      																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMetadataParserRuleCall_5_7_2_1_0());
        	      															
        	    }
        	    pushFollow(FOLLOW_196);
        	    lv_weights_45_0=ruleMetadata();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt448 >= 1 ) break loop448;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(448, input);
                    throw eee;
            }
            cnt448++;
        } while (true);

        if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7()) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred216_InternalKim", "getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7())");
        }

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred216_InternalKim

    // $ANTLR start synpred243_InternalKim
    public final void synpred243_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_states_11_0 = null;

        EObject lv_states_13_0 = null;


        // InternalKim.g:5900:9: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) )
        // InternalKim.g:5900:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
        {
        // InternalKim.g:5900:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
        // InternalKim.g:5901:10: {...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred243_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0)");
        }
        // InternalKim.g:5901:124: ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
        // InternalKim.g:5902:11: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0);
        // InternalKim.g:5905:14: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
        // InternalKim.g:5905:15: {...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred243_InternalKim", "true");
        }
        // InternalKim.g:5905:24: (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
        // InternalKim.g:5905:25: otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
        {
        otherlv_10=(Token)match(input,30,FOLLOW_92); if (state.failed) return ;
        // InternalKim.g:5909:14: ( (lv_states_11_0= ruleObservableSemantics ) )
        // InternalKim.g:5910:15: (lv_states_11_0= ruleObservableSemantics )
        {
        // InternalKim.g:5910:15: (lv_states_11_0= ruleObservableSemantics )
        // InternalKim.g:5911:16: lv_states_11_0= ruleObservableSemantics
        {
        if ( state.backtracking==0 ) {

          																newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_1_0());
          															
        }
        pushFollow(FOLLOW_34);
        lv_states_11_0=ruleObservableSemantics();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:5928:14: (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
        loop457:
        do {
            int alt457=2;
            int LA457_0 = input.LA(1);

            if ( (LA457_0==27) ) {
                alt457=1;
            }


            switch (alt457) {
        	case 1 :
        	    // InternalKim.g:5929:15: otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) )
        	    {
        	    otherlv_12=(Token)match(input,27,FOLLOW_92); if (state.failed) return ;
        	    // InternalKim.g:5933:15: ( (lv_states_13_0= ruleObservableSemantics ) )
        	    // InternalKim.g:5934:16: (lv_states_13_0= ruleObservableSemantics )
        	    {
        	    // InternalKim.g:5934:16: (lv_states_13_0= ruleObservableSemantics )
        	    // InternalKim.g:5935:17: lv_states_13_0= ruleObservableSemantics
        	    {
        	    if ( state.backtracking==0 ) {

        	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_2_1_0());
        	      																
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_states_13_0=ruleObservableSemantics();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop457;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred243_InternalKim

    // $ANTLR start synpred245_InternalKim
    public final void synpred245_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        EObject lv_observations_16_0 = null;

        EObject lv_observations_20_0 = null;


        // InternalKim.g:5959:9: ( ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )
        // InternalKim.g:5959:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
        {
        // InternalKim.g:5959:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
        // InternalKim.g:5960:10: {...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred245_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1)");
        }
        // InternalKim.g:5960:124: ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
        // InternalKim.g:5961:11: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1);
        // InternalKim.g:5964:14: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
        // InternalKim.g:5964:15: {...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred245_InternalKim", "true");
        }
        // InternalKim.g:5964:24: (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
        // InternalKim.g:5964:25: otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
        {
        otherlv_14=(Token)match(input,111,FOLLOW_40); if (state.failed) return ;
        // InternalKim.g:5968:14: (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' )
        // InternalKim.g:5969:15: otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')'
        {
        otherlv_15=(Token)match(input,38,FOLLOW_89); if (state.failed) return ;
        // InternalKim.g:5973:15: ( (lv_observations_16_0= ruleObserveStatementBody ) )
        // InternalKim.g:5974:16: (lv_observations_16_0= ruleObserveStatementBody )
        {
        // InternalKim.g:5974:16: (lv_observations_16_0= ruleObserveStatementBody )
        // InternalKim.g:5975:17: lv_observations_16_0= ruleObserveStatementBody
        {
        if ( state.backtracking==0 ) {

          																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_1_1_0());
          																
        }
        pushFollow(FOLLOW_93);
        lv_observations_16_0=ruleObserveStatementBody();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_17=(Token)match(input,41,FOLLOW_34); if (state.failed) return ;

        }

        // InternalKim.g:5997:14: (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
        loop458:
        do {
            int alt458=2;
            int LA458_0 = input.LA(1);

            if ( (LA458_0==27) ) {
                alt458=1;
            }


            switch (alt458) {
        	case 1 :
        	    // InternalKim.g:5998:15: otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')'
        	    {
        	    otherlv_18=(Token)match(input,27,FOLLOW_40); if (state.failed) return ;
        	    otherlv_19=(Token)match(input,38,FOLLOW_89); if (state.failed) return ;
        	    // InternalKim.g:6006:15: ( (lv_observations_20_0= ruleObserveStatementBody ) )
        	    // InternalKim.g:6007:16: (lv_observations_20_0= ruleObserveStatementBody )
        	    {
        	    // InternalKim.g:6007:16: (lv_observations_20_0= ruleObserveStatementBody )
        	    // InternalKim.g:6008:17: lv_observations_20_0= ruleObserveStatementBody
        	    {
        	    if ( state.backtracking==0 ) {

        	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_2_2_0());
        	      																
        	    }
        	    pushFollow(FOLLOW_93);
        	    lv_observations_20_0=ruleObserveStatementBody();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    otherlv_21=(Token)match(input,41,FOLLOW_34); if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop458;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred245_InternalKim

    // $ANTLR start synpred247_InternalKim
    public final void synpred247_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_docstring_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        EObject lv_urn_1_0 = null;

        EObject lv_concept_3_0 = null;

        AntlrDatatypeRuleToken lv_parents_6_0 = null;

        AntlrDatatypeRuleToken lv_parents_8_0 = null;

        EObject lv_states_11_0 = null;

        EObject lv_states_13_0 = null;

        EObject lv_observations_16_0 = null;

        EObject lv_observations_20_0 = null;

        EObject lv_actions_22_0 = null;


        // InternalKim.g:5776:3: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) )
        // InternalKim.g:5776:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) )
        {
        // InternalKim.g:5776:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) )
        // InternalKim.g:5777:4: {...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred247_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0)");
        }
        // InternalKim.g:5777:114: ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) )
        // InternalKim.g:5778:5: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0);
        // InternalKim.g:5781:8: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) )
        // InternalKim.g:5781:9: {...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred247_InternalKim", "true");
        }
        // InternalKim.g:5781:18: ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* )
        // InternalKim.g:5781:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )*
        {
        // InternalKim.g:5781:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?
        int alt459=2;
        alt459 = dfa459.predict(input);
        switch (alt459) {
            case 1 :
                // InternalKim.g:5782:9: ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as'
                {
                // InternalKim.g:5782:9: ( (lv_urn_1_0= ruleUrn ) )
                // InternalKim.g:5783:10: (lv_urn_1_0= ruleUrn )
                {
                // InternalKim.g:5783:10: (lv_urn_1_0= ruleUrn )
                // InternalKim.g:5784:11: lv_urn_1_0= ruleUrn
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getUrnUrnParserRuleCall_0_0_0_0());
                  										
                }
                pushFollow(FOLLOW_11);
                lv_urn_1_0=ruleUrn();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                otherlv_2=(Token)match(input,25,FOLLOW_23); if (state.failed) return ;

                }
                break;

        }

        // InternalKim.g:5806:8: ( (lv_concept_3_0= ruleNamedObservableSemantics ) )
        // InternalKim.g:5807:9: (lv_concept_3_0= ruleNamedObservableSemantics )
        {
        // InternalKim.g:5807:9: (lv_concept_3_0= ruleNamedObservableSemantics )
        // InternalKim.g:5808:10: lv_concept_3_0= ruleNamedObservableSemantics
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getConceptNamedObservableSemanticsParserRuleCall_0_1_0());
          									
        }
        pushFollow(FOLLOW_197);
        lv_concept_3_0=ruleNamedObservableSemantics();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:5825:8: ( (lv_docstring_4_0= RULE_STRING ) )?
        int alt460=2;
        int LA460_0 = input.LA(1);

        if ( (LA460_0==RULE_STRING) ) {
            alt460=1;
        }
        switch (alt460) {
            case 1 :
                // InternalKim.g:5826:9: (lv_docstring_4_0= RULE_STRING )
                {
                // InternalKim.g:5826:9: (lv_docstring_4_0= RULE_STRING )
                // InternalKim.g:5827:10: lv_docstring_4_0= RULE_STRING
                {
                lv_docstring_4_0=(Token)match(input,RULE_STRING,FOLLOW_198); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:5843:8: (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )?
        int alt462=2;
        int LA462_0 = input.LA(1);

        if ( (LA462_0==110) ) {
            alt462=1;
        }
        switch (alt462) {
            case 1 :
                // InternalKim.g:5844:9: otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
                {
                otherlv_5=(Token)match(input,110,FOLLOW_26); if (state.failed) return ;
                // InternalKim.g:5848:9: ( (lv_parents_6_0= rulePathName ) )
                // InternalKim.g:5849:10: (lv_parents_6_0= rulePathName )
                {
                // InternalKim.g:5849:10: (lv_parents_6_0= rulePathName )
                // InternalKim.g:5850:11: lv_parents_6_0= rulePathName
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_1_0());
                  										
                }
                pushFollow(FOLLOW_199);
                lv_parents_6_0=rulePathName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:5867:9: (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
                loop461:
                do {
                    int alt461=2;
                    int LA461_0 = input.LA(1);

                    if ( (LA461_0==27) ) {
                        alt461=1;
                    }


                    switch (alt461) {
                	case 1 :
                	    // InternalKim.g:5868:10: otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) )
                	    {
                	    otherlv_7=(Token)match(input,27,FOLLOW_26); if (state.failed) return ;
                	    // InternalKim.g:5872:10: ( (lv_parents_8_0= rulePathName ) )
                	    // InternalKim.g:5873:11: (lv_parents_8_0= rulePathName )
                	    {
                	    // InternalKim.g:5873:11: (lv_parents_8_0= rulePathName )
                	    // InternalKim.g:5874:12: lv_parents_8_0= rulePathName
                	    {
                	    if ( state.backtracking==0 ) {

                	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_2_1_0());
                	      											
                	    }
                	    pushFollow(FOLLOW_199);
                	    lv_parents_8_0=rulePathName();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop461;
                    }
                } while (true);


                }
                break;

        }

        // InternalKim.g:5893:8: ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) )
        // InternalKim.g:5894:9: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) )
        {
        // InternalKim.g:5894:9: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) )
        // InternalKim.g:5895:10: ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* )
        {
        getUnorderedGroupHelper().enter(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());
        // InternalKim.g:5898:10: ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* )
        // InternalKim.g:5899:11: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )*
        {
        // InternalKim.g:5899:11: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )*
        loop465:
        do {
            int alt465=3;
            int LA465_0 = input.LA(1);

            if ( LA465_0 == 30 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
                alt465=1;
            }
            else if ( LA465_0 == 111 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
                alt465=2;
            }


            switch (alt465) {
        	case 1 :
        	    // InternalKim.g:5900:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
        	    {
        	    // InternalKim.g:5900:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
        	    // InternalKim.g:5901:10: {...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred247_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0)");
        	    }
        	    // InternalKim.g:5901:124: ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
        	    // InternalKim.g:5902:11: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0);
        	    // InternalKim.g:5905:14: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
        	    // InternalKim.g:5905:15: {...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred247_InternalKim", "true");
        	    }
        	    // InternalKim.g:5905:24: (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
        	    // InternalKim.g:5905:25: otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
        	    {
        	    otherlv_10=(Token)match(input,30,FOLLOW_92); if (state.failed) return ;
        	    // InternalKim.g:5909:14: ( (lv_states_11_0= ruleObservableSemantics ) )
        	    // InternalKim.g:5910:15: (lv_states_11_0= ruleObservableSemantics )
        	    {
        	    // InternalKim.g:5910:15: (lv_states_11_0= ruleObservableSemantics )
        	    // InternalKim.g:5911:16: lv_states_11_0= ruleObservableSemantics
        	    {
        	    if ( state.backtracking==0 ) {

        	      																newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_1_0());
        	      															
        	    }
        	    pushFollow(FOLLOW_199);
        	    lv_states_11_0=ruleObservableSemantics();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    // InternalKim.g:5928:14: (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
        	    loop463:
        	    do {
        	        int alt463=2;
        	        int LA463_0 = input.LA(1);

        	        if ( (LA463_0==27) ) {
        	            alt463=1;
        	        }


        	        switch (alt463) {
        	    	case 1 :
        	    	    // InternalKim.g:5929:15: otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) )
        	    	    {
        	    	    otherlv_12=(Token)match(input,27,FOLLOW_92); if (state.failed) return ;
        	    	    // InternalKim.g:5933:15: ( (lv_states_13_0= ruleObservableSemantics ) )
        	    	    // InternalKim.g:5934:16: (lv_states_13_0= ruleObservableSemantics )
        	    	    {
        	    	    // InternalKim.g:5934:16: (lv_states_13_0= ruleObservableSemantics )
        	    	    // InternalKim.g:5935:17: lv_states_13_0= ruleObservableSemantics
        	    	    {
        	    	    if ( state.backtracking==0 ) {

        	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_2_1_0());
        	    	      																
        	    	    }
        	    	    pushFollow(FOLLOW_199);
        	    	    lv_states_13_0=ruleObservableSemantics();

        	    	    state._fsp--;
        	    	    if (state.failed) return ;

        	    	    }


        	    	    }


        	    	    }
        	    	    break;

        	    	default :
        	    	    break loop463;
        	        }
        	    } while (true);


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:5959:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
        	    {
        	    // InternalKim.g:5959:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
        	    // InternalKim.g:5960:10: {...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred247_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1)");
        	    }
        	    // InternalKim.g:5960:124: ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
        	    // InternalKim.g:5961:11: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1);
        	    // InternalKim.g:5964:14: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
        	    // InternalKim.g:5964:15: {...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred247_InternalKim", "true");
        	    }
        	    // InternalKim.g:5964:24: (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
        	    // InternalKim.g:5964:25: otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
        	    {
        	    otherlv_14=(Token)match(input,111,FOLLOW_40); if (state.failed) return ;
        	    // InternalKim.g:5968:14: (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' )
        	    // InternalKim.g:5969:15: otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')'
        	    {
        	    otherlv_15=(Token)match(input,38,FOLLOW_89); if (state.failed) return ;
        	    // InternalKim.g:5973:15: ( (lv_observations_16_0= ruleObserveStatementBody ) )
        	    // InternalKim.g:5974:16: (lv_observations_16_0= ruleObserveStatementBody )
        	    {
        	    // InternalKim.g:5974:16: (lv_observations_16_0= ruleObserveStatementBody )
        	    // InternalKim.g:5975:17: lv_observations_16_0= ruleObserveStatementBody
        	    {
        	    if ( state.backtracking==0 ) {

        	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_1_1_0());
        	      																
        	    }
        	    pushFollow(FOLLOW_93);
        	    lv_observations_16_0=ruleObserveStatementBody();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    otherlv_17=(Token)match(input,41,FOLLOW_199); if (state.failed) return ;

        	    }

        	    // InternalKim.g:5997:14: (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
        	    loop464:
        	    do {
        	        int alt464=2;
        	        int LA464_0 = input.LA(1);

        	        if ( (LA464_0==27) ) {
        	            alt464=1;
        	        }


        	        switch (alt464) {
        	    	case 1 :
        	    	    // InternalKim.g:5998:15: otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')'
        	    	    {
        	    	    otherlv_18=(Token)match(input,27,FOLLOW_40); if (state.failed) return ;
        	    	    otherlv_19=(Token)match(input,38,FOLLOW_89); if (state.failed) return ;
        	    	    // InternalKim.g:6006:15: ( (lv_observations_20_0= ruleObserveStatementBody ) )
        	    	    // InternalKim.g:6007:16: (lv_observations_20_0= ruleObserveStatementBody )
        	    	    {
        	    	    // InternalKim.g:6007:16: (lv_observations_20_0= ruleObserveStatementBody )
        	    	    // InternalKim.g:6008:17: lv_observations_20_0= ruleObserveStatementBody
        	    	    {
        	    	    if ( state.backtracking==0 ) {

        	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_2_2_0());
        	    	      																
        	    	    }
        	    	    pushFollow(FOLLOW_93);
        	    	    lv_observations_20_0=ruleObserveStatementBody();

        	    	    state._fsp--;
        	    	    if (state.failed) return ;

        	    	    }


        	    	    }

        	    	    otherlv_21=(Token)match(input,41,FOLLOW_199); if (state.failed) return ;

        	    	    }
        	    	    break;

        	    	default :
        	    	    break loop464;
        	        }
        	    } while (true);


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop465;
            }
        } while (true);


        }


        }


        }

        // InternalKim.g:6043:8: ( (lv_actions_22_0= ruleActionSpecification ) )*
        loop466:
        do {
            int alt466=2;
            int LA466_0 = input.LA(1);

            if ( ((LA466_0>=54 && LA466_0<=56)||(LA466_0>=62 && LA466_0<=67)) ) {
                alt466=1;
            }


            switch (alt466) {
        	case 1 :
        	    // InternalKim.g:6044:9: (lv_actions_22_0= ruleActionSpecification )
        	    {
        	    // InternalKim.g:6044:9: (lv_actions_22_0= ruleActionSpecification )
        	    // InternalKim.g:6045:10: lv_actions_22_0= ruleActionSpecification
        	    {
        	    if ( state.backtracking==0 ) {

        	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getActionsActionSpecificationParserRuleCall_0_5_0());
        	      									
        	    }
        	    pushFollow(FOLLOW_200);
        	    lv_actions_22_0=ruleActionSpecification();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop466;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred247_InternalKim

    // $ANTLR start synpred249_InternalKim
    public final void synpred249_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        EObject lv_accessor_24_0 = null;


        // InternalKim.g:6068:3: ( ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) )
        // InternalKim.g:6068:3: ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) )
        {
        // InternalKim.g:6068:3: ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) )
        // InternalKim.g:6069:4: {...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred249_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1)");
        }
        // InternalKim.g:6069:114: ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) )
        // InternalKim.g:6070:5: ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1);
        // InternalKim.g:6073:8: ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) )
        // InternalKim.g:6073:9: {...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred249_InternalKim", "true");
        }
        // InternalKim.g:6073:18: (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? )
        // InternalKim.g:6073:19: otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )?
        {
        otherlv_23=(Token)match(input,31,FOLLOW_192); if (state.failed) return ;
        // InternalKim.g:6077:8: ( (lv_accessor_24_0= ruleFunction ) )?
        int alt467=2;
        int LA467_0 = input.LA(1);

        if ( ((LA467_0>=RULE_UPPERCASE_ID && LA467_0<=RULE_LOWERCASE_ID)||LA467_0==RULE_LOWERCASE_DASHID) ) {
            alt467=1;
        }
        switch (alt467) {
            case 1 :
                // InternalKim.g:6078:9: (lv_accessor_24_0= ruleFunction )
                {
                // InternalKim.g:6078:9: (lv_accessor_24_0= ruleFunction )
                // InternalKim.g:6079:10: lv_accessor_24_0= ruleFunction
                {
                if ( state.backtracking==0 ) {

                  										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getAccessorFunctionParserRuleCall_1_1_0());
                  									
                }
                pushFollow(FOLLOW_2);
                lv_accessor_24_0=ruleFunction();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred249_InternalKim

    // $ANTLR start synpred250_InternalKim
    public final void synpred250_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_25=null;
        EObject lv_metadata_26_0 = null;


        // InternalKim.g:6102:3: ( ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) ) )
        // InternalKim.g:6102:3: ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) )
        {
        // InternalKim.g:6102:3: ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) )
        // InternalKim.g:6103:4: {...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred250_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2)");
        }
        // InternalKim.g:6103:114: ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) )
        // InternalKim.g:6104:5: ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2);
        // InternalKim.g:6107:8: ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) )
        // InternalKim.g:6107:9: {...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred250_InternalKim", "true");
        }
        // InternalKim.g:6107:18: (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )
        // InternalKim.g:6107:19: otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) )
        {
        otherlv_25=(Token)match(input,42,FOLLOW_33); if (state.failed) return ;
        // InternalKim.g:6111:8: ( (lv_metadata_26_0= ruleMetadata ) )
        // InternalKim.g:6112:9: (lv_metadata_26_0= ruleMetadata )
        {
        // InternalKim.g:6112:9: (lv_metadata_26_0= ruleMetadata )
        // InternalKim.g:6113:10: lv_metadata_26_0= ruleMetadata
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getMetadataMetadataParserRuleCall_2_1_0());
          									
        }
        pushFollow(FOLLOW_2);
        lv_metadata_26_0=ruleMetadata();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred250_InternalKim

    // $ANTLR start synpred251_InternalKim
    public final void synpred251_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_value_0_0 = null;


        // InternalKim.g:6176:4: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )
        // InternalKim.g:6176:4: ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as'
        {
        // InternalKim.g:6176:4: ( (lv_value_0_0= ruleValue ) )
        // InternalKim.g:6177:5: (lv_value_0_0= ruleValue )
        {
        // InternalKim.g:6177:5: (lv_value_0_0= ruleValue )
        // InternalKim.g:6178:6: lv_value_0_0= ruleValue
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueValueParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_value_0_0=ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,25,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred251_InternalKim

    // $ANTLR start synpred253_InternalKim
    public final void synpred253_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;


        // InternalKim.g:6240:4: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:6240:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:6240:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:6241:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred253_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:6241:116: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:6242:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:6245:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        // InternalKim.g:6245:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred253_InternalKim", "true");
        }
        // InternalKim.g:6245:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        // InternalKim.g:6245:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
        {
        otherlv_5=(Token)match(input,35,FOLLOW_25); if (state.failed) return ;
        otherlv_6=(Token)match(input,36,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:6253:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
        // InternalKim.g:6254:10: (lv_accordingTo_7_0= rulePropertyId )
        {
        // InternalKim.g:6254:10: (lv_accordingTo_7_0= rulePropertyId )
        // InternalKim.g:6255:11: lv_accordingTo_7_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_7_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred253_InternalKim

    // $ANTLR start synpred256_InternalKim
    public final void synpred256_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token otherlv_11=null;
        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;


        // InternalKim.g:6278:4: ( ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:6278:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:6278:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:6279:5: {...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred256_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:6279:116: ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:6280:6: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:6283:9: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        // InternalKim.g:6283:10: {...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred256_InternalKim", "true");
        }
        // InternalKim.g:6283:19: ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
        int alt470=2;
        int LA470_0 = input.LA(1);

        if ( (LA470_0==48) ) {
            alt470=1;
        }
        else if ( (LA470_0==113) ) {
            alt470=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 470, 0, input);

            throw nvae;
        }
        switch (alt470) {
            case 1 :
                // InternalKim.g:6283:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:6283:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                // InternalKim.g:6284:10: otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                {
                otherlv_8=(Token)match(input,48,FOLLOW_98); if (state.failed) return ;
                // InternalKim.g:6288:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                int alt469=2;
                int LA469_0 = input.LA(1);

                if ( (LA469_0==EOF||LA469_0==RULE_LOWERCASE_ID||LA469_0==RULE_CAMELCASE_ID||LA469_0==RULE_BACKCASE_ID||LA469_0==38||LA469_0==40||LA469_0==107||LA469_0==254) ) {
                    alt469=1;
                }
                else if ( (LA469_0==RULE_UPPERCASE_ID) ) {
                    int LA469_2 = input.LA(2);

                    if ( (LA469_2==EOF||LA469_2==40||LA469_2==107||LA469_2==254) ) {
                        alt469=1;
                    }
                    else if ( (LA469_2==245) ) {
                        alt469=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 469, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 469, 0, input);

                    throw nvae;
                }
                switch (alt469) {
                    case 1 :
                        // InternalKim.g:6289:11: ( (lv_unit_9_0= ruleUnit ) )
                        {
                        // InternalKim.g:6289:11: ( (lv_unit_9_0= ruleUnit ) )
                        // InternalKim.g:6290:12: (lv_unit_9_0= ruleUnit )
                        {
                        // InternalKim.g:6290:12: (lv_unit_9_0= ruleUnit )
                        // InternalKim.g:6291:13: lv_unit_9_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_9_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:6309:11: ( (lv_currency_10_0= ruleCurrency ) )
                        {
                        // InternalKim.g:6309:11: ( (lv_currency_10_0= ruleCurrency ) )
                        // InternalKim.g:6310:12: (lv_currency_10_0= ruleCurrency )
                        {
                        // InternalKim.g:6310:12: (lv_currency_10_0= ruleCurrency )
                        // InternalKim.g:6311:13: lv_currency_10_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_10_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:6331:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
                {
                // InternalKim.g:6331:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
                // InternalKim.g:6332:10: otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) )
                {
                otherlv_11=(Token)match(input,113,FOLLOW_201); if (state.failed) return ;
                // InternalKim.g:6336:10: ( (lv_unit_12_0= ruleUnit ) )
                // InternalKim.g:6337:11: (lv_unit_12_0= ruleUnit )
                {
                // InternalKim.g:6337:11: (lv_unit_12_0= ruleUnit )
                // InternalKim.g:6338:12: lv_unit_12_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_12_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred256_InternalKim

    // $ANTLR start synpred257_InternalKim
    public final void synpred257_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_14_0 = null;


        // InternalKim.g:6387:10: ( (lv_valueOperators_14_0= ruleValueOperator ) )
        // InternalKim.g:6387:10: (lv_valueOperators_14_0= ruleValueOperator )
        {
        // InternalKim.g:6387:10: (lv_valueOperators_14_0= ruleValueOperator )
        // InternalKim.g:6388:11: lv_valueOperators_14_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_valueOperators_14_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred257_InternalKim

    // $ANTLR start synpred258_InternalKim
    public final void synpred258_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_13_0 = null;

        EObject lv_valueOperators_14_0 = null;


        // InternalKim.g:6362:4: ( ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) )
        // InternalKim.g:6362:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) )
        {
        // InternalKim.g:6362:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) )
        // InternalKim.g:6363:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred258_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:6363:116: ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) )
        // InternalKim.g:6364:6: ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:6367:9: ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) )
        // InternalKim.g:6367:10: {...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred258_InternalKim", "true");
        }
        // InternalKim.g:6367:19: ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* )
        // InternalKim.g:6367:20: ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )*
        {
        // InternalKim.g:6367:20: ( (lv_valueOperators_13_0= ruleValueOperator ) )
        // InternalKim.g:6368:10: (lv_valueOperators_13_0= ruleValueOperator )
        {
        // InternalKim.g:6368:10: (lv_valueOperators_13_0= ruleValueOperator )
        // InternalKim.g:6369:11: lv_valueOperators_13_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_0_0());
          										
        }
        pushFollow(FOLLOW_202);
        lv_valueOperators_13_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:6386:9: ( (lv_valueOperators_14_0= ruleValueOperator ) )*
        loop471:
        do {
            int alt471=2;
            int LA471_0 = input.LA(1);

            if ( (LA471_0==55||(LA471_0>=76 && LA471_0<=88)||(LA471_0>=117 && LA471_0<=118)) ) {
                alt471=1;
            }


            switch (alt471) {
        	case 1 :
        	    // InternalKim.g:6387:10: (lv_valueOperators_14_0= ruleValueOperator )
        	    {
        	    // InternalKim.g:6387:10: (lv_valueOperators_14_0= ruleValueOperator )
        	    // InternalKim.g:6388:11: lv_valueOperators_14_0= ruleValueOperator
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_202);
        	    lv_valueOperators_14_0=ruleValueOperator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop471;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred258_InternalKim

    // $ANTLR start synpred260_InternalKim
    public final void synpred260_InternalKim_fragment() throws RecognitionException {   
        Token lv_optional_15_0=null;
        Token otherlv_16=null;

        // InternalKim.g:6411:4: ( ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) )
        // InternalKim.g:6411:4: ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) )
        {
        // InternalKim.g:6411:4: ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) )
        // InternalKim.g:6412:5: {...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred260_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:6412:116: ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) )
        // InternalKim.g:6413:6: ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:6416:9: ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) )
        // InternalKim.g:6416:10: {...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred260_InternalKim", "true");
        }
        // InternalKim.g:6416:19: ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' )
        int alt472=2;
        int LA472_0 = input.LA(1);

        if ( (LA472_0==114) ) {
            alt472=1;
        }
        else if ( (LA472_0==115) ) {
            alt472=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 472, 0, input);

            throw nvae;
        }
        switch (alt472) {
            case 1 :
                // InternalKim.g:6416:20: ( (lv_optional_15_0= 'optional' ) )
                {
                // InternalKim.g:6416:20: ( (lv_optional_15_0= 'optional' ) )
                // InternalKim.g:6417:10: (lv_optional_15_0= 'optional' )
                {
                // InternalKim.g:6417:10: (lv_optional_15_0= 'optional' )
                // InternalKim.g:6418:11: lv_optional_15_0= 'optional'
                {
                lv_optional_15_0=(Token)match(input,114,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:6431:9: otherlv_16= 'required'
                {
                otherlv_16=(Token)match(input,115,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred260_InternalKim

    // $ANTLR start synpred261_InternalKim
    public final void synpred261_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_18=null;
        EObject lv_from_17_0 = null;

        EObject lv_to_19_0 = null;


        // InternalKim.g:6441:4: ( ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:6441:4: ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:6441:4: ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:6442:5: {...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred261_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
        }
        // InternalKim.g:6442:116: ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) )
        // InternalKim.g:6443:6: ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4);
        // InternalKim.g:6446:9: ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) )
        // InternalKim.g:6446:10: {...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred261_InternalKim", "true");
        }
        // InternalKim.g:6446:19: ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) )
        // InternalKim.g:6446:20: ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) )
        {
        // InternalKim.g:6446:20: ( (lv_from_17_0= ruleNumber ) )
        // InternalKim.g:6447:10: (lv_from_17_0= ruleNumber )
        {
        // InternalKim.g:6447:10: (lv_from_17_0= ruleNumber )
        // InternalKim.g:6448:11: lv_from_17_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getFromNumberParserRuleCall_3_4_0_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_from_17_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_18=(Token)match(input,36,FOLLOW_38); if (state.failed) return ;
        // InternalKim.g:6469:9: ( (lv_to_19_0= ruleNumber ) )
        // InternalKim.g:6470:10: (lv_to_19_0= ruleNumber )
        {
        // InternalKim.g:6470:10: (lv_to_19_0= ruleNumber )
        // InternalKim.g:6471:11: lv_to_19_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getToNumberParserRuleCall_3_4_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_19_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred261_InternalKim

    // $ANTLR start synpred263_InternalKim
    public final void synpred263_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_20=null;
        Token lv_name_21_1=null;
        Token lv_name_21_2=null;

        // InternalKim.g:6494:4: ( ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )
        // InternalKim.g:6494:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
        {
        // InternalKim.g:6494:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
        // InternalKim.g:6495:5: {...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred263_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
        }
        // InternalKim.g:6495:116: ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:6496:6: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5);
        // InternalKim.g:6499:9: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
        // InternalKim.g:6499:10: {...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred263_InternalKim", "true");
        }
        // InternalKim.g:6499:19: (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
        // InternalKim.g:6499:20: otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
        {
        otherlv_20=(Token)match(input,116,FOLLOW_45); if (state.failed) return ;
        // InternalKim.g:6503:9: ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
        // InternalKim.g:6504:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
        {
        // InternalKim.g:6504:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
        // InternalKim.g:6505:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
        {
        // InternalKim.g:6505:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
        int alt473=2;
        int LA473_0 = input.LA(1);

        if ( (LA473_0==RULE_LOWERCASE_ID) ) {
            alt473=1;
        }
        else if ( (LA473_0==RULE_STRING) ) {
            alt473=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 473, 0, input);

            throw nvae;
        }
        switch (alt473) {
            case 1 :
                // InternalKim.g:6506:12: lv_name_21_1= RULE_LOWERCASE_ID
                {
                lv_name_21_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:6521:12: lv_name_21_2= RULE_STRING
                {
                lv_name_21_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred263_InternalKim

    // $ANTLR start synpred265_InternalKim
    public final void synpred265_InternalKim_fragment() throws RecognitionException {   
        EObject lv_comparisonValue_3_0 = null;


        // InternalKim.g:6617:5: ( ( (lv_comparisonValue_3_0= ruleNumber ) ) )
        // InternalKim.g:6617:5: ( (lv_comparisonValue_3_0= ruleNumber ) )
        {
        // InternalKim.g:6617:5: ( (lv_comparisonValue_3_0= ruleNumber ) )
        // InternalKim.g:6618:6: (lv_comparisonValue_3_0= ruleNumber )
        {
        // InternalKim.g:6618:6: (lv_comparisonValue_3_0= ruleNumber )
        // InternalKim.g:6619:7: lv_comparisonValue_3_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonValueNumberParserRuleCall_0_1_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_comparisonValue_3_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred265_InternalKim

    // $ANTLR start synpred266_InternalKim
    public final void synpred266_InternalKim_fragment() throws RecognitionException {   
        EObject lv_comparisonQuantity_4_0 = null;


        // InternalKim.g:6637:5: ( ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) )
        // InternalKim.g:6637:5: ( (lv_comparisonQuantity_4_0= ruleQuantity ) )
        {
        // InternalKim.g:6637:5: ( (lv_comparisonQuantity_4_0= ruleQuantity ) )
        // InternalKim.g:6638:6: (lv_comparisonQuantity_4_0= ruleQuantity )
        {
        // InternalKim.g:6638:6: (lv_comparisonQuantity_4_0= ruleQuantity )
        // InternalKim.g:6639:7: lv_comparisonQuantity_4_0= ruleQuantity
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonQuantityQuantityParserRuleCall_0_1_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_comparisonQuantity_4_0=ruleQuantity();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred266_InternalKim

    // $ANTLR start synpred267_InternalKim
    public final void synpred267_InternalKim_fragment() throws RecognitionException {   
        EObject lv_comparisonConcept_5_0 = null;


        // InternalKim.g:6657:5: ( ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:6657:5: ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:6657:5: ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) )
        // InternalKim.g:6658:6: (lv_comparisonConcept_5_0= ruleConceptDeclaration )
        {
        // InternalKim.g:6658:6: (lv_comparisonConcept_5_0= ruleConceptDeclaration )
        // InternalKim.g:6659:7: lv_comparisonConcept_5_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonConceptConceptDeclarationParserRuleCall_0_1_2_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_comparisonConcept_5_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred267_InternalKim

    // $ANTLR start synpred270_InternalKim
    public final void synpred270_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_value_1_0 = null;


        // InternalKim.g:6772:4: ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )
        // InternalKim.g:6772:4: ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as'
        {
        // InternalKim.g:6772:4: ( (lv_value_1_0= ruleValue ) )
        // InternalKim.g:6773:5: (lv_value_1_0= ruleValue )
        {
        // InternalKim.g:6773:5: (lv_value_1_0= ruleValue )
        // InternalKim.g:6774:6: lv_value_1_0= ruleValue
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueValueParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_value_1_0=ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_2=(Token)match(input,25,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred270_InternalKim

    // $ANTLR start synpred272_InternalKim
    public final void synpred272_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_6=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_accordingTo_8_0 = null;


        // InternalKim.g:6836:4: ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:6836:4: ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:6836:4: ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:6837:5: {...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred272_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0)");
        }
        // InternalKim.g:6837:125: ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:6838:6: ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0);
        // InternalKim.g:6841:9: ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) )
        // InternalKim.g:6841:10: {...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred272_InternalKim", "true");
        }
        // InternalKim.g:6841:19: (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) )
        // InternalKim.g:6841:20: otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) )
        {
        otherlv_6=(Token)match(input,35,FOLLOW_25); if (state.failed) return ;
        otherlv_7=(Token)match(input,36,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:6849:9: ( (lv_accordingTo_8_0= rulePropertyId ) )
        // InternalKim.g:6850:10: (lv_accordingTo_8_0= rulePropertyId )
        {
        // InternalKim.g:6850:10: (lv_accordingTo_8_0= rulePropertyId )
        // InternalKim.g:6851:11: lv_accordingTo_8_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_4_0_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_8_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred272_InternalKim

    // $ANTLR start synpred275_InternalKim
    public final void synpred275_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        Token otherlv_12=null;
        EObject lv_unit_10_0 = null;

        EObject lv_currency_11_0 = null;

        EObject lv_unit_13_0 = null;


        // InternalKim.g:6874:4: ( ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:6874:4: ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:6874:4: ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:6875:5: {...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred275_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1)");
        }
        // InternalKim.g:6875:125: ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:6876:6: ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1);
        // InternalKim.g:6879:9: ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) )
        // InternalKim.g:6879:10: {...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred275_InternalKim", "true");
        }
        // InternalKim.g:6879:19: ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) )
        int alt478=2;
        int LA478_0 = input.LA(1);

        if ( (LA478_0==48) ) {
            alt478=1;
        }
        else if ( (LA478_0==113) ) {
            alt478=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 478, 0, input);

            throw nvae;
        }
        switch (alt478) {
            case 1 :
                // InternalKim.g:6879:20: (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:6879:20: (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) )
                // InternalKim.g:6880:10: otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) )
                {
                otherlv_9=(Token)match(input,48,FOLLOW_98); if (state.failed) return ;
                // InternalKim.g:6884:10: ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) )
                int alt477=2;
                int LA477_0 = input.LA(1);

                if ( (LA477_0==EOF||LA477_0==RULE_LOWERCASE_ID||LA477_0==RULE_CAMELCASE_ID||LA477_0==RULE_BACKCASE_ID||LA477_0==38||LA477_0==40||LA477_0==107||LA477_0==254) ) {
                    alt477=1;
                }
                else if ( (LA477_0==RULE_UPPERCASE_ID) ) {
                    int LA477_2 = input.LA(2);

                    if ( (LA477_2==EOF||LA477_2==40||LA477_2==107||LA477_2==254) ) {
                        alt477=1;
                    }
                    else if ( (LA477_2==245) ) {
                        alt477=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 477, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 477, 0, input);

                    throw nvae;
                }
                switch (alt477) {
                    case 1 :
                        // InternalKim.g:6885:11: ( (lv_unit_10_0= ruleUnit ) )
                        {
                        // InternalKim.g:6885:11: ( (lv_unit_10_0= ruleUnit ) )
                        // InternalKim.g:6886:12: (lv_unit_10_0= ruleUnit )
                        {
                        // InternalKim.g:6886:12: (lv_unit_10_0= ruleUnit )
                        // InternalKim.g:6887:13: lv_unit_10_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnitUnitParserRuleCall_4_1_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_10_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:6905:11: ( (lv_currency_11_0= ruleCurrency ) )
                        {
                        // InternalKim.g:6905:11: ( (lv_currency_11_0= ruleCurrency ) )
                        // InternalKim.g:6906:12: (lv_currency_11_0= ruleCurrency )
                        {
                        // InternalKim.g:6906:12: (lv_currency_11_0= ruleCurrency )
                        // InternalKim.g:6907:13: lv_currency_11_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_4_1_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_11_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:6927:9: (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) )
                {
                // InternalKim.g:6927:9: (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) )
                // InternalKim.g:6928:10: otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) )
                {
                otherlv_12=(Token)match(input,113,FOLLOW_201); if (state.failed) return ;
                // InternalKim.g:6932:10: ( (lv_unit_13_0= ruleUnit ) )
                // InternalKim.g:6933:11: (lv_unit_13_0= ruleUnit )
                {
                // InternalKim.g:6933:11: (lv_unit_13_0= ruleUnit )
                // InternalKim.g:6934:12: lv_unit_13_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnitUnitParserRuleCall_4_1_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_13_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred275_InternalKim

    // $ANTLR start synpred276_InternalKim
    public final void synpred276_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_15_0 = null;


        // InternalKim.g:6983:10: ( (lv_valueOperators_15_0= ruleValueOperator ) )
        // InternalKim.g:6983:10: (lv_valueOperators_15_0= ruleValueOperator )
        {
        // InternalKim.g:6983:10: (lv_valueOperators_15_0= ruleValueOperator )
        // InternalKim.g:6984:11: lv_valueOperators_15_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_valueOperators_15_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred276_InternalKim

    // $ANTLR start synpred277_InternalKim
    public final void synpred277_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_14_0 = null;

        EObject lv_valueOperators_15_0 = null;


        // InternalKim.g:6958:4: ( ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) )
        // InternalKim.g:6958:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) )
        {
        // InternalKim.g:6958:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) )
        // InternalKim.g:6959:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred277_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2)");
        }
        // InternalKim.g:6959:125: ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) )
        // InternalKim.g:6960:6: ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2);
        // InternalKim.g:6963:9: ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) )
        // InternalKim.g:6963:10: {...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred277_InternalKim", "true");
        }
        // InternalKim.g:6963:19: ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* )
        // InternalKim.g:6963:20: ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )*
        {
        // InternalKim.g:6963:20: ( (lv_valueOperators_14_0= ruleValueOperator ) )
        // InternalKim.g:6964:10: (lv_valueOperators_14_0= ruleValueOperator )
        {
        // InternalKim.g:6964:10: (lv_valueOperators_14_0= ruleValueOperator )
        // InternalKim.g:6965:11: lv_valueOperators_14_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_0_0());
          										
        }
        pushFollow(FOLLOW_202);
        lv_valueOperators_14_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:6982:9: ( (lv_valueOperators_15_0= ruleValueOperator ) )*
        loop479:
        do {
            int alt479=2;
            int LA479_0 = input.LA(1);

            if ( (LA479_0==55||(LA479_0>=76 && LA479_0<=88)||(LA479_0>=117 && LA479_0<=118)) ) {
                alt479=1;
            }


            switch (alt479) {
        	case 1 :
        	    // InternalKim.g:6983:10: (lv_valueOperators_15_0= ruleValueOperator )
        	    {
        	    // InternalKim.g:6983:10: (lv_valueOperators_15_0= ruleValueOperator )
        	    // InternalKim.g:6984:11: lv_valueOperators_15_0= ruleValueOperator
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_202);
        	    lv_valueOperators_15_0=ruleValueOperator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop479;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred277_InternalKim

    // $ANTLR start synpred279_InternalKim
    public final void synpred279_InternalKim_fragment() throws RecognitionException {   
        Token lv_optional_16_0=null;
        Token otherlv_17=null;

        // InternalKim.g:7007:4: ( ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) )
        // InternalKim.g:7007:4: ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) )
        {
        // InternalKim.g:7007:4: ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) )
        // InternalKim.g:7008:5: {...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred279_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3)");
        }
        // InternalKim.g:7008:125: ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) )
        // InternalKim.g:7009:6: ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3);
        // InternalKim.g:7012:9: ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) )
        // InternalKim.g:7012:10: {...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred279_InternalKim", "true");
        }
        // InternalKim.g:7012:19: ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' )
        int alt480=2;
        int LA480_0 = input.LA(1);

        if ( (LA480_0==114) ) {
            alt480=1;
        }
        else if ( (LA480_0==115) ) {
            alt480=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 480, 0, input);

            throw nvae;
        }
        switch (alt480) {
            case 1 :
                // InternalKim.g:7012:20: ( (lv_optional_16_0= 'optional' ) )
                {
                // InternalKim.g:7012:20: ( (lv_optional_16_0= 'optional' ) )
                // InternalKim.g:7013:10: (lv_optional_16_0= 'optional' )
                {
                // InternalKim.g:7013:10: (lv_optional_16_0= 'optional' )
                // InternalKim.g:7014:11: lv_optional_16_0= 'optional'
                {
                lv_optional_16_0=(Token)match(input,114,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:7027:9: otherlv_17= 'required'
                {
                otherlv_17=(Token)match(input,115,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred279_InternalKim

    // $ANTLR start synpred280_InternalKim
    public final void synpred280_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        EObject lv_from_18_0 = null;

        EObject lv_to_20_0 = null;


        // InternalKim.g:7037:4: ( ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:7037:4: ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:7037:4: ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:7038:5: {...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred280_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4)");
        }
        // InternalKim.g:7038:125: ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) )
        // InternalKim.g:7039:6: ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4);
        // InternalKim.g:7042:9: ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) )
        // InternalKim.g:7042:10: {...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred280_InternalKim", "true");
        }
        // InternalKim.g:7042:19: ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) )
        // InternalKim.g:7042:20: ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) )
        {
        // InternalKim.g:7042:20: ( (lv_from_18_0= ruleNumber ) )
        // InternalKim.g:7043:10: (lv_from_18_0= ruleNumber )
        {
        // InternalKim.g:7043:10: (lv_from_18_0= ruleNumber )
        // InternalKim.g:7044:11: lv_from_18_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getFromNumberParserRuleCall_4_4_0_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_from_18_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_19=(Token)match(input,36,FOLLOW_38); if (state.failed) return ;
        // InternalKim.g:7065:9: ( (lv_to_20_0= ruleNumber ) )
        // InternalKim.g:7066:10: (lv_to_20_0= ruleNumber )
        {
        // InternalKim.g:7066:10: (lv_to_20_0= ruleNumber )
        // InternalKim.g:7067:11: lv_to_20_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getToNumberParserRuleCall_4_4_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_20_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred280_InternalKim

    // $ANTLR start synpred282_InternalKim
    public final void synpred282_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_21=null;
        Token lv_name_22_1=null;
        Token lv_name_22_2=null;

        // InternalKim.g:7090:4: ( ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )
        // InternalKim.g:7090:4: ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) )
        {
        // InternalKim.g:7090:4: ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) )
        // InternalKim.g:7091:5: {...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred282_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5)");
        }
        // InternalKim.g:7091:125: ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:7092:6: ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5);
        // InternalKim.g:7095:9: ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) )
        // InternalKim.g:7095:10: {...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred282_InternalKim", "true");
        }
        // InternalKim.g:7095:19: (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) )
        // InternalKim.g:7095:20: otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) )
        {
        otherlv_21=(Token)match(input,116,FOLLOW_45); if (state.failed) return ;
        // InternalKim.g:7099:9: ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) )
        // InternalKim.g:7100:10: ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) )
        {
        // InternalKim.g:7100:10: ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) )
        // InternalKim.g:7101:11: (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING )
        {
        // InternalKim.g:7101:11: (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING )
        int alt481=2;
        int LA481_0 = input.LA(1);

        if ( (LA481_0==RULE_LOWERCASE_ID) ) {
            alt481=1;
        }
        else if ( (LA481_0==RULE_STRING) ) {
            alt481=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 481, 0, input);

            throw nvae;
        }
        switch (alt481) {
            case 1 :
                // InternalKim.g:7102:12: lv_name_22_1= RULE_LOWERCASE_ID
                {
                lv_name_22_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:7117:12: lv_name_22_2= RULE_STRING
                {
                lv_name_22_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred282_InternalKim

    // $ANTLR start synpred284_InternalKim
    public final void synpred284_InternalKim_fragment() throws RecognitionException {   
        Token lv_modelReference_1_1=null;

        // InternalKim.g:7203:8: (lv_modelReference_1_1= RULE_LOWERCASE_ID )
        // InternalKim.g:7203:8: lv_modelReference_1_1= RULE_LOWERCASE_ID
        {
        lv_modelReference_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred284_InternalKim

    // $ANTLR start synpred285_InternalKim
    public final void synpred285_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_modelReference_1_2 = null;


        // InternalKim.g:7218:8: (lv_modelReference_1_2= rulePathName )
        // InternalKim.g:7218:8: lv_modelReference_1_2= rulePathName
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getDependencyAccess().getModelReferencePathNameParserRuleCall_1_0_0_0_1());
          							
        }
        pushFollow(FOLLOW_2);
        lv_modelReference_1_2=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred285_InternalKim

    // $ANTLR start synpred288_InternalKim
    public final void synpred288_InternalKim_fragment() throws RecognitionException {   
        Token lv_modelReference_1_1=null;
        Token lv_modelReference_1_4=null;
        AntlrDatatypeRuleToken lv_modelReference_1_2 = null;

        AntlrDatatypeRuleToken lv_modelReference_1_3 = null;

        EObject lv_observable_2_0 = null;


        // InternalKim.g:7199:4: ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) )
        // InternalKim.g:7199:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) )
        {
        // InternalKim.g:7199:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) )
        int alt484=2;
        alt484 = dfa484.predict(input);
        switch (alt484) {
            case 1 :
                // InternalKim.g:7200:5: ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) )
                {
                // InternalKim.g:7200:5: ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) )
                // InternalKim.g:7201:6: ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) )
                {
                // InternalKim.g:7201:6: ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) )
                // InternalKim.g:7202:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )
                {
                // InternalKim.g:7202:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )
                int alt483=4;
                alt483 = dfa483.predict(input);
                switch (alt483) {
                    case 1 :
                        // InternalKim.g:7203:8: lv_modelReference_1_1= RULE_LOWERCASE_ID
                        {
                        lv_modelReference_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:7218:8: lv_modelReference_1_2= rulePathName
                        {
                        pushFollow(FOLLOW_2);
                        lv_modelReference_1_2=rulePathName();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // InternalKim.g:7234:8: lv_modelReference_1_3= ruleUrnId
                        {
                        pushFollow(FOLLOW_2);
                        lv_modelReference_1_3=ruleUrnId();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 4 :
                        // InternalKim.g:7250:8: lv_modelReference_1_4= RULE_STRING
                        {
                        lv_modelReference_1_4=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:7268:5: ( (lv_observable_2_0= ruleDependencyObservableSemantics ) )
                {
                // InternalKim.g:7268:5: ( (lv_observable_2_0= ruleDependencyObservableSemantics ) )
                // InternalKim.g:7269:6: (lv_observable_2_0= ruleDependencyObservableSemantics )
                {
                // InternalKim.g:7269:6: (lv_observable_2_0= ruleDependencyObservableSemantics )
                // InternalKim.g:7270:7: lv_observable_2_0= ruleDependencyObservableSemantics
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getDependencyAccess().getObservableDependencyObservableSemanticsParserRuleCall_1_0_1_0());
                  						
                }
                pushFollow(FOLLOW_2);
                lv_observable_2_0=ruleDependencyObservableSemantics();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }
    }
    // $ANTLR end synpred288_InternalKim

    // $ANTLR start synpred292_InternalKim
    public final void synpred292_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_optional_9_0=null;
        Token otherlv_10=null;
        EObject lv_alternativeObservables_5_0 = null;

        EObject lv_alternativeObservables_7_0 = null;


        // InternalKim.g:7296:5: ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) )
        // InternalKim.g:7296:5: ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) )
        {
        // InternalKim.g:7296:5: ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) )
        // InternalKim.g:7297:6: {...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred292_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0)");
        }
        // InternalKim.g:7297:110: ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) )
        // InternalKim.g:7298:7: ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0);
        // InternalKim.g:7301:10: ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) )
        // InternalKim.g:7301:11: {...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred292_InternalKim", "true");
        }
        // InternalKim.g:7301:20: (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? )
        // InternalKim.g:7301:21: otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )?
        {
        otherlv_4=(Token)match(input,38,FOLLOW_100); if (state.failed) return ;
        // InternalKim.g:7305:10: ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) )
        // InternalKim.g:7306:11: (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics )
        {
        // InternalKim.g:7306:11: (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics )
        // InternalKim.g:7307:12: lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getDependencyAccess().getAlternativeObservablesAlternativeDependencyObservableSemanticsParserRuleCall_1_1_0_1_0());
          											
        }
        pushFollow(FOLLOW_29);
        lv_alternativeObservables_5_0=ruleAlternativeDependencyObservableSemantics();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:7324:10: (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )*
        loop485:
        do {
            int alt485=2;
            int LA485_0 = input.LA(1);

            if ( (LA485_0==27) ) {
                alt485=1;
            }


            switch (alt485) {
        	case 1 :
        	    // InternalKim.g:7325:11: otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) )
        	    {
        	    otherlv_6=(Token)match(input,27,FOLLOW_100); if (state.failed) return ;
        	    // InternalKim.g:7329:11: ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) )
        	    // InternalKim.g:7330:12: (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics )
        	    {
        	    // InternalKim.g:7330:12: (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics )
        	    // InternalKim.g:7331:13: lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics
        	    {
        	    if ( state.backtracking==0 ) {

        	      													newCompositeNode(grammarAccess.getDependencyAccess().getAlternativeObservablesAlternativeDependencyObservableSemanticsParserRuleCall_1_1_0_2_1_0());
        	      												
        	    }
        	    pushFollow(FOLLOW_29);
        	    lv_alternativeObservables_7_0=ruleAlternativeDependencyObservableSemantics();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop485;
            }
        } while (true);

        otherlv_8=(Token)match(input,41,FOLLOW_203); if (state.failed) return ;
        // InternalKim.g:7353:10: ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )?
        int alt486=3;
        int LA486_0 = input.LA(1);

        if ( (LA486_0==114) ) {
            alt486=1;
        }
        else if ( (LA486_0==115) ) {
            alt486=2;
        }
        switch (alt486) {
            case 1 :
                // InternalKim.g:7354:11: ( (lv_optional_9_0= 'optional' ) )
                {
                // InternalKim.g:7354:11: ( (lv_optional_9_0= 'optional' ) )
                // InternalKim.g:7355:12: (lv_optional_9_0= 'optional' )
                {
                // InternalKim.g:7355:12: (lv_optional_9_0= 'optional' )
                // InternalKim.g:7356:13: lv_optional_9_0= 'optional'
                {
                lv_optional_9_0=(Token)match(input,114,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:7369:11: otherlv_10= 'required'
                {
                otherlv_10=(Token)match(input,115,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred292_InternalKim

    // $ANTLR start synpred294_InternalKim
    public final void synpred294_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_11=null;
        Token lv_name_12_1=null;
        Token lv_name_12_2=null;

        // InternalKim.g:7380:5: ( ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )
        // InternalKim.g:7380:5: ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) )
        {
        // InternalKim.g:7380:5: ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) )
        // InternalKim.g:7381:6: {...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred294_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1)");
        }
        // InternalKim.g:7381:110: ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:7382:7: ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1);
        // InternalKim.g:7385:10: ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) )
        // InternalKim.g:7385:11: {...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred294_InternalKim", "true");
        }
        // InternalKim.g:7385:20: (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) )
        // InternalKim.g:7385:21: otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) )
        {
        otherlv_11=(Token)match(input,116,FOLLOW_45); if (state.failed) return ;
        // InternalKim.g:7389:10: ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) )
        // InternalKim.g:7390:11: ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) )
        {
        // InternalKim.g:7390:11: ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) )
        // InternalKim.g:7391:12: (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING )
        {
        // InternalKim.g:7391:12: (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING )
        int alt487=2;
        int LA487_0 = input.LA(1);

        if ( (LA487_0==RULE_LOWERCASE_ID) ) {
            alt487=1;
        }
        else if ( (LA487_0==RULE_STRING) ) {
            alt487=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 487, 0, input);

            throw nvae;
        }
        switch (alt487) {
            case 1 :
                // InternalKim.g:7392:13: lv_name_12_1= RULE_LOWERCASE_ID
                {
                lv_name_12_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:7407:13: lv_name_12_2= RULE_STRING
                {
                lv_name_12_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred294_InternalKim

    // $ANTLR start synpred295_InternalKim
    public final void synpred295_InternalKim_fragment() throws RecognitionException {   
        EObject lv_main_0_0 = null;


        // InternalKim.g:7472:4: ( (lv_main_0_0= ruleConcept ) )
        // InternalKim.g:7472:4: (lv_main_0_0= ruleConcept )
        {
        // InternalKim.g:7472:4: (lv_main_0_0= ruleConcept )
        // InternalKim.g:7473:5: lv_main_0_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMainConceptParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_main_0_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred295_InternalKim

    // $ANTLR start synpred297_InternalKim
    public final void synpred297_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_distributedOfInherency_3_0=null;
        EObject lv_inherency_4_0 = null;


        // InternalKim.g:7497:4: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
        // InternalKim.g:7497:4: ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        {
        // InternalKim.g:7497:4: ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:7498:5: {...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred297_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:7498:115: ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:7499:6: ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:7502:9: ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:7502:10: {...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred297_InternalKim", "true");
        }
        // InternalKim.g:7502:19: (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:7502:20: otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        {
        otherlv_2=(Token)match(input,119,FOLLOW_104); if (state.failed) return ;
        // InternalKim.g:7506:9: ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7507:10: ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:7507:10: ( (lv_distributedOfInherency_3_0= 'each' ) )?
        int alt488=2;
        int LA488_0 = input.LA(1);

        if ( (LA488_0==26) ) {
            alt488=1;
        }
        switch (alt488) {
            case 1 :
                // InternalKim.g:7508:11: (lv_distributedOfInherency_3_0= 'each' )
                {
                // InternalKim.g:7508:11: (lv_distributedOfInherency_3_0= 'each' )
                // InternalKim.g:7509:12: lv_distributedOfInherency_3_0= 'each'
                {
                lv_distributedOfInherency_3_0=(Token)match(input,26,FOLLOW_104); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:7521:10: ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7522:11: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7522:11: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7523:12: lv_inherency_4_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_1_0_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_inherency_4_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred297_InternalKim

    // $ANTLR start synpred299_InternalKim
    public final void synpred299_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token lv_distributedForInherency_6_0=null;
        EObject lv_motivation_7_0 = null;


        // InternalKim.g:7547:4: ( ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
        // InternalKim.g:7547:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        {
        // InternalKim.g:7547:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:7548:5: {...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred299_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:7548:115: ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:7549:6: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:7552:9: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:7552:10: {...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred299_InternalKim", "true");
        }
        // InternalKim.g:7552:19: (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:7552:20: otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
        {
        otherlv_5=(Token)match(input,69,FOLLOW_104); if (state.failed) return ;
        // InternalKim.g:7556:9: ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7557:10: ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:7557:10: ( (lv_distributedForInherency_6_0= 'each' ) )?
        int alt489=2;
        int LA489_0 = input.LA(1);

        if ( (LA489_0==26) ) {
            alt489=1;
        }
        switch (alt489) {
            case 1 :
                // InternalKim.g:7558:11: (lv_distributedForInherency_6_0= 'each' )
                {
                // InternalKim.g:7558:11: (lv_distributedForInherency_6_0= 'each' )
                // InternalKim.g:7559:12: lv_distributedForInherency_6_0= 'each'
                {
                lv_distributedForInherency_6_0=(Token)match(input,26,FOLLOW_104); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:7571:10: ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7572:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7572:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7573:12: lv_motivation_7_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_1_1_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_motivation_7_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred299_InternalKim

    // $ANTLR start synpred300_InternalKim
    public final void synpred300_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        EObject lv_compresent_9_0 = null;


        // InternalKim.g:7597:4: ( ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:7597:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:7597:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:7598:5: {...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred300_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2)");
        }
        // InternalKim.g:7598:115: ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:7599:6: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2);
        // InternalKim.g:7602:9: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:7602:10: {...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred300_InternalKim", "true");
        }
        // InternalKim.g:7602:19: (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7602:20: otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_8=(Token)match(input,98,FOLLOW_104); if (state.failed) return ;
        // InternalKim.g:7606:9: ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7607:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7607:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7608:11: lv_compresent_9_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_1_2_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_compresent_9_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred300_InternalKim

    // $ANTLR start synpred301_InternalKim
    public final void synpred301_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_causant_12_0 = null;


        // InternalKim.g:7631:4: ( ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:7631:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:7631:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:7632:5: {...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred301_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3)");
        }
        // InternalKim.g:7632:115: ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:7633:6: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3);
        // InternalKim.g:7636:9: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:7636:10: {...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred301_InternalKim", "true");
        }
        // InternalKim.g:7636:19: (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7636:20: otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_10=(Token)match(input,120,FOLLOW_106); if (state.failed) return ;
        otherlv_11=(Token)match(input,88,FOLLOW_104); if (state.failed) return ;
        // InternalKim.g:7644:9: ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7645:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7645:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7646:11: lv_causant_12_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_1_3_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_causant_12_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred301_InternalKim

    // $ANTLR start synpred302_InternalKim
    public final void synpred302_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_13=null;
        Token otherlv_14=null;
        EObject lv_adjacent_15_0 = null;


        // InternalKim.g:7669:4: ( ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:7669:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:7669:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:7670:5: {...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred302_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4)");
        }
        // InternalKim.g:7670:115: ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:7671:6: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4);
        // InternalKim.g:7674:9: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:7674:10: {...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred302_InternalKim", "true");
        }
        // InternalKim.g:7674:19: (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7674:20: otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_13=(Token)match(input,121,FOLLOW_25); if (state.failed) return ;
        otherlv_14=(Token)match(input,36,FOLLOW_104); if (state.failed) return ;
        // InternalKim.g:7682:9: ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7683:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7683:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7684:11: lv_adjacent_15_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_1_4_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_adjacent_15_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred302_InternalKim

    // $ANTLR start synpred303_InternalKim
    public final void synpred303_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_16=null;
        Token otherlv_17=null;
        EObject lv_container_18_0 = null;


        // InternalKim.g:7707:4: ( ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:7707:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:7707:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:7708:5: {...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred303_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5)");
        }
        // InternalKim.g:7708:115: ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:7709:6: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5);
        // InternalKim.g:7712:9: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:7712:10: {...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred303_InternalKim", "true");
        }
        // InternalKim.g:7712:19: (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7712:20: otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_16=(Token)match(input,122,FOLLOW_107); if (state.failed) return ;
        otherlv_17=(Token)match(input,48,FOLLOW_104); if (state.failed) return ;
        // InternalKim.g:7720:9: ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7721:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7721:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7722:11: lv_container_18_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_1_5_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_container_18_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred303_InternalKim

    // $ANTLR start synpred304_InternalKim
    public final void synpred304_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        EObject lv_contained_20_0 = null;


        // InternalKim.g:7745:4: ( ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:7745:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:7745:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:7746:5: {...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred304_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6)");
        }
        // InternalKim.g:7746:115: ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:7747:6: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6);
        // InternalKim.g:7750:9: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:7750:10: {...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred304_InternalKim", "true");
        }
        // InternalKim.g:7750:19: (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7750:20: otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_19=(Token)match(input,123,FOLLOW_104); if (state.failed) return ;
        // InternalKim.g:7754:9: ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7755:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7755:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7756:11: lv_contained_20_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_1_6_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_contained_20_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred304_InternalKim

    // $ANTLR start synpred305_InternalKim
    public final void synpred305_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_21=null;
        EObject lv_caused_22_0 = null;


        // InternalKim.g:7779:4: ( ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:7779:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:7779:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:7780:5: {...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred305_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7)");
        }
        // InternalKim.g:7780:115: ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:7781:6: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7);
        // InternalKim.g:7784:9: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:7784:10: {...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred305_InternalKim", "true");
        }
        // InternalKim.g:7784:19: (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7784:20: otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_21=(Token)match(input,124,FOLLOW_104); if (state.failed) return ;
        // InternalKim.g:7788:9: ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7789:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7789:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7790:11: lv_caused_22_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_1_7_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_caused_22_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred305_InternalKim

    // $ANTLR start synpred306_InternalKim
    public final void synpred306_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        EObject lv_during_24_0 = null;


        // InternalKim.g:7813:4: ( ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:7813:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:7813:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:7814:5: {...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred306_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8)");
        }
        // InternalKim.g:7814:115: ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:7815:6: ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8);
        // InternalKim.g:7818:9: ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:7818:10: {...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred306_InternalKim", "true");
        }
        // InternalKim.g:7818:19: (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7818:20: otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_23=(Token)match(input,125,FOLLOW_104); if (state.failed) return ;
        // InternalKim.g:7822:9: ( (lv_during_24_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7823:10: (lv_during_24_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7823:10: (lv_during_24_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7824:11: lv_during_24_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getDuringSimpleConceptDeclarationParserRuleCall_1_8_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_during_24_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred306_InternalKim

    // $ANTLR start synpred308_InternalKim
    public final void synpred308_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_25=null;
        Token lv_distributedWithinInherency_26_0=null;
        EObject lv_context_27_0 = null;


        // InternalKim.g:7847:4: ( ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
        // InternalKim.g:7847:4: ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        {
        // InternalKim.g:7847:4: ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:7848:5: {...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred308_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9)");
        }
        // InternalKim.g:7848:115: ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:7849:6: ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9);
        // InternalKim.g:7852:9: ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:7852:10: {...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred308_InternalKim", "true");
        }
        // InternalKim.g:7852:19: (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:7852:20: otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) )
        {
        otherlv_25=(Token)match(input,126,FOLLOW_104); if (state.failed) return ;
        // InternalKim.g:7856:9: ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7857:10: ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:7857:10: ( (lv_distributedWithinInherency_26_0= 'each' ) )?
        int alt490=2;
        int LA490_0 = input.LA(1);

        if ( (LA490_0==26) ) {
            alt490=1;
        }
        switch (alt490) {
            case 1 :
                // InternalKim.g:7858:11: (lv_distributedWithinInherency_26_0= 'each' )
                {
                // InternalKim.g:7858:11: (lv_distributedWithinInherency_26_0= 'each' )
                // InternalKim.g:7859:12: lv_distributedWithinInherency_26_0= 'each'
                {
                lv_distributedWithinInherency_26_0=(Token)match(input,26,FOLLOW_104); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:7871:10: ( (lv_context_27_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7872:11: (lv_context_27_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7872:11: (lv_context_27_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7873:12: lv_context_27_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContextSimpleConceptDeclarationParserRuleCall_1_9_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_context_27_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred308_InternalKim

    // $ANTLR start synpred309_InternalKim
    public final void synpred309_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_28=null;
        Token otherlv_30=null;
        EObject lv_relationshipSource_29_0 = null;

        EObject lv_relationshipTarget_31_0 = null;


        // InternalKim.g:7897:4: ( ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:7897:4: ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:7897:4: ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:7898:5: {...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred309_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10)");
        }
        // InternalKim.g:7898:116: ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:7899:6: ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10);
        // InternalKim.g:7902:9: ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:7902:10: {...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred309_InternalKim", "true");
        }
        // InternalKim.g:7902:19: (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7902:20: otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_28=(Token)match(input,127,FOLLOW_104); if (state.failed) return ;
        // InternalKim.g:7906:9: ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7907:10: (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7907:10: (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7908:11: lv_relationshipSource_29_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipSourceSimpleConceptDeclarationParserRuleCall_1_10_1_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_relationshipSource_29_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_30=(Token)match(input,36,FOLLOW_104); if (state.failed) return ;
        // InternalKim.g:7929:9: ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7930:10: (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7930:10: (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7931:11: lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipTargetSimpleConceptDeclarationParserRuleCall_1_10_3_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_relationshipTarget_31_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred309_InternalKim

    // $ANTLR start synpred310_InternalKim
    public final void synpred310_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_distributedOfInherency_3_0=null;
        Token otherlv_5=null;
        Token lv_distributedForInherency_6_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token lv_distributedWithinInherency_26_0=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        EObject lv_inherency_4_0 = null;

        EObject lv_motivation_7_0 = null;

        EObject lv_compresent_9_0 = null;

        EObject lv_causant_12_0 = null;

        EObject lv_adjacent_15_0 = null;

        EObject lv_container_18_0 = null;

        EObject lv_contained_20_0 = null;

        EObject lv_caused_22_0 = null;

        EObject lv_during_24_0 = null;

        EObject lv_context_27_0 = null;

        EObject lv_relationshipSource_29_0 = null;

        EObject lv_relationshipTarget_31_0 = null;


        // InternalKim.g:7491:4: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )
        // InternalKim.g:7491:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
        {
        // InternalKim.g:7491:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
        // InternalKim.g:7492:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
        {
        getUnorderedGroupHelper().enter(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
        // InternalKim.g:7495:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
        // InternalKim.g:7496:6: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
        {
        // InternalKim.g:7496:6: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
        loop494:
        do {
            int alt494=12;
            alt494 = dfa494.predict(input);
            switch (alt494) {
        	case 1 :
        	    // InternalKim.g:7497:4: ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    {
        	    // InternalKim.g:7497:4: ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    // InternalKim.g:7498:5: {...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred310_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0)");
        	    }
        	    // InternalKim.g:7498:115: ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:7499:6: ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0);
        	    // InternalKim.g:7502:9: ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:7502:10: {...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred310_InternalKim", "true");
        	    }
        	    // InternalKim.g:7502:19: (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:7502:20: otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    otherlv_2=(Token)match(input,119,FOLLOW_104); if (state.failed) return ;
        	    // InternalKim.g:7506:9: ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:7507:10: ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:7507:10: ( (lv_distributedOfInherency_3_0= 'each' ) )?
        	    int alt491=2;
        	    int LA491_0 = input.LA(1);

        	    if ( (LA491_0==26) ) {
        	        alt491=1;
        	    }
        	    switch (alt491) {
        	        case 1 :
        	            // InternalKim.g:7508:11: (lv_distributedOfInherency_3_0= 'each' )
        	            {
        	            // InternalKim.g:7508:11: (lv_distributedOfInherency_3_0= 'each' )
        	            // InternalKim.g:7509:12: lv_distributedOfInherency_3_0= 'each'
        	            {
        	            lv_distributedOfInherency_3_0=(Token)match(input,26,FOLLOW_104); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }

        	    // InternalKim.g:7521:10: ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7522:11: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7522:11: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7523:12: lv_inherency_4_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_1_0_1_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_105);
        	    lv_inherency_4_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:7547:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    {
        	    // InternalKim.g:7547:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    // InternalKim.g:7548:5: {...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred310_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1)");
        	    }
        	    // InternalKim.g:7548:115: ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:7549:6: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1);
        	    // InternalKim.g:7552:9: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:7552:10: {...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred310_InternalKim", "true");
        	    }
        	    // InternalKim.g:7552:19: (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:7552:20: otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    otherlv_5=(Token)match(input,69,FOLLOW_104); if (state.failed) return ;
        	    // InternalKim.g:7556:9: ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:7557:10: ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:7557:10: ( (lv_distributedForInherency_6_0= 'each' ) )?
        	    int alt492=2;
        	    int LA492_0 = input.LA(1);

        	    if ( (LA492_0==26) ) {
        	        alt492=1;
        	    }
        	    switch (alt492) {
        	        case 1 :
        	            // InternalKim.g:7558:11: (lv_distributedForInherency_6_0= 'each' )
        	            {
        	            // InternalKim.g:7558:11: (lv_distributedForInherency_6_0= 'each' )
        	            // InternalKim.g:7559:12: lv_distributedForInherency_6_0= 'each'
        	            {
        	            lv_distributedForInherency_6_0=(Token)match(input,26,FOLLOW_104); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }

        	    // InternalKim.g:7571:10: ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7572:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7572:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7573:12: lv_motivation_7_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_1_1_1_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_105);
        	    lv_motivation_7_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 3 :
        	    // InternalKim.g:7597:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:7597:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:7598:5: {...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred310_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2)");
        	    }
        	    // InternalKim.g:7598:115: ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:7599:6: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2);
        	    // InternalKim.g:7602:9: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:7602:10: {...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred310_InternalKim", "true");
        	    }
        	    // InternalKim.g:7602:19: (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:7602:20: otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_8=(Token)match(input,98,FOLLOW_104); if (state.failed) return ;
        	    // InternalKim.g:7606:9: ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7607:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7607:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7608:11: lv_compresent_9_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_1_2_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_105);
        	    lv_compresent_9_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 4 :
        	    // InternalKim.g:7631:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:7631:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:7632:5: {...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred310_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3)");
        	    }
        	    // InternalKim.g:7632:115: ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:7633:6: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3);
        	    // InternalKim.g:7636:9: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:7636:10: {...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred310_InternalKim", "true");
        	    }
        	    // InternalKim.g:7636:19: (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:7636:20: otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_10=(Token)match(input,120,FOLLOW_106); if (state.failed) return ;
        	    otherlv_11=(Token)match(input,88,FOLLOW_104); if (state.failed) return ;
        	    // InternalKim.g:7644:9: ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7645:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7645:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7646:11: lv_causant_12_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_1_3_2_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_105);
        	    lv_causant_12_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 5 :
        	    // InternalKim.g:7669:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:7669:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:7670:5: {...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred310_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4)");
        	    }
        	    // InternalKim.g:7670:115: ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:7671:6: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4);
        	    // InternalKim.g:7674:9: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:7674:10: {...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred310_InternalKim", "true");
        	    }
        	    // InternalKim.g:7674:19: (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:7674:20: otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_13=(Token)match(input,121,FOLLOW_25); if (state.failed) return ;
        	    otherlv_14=(Token)match(input,36,FOLLOW_104); if (state.failed) return ;
        	    // InternalKim.g:7682:9: ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7683:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7683:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7684:11: lv_adjacent_15_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_1_4_2_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_105);
        	    lv_adjacent_15_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 6 :
        	    // InternalKim.g:7707:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:7707:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:7708:5: {...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred310_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5)");
        	    }
        	    // InternalKim.g:7708:115: ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:7709:6: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5);
        	    // InternalKim.g:7712:9: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:7712:10: {...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred310_InternalKim", "true");
        	    }
        	    // InternalKim.g:7712:19: (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:7712:20: otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_16=(Token)match(input,122,FOLLOW_107); if (state.failed) return ;
        	    otherlv_17=(Token)match(input,48,FOLLOW_104); if (state.failed) return ;
        	    // InternalKim.g:7720:9: ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7721:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7721:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7722:11: lv_container_18_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_1_5_2_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_105);
        	    lv_container_18_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 7 :
        	    // InternalKim.g:7745:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:7745:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:7746:5: {...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred310_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6)");
        	    }
        	    // InternalKim.g:7746:115: ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:7747:6: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6);
        	    // InternalKim.g:7750:9: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:7750:10: {...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred310_InternalKim", "true");
        	    }
        	    // InternalKim.g:7750:19: (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:7750:20: otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_19=(Token)match(input,123,FOLLOW_104); if (state.failed) return ;
        	    // InternalKim.g:7754:9: ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7755:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7755:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7756:11: lv_contained_20_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_1_6_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_105);
        	    lv_contained_20_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 8 :
        	    // InternalKim.g:7779:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:7779:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:7780:5: {...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred310_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7)");
        	    }
        	    // InternalKim.g:7780:115: ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:7781:6: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7);
        	    // InternalKim.g:7784:9: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:7784:10: {...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred310_InternalKim", "true");
        	    }
        	    // InternalKim.g:7784:19: (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:7784:20: otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_21=(Token)match(input,124,FOLLOW_104); if (state.failed) return ;
        	    // InternalKim.g:7788:9: ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7789:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7789:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7790:11: lv_caused_22_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_1_7_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_105);
        	    lv_caused_22_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 9 :
        	    // InternalKim.g:7813:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:7813:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:7814:5: {...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred310_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8)");
        	    }
        	    // InternalKim.g:7814:115: ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:7815:6: ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8);
        	    // InternalKim.g:7818:9: ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:7818:10: {...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred310_InternalKim", "true");
        	    }
        	    // InternalKim.g:7818:19: (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:7818:20: otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_23=(Token)match(input,125,FOLLOW_104); if (state.failed) return ;
        	    // InternalKim.g:7822:9: ( (lv_during_24_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7823:10: (lv_during_24_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7823:10: (lv_during_24_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7824:11: lv_during_24_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getDuringSimpleConceptDeclarationParserRuleCall_1_8_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_105);
        	    lv_during_24_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 10 :
        	    // InternalKim.g:7847:4: ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    {
        	    // InternalKim.g:7847:4: ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    // InternalKim.g:7848:5: {...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred310_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9)");
        	    }
        	    // InternalKim.g:7848:115: ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:7849:6: ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9);
        	    // InternalKim.g:7852:9: ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:7852:10: {...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred310_InternalKim", "true");
        	    }
        	    // InternalKim.g:7852:19: (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:7852:20: otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    otherlv_25=(Token)match(input,126,FOLLOW_104); if (state.failed) return ;
        	    // InternalKim.g:7856:9: ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:7857:10: ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:7857:10: ( (lv_distributedWithinInherency_26_0= 'each' ) )?
        	    int alt493=2;
        	    int LA493_0 = input.LA(1);

        	    if ( (LA493_0==26) ) {
        	        alt493=1;
        	    }
        	    switch (alt493) {
        	        case 1 :
        	            // InternalKim.g:7858:11: (lv_distributedWithinInherency_26_0= 'each' )
        	            {
        	            // InternalKim.g:7858:11: (lv_distributedWithinInherency_26_0= 'each' )
        	            // InternalKim.g:7859:12: lv_distributedWithinInherency_26_0= 'each'
        	            {
        	            lv_distributedWithinInherency_26_0=(Token)match(input,26,FOLLOW_104); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }

        	    // InternalKim.g:7871:10: ( (lv_context_27_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7872:11: (lv_context_27_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7872:11: (lv_context_27_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7873:12: lv_context_27_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContextSimpleConceptDeclarationParserRuleCall_1_9_1_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_105);
        	    lv_context_27_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 11 :
        	    // InternalKim.g:7897:4: ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:7897:4: ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:7898:5: {...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred310_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10)");
        	    }
        	    // InternalKim.g:7898:116: ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:7899:6: ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10);
        	    // InternalKim.g:7902:9: ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:7902:10: {...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred310_InternalKim", "true");
        	    }
        	    // InternalKim.g:7902:19: (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:7902:20: otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_28=(Token)match(input,127,FOLLOW_104); if (state.failed) return ;
        	    // InternalKim.g:7906:9: ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7907:10: (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7907:10: (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7908:11: lv_relationshipSource_29_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipSourceSimpleConceptDeclarationParserRuleCall_1_10_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_25);
        	    lv_relationshipSource_29_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    otherlv_30=(Token)match(input,36,FOLLOW_104); if (state.failed) return ;
        	    // InternalKim.g:7929:9: ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7930:10: (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7930:10: (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7931:11: lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipTargetSimpleConceptDeclarationParserRuleCall_1_10_3_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_105);
        	    lv_relationshipTarget_31_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop494;
            }
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred310_InternalKim

    // $ANTLR start synpred363_InternalKim
    public final void synpred363_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_42=null;
        EObject lv_other_43_0 = null;


        // InternalKim.g:9443:5: ( ( ( 'in' )=>otherlv_42= 'in' ) ( (lv_other_43_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:9443:5: ( ( 'in' )=>otherlv_42= 'in' ) ( (lv_other_43_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:9443:5: ( ( 'in' )=>otherlv_42= 'in' )
        // InternalKim.g:9444:6: ( 'in' )=>otherlv_42= 'in'
        {
        otherlv_42=(Token)match(input,48,FOLLOW_104); if (state.failed) return ;

        }

        // InternalKim.g:9450:5: ( (lv_other_43_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:9451:6: (lv_other_43_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:9451:6: (lv_other_43_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:9452:7: lv_other_43_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_11_3_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_other_43_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred363_InternalKim

    // $ANTLR start synpred366_InternalKim
    public final void synpred366_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_47=null;
        EObject lv_other_48_0 = null;


        // InternalKim.g:9511:5: ( ( ( 'in' )=>otherlv_47= 'in' ) ( (lv_other_48_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:9511:5: ( ( 'in' )=>otherlv_47= 'in' ) ( (lv_other_48_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:9511:5: ( ( 'in' )=>otherlv_47= 'in' )
        // InternalKim.g:9512:6: ( 'in' )=>otherlv_47= 'in'
        {
        otherlv_47=(Token)match(input,48,FOLLOW_104); if (state.failed) return ;

        }

        // InternalKim.g:9518:5: ( (lv_other_48_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:9519:6: (lv_other_48_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:9519:6: (lv_other_48_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:9520:7: lv_other_48_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_12_3_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_other_48_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred366_InternalKim

    // $ANTLR start synpred372_InternalKim
    public final void synpred372_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_58=null;
        EObject lv_other_59_0 = null;


        // InternalKim.g:9659:5: ( ( ( 'over' )=>otherlv_58= 'over' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:9659:5: ( ( 'over' )=>otherlv_58= 'over' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:9659:5: ( ( 'over' )=>otherlv_58= 'over' )
        // InternalKim.g:9660:6: ( 'over' )=>otherlv_58= 'over'
        {
        otherlv_58=(Token)match(input,55,FOLLOW_104); if (state.failed) return ;

        }

        // InternalKim.g:9666:5: ( (lv_other_59_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:9667:6: (lv_other_59_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:9667:6: (lv_other_59_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:9668:7: lv_other_59_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_14_4_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_other_59_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred372_InternalKim

    // $ANTLR start synpred381_InternalKim
    public final void synpred381_InternalKim_fragment() throws RecognitionException {   
        Token lv_operators_1_0=null;
        EObject lv_operands_2_0 = null;


        // InternalKim.g:9958:4: ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )
        // InternalKim.g:9958:4: ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) )
        {
        // InternalKim.g:9958:4: ( (lv_operators_1_0= 'or' ) )
        // InternalKim.g:9959:5: (lv_operators_1_0= 'or' )
        {
        // InternalKim.g:9959:5: (lv_operators_1_0= 'or' )
        // InternalKim.g:9960:6: lv_operators_1_0= 'or'
        {
        lv_operators_1_0=(Token)match(input,157,FOLLOW_23); if (state.failed) return ;

        }


        }

        // InternalKim.g:9972:4: ( (lv_operands_2_0= ruleFactor ) )
        // InternalKim.g:9973:5: (lv_operands_2_0= ruleFactor )
        {
        // InternalKim.g:9973:5: (lv_operands_2_0= ruleFactor )
        // InternalKim.g:9974:6: lv_operands_2_0= ruleFactor
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTermAccess().getOperandsFactorParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_operands_2_0=ruleFactor();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred381_InternalKim

    // $ANTLR start synpred383_InternalKim
    public final void synpred383_InternalKim_fragment() throws RecognitionException {   
        Token lv_operators_1_1=null;
        Token lv_operators_1_2=null;
        EObject lv_operands_2_0 = null;


        // InternalKim.g:10023:4: ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )
        // InternalKim.g:10023:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) )
        {
        // InternalKim.g:10023:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) )
        // InternalKim.g:10024:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
        {
        // InternalKim.g:10024:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
        // InternalKim.g:10025:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
        {
        // InternalKim.g:10025:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
        int alt524=2;
        int LA524_0 = input.LA(1);

        if ( (LA524_0==158) ) {
            alt524=1;
        }
        else if ( (LA524_0==159) ) {
            alt524=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 524, 0, input);

            throw nvae;
        }
        switch (alt524) {
            case 1 :
                // InternalKim.g:10026:7: lv_operators_1_1= 'and'
                {
                lv_operators_1_1=(Token)match(input,158,FOLLOW_23); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:10037:7: lv_operators_1_2= 'follows'
                {
                lv_operators_1_2=(Token)match(input,159,FOLLOW_23); if (state.failed) return ;

                }
                break;

        }


        }


        }

        // InternalKim.g:10050:4: ( (lv_operands_2_0= ruleTerm ) )
        // InternalKim.g:10051:5: (lv_operands_2_0= ruleTerm )
        {
        // InternalKim.g:10051:5: (lv_operands_2_0= ruleTerm )
        // InternalKim.g:10052:6: lv_operands_2_0= ruleTerm
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFactorAccess().getOperandsTermParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_operands_2_0=ruleTerm();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred383_InternalKim

    // $ANTLR start synpred385_InternalKim
    public final void synpred385_InternalKim_fragment() throws RecognitionException {   
        EObject lv_main_1_0 = null;


        // InternalKim.g:10108:4: ( (lv_main_1_0= ruleConcept ) )
        // InternalKim.g:10108:4: (lv_main_1_0= ruleConcept )
        {
        // InternalKim.g:10108:4: (lv_main_1_0= ruleConcept )
        // InternalKim.g:10109:5: lv_main_1_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_main_1_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred385_InternalKim

    // $ANTLR start synpred395_InternalKim
    public final void synpred395_InternalKim_fragment() throws RecognitionException {   
        Token lv_abstract_2_0=null;

        // InternalKim.g:10423:4: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) )
        // InternalKim.g:10423:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
        {
        // InternalKim.g:10423:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
        // InternalKim.g:10424:5: {...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred395_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:10424:113: ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
        // InternalKim.g:10425:6: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:10428:9: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
        // InternalKim.g:10428:10: {...}? => ( (lv_abstract_2_0= 'abstract' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred395_InternalKim", "true");
        }
        // InternalKim.g:10428:19: ( (lv_abstract_2_0= 'abstract' ) )
        // InternalKim.g:10428:20: (lv_abstract_2_0= 'abstract' )
        {
        // InternalKim.g:10428:20: (lv_abstract_2_0= 'abstract' )
        // InternalKim.g:10429:10: lv_abstract_2_0= 'abstract'
        {
        lv_abstract_2_0=(Token)match(input,165,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred395_InternalKim

    // $ANTLR start synpred396_InternalKim
    public final void synpred396_InternalKim_fragment() throws RecognitionException {   
        Token lv_deniable_3_0=null;

        // InternalKim.g:10446:4: ( ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) )
        // InternalKim.g:10446:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
        {
        // InternalKim.g:10446:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
        // InternalKim.g:10447:5: {...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred396_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:10447:113: ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
        // InternalKim.g:10448:6: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:10451:9: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
        // InternalKim.g:10451:10: {...}? => ( (lv_deniable_3_0= 'deniable' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred396_InternalKim", "true");
        }
        // InternalKim.g:10451:19: ( (lv_deniable_3_0= 'deniable' ) )
        // InternalKim.g:10451:20: (lv_deniable_3_0= 'deniable' )
        {
        // InternalKim.g:10451:20: (lv_deniable_3_0= 'deniable' )
        // InternalKim.g:10452:10: lv_deniable_3_0= 'deniable'
        {
        lv_deniable_3_0=(Token)match(input,166,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred396_InternalKim

    // $ANTLR start synpred397_InternalKim
    public final void synpred397_InternalKim_fragment() throws RecognitionException {   
        Token lv_subjective_4_0=null;

        // InternalKim.g:10469:4: ( ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) )
        // InternalKim.g:10469:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
        {
        // InternalKim.g:10469:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
        // InternalKim.g:10470:5: {...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred397_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2)");
        }
        // InternalKim.g:10470:113: ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
        // InternalKim.g:10471:6: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2);
        // InternalKim.g:10474:9: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
        // InternalKim.g:10474:10: {...}? => ( (lv_subjective_4_0= 'subjective' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred397_InternalKim", "true");
        }
        // InternalKim.g:10474:19: ( (lv_subjective_4_0= 'subjective' ) )
        // InternalKim.g:10474:20: (lv_subjective_4_0= 'subjective' )
        {
        // InternalKim.g:10474:20: (lv_subjective_4_0= 'subjective' )
        // InternalKim.g:10475:10: lv_subjective_4_0= 'subjective'
        {
        lv_subjective_4_0=(Token)match(input,167,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred397_InternalKim

    // $ANTLR start synpred401_InternalKim
    public final void synpred401_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;


        // InternalKim.g:10557:11: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )
        // InternalKim.g:10557:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
        {
        // InternalKim.g:10557:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
        // InternalKim.g:10558:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred401_InternalKim

    // $ANTLR start synpred403_InternalKim
    public final void synpred403_InternalKim_fragment() throws RecognitionException {   
        Token lv_agentSpecifier_5_1=null;
        Token lv_agentSpecifier_5_2=null;
        Token lv_agentSpecifier_5_3=null;
        Token lv_attributeSpecifier_8_0=null;
        AntlrDatatypeRuleToken lv_propertySpecifiers_6_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;


        // InternalKim.g:10492:4: ( ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )
        // InternalKim.g:10492:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) )
        {
        // InternalKim.g:10492:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) )
        // InternalKim.g:10493:5: {...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred403_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3)");
        }
        // InternalKim.g:10493:113: ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) )
        // InternalKim.g:10494:6: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3);
        // InternalKim.g:10497:9: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) )
        // InternalKim.g:10497:10: {...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred403_InternalKim", "true");
        }
        // InternalKim.g:10497:19: ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) )
        int alt536=3;
        switch ( input.LA(1) ) {
        case 160:
        case 161:
        case 162:
            {
            alt536=1;
            }
            break;
        case 243:
        case 244:
            {
            alt536=2;
            }
            break;
        case 168:
            {
            alt536=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 536, 0, input);

            throw nvae;
        }

        switch (alt536) {
            case 1 :
                // InternalKim.g:10497:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
                {
                // InternalKim.g:10497:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
                // InternalKim.g:10498:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
                {
                // InternalKim.g:10498:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
                // InternalKim.g:10499:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
                {
                // InternalKim.g:10499:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
                int alt534=3;
                switch ( input.LA(1) ) {
                case 160:
                    {
                    alt534=1;
                    }
                    break;
                case 161:
                    {
                    alt534=2;
                    }
                    break;
                case 162:
                    {
                    alt534=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 534, 0, input);

                    throw nvae;
                }

                switch (alt534) {
                    case 1 :
                        // InternalKim.g:10500:12: lv_agentSpecifier_5_1= 'deliberative'
                        {
                        lv_agentSpecifier_5_1=(Token)match(input,160,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:10511:12: lv_agentSpecifier_5_2= 'interactive'
                        {
                        lv_agentSpecifier_5_2=(Token)match(input,161,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // InternalKim.g:10522:12: lv_agentSpecifier_5_3= 'reactive'
                        {
                        lv_agentSpecifier_5_3=(Token)match(input,162,FOLLOW_2); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:10536:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
                {
                // InternalKim.g:10536:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
                // InternalKim.g:10537:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
                {
                // InternalKim.g:10537:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) )
                // InternalKim.g:10538:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
                {
                // InternalKim.g:10538:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
                // InternalKim.g:10539:12: lv_propertySpecifiers_6_0= rulePROPERTY_TYPE
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_0_0());
                  											
                }
                pushFollow(FOLLOW_204);
                lv_propertySpecifiers_6_0=rulePROPERTY_TYPE();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:10556:10: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
                loop535:
                do {
                    int alt535=2;
                    int LA535_0 = input.LA(1);

                    if ( ((LA535_0>=243 && LA535_0<=244)) ) {
                        alt535=1;
                    }


                    switch (alt535) {
                	case 1 :
                	    // InternalKim.g:10557:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
                	    {
                	    // InternalKim.g:10557:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
                	    // InternalKim.g:10558:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
                	    {
                	    if ( state.backtracking==0 ) {

                	      												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
                	      											
                	    }
                	    pushFollow(FOLLOW_204);
                	    lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }
                	    break;

                	default :
                	    break loop535;
                    }
                } while (true);


                }


                }
                break;
            case 3 :
                // InternalKim.g:10577:9: ( (lv_attributeSpecifier_8_0= 'rescaling' ) )
                {
                // InternalKim.g:10577:9: ( (lv_attributeSpecifier_8_0= 'rescaling' ) )
                // InternalKim.g:10578:10: (lv_attributeSpecifier_8_0= 'rescaling' )
                {
                // InternalKim.g:10578:10: (lv_attributeSpecifier_8_0= 'rescaling' )
                // InternalKim.g:10579:11: lv_attributeSpecifier_8_0= 'rescaling'
                {
                lv_attributeSpecifier_8_0=(Token)match(input,168,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred403_InternalKim

    // $ANTLR start synpred412_InternalKim
    public final void synpred412_InternalKim_fragment() throws RecognitionException {   
        Token lv_docstring_11_0=null;

        // InternalKim.g:10881:4: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:10881:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
        {
        // InternalKim.g:10881:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
        // InternalKim.g:10882:5: {...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred412_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:10882:117: ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
        // InternalKim.g:10883:6: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:10886:9: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
        // InternalKim.g:10886:10: {...}? => ( (lv_docstring_11_0= RULE_STRING ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred412_InternalKim", "true");
        }
        // InternalKim.g:10886:19: ( (lv_docstring_11_0= RULE_STRING ) )
        // InternalKim.g:10886:20: (lv_docstring_11_0= RULE_STRING )
        {
        // InternalKim.g:10886:20: (lv_docstring_11_0= RULE_STRING )
        // InternalKim.g:10887:10: lv_docstring_11_0= RULE_STRING
        {
        lv_docstring_11_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred412_InternalKim

    // $ANTLR start synpred419_InternalKim
    public final void synpred419_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        Token lv_alias_13_0=null;
        Token lv_coreConcept_14_0=null;
        Token lv_nothing_15_0=null;
        Token lv_connectors_17_1=null;
        Token lv_connectors_17_2=null;
        Token lv_connectors_17_3=null;
        EObject lv_parents_16_0 = null;

        EObject lv_parents_18_0 = null;


        // InternalKim.g:10908:4: ( ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) )
        // InternalKim.g:10908:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        {
        // InternalKim.g:10908:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:10909:5: {...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred419_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:10909:117: ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:10910:6: ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:10913:9: ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:10913:10: {...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred419_InternalKim", "true");
        }
        // InternalKim.g:10913:19: ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:10913:20: ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
        {
        // InternalKim.g:10913:20: ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? )
        // InternalKim.g:10914:10: (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )?
        {
        // InternalKim.g:10914:10: (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) )
        int alt542=2;
        int LA542_0 = input.LA(1);

        if ( (LA542_0==169) ) {
            alt542=1;
        }
        else if ( (LA542_0==170) ) {
            alt542=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 542, 0, input);

            throw nvae;
        }
        switch (alt542) {
            case 1 :
                // InternalKim.g:10915:11: otherlv_12= 'is'
                {
                otherlv_12=(Token)match(input,169,FOLLOW_133); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:10920:11: ( (lv_alias_13_0= 'equals' ) )
                {
                // InternalKim.g:10920:11: ( (lv_alias_13_0= 'equals' ) )
                // InternalKim.g:10921:12: (lv_alias_13_0= 'equals' )
                {
                // InternalKim.g:10921:12: (lv_alias_13_0= 'equals' )
                // InternalKim.g:10922:13: lv_alias_13_0= 'equals'
                {
                lv_alias_13_0=(Token)match(input,170,FOLLOW_133); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:10935:10: ( (lv_coreConcept_14_0= 'core' ) )?
        int alt543=2;
        int LA543_0 = input.LA(1);

        if ( (LA543_0==171) ) {
            alt543=1;
        }
        switch (alt543) {
            case 1 :
                // InternalKim.g:10936:11: (lv_coreConcept_14_0= 'core' )
                {
                // InternalKim.g:10936:11: (lv_coreConcept_14_0= 'core' )
                // InternalKim.g:10937:12: lv_coreConcept_14_0= 'core'
                {
                lv_coreConcept_14_0=(Token)match(input,171,FOLLOW_134); if (state.failed) return ;

                }


                }
                break;

        }


        }

        // InternalKim.g:10950:9: ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
        int alt546=2;
        int LA546_0 = input.LA(1);

        if ( (LA546_0==172) ) {
            alt546=1;
        }
        else if ( ((LA546_0>=RULE_UPPERCASE_ID && LA546_0<=RULE_LOWERCASE_ID)||LA546_0==RULE_CAMELCASE_ID||LA546_0==RULE_LOWERCASE_DASHID||LA546_0==38||(LA546_0>=128 && LA546_0<=129)||(LA546_0>=137 && LA546_0<=138)||(LA546_0>=140 && LA546_0<=156)) ) {
            alt546=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 546, 0, input);

            throw nvae;
        }
        switch (alt546) {
            case 1 :
                // InternalKim.g:10951:10: ( (lv_nothing_15_0= 'nothing' ) )
                {
                // InternalKim.g:10951:10: ( (lv_nothing_15_0= 'nothing' ) )
                // InternalKim.g:10952:11: (lv_nothing_15_0= 'nothing' )
                {
                // InternalKim.g:10952:11: (lv_nothing_15_0= 'nothing' )
                // InternalKim.g:10953:12: lv_nothing_15_0= 'nothing'
                {
                lv_nothing_15_0=(Token)match(input,172,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:10966:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
                {
                // InternalKim.g:10966:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
                // InternalKim.g:10967:11: ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
                {
                // InternalKim.g:10967:11: ( (lv_parents_16_0= ruleConceptDeclaration ) )
                // InternalKim.g:10968:12: (lv_parents_16_0= ruleConceptDeclaration )
                {
                // InternalKim.g:10968:12: (lv_parents_16_0= ruleConceptDeclaration )
                // InternalKim.g:10969:13: lv_parents_16_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_0_0());
                  												
                }
                pushFollow(FOLLOW_205);
                lv_parents_16_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:10986:11: ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
                loop545:
                do {
                    int alt545=2;
                    int LA545_0 = input.LA(1);

                    if ( (LA545_0==27||(LA545_0>=157 && LA545_0<=158)) ) {
                        alt545=1;
                    }


                    switch (alt545) {
                	case 1 :
                	    // InternalKim.g:10987:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) )
                	    {
                	    // InternalKim.g:10987:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) )
                	    // InternalKim.g:10988:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
                	    {
                	    // InternalKim.g:10988:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
                	    // InternalKim.g:10989:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
                	    {
                	    // InternalKim.g:10989:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
                	    int alt544=3;
                	    switch ( input.LA(1) ) {
                	    case 27:
                	        {
                	        alt544=1;
                	        }
                	        break;
                	    case 157:
                	        {
                	        alt544=2;
                	        }
                	        break;
                	    case 158:
                	        {
                	        alt544=3;
                	        }
                	        break;
                	    default:
                	        if (state.backtracking>0) {state.failed=true; return ;}
                	        NoViableAltException nvae =
                	            new NoViableAltException("", 544, 0, input);

                	        throw nvae;
                	    }

                	    switch (alt544) {
                	        case 1 :
                	            // InternalKim.g:10990:15: lv_connectors_17_1= ','
                	            {
                	            lv_connectors_17_1=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;

                	            }
                	            break;
                	        case 2 :
                	            // InternalKim.g:11001:15: lv_connectors_17_2= 'or'
                	            {
                	            lv_connectors_17_2=(Token)match(input,157,FOLLOW_23); if (state.failed) return ;

                	            }
                	            break;
                	        case 3 :
                	            // InternalKim.g:11012:15: lv_connectors_17_3= 'and'
                	            {
                	            lv_connectors_17_3=(Token)match(input,158,FOLLOW_23); if (state.failed) return ;

                	            }
                	            break;

                	    }


                	    }


                	    }

                	    // InternalKim.g:11025:12: ( (lv_parents_18_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:11026:13: (lv_parents_18_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:11026:13: (lv_parents_18_0= ruleConceptDeclaration )
                	    // InternalKim.g:11027:14: lv_parents_18_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      														newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_1_1_0());
                	      													
                	    }
                	    pushFollow(FOLLOW_205);
                	    lv_parents_18_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop545;
                    }
                } while (true);


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred419_InternalKim

    // $ANTLR start synpred423_InternalKim
    public final void synpred423_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token lv_specific_23_0=null;
        Token otherlv_25=null;
        EObject lv_contextualizedTraits_20_0 = null;

        EObject lv_contextualizedTraits_22_0 = null;

        EObject lv_contextualizesTraits_24_0 = null;

        EObject lv_contextualizesTraits_26_0 = null;


        // InternalKim.g:11053:4: ( ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:11053:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        // InternalKim.g:11053:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:11054:5: {...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred423_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:11054:117: ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:11055:6: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:11058:9: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:11058:10: {...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred423_InternalKim", "true");
        }
        // InternalKim.g:11058:19: ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
        int alt550=2;
        int LA550_0 = input.LA(1);

        if ( (LA550_0==173) ) {
            alt550=1;
        }
        else if ( (LA550_0==174) ) {
            alt550=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 550, 0, input);

            throw nvae;
        }
        switch (alt550) {
            case 1 :
                // InternalKim.g:11058:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
                {
                // InternalKim.g:11058:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
                // InternalKim.g:11059:10: otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
                {
                otherlv_19=(Token)match(input,173,FOLLOW_92); if (state.failed) return ;
                // InternalKim.g:11063:10: ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) )
                // InternalKim.g:11064:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
                {
                // InternalKim.g:11064:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
                // InternalKim.g:11065:12: lv_contextualizedTraits_20_0= ruleObservableSemantics
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_1_0());
                  											
                }
                pushFollow(FOLLOW_34);
                lv_contextualizedTraits_20_0=ruleObservableSemantics();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:11082:10: (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
                loop548:
                do {
                    int alt548=2;
                    int LA548_0 = input.LA(1);

                    if ( (LA548_0==27) ) {
                        alt548=1;
                    }


                    switch (alt548) {
                	case 1 :
                	    // InternalKim.g:11083:11: otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
                	    {
                	    otherlv_21=(Token)match(input,27,FOLLOW_92); if (state.failed) return ;
                	    // InternalKim.g:11087:11: ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
                	    // InternalKim.g:11088:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
                	    {
                	    // InternalKim.g:11088:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
                	    // InternalKim.g:11089:13: lv_contextualizedTraits_22_0= ruleObservableSemantics
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_34);
                	    lv_contextualizedTraits_22_0=ruleObservableSemantics();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop548;
                    }
                } while (true);


                }


                }
                break;
            case 2 :
                // InternalKim.g:11109:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
                {
                // InternalKim.g:11109:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
                // InternalKim.g:11110:10: ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
                {
                // InternalKim.g:11110:10: ( (lv_specific_23_0= 'exposing' ) )
                // InternalKim.g:11111:11: (lv_specific_23_0= 'exposing' )
                {
                // InternalKim.g:11111:11: (lv_specific_23_0= 'exposing' )
                // InternalKim.g:11112:12: lv_specific_23_0= 'exposing'
                {
                lv_specific_23_0=(Token)match(input,174,FOLLOW_23); if (state.failed) return ;

                }


                }

                // InternalKim.g:11124:10: ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) )
                // InternalKim.g:11125:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
                {
                // InternalKim.g:11125:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
                // InternalKim.g:11126:12: lv_contextualizesTraits_24_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_1_0());
                  											
                }
                pushFollow(FOLLOW_34);
                lv_contextualizesTraits_24_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:11143:10: (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
                loop549:
                do {
                    int alt549=2;
                    int LA549_0 = input.LA(1);

                    if ( (LA549_0==27) ) {
                        alt549=1;
                    }


                    switch (alt549) {
                	case 1 :
                	    // InternalKim.g:11144:11: otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_25=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;
                	    // InternalKim.g:11148:11: ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:11149:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:11149:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
                	    // InternalKim.g:11150:13: lv_contextualizesTraits_26_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_34);
                	    lv_contextualizesTraits_26_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop549;
                    }
                } while (true);


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred423_InternalKim

    // $ANTLR start synpred425_InternalKim
    public final void synpred425_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_definedAuthority_29_0=null;
        EObject lv_upperConcept_30_0 = null;


        // InternalKim.g:11175:4: ( ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) )
        // InternalKim.g:11175:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
        {
        // InternalKim.g:11175:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:11176:5: {...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred425_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:11176:117: ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:11177:6: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:11180:9: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
        // InternalKim.g:11180:10: {...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred425_InternalKim", "true");
        }
        // InternalKim.g:11180:19: (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
        // InternalKim.g:11180:20: otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
        {
        otherlv_27=(Token)match(input,175,FOLLOW_137); if (state.failed) return ;
        // InternalKim.g:11184:9: ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
        int alt551=2;
        int LA551_0 = input.LA(1);

        if ( (LA551_0==176) ) {
            alt551=1;
        }
        else if ( ((LA551_0>=RULE_UPPERCASE_ID && LA551_0<=RULE_LOWERCASE_ID)||LA551_0==RULE_CAMELCASE_ID||LA551_0==RULE_LOWERCASE_DASHID||LA551_0==38||(LA551_0>=128 && LA551_0<=129)||(LA551_0>=137 && LA551_0<=138)||(LA551_0>=140 && LA551_0<=156)) ) {
            alt551=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 551, 0, input);

            throw nvae;
        }
        switch (alt551) {
            case 1 :
                // InternalKim.g:11185:10: (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) )
                {
                // InternalKim.g:11185:10: (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) )
                // InternalKim.g:11186:11: otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) )
                {
                otherlv_28=(Token)match(input,176,FOLLOW_138); if (state.failed) return ;
                // InternalKim.g:11190:11: ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) )
                // InternalKim.g:11191:12: (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH )
                {
                // InternalKim.g:11191:12: (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH )
                // InternalKim.g:11192:13: lv_definedAuthority_29_0= RULE_UPPERCASE_PATH
                {
                lv_definedAuthority_29_0=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return ;

                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:11210:10: ( (lv_upperConcept_30_0= ruleConcept ) )
                {
                // InternalKim.g:11210:10: ( (lv_upperConcept_30_0= ruleConcept ) )
                // InternalKim.g:11211:11: (lv_upperConcept_30_0= ruleConcept )
                {
                // InternalKim.g:11211:11: (lv_upperConcept_30_0= ruleConcept )
                // InternalKim.g:11212:12: lv_upperConcept_30_0= ruleConcept
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getUpperConceptConceptParserRuleCall_3_3_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_upperConcept_30_0=ruleConcept();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred425_InternalKim

    // $ANTLR start synpred427_InternalKim
    public final void synpred427_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_31=null;
        Token otherlv_33=null;
        EObject lv_requirements_32_0 = null;

        EObject lv_requirements_34_0 = null;


        // InternalKim.g:11236:4: ( ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) )
        // InternalKim.g:11236:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
        {
        // InternalKim.g:11236:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
        // InternalKim.g:11237:5: {...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred427_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4)");
        }
        // InternalKim.g:11237:117: ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
        // InternalKim.g:11238:6: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4);
        // InternalKim.g:11241:9: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
        // InternalKim.g:11241:10: {...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred427_InternalKim", "true");
        }
        // InternalKim.g:11241:19: (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
        // InternalKim.g:11241:20: otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
        {
        otherlv_31=(Token)match(input,177,FOLLOW_139); if (state.failed) return ;
        // InternalKim.g:11245:9: ( (lv_requirements_32_0= ruleIdentityRequirement ) )
        // InternalKim.g:11246:10: (lv_requirements_32_0= ruleIdentityRequirement )
        {
        // InternalKim.g:11246:10: (lv_requirements_32_0= ruleIdentityRequirement )
        // InternalKim.g:11247:11: lv_requirements_32_0= ruleIdentityRequirement
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_1_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_requirements_32_0=ruleIdentityRequirement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:11264:9: (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
        loop552:
        do {
            int alt552=2;
            int LA552_0 = input.LA(1);

            if ( (LA552_0==27) ) {
                alt552=1;
            }


            switch (alt552) {
        	case 1 :
        	    // InternalKim.g:11265:10: otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) )
        	    {
        	    otherlv_33=(Token)match(input,27,FOLLOW_139); if (state.failed) return ;
        	    // InternalKim.g:11269:10: ( (lv_requirements_34_0= ruleIdentityRequirement ) )
        	    // InternalKim.g:11270:11: (lv_requirements_34_0= ruleIdentityRequirement )
        	    {
        	    // InternalKim.g:11270:11: (lv_requirements_34_0= ruleIdentityRequirement )
        	    // InternalKim.g:11271:12: lv_requirements_34_0= ruleIdentityRequirement
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_requirements_34_0=ruleIdentityRequirement();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop552;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred427_InternalKim

    // $ANTLR start synpred428_InternalKim
    public final void synpred428_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_35=null;
        EObject lv_describedQuality_36_0 = null;


        // InternalKim.g:11295:4: ( ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:11295:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:11295:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:11296:5: {...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred428_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5)");
        }
        // InternalKim.g:11296:117: ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:11297:6: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5);
        // InternalKim.g:11300:9: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:11300:10: {...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred428_InternalKim", "true");
        }
        // InternalKim.g:11300:19: (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:11300:20: otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
        {
        otherlv_35=(Token)match(input,178,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:11304:9: ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
        // InternalKim.g:11305:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11305:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
        // InternalKim.g:11306:11: lv_describedQuality_36_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedQualityConceptDeclarationParserRuleCall_3_5_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedQuality_36_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred428_InternalKim

    // $ANTLR start synpred429_InternalKim
    public final void synpred429_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_37=null;
        Token otherlv_38=null;
        EObject lv_describedProportionality_39_0 = null;


        // InternalKim.g:11329:4: ( ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:11329:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:11329:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:11330:5: {...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred429_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6)");
        }
        // InternalKim.g:11330:117: ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:11331:6: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6);
        // InternalKim.g:11334:9: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:11334:10: {...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred429_InternalKim", "true");
        }
        // InternalKim.g:11334:19: (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:11334:20: otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
        {
        otherlv_37=(Token)match(input,179,FOLLOW_73); if (state.failed) return ;
        otherlv_38=(Token)match(input,98,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:11342:9: ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
        // InternalKim.g:11343:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11343:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
        // InternalKim.g:11344:11: lv_describedProportionality_39_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedProportionalityConceptDeclarationParserRuleCall_3_6_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedProportionality_39_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred429_InternalKim

    // $ANTLR start synpred430_InternalKim
    public final void synpred430_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_40=null;
        Token otherlv_41=null;
        EObject lv_describedInverseProportionalityQuality_42_0 = null;


        // InternalKim.g:11367:4: ( ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:11367:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:11367:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:11368:5: {...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred430_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7)");
        }
        // InternalKim.g:11368:117: ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:11369:6: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7);
        // InternalKim.g:11372:9: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:11372:10: {...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred430_InternalKim", "true");
        }
        // InternalKim.g:11372:19: (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:11372:20: otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
        {
        otherlv_40=(Token)match(input,180,FOLLOW_73); if (state.failed) return ;
        otherlv_41=(Token)match(input,98,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:11380:9: ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
        // InternalKim.g:11381:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11381:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
        // InternalKim.g:11382:11: lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedInverseProportionalityQualityConceptDeclarationParserRuleCall_3_7_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedInverseProportionalityQuality_42_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred430_InternalKim

    // $ANTLR start synpred431_InternalKim
    public final void synpred431_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_43=null;
        EObject lv_describedNonzeroQuality_44_0 = null;


        // InternalKim.g:11405:4: ( ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:11405:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:11405:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:11406:5: {...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred431_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8)");
        }
        // InternalKim.g:11406:117: ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:11407:6: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8);
        // InternalKim.g:11410:9: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:11410:10: {...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred431_InternalKim", "true");
        }
        // InternalKim.g:11410:19: (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:11410:20: otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
        {
        otherlv_43=(Token)match(input,181,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:11414:9: ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
        // InternalKim.g:11415:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11415:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
        // InternalKim.g:11416:11: lv_describedNonzeroQuality_44_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedNonzeroQualityConceptDeclarationParserRuleCall_3_8_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedNonzeroQuality_44_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred431_InternalKim

    // $ANTLR start synpred432_InternalKim
    public final void synpred432_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_45=null;
        EObject lv_classifiesQuality_46_0 = null;


        // InternalKim.g:11439:4: ( ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:11439:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:11439:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:11440:5: {...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred432_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9)");
        }
        // InternalKim.g:11440:117: ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:11441:6: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9);
        // InternalKim.g:11444:9: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:11444:10: {...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred432_InternalKim", "true");
        }
        // InternalKim.g:11444:19: (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:11444:20: otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
        {
        otherlv_45=(Token)match(input,182,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:11448:9: ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
        // InternalKim.g:11449:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11449:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
        // InternalKim.g:11450:11: lv_classifiesQuality_46_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getClassifiesQualityConceptDeclarationParserRuleCall_3_9_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_classifiesQuality_46_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred432_InternalKim

    // $ANTLR start synpred433_InternalKim
    public final void synpred433_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_47=null;
        EObject lv_discretizesQuality_48_0 = null;


        // InternalKim.g:11473:4: ( ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:11473:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:11473:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:11474:5: {...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred433_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10)");
        }
        // InternalKim.g:11474:118: ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:11475:6: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10);
        // InternalKim.g:11478:9: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:11478:10: {...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred433_InternalKim", "true");
        }
        // InternalKim.g:11478:19: (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:11478:20: otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
        {
        otherlv_47=(Token)match(input,183,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:11482:9: ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
        // InternalKim.g:11483:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11483:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
        // InternalKim.g:11484:11: lv_discretizesQuality_48_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDiscretizesQualityConceptDeclarationParserRuleCall_3_10_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_discretizesQuality_48_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred433_InternalKim

    // $ANTLR start synpred435_InternalKim
    public final void synpred435_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_49=null;
        Token otherlv_51=null;
        EObject lv_actuallyInheritedTraits_50_0 = null;

        EObject lv_actuallyInheritedTraits_52_0 = null;


        // InternalKim.g:11507:4: ( ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:11507:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:11507:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:11508:5: {...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred435_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11)");
        }
        // InternalKim.g:11508:118: ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:11509:6: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11);
        // InternalKim.g:11512:9: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:11512:10: {...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred435_InternalKim", "true");
        }
        // InternalKim.g:11512:19: (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:11512:20: otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_49=(Token)match(input,184,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:11516:9: ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) )
        // InternalKim.g:11517:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11517:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
        // InternalKim.g:11518:11: lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_1_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_actuallyInheritedTraits_50_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:11535:9: (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
        loop553:
        do {
            int alt553=2;
            int LA553_0 = input.LA(1);

            if ( (LA553_0==27) ) {
                alt553=1;
            }


            switch (alt553) {
        	case 1 :
        	    // InternalKim.g:11536:10: otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_51=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:11540:10: ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:11541:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:11541:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
        	    // InternalKim.g:11542:12: lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_actuallyInheritedTraits_52_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop553;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred435_InternalKim

    // $ANTLR start synpred440_InternalKim
    public final void synpred440_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token otherlv_60=null;
        Token otherlv_62=null;
        Token otherlv_64=null;
        EObject lv_roles_55_0 = null;

        EObject lv_roles_57_0 = null;

        EObject lv_targetObservables_59_0 = null;

        EObject lv_targetObservables_61_0 = null;

        EObject lv_restrictedObservables_63_0 = null;

        EObject lv_restrictedObservables_65_0 = null;


        // InternalKim.g:11566:4: ( ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:11566:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        // InternalKim.g:11566:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:11567:5: {...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred440_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12)");
        }
        // InternalKim.g:11567:118: ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:11568:6: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12);
        // InternalKim.g:11571:9: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:11571:10: {...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred440_InternalKim", "true");
        }
        // InternalKim.g:11571:19: (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:11571:20: otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
        {
        otherlv_53=(Token)match(input,185,FOLLOW_140); if (state.failed) return ;
        otherlv_54=(Token)match(input,186,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:11579:9: ( (lv_roles_55_0= ruleConceptDeclaration ) )
        // InternalKim.g:11580:10: (lv_roles_55_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11580:10: (lv_roles_55_0= ruleConceptDeclaration )
        // InternalKim.g:11581:11: lv_roles_55_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_2_0());
          										
        }
        pushFollow(FOLLOW_141);
        lv_roles_55_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:11598:9: (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )*
        loop555:
        do {
            int alt555=2;
            int LA555_0 = input.LA(1);

            if ( (LA555_0==27) ) {
                alt555=1;
            }


            switch (alt555) {
        	case 1 :
        	    // InternalKim.g:11599:10: otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_56=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:11603:10: ( (lv_roles_57_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:11604:11: (lv_roles_57_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:11604:11: (lv_roles_57_0= ruleConceptDeclaration )
        	    // InternalKim.g:11605:12: lv_roles_57_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_141);
        	    lv_roles_57_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop555;
            }
        } while (true);

        // InternalKim.g:11623:9: (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )?
        int alt557=2;
        int LA557_0 = input.LA(1);

        if ( (LA557_0==187) ) {
            alt557=1;
        }
        switch (alt557) {
            case 1 :
                // InternalKim.g:11624:10: otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
                {
                otherlv_58=(Token)match(input,187,FOLLOW_23); if (state.failed) return ;
                // InternalKim.g:11628:10: ( (lv_targetObservables_59_0= ruleConceptDeclaration ) )
                // InternalKim.g:11629:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
                {
                // InternalKim.g:11629:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
                // InternalKim.g:11630:12: lv_targetObservables_59_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_1_0());
                  											
                }
                pushFollow(FOLLOW_142);
                lv_targetObservables_59_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:11647:10: (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
                loop556:
                do {
                    int alt556=2;
                    int LA556_0 = input.LA(1);

                    if ( (LA556_0==27) ) {
                        alt556=1;
                    }


                    switch (alt556) {
                	case 1 :
                	    // InternalKim.g:11648:11: otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_60=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;
                	    // InternalKim.g:11652:11: ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:11653:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:11653:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
                	    // InternalKim.g:11654:13: lv_targetObservables_61_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_142);
                	    lv_targetObservables_61_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop556;
                    }
                } while (true);


                }
                break;

        }

        // InternalKim.g:11673:9: (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:11674:10: otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_62=(Token)match(input,48,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:11678:10: ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) )
        // InternalKim.g:11679:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11679:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
        // InternalKim.g:11680:12: lv_restrictedObservables_63_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_1_0());
          											
        }
        pushFollow(FOLLOW_34);
        lv_restrictedObservables_63_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:11697:10: (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
        loop558:
        do {
            int alt558=2;
            int LA558_0 = input.LA(1);

            if ( (LA558_0==27) ) {
                alt558=1;
            }


            switch (alt558) {
        	case 1 :
        	    // InternalKim.g:11698:11: otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_64=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:11702:11: ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:11703:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:11703:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
        	    // InternalKim.g:11704:13: lv_restrictedObservables_65_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_2_1_0());
        	      												
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_restrictedObservables_65_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop558;
            }
        } while (true);


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred440_InternalKim

    // $ANTLR start synpred444_InternalKim
    public final void synpred444_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_66=null;
        Token otherlv_68=null;
        Token otherlv_70=null;
        Token otherlv_72=null;
        EObject lv_conferredTraits_67_0 = null;

        EObject lv_conferredTraits_69_0 = null;

        EObject lv_conferredTargets_71_0 = null;

        EObject lv_conferredTargets_73_0 = null;


        // InternalKim.g:11729:4: ( ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) )
        // InternalKim.g:11729:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
        {
        // InternalKim.g:11729:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
        // InternalKim.g:11730:5: {...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred444_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13)");
        }
        // InternalKim.g:11730:118: ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
        // InternalKim.g:11731:6: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13);
        // InternalKim.g:11734:9: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
        // InternalKim.g:11734:10: {...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred444_InternalKim", "true");
        }
        // InternalKim.g:11734:19: (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
        // InternalKim.g:11734:20: otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
        {
        otherlv_66=(Token)match(input,188,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:11738:9: ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) )
        // InternalKim.g:11739:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11739:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
        // InternalKim.g:11740:11: lv_conferredTraits_67_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_1_0());
          										
        }
        pushFollow(FOLLOW_206);
        lv_conferredTraits_67_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:11757:9: (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )*
        loop560:
        do {
            int alt560=2;
            int LA560_0 = input.LA(1);

            if ( (LA560_0==27) ) {
                alt560=1;
            }


            switch (alt560) {
        	case 1 :
        	    // InternalKim.g:11758:10: otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_68=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:11762:10: ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:11763:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:11763:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
        	    // InternalKim.g:11764:12: lv_conferredTraits_69_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_206);
        	    lv_conferredTraits_69_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop560;
            }
        } while (true);

        // InternalKim.g:11782:9: (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
        int alt562=2;
        int LA562_0 = input.LA(1);

        if ( (LA562_0==36) ) {
            alt562=1;
        }
        switch (alt562) {
            case 1 :
                // InternalKim.g:11783:10: otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
                {
                otherlv_70=(Token)match(input,36,FOLLOW_23); if (state.failed) return ;
                // InternalKim.g:11787:10: ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) )
                // InternalKim.g:11788:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
                {
                // InternalKim.g:11788:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
                // InternalKim.g:11789:12: lv_conferredTargets_71_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_1_0());
                  											
                }
                pushFollow(FOLLOW_34);
                lv_conferredTargets_71_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:11806:10: (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
                loop561:
                do {
                    int alt561=2;
                    int LA561_0 = input.LA(1);

                    if ( (LA561_0==27) ) {
                        alt561=1;
                    }


                    switch (alt561) {
                	case 1 :
                	    // InternalKim.g:11807:11: otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_72=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;
                	    // InternalKim.g:11811:11: ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:11812:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:11812:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
                	    // InternalKim.g:11813:13: lv_conferredTargets_73_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_34);
                	    lv_conferredTargets_73_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop561;
                    }
                } while (true);


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred444_InternalKim

    // $ANTLR start synpred447_InternalKim
    public final void synpred447_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_74=null;
        Token lv_constituent_75_0=null;
        Token lv_constitutes_76_0=null;
        Token lv_partOf_77_0=null;
        EObject lv_whole_78_0 = null;


        // InternalKim.g:11838:4: ( ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:11838:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:11838:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:11839:5: {...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred447_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14)");
        }
        // InternalKim.g:11839:118: ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:11840:6: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14);
        // InternalKim.g:11843:9: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:11843:10: {...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred447_InternalKim", "true");
        }
        // InternalKim.g:11843:19: ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:11843:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:11843:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) )
        int alt563=3;
        switch ( input.LA(1) ) {
        case 189:
            {
            alt563=1;
            }
            break;
        case 190:
            {
            alt563=2;
            }
            break;
        case 191:
            {
            alt563=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 563, 0, input);

            throw nvae;
        }

        switch (alt563) {
            case 1 :
                // InternalKim.g:11844:10: otherlv_74= 'part'
                {
                otherlv_74=(Token)match(input,189,FOLLOW_115); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:11849:10: ( (lv_constituent_75_0= 'constituent' ) )
                {
                // InternalKim.g:11849:10: ( (lv_constituent_75_0= 'constituent' ) )
                // InternalKim.g:11850:11: (lv_constituent_75_0= 'constituent' )
                {
                // InternalKim.g:11850:11: (lv_constituent_75_0= 'constituent' )
                // InternalKim.g:11851:12: lv_constituent_75_0= 'constituent'
                {
                lv_constituent_75_0=(Token)match(input,190,FOLLOW_115); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalKim.g:11864:10: ( (lv_constitutes_76_0= 'consists' ) )
                {
                // InternalKim.g:11864:10: ( (lv_constitutes_76_0= 'consists' ) )
                // InternalKim.g:11865:11: (lv_constitutes_76_0= 'consists' )
                {
                // InternalKim.g:11865:11: (lv_constitutes_76_0= 'consists' )
                // InternalKim.g:11866:12: lv_constitutes_76_0= 'consists'
                {
                lv_constitutes_76_0=(Token)match(input,191,FOLLOW_115); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:11879:9: ( (lv_partOf_77_0= 'of' ) )
        // InternalKim.g:11880:10: (lv_partOf_77_0= 'of' )
        {
        // InternalKim.g:11880:10: (lv_partOf_77_0= 'of' )
        // InternalKim.g:11881:11: lv_partOf_77_0= 'of'
        {
        lv_partOf_77_0=(Token)match(input,119,FOLLOW_23); if (state.failed) return ;

        }


        }

        // InternalKim.g:11893:9: ( (lv_whole_78_0= ruleConceptDeclaration ) )
        // InternalKim.g:11894:10: (lv_whole_78_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11894:10: (lv_whole_78_0= ruleConceptDeclaration )
        // InternalKim.g:11895:11: lv_whole_78_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getWholeConceptDeclarationParserRuleCall_3_14_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_whole_78_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred447_InternalKim

    // $ANTLR start synpred449_InternalKim
    public final void synpred449_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_79=null;
        Token otherlv_81=null;
        EObject lv_creates_80_0 = null;

        EObject lv_creates_82_0 = null;


        // InternalKim.g:11918:4: ( ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:11918:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:11918:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:11919:5: {...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred449_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15)");
        }
        // InternalKim.g:11919:118: ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:11920:6: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15);
        // InternalKim.g:11923:9: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:11923:10: {...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred449_InternalKim", "true");
        }
        // InternalKim.g:11923:19: (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:11923:20: otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_79=(Token)match(input,192,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:11927:9: ( (lv_creates_80_0= ruleConceptDeclaration ) )
        // InternalKim.g:11928:10: (lv_creates_80_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11928:10: (lv_creates_80_0= ruleConceptDeclaration )
        // InternalKim.g:11929:11: lv_creates_80_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_1_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_creates_80_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:11946:9: (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
        loop564:
        do {
            int alt564=2;
            int LA564_0 = input.LA(1);

            if ( (LA564_0==27) ) {
                alt564=1;
            }


            switch (alt564) {
        	case 1 :
        	    // InternalKim.g:11947:10: otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_81=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:11951:10: ( (lv_creates_82_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:11952:11: (lv_creates_82_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:11952:11: (lv_creates_82_0= ruleConceptDeclaration )
        	    // InternalKim.g:11953:12: lv_creates_82_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_creates_82_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop564;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred449_InternalKim

    // $ANTLR start synpred451_InternalKim
    public final void synpred451_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_83=null;
        Token otherlv_84=null;
        Token otherlv_86=null;
        EObject lv_traitTargets_85_0 = null;

        EObject lv_traitTargets_87_0 = null;


        // InternalKim.g:11977:4: ( ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) )
        // InternalKim.g:11977:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
        {
        // InternalKim.g:11977:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
        // InternalKim.g:11978:5: {...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred451_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16)");
        }
        // InternalKim.g:11978:118: ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
        // InternalKim.g:11979:6: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16);
        // InternalKim.g:11982:9: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
        // InternalKim.g:11982:10: {...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred451_InternalKim", "true");
        }
        // InternalKim.g:11982:19: (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
        // InternalKim.g:11982:20: otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
        {
        otherlv_83=(Token)match(input,193,FOLLOW_25); if (state.failed) return ;
        otherlv_84=(Token)match(input,36,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:11990:9: ( (lv_traitTargets_85_0= ruleApplicableTarget ) )
        // InternalKim.g:11991:10: (lv_traitTargets_85_0= ruleApplicableTarget )
        {
        // InternalKim.g:11991:10: (lv_traitTargets_85_0= ruleApplicableTarget )
        // InternalKim.g:11992:11: lv_traitTargets_85_0= ruleApplicableTarget
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_2_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_traitTargets_85_0=ruleApplicableTarget();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12009:9: (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
        loop565:
        do {
            int alt565=2;
            int LA565_0 = input.LA(1);

            if ( (LA565_0==27) ) {
                alt565=1;
            }


            switch (alt565) {
        	case 1 :
        	    // InternalKim.g:12010:10: otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
        	    {
        	    otherlv_86=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:12014:10: ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
        	    // InternalKim.g:12015:11: (lv_traitTargets_87_0= ruleApplicableTarget )
        	    {
        	    // InternalKim.g:12015:11: (lv_traitTargets_87_0= ruleApplicableTarget )
        	    // InternalKim.g:12016:12: lv_traitTargets_87_0= ruleApplicableTarget
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_traitTargets_87_0=ruleApplicableTarget();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop565;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred451_InternalKim

    // $ANTLR start synpred455_InternalKim
    public final void synpred455_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_88=null;
        Token otherlv_90=null;
        Token otherlv_92=null;
        Token otherlv_94=null;
        EObject lv_domains_89_0 = null;

        EObject lv_ranges_91_0 = null;

        EObject lv_domains_93_0 = null;

        EObject lv_ranges_95_0 = null;


        // InternalKim.g:12040:4: ( ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:12040:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:12040:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:12041:5: {...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred455_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17)");
        }
        // InternalKim.g:12041:118: ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:12042:6: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17);
        // InternalKim.g:12045:9: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
        // InternalKim.g:12045:10: {...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred455_InternalKim", "true");
        }
        // InternalKim.g:12045:19: (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
        // InternalKim.g:12045:20: otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
        {
        otherlv_88=(Token)match(input,194,FOLLOW_104); if (state.failed) return ;
        // InternalKim.g:12049:9: ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:12050:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:12050:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:12051:11: lv_domains_89_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_1_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_domains_89_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12068:9: ( ( 'to' )=>otherlv_90= 'to' )
        // InternalKim.g:12069:10: ( 'to' )=>otherlv_90= 'to'
        {
        otherlv_90=(Token)match(input,36,FOLLOW_104); if (state.failed) return ;

        }

        // InternalKim.g:12075:9: ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:12076:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:12076:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:12077:11: lv_ranges_91_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_3_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_ranges_91_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12094:9: (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
        loop566:
        do {
            int alt566=2;
            int LA566_0 = input.LA(1);

            if ( (LA566_0==27) ) {
                alt566=1;
            }


            switch (alt566) {
        	case 1 :
        	    // InternalKim.g:12095:10: otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_92=(Token)match(input,27,FOLLOW_104); if (state.failed) return ;
        	    // InternalKim.g:12099:10: ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:12100:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:12100:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:12101:12: lv_domains_93_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_4_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_25);
        	    lv_domains_93_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    // InternalKim.g:12118:10: ( ( 'to' )=>otherlv_94= 'to' )
        	    // InternalKim.g:12119:11: ( 'to' )=>otherlv_94= 'to'
        	    {
        	    otherlv_94=(Token)match(input,36,FOLLOW_104); if (state.failed) return ;

        	    }

        	    // InternalKim.g:12125:10: ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:12126:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:12126:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:12127:12: lv_ranges_95_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_4_3_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_ranges_95_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop566;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred455_InternalKim

    // $ANTLR start synpred456_InternalKim
    public final void synpred456_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_96=null;
        Token otherlv_97=null;
        EObject lv_inverse_98_0 = null;


        // InternalKim.g:12151:4: ( ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:12151:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:12151:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:12152:5: {...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred456_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18)");
        }
        // InternalKim.g:12152:118: ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:12153:6: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18);
        // InternalKim.g:12156:9: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:12156:10: {...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred456_InternalKim", "true");
        }
        // InternalKim.g:12156:19: (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:12156:20: otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) )
        {
        otherlv_96=(Token)match(input,195,FOLLOW_115); if (state.failed) return ;
        otherlv_97=(Token)match(input,119,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12164:9: ( (lv_inverse_98_0= ruleConceptDeclaration ) )
        // InternalKim.g:12165:10: (lv_inverse_98_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12165:10: (lv_inverse_98_0= ruleConceptDeclaration )
        // InternalKim.g:12166:11: lv_inverse_98_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getInverseConceptDeclarationParserRuleCall_3_18_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_inverse_98_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred456_InternalKim

    // $ANTLR start synpred458_InternalKim
    public final void synpred458_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_99=null;
        Token otherlv_101=null;
        EObject lv_qualitiesAffected_100_0 = null;

        EObject lv_qualitiesAffected_102_0 = null;


        // InternalKim.g:12189:4: ( ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:12189:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:12189:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:12190:5: {...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred458_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19)");
        }
        // InternalKim.g:12190:118: ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:12191:6: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19);
        // InternalKim.g:12194:9: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:12194:10: {...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred458_InternalKim", "true");
        }
        // InternalKim.g:12194:19: (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:12194:20: otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_99=(Token)match(input,196,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12198:9: ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) )
        // InternalKim.g:12199:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12199:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
        // InternalKim.g:12200:11: lv_qualitiesAffected_100_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_1_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_qualitiesAffected_100_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12217:9: (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
        loop567:
        do {
            int alt567=2;
            int LA567_0 = input.LA(1);

            if ( (LA567_0==27) ) {
                alt567=1;
            }


            switch (alt567) {
        	case 1 :
        	    // InternalKim.g:12218:10: otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_101=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:12222:10: ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:12223:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:12223:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
        	    // InternalKim.g:12224:12: lv_qualitiesAffected_102_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_qualitiesAffected_102_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop567;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred458_InternalKim

    // $ANTLR start synpred461_InternalKim
    public final void synpred461_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_103=null;
        Token lv_disjoint_104_0=null;
        Token otherlv_105=null;
        Token otherlv_107=null;
        EObject lv_children_106_0 = null;

        EObject lv_children_108_0 = null;


        // InternalKim.g:12248:4: ( ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) )
        // InternalKim.g:12248:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
        {
        // InternalKim.g:12248:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
        // InternalKim.g:12249:5: {...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred461_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20)");
        }
        // InternalKim.g:12249:118: ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
        // InternalKim.g:12250:6: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20);
        // InternalKim.g:12253:9: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
        // InternalKim.g:12253:10: {...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred461_InternalKim", "true");
        }
        // InternalKim.g:12253:19: (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
        // InternalKim.g:12253:20: otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
        {
        otherlv_103=(Token)match(input,185,FOLLOW_144); if (state.failed) return ;
        // InternalKim.g:12257:9: ( (lv_disjoint_104_0= 'disjoint' ) )?
        int alt568=2;
        int LA568_0 = input.LA(1);

        if ( (LA568_0==97) ) {
            alt568=1;
        }
        switch (alt568) {
            case 1 :
                // InternalKim.g:12258:10: (lv_disjoint_104_0= 'disjoint' )
                {
                // InternalKim.g:12258:10: (lv_disjoint_104_0= 'disjoint' )
                // InternalKim.g:12259:11: lv_disjoint_104_0= 'disjoint'
                {
                lv_disjoint_104_0=(Token)match(input,97,FOLLOW_145); if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_105=(Token)match(input,111,FOLLOW_146); if (state.failed) return ;
        // InternalKim.g:12275:9: ( (lv_children_106_0= ruleChildConcept ) )
        // InternalKim.g:12276:10: (lv_children_106_0= ruleChildConcept )
        {
        // InternalKim.g:12276:10: (lv_children_106_0= ruleChildConcept )
        // InternalKim.g:12277:11: lv_children_106_0= ruleChildConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_3_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_children_106_0=ruleChildConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12294:9: (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
        loop569:
        do {
            int alt569=2;
            int LA569_0 = input.LA(1);

            if ( (LA569_0==27) ) {
                alt569=1;
            }


            switch (alt569) {
        	case 1 :
        	    // InternalKim.g:12295:10: otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) )
        	    {
        	    otherlv_107=(Token)match(input,27,FOLLOW_146); if (state.failed) return ;
        	    // InternalKim.g:12299:10: ( (lv_children_108_0= ruleChildConcept ) )
        	    // InternalKim.g:12300:11: (lv_children_108_0= ruleChildConcept )
        	    {
        	    // InternalKim.g:12300:11: (lv_children_108_0= ruleChildConcept )
        	    // InternalKim.g:12301:12: lv_children_108_0= ruleChildConcept
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_4_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_children_108_0=ruleChildConcept();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop569;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred461_InternalKim

    // $ANTLR start synpred463_InternalKim
    public final void synpred463_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_109=null;
        Token otherlv_110=null;
        Token lv_authorities_111_1=null;
        Token lv_authorities_111_2=null;

        // InternalKim.g:12325:4: ( ({...}? => ( ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) )
        // InternalKim.g:12325:4: ({...}? => ( ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) )
        {
        // InternalKim.g:12325:4: ({...}? => ( ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) )
        // InternalKim.g:12326:5: {...}? => ( ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred463_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21)");
        }
        // InternalKim.g:12326:118: ( ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
        // InternalKim.g:12327:6: ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21);
        // InternalKim.g:12330:9: ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) )
        // InternalKim.g:12330:10: {...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred463_InternalKim", "true");
        }
        // InternalKim.g:12330:19: (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) )
        // InternalKim.g:12330:20: otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) )
        {
        otherlv_109=(Token)match(input,197,FOLLOW_147); if (state.failed) return ;
        otherlv_110=(Token)match(input,176,FOLLOW_114); if (state.failed) return ;
        // InternalKim.g:12338:9: ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) )
        // InternalKim.g:12339:10: ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) )
        {
        // InternalKim.g:12339:10: ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) )
        // InternalKim.g:12340:11: (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH )
        {
        // InternalKim.g:12340:11: (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH )
        int alt570=2;
        int LA570_0 = input.LA(1);

        if ( (LA570_0==RULE_UPPERCASE_ID) ) {
            alt570=1;
        }
        else if ( (LA570_0==RULE_UPPERCASE_PATH) ) {
            alt570=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 570, 0, input);

            throw nvae;
        }
        switch (alt570) {
            case 1 :
                // InternalKim.g:12341:12: lv_authorities_111_1= RULE_UPPERCASE_ID
                {
                lv_authorities_111_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:12356:12: lv_authorities_111_2= RULE_UPPERCASE_PATH
                {
                lv_authorities_111_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred463_InternalKim

    // $ANTLR start synpred464_InternalKim
    public final void synpred464_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_112=null;
        EObject lv_metadata_113_0 = null;


        // InternalKim.g:12379:4: ( ({...}? => ( ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) ) ) ) )
        // InternalKim.g:12379:4: ({...}? => ( ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) ) ) )
        {
        // InternalKim.g:12379:4: ({...}? => ( ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) ) ) )
        // InternalKim.g:12380:5: {...}? => ( ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred464_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22)");
        }
        // InternalKim.g:12380:118: ( ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) ) )
        // InternalKim.g:12381:6: ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22);
        // InternalKim.g:12384:9: ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) )
        // InternalKim.g:12384:10: {...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred464_InternalKim", "true");
        }
        // InternalKim.g:12384:19: (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) )
        // InternalKim.g:12384:20: otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) )
        {
        otherlv_112=(Token)match(input,42,FOLLOW_33); if (state.failed) return ;
        // InternalKim.g:12388:9: ( (lv_metadata_113_0= ruleMetadata ) )
        // InternalKim.g:12389:10: (lv_metadata_113_0= ruleMetadata )
        {
        // InternalKim.g:12389:10: (lv_metadata_113_0= ruleMetadata )
        // InternalKim.g:12390:11: lv_metadata_113_0= ruleMetadata
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getMetadataMetadataParserRuleCall_3_22_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_metadata_113_0=ruleMetadata();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred464_InternalKim

    // $ANTLR start synpred465_InternalKim
    public final void synpred465_InternalKim_fragment() throws RecognitionException {   
        EObject lv_properties_114_0 = null;


        // InternalKim.g:12418:10: ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )
        // InternalKim.g:12418:10: {...}? => ( (lv_properties_114_0= rulePropertyStatement ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred465_InternalKim", "true");
        }
        // InternalKim.g:12418:19: ( (lv_properties_114_0= rulePropertyStatement ) )
        // InternalKim.g:12418:20: (lv_properties_114_0= rulePropertyStatement )
        {
        // InternalKim.g:12418:20: (lv_properties_114_0= rulePropertyStatement )
        // InternalKim.g:12419:10: lv_properties_114_0= rulePropertyStatement
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getPropertiesPropertyStatementParserRuleCall_3_23_0());
          									
        }
        pushFollow(FOLLOW_2);
        lv_properties_114_0=rulePropertyStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred465_InternalKim

    // $ANTLR start synpred466_InternalKim
    public final void synpred466_InternalKim_fragment() throws RecognitionException {   
        EObject lv_properties_114_0 = null;


        // InternalKim.g:12413:4: ( ({...}? => ( ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+ ) ) )
        // InternalKim.g:12413:4: ({...}? => ( ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+ ) )
        {
        // InternalKim.g:12413:4: ({...}? => ( ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+ ) )
        // InternalKim.g:12414:5: {...}? => ( ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+ )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred466_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23)");
        }
        // InternalKim.g:12414:118: ( ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+ )
        // InternalKim.g:12415:6: ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23);
        // InternalKim.g:12418:9: ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+
        int cnt571=0;
        loop571:
        do {
            int alt571=2;
            int LA571_0 = input.LA(1);

            if ( (LA571_0==RULE_LOWERCASE_ID) && ((true))) {
                alt571=1;
            }
            else if ( (LA571_0==RULE_UPPERCASE_ID) && ((true))) {
                alt571=1;
            }
            else if ( (LA571_0==RULE_LOWERCASE_DASHID) && ((true))) {
                alt571=1;
            }
            else if ( (LA571_0==RULE_BACKCASE_ID) && ((true))) {
                alt571=1;
            }
            else if ( (LA571_0==185) && ((true))) {
                alt571=1;
            }
            else if ( (LA571_0==198) && ((true))) {
                alt571=1;
            }
            else if ( (LA571_0==197) && ((true))) {
                alt571=1;
            }


            switch (alt571) {
        	case 1 :
        	    // InternalKim.g:12418:10: {...}? => ( (lv_properties_114_0= rulePropertyStatement ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred466_InternalKim", "true");
        	    }
        	    // InternalKim.g:12418:19: ( (lv_properties_114_0= rulePropertyStatement ) )
        	    // InternalKim.g:12418:20: (lv_properties_114_0= rulePropertyStatement )
        	    {
        	    // InternalKim.g:12418:20: (lv_properties_114_0= rulePropertyStatement )
        	    // InternalKim.g:12419:10: lv_properties_114_0= rulePropertyStatement
        	    {
        	    if ( state.backtracking==0 ) {

        	      										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getPropertiesPropertyStatementParserRuleCall_3_23_0());
        	      									
        	    }
        	    pushFollow(FOLLOW_130);
        	    lv_properties_114_0=rulePropertyStatement();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt571 >= 1 ) break loop571;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(571, input);
                    throw eee;
            }
            cnt571++;
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred466_InternalKim

    // $ANTLR start synpred487_InternalKim
    public final void synpred487_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_parameters_2_0 = null;


        // InternalKim.g:13010:4: (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )
        // InternalKim.g:13010:4: otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')'
        {
        otherlv_1=(Token)match(input,38,FOLLOW_156); if (state.failed) return ;
        // InternalKim.g:13014:4: ( (lv_parameters_2_0= ruleParameterList ) )?
        int alt580=2;
        int LA580_0 = input.LA(1);

        if ( ((LA580_0>=RULE_UPPERCASE_ID && LA580_0<=RULE_STRING)||(LA580_0>=RULE_EXPR && LA580_0<=RULE_LOWERCASE_DASHID)||(LA580_0>=28 && LA580_0<=29)||LA580_0==38||(LA580_0>=49 && LA580_0<=50)||(LA580_0>=128 && LA580_0<=129)||(LA580_0>=137 && LA580_0<=138)||(LA580_0>=140 && LA580_0<=156)||LA580_0==209||(LA580_0>=246 && LA580_0<=247)) ) {
            alt580=1;
        }
        switch (alt580) {
            case 1 :
                // InternalKim.g:13015:5: (lv_parameters_2_0= ruleParameterList )
                {
                // InternalKim.g:13015:5: (lv_parameters_2_0= ruleParameterList )
                // InternalKim.g:13016:6: lv_parameters_2_0= ruleParameterList
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getAnnotationAccess().getParametersParameterListParserRuleCall_1_1_0());
                  					
                }
                pushFollow(FOLLOW_93);
                lv_parameters_2_0=ruleParameterList();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_3=(Token)match(input,41,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred487_InternalKim

    // $ANTLR start synpred507_InternalKim
    public final void synpred507_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_ids_2_1 = null;


        // InternalKim.g:13543:7: (lv_ids_2_1= rulePathName )
        // InternalKim.g:13543:7: lv_ids_2_1= rulePathName
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getMetadataAccess().getIdsPathNameParserRuleCall_2_0_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_ids_2_1=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred507_InternalKim

    // $ANTLR start synpred508_InternalKim
    public final void synpred508_InternalKim_fragment() throws RecognitionException {   
        Token lv_ids_2_2=null;

        // InternalKim.g:13559:7: (lv_ids_2_2= RULE_LOWERCASE_ID )
        // InternalKim.g:13559:7: lv_ids_2_2= RULE_LOWERCASE_ID
        {
        lv_ids_2_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred508_InternalKim

    // $ANTLR start synpred520_InternalKim
    public final void synpred520_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_name_0_1 = null;


        // InternalKim.g:13941:6: (lv_name_0_1= rulePathName )
        // InternalKim.g:13941:6: lv_name_0_1= rulePathName
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getKeyValuePairAccess().getNamePathNameParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_name_0_1=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred520_InternalKim

    // $ANTLR start synpred521_InternalKim
    public final void synpred521_InternalKim_fragment() throws RecognitionException {   
        Token lv_name_0_2=null;

        // InternalKim.g:13957:6: (lv_name_0_2= RULE_LOWERCASE_ID )
        // InternalKim.g:13957:6: lv_name_0_2= RULE_LOWERCASE_ID
        {
        lv_name_0_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred521_InternalKim

    // $ANTLR start synpred528_InternalKim
    public final void synpred528_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_0_0 = null;


        // InternalKim.g:14162:3: ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:14162:3: ( (lv_concept_0_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:14162:3: ( (lv_concept_0_0= ruleConceptDeclaration ) )
        // InternalKim.g:14163:4: (lv_concept_0_0= ruleConceptDeclaration )
        {
        // InternalKim.g:14163:4: (lv_concept_0_0= ruleConceptDeclaration )
        // InternalKim.g:14164:5: lv_concept_0_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getConceptConceptDeclarationParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_0_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred528_InternalKim

    // $ANTLR start synpred529_InternalKim
    public final void synpred529_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_1_0 = null;


        // InternalKim.g:14182:3: ( ( (lv_function_1_0= ruleFunction ) ) )
        // InternalKim.g:14182:3: ( (lv_function_1_0= ruleFunction ) )
        {
        // InternalKim.g:14182:3: ( (lv_function_1_0= ruleFunction ) )
        // InternalKim.g:14183:4: (lv_function_1_0= ruleFunction )
        {
        // InternalKim.g:14183:4: (lv_function_1_0= ruleFunction )
        // InternalKim.g:14184:5: lv_function_1_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getFunctionFunctionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_1_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred529_InternalKim

    // $ANTLR start synpred530_InternalKim
    public final void synpred530_InternalKim_fragment() throws RecognitionException {   
        EObject lv_literal_2_0 = null;


        // InternalKim.g:14202:3: ( ( (lv_literal_2_0= ruleLiteral ) ) )
        // InternalKim.g:14202:3: ( (lv_literal_2_0= ruleLiteral ) )
        {
        // InternalKim.g:14202:3: ( (lv_literal_2_0= ruleLiteral ) )
        // InternalKim.g:14203:4: (lv_literal_2_0= ruleLiteral )
        {
        // InternalKim.g:14203:4: (lv_literal_2_0= ruleLiteral )
        // InternalKim.g:14204:5: lv_literal_2_0= ruleLiteral
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getLiteralLiteralParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_literal_2_0=ruleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred530_InternalKim

    // $ANTLR start synpred532_InternalKim
    public final void synpred532_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_id_4_1 = null;


        // InternalKim.g:14244:6: (lv_id_4_1= rulePathName )
        // InternalKim.g:14244:6: lv_id_4_1= rulePathName
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getIdPathNameParserRuleCall_4_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_id_4_1=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred532_InternalKim

    // $ANTLR start synpred533_InternalKim
    public final void synpred533_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_4_2=null;

        // InternalKim.g:14260:6: (lv_id_4_2= RULE_LOWERCASE_ID )
        // InternalKim.g:14260:6: lv_id_4_2= RULE_LOWERCASE_ID
        {
        lv_id_4_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred533_InternalKim

    // $ANTLR start synpred534_InternalKim
    public final void synpred534_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_4_3=null;

        // InternalKim.g:14275:6: (lv_id_4_3= RULE_UPPERCASE_ID )
        // InternalKim.g:14275:6: lv_id_4_3= RULE_UPPERCASE_ID
        {
        lv_id_4_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred534_InternalKim

    // $ANTLR start synpred535_InternalKim
    public final void synpred535_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_4_2=null;
        Token lv_id_4_3=null;
        Token lv_id_4_4=null;
        AntlrDatatypeRuleToken lv_id_4_1 = null;


        // InternalKim.g:14241:3: ( ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:14241:3: ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:14241:3: ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:14242:4: ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:14242:4: ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) )
        // InternalKim.g:14243:5: (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:14243:5: (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID )
        int alt587=4;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            int LA587_1 = input.LA(2);

            if ( (synpred532_InternalKim()) ) {
                alt587=1;
            }
            else if ( (synpred533_InternalKim()) ) {
                alt587=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 587, 1, input);

                throw nvae;
            }
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            int LA587_2 = input.LA(2);

            if ( (synpred532_InternalKim()) ) {
                alt587=1;
            }
            else if ( (synpred534_InternalKim()) ) {
                alt587=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 587, 2, input);

                throw nvae;
            }
            }
            break;
        case RULE_LOWERCASE_DASHID:
            {
            alt587=1;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt587=4;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 587, 0, input);

            throw nvae;
        }

        switch (alt587) {
            case 1 :
                // InternalKim.g:14244:6: lv_id_4_1= rulePathName
                {
                pushFollow(FOLLOW_2);
                lv_id_4_1=rulePathName();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:14260:6: lv_id_4_2= RULE_LOWERCASE_ID
                {
                lv_id_4_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:14275:6: lv_id_4_3= RULE_UPPERCASE_ID
                {
                lv_id_4_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 4 :
                // InternalKim.g:14290:6: lv_id_4_4= RULE_CAMELCASE_ID
                {
                lv_id_4_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred535_InternalKim

    // $ANTLR start synpred536_InternalKim
    public final void synpred536_InternalKim_fragment() throws RecognitionException {   
        EObject lv_list_5_0 = null;


        // InternalKim.g:14308:3: ( ( (lv_list_5_0= ruleList ) ) )
        // InternalKim.g:14308:3: ( (lv_list_5_0= ruleList ) )
        {
        // InternalKim.g:14308:3: ( (lv_list_5_0= ruleList ) )
        // InternalKim.g:14309:4: (lv_list_5_0= ruleList )
        {
        // InternalKim.g:14309:4: (lv_list_5_0= ruleList )
        // InternalKim.g:14310:5: lv_list_5_0= ruleList
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getListListParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_list_5_0=ruleList();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred536_InternalKim

    // $ANTLR start synpred538_InternalKim
    public final void synpred538_InternalKim_fragment() throws RecognitionException {   
        EObject lv_date_7_0 = null;


        // InternalKim.g:14348:3: ( ( (lv_date_7_0= ruleDate ) ) )
        // InternalKim.g:14348:3: ( (lv_date_7_0= ruleDate ) )
        {
        // InternalKim.g:14348:3: ( (lv_date_7_0= ruleDate ) )
        // InternalKim.g:14349:4: (lv_date_7_0= ruleDate )
        {
        // InternalKim.g:14349:4: (lv_date_7_0= ruleDate )
        // InternalKim.g:14350:5: lv_date_7_0= ruleDate
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getDateDateParserRuleCall_7_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_date_7_0=ruleDate();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred538_InternalKim

    // $ANTLR start synpred540_InternalKim
    public final void synpred540_InternalKim_fragment() throws RecognitionException {   
        EObject lv_quantity_9_0 = null;


        // InternalKim.g:14388:3: ( ( (lv_quantity_9_0= ruleQuantity ) ) )
        // InternalKim.g:14388:3: ( (lv_quantity_9_0= ruleQuantity ) )
        {
        // InternalKim.g:14388:3: ( (lv_quantity_9_0= ruleQuantity ) )
        // InternalKim.g:14389:4: (lv_quantity_9_0= ruleQuantity )
        {
        // InternalKim.g:14389:4: (lv_quantity_9_0= ruleQuantity )
        // InternalKim.g:14390:5: lv_quantity_9_0= ruleQuantity
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getQuantityQuantityParserRuleCall_9_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_quantity_9_0=ruleQuantity();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred540_InternalKim

    // $ANTLR start synpred541_InternalKim
    public final void synpred541_InternalKim_fragment() throws RecognitionException {   
        EObject lv_literal_0_0 = null;


        // InternalKim.g:14441:3: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) )
        // InternalKim.g:14441:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
        {
        // InternalKim.g:14441:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
        // InternalKim.g:14442:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
        {
        // InternalKim.g:14442:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
        // InternalKim.g:14443:5: lv_literal_0_0= ruleLiteralOrIdOrComma
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_literal_0_0=ruleLiteralOrIdOrComma();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred541_InternalKim

    // $ANTLR start synpred542_InternalKim
    public final void synpred542_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_1_0 = null;


        // InternalKim.g:14461:3: ( ( (lv_function_1_0= ruleFunction ) ) )
        // InternalKim.g:14461:3: ( (lv_function_1_0= ruleFunction ) )
        {
        // InternalKim.g:14461:3: ( (lv_function_1_0= ruleFunction ) )
        // InternalKim.g:14462:4: (lv_function_1_0= ruleFunction )
        {
        // InternalKim.g:14462:4: (lv_function_1_0= ruleFunction )
        // InternalKim.g:14463:5: lv_function_1_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueAccess().getFunctionFunctionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_1_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred542_InternalKim

    // $ANTLR start synpred547_InternalKim
    public final void synpred547_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;

        // InternalKim.g:14526:3: ( ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:14526:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:14526:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:14527:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:14527:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        // InternalKim.g:14528:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:14528:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        int alt589=3;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            alt589=1;
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            alt589=2;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt589=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 589, 0, input);

            throw nvae;
        }

        switch (alt589) {
            case 1 :
                // InternalKim.g:14529:6: lv_id_5_1= RULE_LOWERCASE_ID
                {
                lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:14544:6: lv_id_5_2= RULE_UPPERCASE_ID
                {
                lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:14559:6: lv_id_5_3= RULE_CAMELCASE_ID
                {
                lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred547_InternalKim

    // $ANTLR start synpred550_InternalKim
    public final void synpred550_InternalKim_fragment() throws RecognitionException {   
        EObject lv_quantity_8_0 = null;


        // InternalKim.g:14617:3: ( ( (lv_quantity_8_0= ruleQuantity ) ) )
        // InternalKim.g:14617:3: ( (lv_quantity_8_0= ruleQuantity ) )
        {
        // InternalKim.g:14617:3: ( (lv_quantity_8_0= ruleQuantity ) )
        // InternalKim.g:14618:4: (lv_quantity_8_0= ruleQuantity )
        {
        // InternalKim.g:14618:4: (lv_quantity_8_0= ruleQuantity )
        // InternalKim.g:14619:5: lv_quantity_8_0= ruleQuantity
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueAccess().getQuantityQuantityParserRuleCall_6_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_quantity_8_0=ruleQuantity();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred550_InternalKim

    // $ANTLR start synpred551_InternalKim
    public final void synpred551_InternalKim_fragment() throws RecognitionException {   
        EObject lv_date_9_0 = null;


        // InternalKim.g:14637:3: ( ( (lv_date_9_0= ruleDate ) ) )
        // InternalKim.g:14637:3: ( (lv_date_9_0= ruleDate ) )
        {
        // InternalKim.g:14637:3: ( (lv_date_9_0= ruleDate ) )
        // InternalKim.g:14638:4: (lv_date_9_0= ruleDate )
        {
        // InternalKim.g:14638:4: (lv_date_9_0= ruleDate )
        // InternalKim.g:14639:5: lv_date_9_0= ruleDate
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueAccess().getDateDateParserRuleCall_7_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_date_9_0=ruleDate();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred551_InternalKim

    // $ANTLR start synpred554_InternalKim
    public final void synpred554_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_1_0 = null;


        // InternalKim.g:14730:3: ( ( (lv_concept_1_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:14730:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:14730:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
        // InternalKim.g:14731:4: (lv_concept_1_0= ruleConceptDeclaration )
        {
        // InternalKim.g:14731:4: (lv_concept_1_0= ruleConceptDeclaration )
        // InternalKim.g:14732:5: lv_concept_1_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getConceptConceptDeclarationParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_1_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred554_InternalKim

    // $ANTLR start synpred600_InternalKim
    public final void synpred600_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_accordingTo_4_0 = null;


        // InternalKim.g:15420:4: ( ({...}? => ( ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:15420:4: ({...}? => ( ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:15420:4: ({...}? => ( ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:15421:5: {...}? => ( ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred600_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:15421:122: ( ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:15422:6: ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:15425:9: ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) )
        // InternalKim.g:15425:10: {...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred600_InternalKim", "true");
        }
        // InternalKim.g:15425:19: (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) )
        // InternalKim.g:15425:20: otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) )
        {
        otherlv_2=(Token)match(input,35,FOLLOW_25); if (state.failed) return ;
        otherlv_3=(Token)match(input,36,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:15433:9: ( (lv_accordingTo_4_0= rulePropertyId ) )
        // InternalKim.g:15434:10: (lv_accordingTo_4_0= rulePropertyId )
        {
        // InternalKim.g:15434:10: (lv_accordingTo_4_0= rulePropertyId )
        // InternalKim.g:15435:11: lv_accordingTo_4_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_1_0_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_4_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred600_InternalKim

    // $ANTLR start synpred603_InternalKim
    public final void synpred603_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_8=null;
        EObject lv_unit_6_0 = null;

        EObject lv_currency_7_0 = null;

        EObject lv_unit_9_0 = null;


        // InternalKim.g:15458:4: ( ({...}? => ( ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:15458:4: ({...}? => ( ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:15458:4: ({...}? => ( ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:15459:5: {...}? => ( ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred603_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:15459:122: ( ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:15460:6: ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:15463:9: ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) )
        // InternalKim.g:15463:10: {...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred603_InternalKim", "true");
        }
        // InternalKim.g:15463:19: ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) )
        int alt592=2;
        int LA592_0 = input.LA(1);

        if ( (LA592_0==48) ) {
            alt592=1;
        }
        else if ( (LA592_0==113) ) {
            alt592=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 592, 0, input);

            throw nvae;
        }
        switch (alt592) {
            case 1 :
                // InternalKim.g:15463:20: (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:15463:20: (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) )
                // InternalKim.g:15464:10: otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) )
                {
                otherlv_5=(Token)match(input,48,FOLLOW_98); if (state.failed) return ;
                // InternalKim.g:15468:10: ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) )
                int alt591=2;
                int LA591_0 = input.LA(1);

                if ( (LA591_0==EOF||LA591_0==RULE_LOWERCASE_ID||LA591_0==RULE_CAMELCASE_ID||LA591_0==RULE_BACKCASE_ID||LA591_0==38||LA591_0==40||LA591_0==107||LA591_0==254) ) {
                    alt591=1;
                }
                else if ( (LA591_0==RULE_UPPERCASE_ID) ) {
                    int LA591_2 = input.LA(2);

                    if ( (LA591_2==245) ) {
                        alt591=2;
                    }
                    else if ( (LA591_2==EOF||LA591_2==40||LA591_2==107||LA591_2==254) ) {
                        alt591=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 591, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 591, 0, input);

                    throw nvae;
                }
                switch (alt591) {
                    case 1 :
                        // InternalKim.g:15469:11: ( (lv_unit_6_0= ruleUnit ) )
                        {
                        // InternalKim.g:15469:11: ( (lv_unit_6_0= ruleUnit ) )
                        // InternalKim.g:15470:12: (lv_unit_6_0= ruleUnit )
                        {
                        // InternalKim.g:15470:12: (lv_unit_6_0= ruleUnit )
                        // InternalKim.g:15471:13: lv_unit_6_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_1_1_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_6_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:15489:11: ( (lv_currency_7_0= ruleCurrency ) )
                        {
                        // InternalKim.g:15489:11: ( (lv_currency_7_0= ruleCurrency ) )
                        // InternalKim.g:15490:12: (lv_currency_7_0= ruleCurrency )
                        {
                        // InternalKim.g:15490:12: (lv_currency_7_0= ruleCurrency )
                        // InternalKim.g:15491:13: lv_currency_7_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_1_1_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_7_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:15511:9: (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) )
                {
                // InternalKim.g:15511:9: (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) )
                // InternalKim.g:15512:10: otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) )
                {
                otherlv_8=(Token)match(input,113,FOLLOW_201); if (state.failed) return ;
                // InternalKim.g:15516:10: ( (lv_unit_9_0= ruleUnit ) )
                // InternalKim.g:15517:11: (lv_unit_9_0= ruleUnit )
                {
                // InternalKim.g:15517:11: (lv_unit_9_0= ruleUnit )
                // InternalKim.g:15518:12: lv_unit_9_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_1_1_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_9_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred603_InternalKim

    // $ANTLR start synpred604_InternalKim
    public final void synpred604_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_11=null;
        EObject lv_from_10_0 = null;

        EObject lv_to_12_0 = null;


        // InternalKim.g:15542:4: ( ({...}? => ( ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:15542:4: ({...}? => ( ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:15542:4: ({...}? => ( ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:15543:5: {...}? => ( ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred604_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2)");
        }
        // InternalKim.g:15543:122: ( ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) ) )
        // InternalKim.g:15544:6: ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2);
        // InternalKim.g:15547:9: ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) )
        // InternalKim.g:15547:10: {...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred604_InternalKim", "true");
        }
        // InternalKim.g:15547:19: ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) )
        // InternalKim.g:15547:20: ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) )
        {
        // InternalKim.g:15547:20: ( (lv_from_10_0= ruleNumber ) )
        // InternalKim.g:15548:10: (lv_from_10_0= ruleNumber )
        {
        // InternalKim.g:15548:10: (lv_from_10_0= ruleNumber )
        // InternalKim.g:15549:11: lv_from_10_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getFromNumberParserRuleCall_1_2_0_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_from_10_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_11=(Token)match(input,36,FOLLOW_38); if (state.failed) return ;
        // InternalKim.g:15570:9: ( (lv_to_12_0= ruleNumber ) )
        // InternalKim.g:15571:10: (lv_to_12_0= ruleNumber )
        {
        // InternalKim.g:15571:10: (lv_to_12_0= ruleNumber )
        // InternalKim.g:15572:11: lv_to_12_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getToNumberParserRuleCall_1_2_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_12_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred604_InternalKim

    // $ANTLR start synpred605_InternalKim
    public final void synpred605_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_14_0 = null;


        // InternalKim.g:15620:10: ( (lv_valueOperators_14_0= ruleValueOperator ) )
        // InternalKim.g:15620:10: (lv_valueOperators_14_0= ruleValueOperator )
        {
        // InternalKim.g:15620:10: (lv_valueOperators_14_0= ruleValueOperator )
        // InternalKim.g:15621:11: lv_valueOperators_14_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_1_3_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_valueOperators_14_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred605_InternalKim

    // $ANTLR start synpred606_InternalKim
    public final void synpred606_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_13_0 = null;

        EObject lv_valueOperators_14_0 = null;


        // InternalKim.g:15595:4: ( ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) )
        // InternalKim.g:15595:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) )
        {
        // InternalKim.g:15595:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) )
        // InternalKim.g:15596:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred606_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3)");
        }
        // InternalKim.g:15596:122: ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) )
        // InternalKim.g:15597:6: ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3);
        // InternalKim.g:15600:9: ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) )
        // InternalKim.g:15600:10: {...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred606_InternalKim", "true");
        }
        // InternalKim.g:15600:19: ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* )
        // InternalKim.g:15600:20: ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )*
        {
        // InternalKim.g:15600:20: ( (lv_valueOperators_13_0= ruleValueOperator ) )
        // InternalKim.g:15601:10: (lv_valueOperators_13_0= ruleValueOperator )
        {
        // InternalKim.g:15601:10: (lv_valueOperators_13_0= ruleValueOperator )
        // InternalKim.g:15602:11: lv_valueOperators_13_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_1_3_0_0());
          										
        }
        pushFollow(FOLLOW_202);
        lv_valueOperators_13_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:15619:9: ( (lv_valueOperators_14_0= ruleValueOperator ) )*
        loop593:
        do {
            int alt593=2;
            int LA593_0 = input.LA(1);

            if ( (LA593_0==55||(LA593_0>=76 && LA593_0<=88)||(LA593_0>=117 && LA593_0<=118)) ) {
                alt593=1;
            }


            switch (alt593) {
        	case 1 :
        	    // InternalKim.g:15620:10: (lv_valueOperators_14_0= ruleValueOperator )
        	    {
        	    // InternalKim.g:15620:10: (lv_valueOperators_14_0= ruleValueOperator )
        	    // InternalKim.g:15621:11: lv_valueOperators_14_0= ruleValueOperator
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_1_3_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_202);
        	    lv_valueOperators_14_0=ruleValueOperator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop593;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred606_InternalKim

    // $ANTLR start synpred608_InternalKim
    public final void synpred608_InternalKim_fragment() throws RecognitionException {   
        Token lv_optional_15_0=null;
        Token otherlv_16=null;

        // InternalKim.g:15644:4: ( ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) )
        // InternalKim.g:15644:4: ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) )
        {
        // InternalKim.g:15644:4: ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) )
        // InternalKim.g:15645:5: {...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred608_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4)");
        }
        // InternalKim.g:15645:122: ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) )
        // InternalKim.g:15646:6: ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4);
        // InternalKim.g:15649:9: ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) )
        // InternalKim.g:15649:10: {...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred608_InternalKim", "true");
        }
        // InternalKim.g:15649:19: ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' )
        int alt594=2;
        int LA594_0 = input.LA(1);

        if ( (LA594_0==114) ) {
            alt594=1;
        }
        else if ( (LA594_0==115) ) {
            alt594=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 594, 0, input);

            throw nvae;
        }
        switch (alt594) {
            case 1 :
                // InternalKim.g:15649:20: ( (lv_optional_15_0= 'optional' ) )
                {
                // InternalKim.g:15649:20: ( (lv_optional_15_0= 'optional' ) )
                // InternalKim.g:15650:10: (lv_optional_15_0= 'optional' )
                {
                // InternalKim.g:15650:10: (lv_optional_15_0= 'optional' )
                // InternalKim.g:15651:11: lv_optional_15_0= 'optional'
                {
                lv_optional_15_0=(Token)match(input,114,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:15664:9: otherlv_16= 'required'
                {
                otherlv_16=(Token)match(input,115,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred608_InternalKim

    // $ANTLR start synpred610_InternalKim
    public final void synpred610_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_17=null;
        Token lv_name_18_1=null;
        Token lv_name_18_2=null;

        // InternalKim.g:15674:4: ( ({...}? => ( ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) ) ) ) )
        // InternalKim.g:15674:4: ({...}? => ( ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) ) ) )
        {
        // InternalKim.g:15674:4: ({...}? => ( ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) ) ) )
        // InternalKim.g:15675:5: {...}? => ( ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred610_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5)");
        }
        // InternalKim.g:15675:122: ( ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:15676:6: ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5);
        // InternalKim.g:15679:9: ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) )
        // InternalKim.g:15679:10: {...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred610_InternalKim", "true");
        }
        // InternalKim.g:15679:19: (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) )
        // InternalKim.g:15679:20: otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) )
        {
        otherlv_17=(Token)match(input,116,FOLLOW_45); if (state.failed) return ;
        // InternalKim.g:15683:9: ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) )
        // InternalKim.g:15684:10: ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) )
        {
        // InternalKim.g:15684:10: ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) )
        // InternalKim.g:15685:11: (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING )
        {
        // InternalKim.g:15685:11: (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING )
        int alt595=2;
        int LA595_0 = input.LA(1);

        if ( (LA595_0==RULE_LOWERCASE_ID) ) {
            alt595=1;
        }
        else if ( (LA595_0==RULE_STRING) ) {
            alt595=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 595, 0, input);

            throw nvae;
        }
        switch (alt595) {
            case 1 :
                // InternalKim.g:15686:12: lv_name_18_1= RULE_LOWERCASE_ID
                {
                lv_name_18_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:15701:12: lv_name_18_2= RULE_STRING
                {
                lv_name_18_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred610_InternalKim

    // $ANTLR start synpred611_InternalKim
    public final void synpred611_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_value_0_0 = null;


        // InternalKim.g:15764:4: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )
        // InternalKim.g:15764:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as'
        {
        // InternalKim.g:15764:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) )
        // InternalKim.g:15765:5: (lv_value_0_0= ruleLiteralValueWithConcept )
        {
        // InternalKim.g:15765:5: (lv_value_0_0= ruleLiteralValueWithConcept )
        // InternalKim.g:15766:6: lv_value_0_0= ruleLiteralValueWithConcept
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_value_0_0=ruleLiteralValueWithConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,25,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred611_InternalKim

    // $ANTLR start synpred613_InternalKim
    public final void synpred613_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;


        // InternalKim.g:15828:4: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:15828:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:15828:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:15829:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred613_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:15829:126: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:15830:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:15833:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        // InternalKim.g:15833:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred613_InternalKim", "true");
        }
        // InternalKim.g:15833:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        // InternalKim.g:15833:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
        {
        otherlv_5=(Token)match(input,35,FOLLOW_25); if (state.failed) return ;
        otherlv_6=(Token)match(input,36,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:15841:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
        // InternalKim.g:15842:10: (lv_accordingTo_7_0= rulePropertyId )
        {
        // InternalKim.g:15842:10: (lv_accordingTo_7_0= rulePropertyId )
        // InternalKim.g:15843:11: lv_accordingTo_7_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_7_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred613_InternalKim

    // $ANTLR start synpred616_InternalKim
    public final void synpred616_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token otherlv_11=null;
        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;


        // InternalKim.g:15866:4: ( ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:15866:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:15866:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:15867:5: {...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred616_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:15867:126: ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:15868:6: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:15871:9: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        // InternalKim.g:15871:10: {...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred616_InternalKim", "true");
        }
        // InternalKim.g:15871:19: ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
        int alt598=2;
        int LA598_0 = input.LA(1);

        if ( (LA598_0==48) ) {
            alt598=1;
        }
        else if ( (LA598_0==113) ) {
            alt598=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 598, 0, input);

            throw nvae;
        }
        switch (alt598) {
            case 1 :
                // InternalKim.g:15871:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:15871:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                // InternalKim.g:15872:10: otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                {
                otherlv_8=(Token)match(input,48,FOLLOW_98); if (state.failed) return ;
                // InternalKim.g:15876:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                int alt597=2;
                int LA597_0 = input.LA(1);

                if ( (LA597_0==EOF||LA597_0==RULE_LOWERCASE_ID||LA597_0==RULE_CAMELCASE_ID||LA597_0==RULE_BACKCASE_ID||LA597_0==38||LA597_0==40||LA597_0==107||LA597_0==254) ) {
                    alt597=1;
                }
                else if ( (LA597_0==RULE_UPPERCASE_ID) ) {
                    int LA597_2 = input.LA(2);

                    if ( (LA597_2==EOF||LA597_2==40||LA597_2==107||LA597_2==254) ) {
                        alt597=1;
                    }
                    else if ( (LA597_2==245) ) {
                        alt597=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 597, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 597, 0, input);

                    throw nvae;
                }
                switch (alt597) {
                    case 1 :
                        // InternalKim.g:15877:11: ( (lv_unit_9_0= ruleUnit ) )
                        {
                        // InternalKim.g:15877:11: ( (lv_unit_9_0= ruleUnit ) )
                        // InternalKim.g:15878:12: (lv_unit_9_0= ruleUnit )
                        {
                        // InternalKim.g:15878:12: (lv_unit_9_0= ruleUnit )
                        // InternalKim.g:15879:13: lv_unit_9_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_9_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:15897:11: ( (lv_currency_10_0= ruleCurrency ) )
                        {
                        // InternalKim.g:15897:11: ( (lv_currency_10_0= ruleCurrency ) )
                        // InternalKim.g:15898:12: (lv_currency_10_0= ruleCurrency )
                        {
                        // InternalKim.g:15898:12: (lv_currency_10_0= ruleCurrency )
                        // InternalKim.g:15899:13: lv_currency_10_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_10_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:15919:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
                {
                // InternalKim.g:15919:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
                // InternalKim.g:15920:10: otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) )
                {
                otherlv_11=(Token)match(input,113,FOLLOW_201); if (state.failed) return ;
                // InternalKim.g:15924:10: ( (lv_unit_12_0= ruleUnit ) )
                // InternalKim.g:15925:11: (lv_unit_12_0= ruleUnit )
                {
                // InternalKim.g:15925:11: (lv_unit_12_0= ruleUnit )
                // InternalKim.g:15926:12: lv_unit_12_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_12_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred616_InternalKim

    // $ANTLR start synpred617_InternalKim
    public final void synpred617_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        EObject lv_from_13_0 = null;

        EObject lv_to_15_0 = null;


        // InternalKim.g:15950:4: ( ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:15950:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:15950:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:15951:5: {...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred617_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:15951:126: ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
        // InternalKim.g:15952:6: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:15955:9: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
        // InternalKim.g:15955:10: {...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred617_InternalKim", "true");
        }
        // InternalKim.g:15955:19: ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
        // InternalKim.g:15955:20: ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) )
        {
        // InternalKim.g:15955:20: ( (lv_from_13_0= ruleNumber ) )
        // InternalKim.g:15956:10: (lv_from_13_0= ruleNumber )
        {
        // InternalKim.g:15956:10: (lv_from_13_0= ruleNumber )
        // InternalKim.g:15957:11: lv_from_13_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getFromNumberParserRuleCall_3_2_0_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_from_13_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_14=(Token)match(input,36,FOLLOW_38); if (state.failed) return ;
        // InternalKim.g:15978:9: ( (lv_to_15_0= ruleNumber ) )
        // InternalKim.g:15979:10: (lv_to_15_0= ruleNumber )
        {
        // InternalKim.g:15979:10: (lv_to_15_0= ruleNumber )
        // InternalKim.g:15980:11: lv_to_15_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getToNumberParserRuleCall_3_2_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_15_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred617_InternalKim

    // $ANTLR start synpred618_InternalKim
    public final void synpred618_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_17_0 = null;


        // InternalKim.g:16028:10: ( (lv_valueOperators_17_0= ruleValueOperator ) )
        // InternalKim.g:16028:10: (lv_valueOperators_17_0= ruleValueOperator )
        {
        // InternalKim.g:16028:10: (lv_valueOperators_17_0= ruleValueOperator )
        // InternalKim.g:16029:11: lv_valueOperators_17_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_valueOperators_17_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred618_InternalKim

    // $ANTLR start synpred619_InternalKim
    public final void synpred619_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_16_0 = null;

        EObject lv_valueOperators_17_0 = null;


        // InternalKim.g:16003:4: ( ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )
        // InternalKim.g:16003:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
        {
        // InternalKim.g:16003:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
        // InternalKim.g:16004:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred619_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:16004:126: ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
        // InternalKim.g:16005:6: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:16008:9: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
        // InternalKim.g:16008:10: {...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred619_InternalKim", "true");
        }
        // InternalKim.g:16008:19: ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
        // InternalKim.g:16008:20: ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )*
        {
        // InternalKim.g:16008:20: ( (lv_valueOperators_16_0= ruleValueOperator ) )
        // InternalKim.g:16009:10: (lv_valueOperators_16_0= ruleValueOperator )
        {
        // InternalKim.g:16009:10: (lv_valueOperators_16_0= ruleValueOperator )
        // InternalKim.g:16010:11: lv_valueOperators_16_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_0_0());
          										
        }
        pushFollow(FOLLOW_202);
        lv_valueOperators_16_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:16027:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*
        loop599:
        do {
            int alt599=2;
            int LA599_0 = input.LA(1);

            if ( (LA599_0==55||(LA599_0>=76 && LA599_0<=88)||(LA599_0>=117 && LA599_0<=118)) ) {
                alt599=1;
            }


            switch (alt599) {
        	case 1 :
        	    // InternalKim.g:16028:10: (lv_valueOperators_17_0= ruleValueOperator )
        	    {
        	    // InternalKim.g:16028:10: (lv_valueOperators_17_0= ruleValueOperator )
        	    // InternalKim.g:16029:11: lv_valueOperators_17_0= ruleValueOperator
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_202);
        	    lv_valueOperators_17_0=ruleValueOperator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop599;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred619_InternalKim

    // $ANTLR start synpred621_InternalKim
    public final void synpred621_InternalKim_fragment() throws RecognitionException {   
        Token lv_optional_18_0=null;
        Token otherlv_19=null;

        // InternalKim.g:16052:4: ( ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) )
        // InternalKim.g:16052:4: ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) )
        {
        // InternalKim.g:16052:4: ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) )
        // InternalKim.g:16053:5: {...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred621_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
        }
        // InternalKim.g:16053:126: ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) )
        // InternalKim.g:16054:6: ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4);
        // InternalKim.g:16057:9: ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) )
        // InternalKim.g:16057:10: {...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred621_InternalKim", "true");
        }
        // InternalKim.g:16057:19: ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' )
        int alt600=2;
        int LA600_0 = input.LA(1);

        if ( (LA600_0==114) ) {
            alt600=1;
        }
        else if ( (LA600_0==115) ) {
            alt600=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 600, 0, input);

            throw nvae;
        }
        switch (alt600) {
            case 1 :
                // InternalKim.g:16057:20: ( (lv_optional_18_0= 'optional' ) )
                {
                // InternalKim.g:16057:20: ( (lv_optional_18_0= 'optional' ) )
                // InternalKim.g:16058:10: (lv_optional_18_0= 'optional' )
                {
                // InternalKim.g:16058:10: (lv_optional_18_0= 'optional' )
                // InternalKim.g:16059:11: lv_optional_18_0= 'optional'
                {
                lv_optional_18_0=(Token)match(input,114,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:16072:9: otherlv_19= 'required'
                {
                otherlv_19=(Token)match(input,115,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred621_InternalKim

    // $ANTLR start synpred623_InternalKim
    public final void synpred623_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_20=null;
        Token lv_name_21_1=null;
        Token lv_name_21_2=null;

        // InternalKim.g:16082:4: ( ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )
        // InternalKim.g:16082:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
        {
        // InternalKim.g:16082:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
        // InternalKim.g:16083:5: {...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred623_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
        }
        // InternalKim.g:16083:126: ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:16084:6: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5);
        // InternalKim.g:16087:9: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
        // InternalKim.g:16087:10: {...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred623_InternalKim", "true");
        }
        // InternalKim.g:16087:19: (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
        // InternalKim.g:16087:20: otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
        {
        otherlv_20=(Token)match(input,116,FOLLOW_45); if (state.failed) return ;
        // InternalKim.g:16091:9: ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
        // InternalKim.g:16092:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
        {
        // InternalKim.g:16092:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
        // InternalKim.g:16093:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
        {
        // InternalKim.g:16093:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
        int alt601=2;
        int LA601_0 = input.LA(1);

        if ( (LA601_0==RULE_LOWERCASE_ID) ) {
            alt601=1;
        }
        else if ( (LA601_0==RULE_STRING) ) {
            alt601=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 601, 0, input);

            throw nvae;
        }
        switch (alt601) {
            case 1 :
                // InternalKim.g:16094:12: lv_name_21_1= RULE_LOWERCASE_ID
                {
                lv_name_21_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:16109:12: lv_name_21_2= RULE_STRING
                {
                lv_name_21_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred623_InternalKim

    // $ANTLR start synpred624_InternalKim
    public final void synpred624_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_value_0_0 = null;


        // InternalKim.g:16172:4: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )
        // InternalKim.g:16172:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as'
        {
        // InternalKim.g:16172:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) )
        // InternalKim.g:16173:5: (lv_value_0_0= ruleLiteralValueWithConcept )
        {
        // InternalKim.g:16173:5: (lv_value_0_0= ruleLiteralValueWithConcept )
        // InternalKim.g:16174:6: lv_value_0_0= ruleLiteralValueWithConcept
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_value_0_0=ruleLiteralValueWithConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,25,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred624_InternalKim

    // $ANTLR start synpred626_InternalKim
    public final void synpred626_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;


        // InternalKim.g:16236:4: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:16236:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:16236:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:16237:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred626_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:16237:137: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:16238:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:16241:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        // InternalKim.g:16241:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred626_InternalKim", "true");
        }
        // InternalKim.g:16241:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        // InternalKim.g:16241:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
        {
        otherlv_5=(Token)match(input,35,FOLLOW_25); if (state.failed) return ;
        otherlv_6=(Token)match(input,36,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:16249:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
        // InternalKim.g:16250:10: (lv_accordingTo_7_0= rulePropertyId )
        {
        // InternalKim.g:16250:10: (lv_accordingTo_7_0= rulePropertyId )
        // InternalKim.g:16251:11: lv_accordingTo_7_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_7_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred626_InternalKim

    // $ANTLR start synpred629_InternalKim
    public final void synpred629_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token otherlv_11=null;
        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;


        // InternalKim.g:16274:4: ( ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:16274:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:16274:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:16275:5: {...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred629_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:16275:137: ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:16276:6: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:16279:9: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        // InternalKim.g:16279:10: {...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred629_InternalKim", "true");
        }
        // InternalKim.g:16279:19: ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
        int alt604=2;
        int LA604_0 = input.LA(1);

        if ( (LA604_0==48) ) {
            alt604=1;
        }
        else if ( (LA604_0==113) ) {
            alt604=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 604, 0, input);

            throw nvae;
        }
        switch (alt604) {
            case 1 :
                // InternalKim.g:16279:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:16279:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                // InternalKim.g:16280:10: otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                {
                otherlv_8=(Token)match(input,48,FOLLOW_98); if (state.failed) return ;
                // InternalKim.g:16284:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                int alt603=2;
                int LA603_0 = input.LA(1);

                if ( (LA603_0==EOF||LA603_0==RULE_LOWERCASE_ID||LA603_0==RULE_CAMELCASE_ID||LA603_0==RULE_BACKCASE_ID||LA603_0==38||LA603_0==40||LA603_0==107||LA603_0==254) ) {
                    alt603=1;
                }
                else if ( (LA603_0==RULE_UPPERCASE_ID) ) {
                    int LA603_2 = input.LA(2);

                    if ( (LA603_2==EOF||LA603_2==40||LA603_2==107||LA603_2==254) ) {
                        alt603=1;
                    }
                    else if ( (LA603_2==245) ) {
                        alt603=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 603, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 603, 0, input);

                    throw nvae;
                }
                switch (alt603) {
                    case 1 :
                        // InternalKim.g:16285:11: ( (lv_unit_9_0= ruleUnit ) )
                        {
                        // InternalKim.g:16285:11: ( (lv_unit_9_0= ruleUnit ) )
                        // InternalKim.g:16286:12: (lv_unit_9_0= ruleUnit )
                        {
                        // InternalKim.g:16286:12: (lv_unit_9_0= ruleUnit )
                        // InternalKim.g:16287:13: lv_unit_9_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_9_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:16305:11: ( (lv_currency_10_0= ruleCurrency ) )
                        {
                        // InternalKim.g:16305:11: ( (lv_currency_10_0= ruleCurrency ) )
                        // InternalKim.g:16306:12: (lv_currency_10_0= ruleCurrency )
                        {
                        // InternalKim.g:16306:12: (lv_currency_10_0= ruleCurrency )
                        // InternalKim.g:16307:13: lv_currency_10_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_10_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:16327:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
                {
                // InternalKim.g:16327:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
                // InternalKim.g:16328:10: otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) )
                {
                otherlv_11=(Token)match(input,113,FOLLOW_201); if (state.failed) return ;
                // InternalKim.g:16332:10: ( (lv_unit_12_0= ruleUnit ) )
                // InternalKim.g:16333:11: (lv_unit_12_0= ruleUnit )
                {
                // InternalKim.g:16333:11: (lv_unit_12_0= ruleUnit )
                // InternalKim.g:16334:12: lv_unit_12_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_12_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred629_InternalKim

    // $ANTLR start synpred630_InternalKim
    public final void synpred630_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        EObject lv_from_13_0 = null;

        EObject lv_to_15_0 = null;


        // InternalKim.g:16358:4: ( ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:16358:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:16358:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:16359:5: {...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred630_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:16359:137: ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
        // InternalKim.g:16360:6: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:16363:9: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
        // InternalKim.g:16363:10: {...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred630_InternalKim", "true");
        }
        // InternalKim.g:16363:19: ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
        // InternalKim.g:16363:20: ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) )
        {
        // InternalKim.g:16363:20: ( (lv_from_13_0= ruleNumber ) )
        // InternalKim.g:16364:10: (lv_from_13_0= ruleNumber )
        {
        // InternalKim.g:16364:10: (lv_from_13_0= ruleNumber )
        // InternalKim.g:16365:11: lv_from_13_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getFromNumberParserRuleCall_3_2_0_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_from_13_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_14=(Token)match(input,36,FOLLOW_38); if (state.failed) return ;
        // InternalKim.g:16386:9: ( (lv_to_15_0= ruleNumber ) )
        // InternalKim.g:16387:10: (lv_to_15_0= ruleNumber )
        {
        // InternalKim.g:16387:10: (lv_to_15_0= ruleNumber )
        // InternalKim.g:16388:11: lv_to_15_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getToNumberParserRuleCall_3_2_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_15_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred630_InternalKim

    // $ANTLR start synpred631_InternalKim
    public final void synpred631_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_17_0 = null;


        // InternalKim.g:16436:10: ( (lv_valueOperators_17_0= ruleValueOperator ) )
        // InternalKim.g:16436:10: (lv_valueOperators_17_0= ruleValueOperator )
        {
        // InternalKim.g:16436:10: (lv_valueOperators_17_0= ruleValueOperator )
        // InternalKim.g:16437:11: lv_valueOperators_17_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_valueOperators_17_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred631_InternalKim

    // $ANTLR start synpred632_InternalKim
    public final void synpred632_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_16_0 = null;

        EObject lv_valueOperators_17_0 = null;


        // InternalKim.g:16411:4: ( ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )
        // InternalKim.g:16411:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
        {
        // InternalKim.g:16411:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
        // InternalKim.g:16412:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred632_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:16412:137: ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
        // InternalKim.g:16413:6: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:16416:9: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
        // InternalKim.g:16416:10: {...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred632_InternalKim", "true");
        }
        // InternalKim.g:16416:19: ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
        // InternalKim.g:16416:20: ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )*
        {
        // InternalKim.g:16416:20: ( (lv_valueOperators_16_0= ruleValueOperator ) )
        // InternalKim.g:16417:10: (lv_valueOperators_16_0= ruleValueOperator )
        {
        // InternalKim.g:16417:10: (lv_valueOperators_16_0= ruleValueOperator )
        // InternalKim.g:16418:11: lv_valueOperators_16_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_0_0());
          										
        }
        pushFollow(FOLLOW_202);
        lv_valueOperators_16_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:16435:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*
        loop605:
        do {
            int alt605=2;
            int LA605_0 = input.LA(1);

            if ( (LA605_0==55||(LA605_0>=76 && LA605_0<=88)||(LA605_0>=117 && LA605_0<=118)) ) {
                alt605=1;
            }


            switch (alt605) {
        	case 1 :
        	    // InternalKim.g:16436:10: (lv_valueOperators_17_0= ruleValueOperator )
        	    {
        	    // InternalKim.g:16436:10: (lv_valueOperators_17_0= ruleValueOperator )
        	    // InternalKim.g:16437:11: lv_valueOperators_17_0= ruleValueOperator
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_202);
        	    lv_valueOperators_17_0=ruleValueOperator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop605;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred632_InternalKim

    // $ANTLR start synpred645_InternalKim
    public final void synpred645_InternalKim_fragment() throws RecognitionException {   
        EObject lv_root_1_0 = null;


        // InternalKim.g:16838:4: ( (lv_root_1_0= ruleUnitElement ) )
        // InternalKim.g:16838:4: (lv_root_1_0= ruleUnitElement )
        {
        // InternalKim.g:16838:4: (lv_root_1_0= ruleUnitElement )
        // InternalKim.g:16839:5: lv_root_1_0= ruleUnitElement
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getUnitAccess().getRootUnitElementParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_root_1_0=ruleUnitElement();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred645_InternalKim

    // $ANTLR start synpred652_InternalKim
    public final void synpred652_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:17054:4: ( ( RULE_INT ) )
        // InternalKim.g:17054:5: ( RULE_INT )
        {
        // InternalKim.g:17054:5: ( RULE_INT )
        // InternalKim.g:17055:5: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred652_InternalKim

    // $ANTLR start synpred653_InternalKim
    public final void synpred653_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:17076:4: ( ( 'l' ) )
        // InternalKim.g:17076:5: ( 'l' )
        {
        // InternalKim.g:17076:5: ( 'l' )
        // InternalKim.g:17077:5: 'l'
        {
        match(input,248,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred653_InternalKim

    // $ANTLR start synpred654_InternalKim
    public final void synpred654_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:17094:4: ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )
        // InternalKim.g:17094:5: ( ( ( '.' ) ) ( ( RULE_INT ) ) )
        {
        // InternalKim.g:17094:5: ( ( ( '.' ) ) ( ( RULE_INT ) ) )
        // InternalKim.g:17095:5: ( ( '.' ) ) ( ( RULE_INT ) )
        {
        // InternalKim.g:17095:5: ( ( '.' ) )
        // InternalKim.g:17096:6: ( '.' )
        {
        // InternalKim.g:17096:6: ( '.' )
        // InternalKim.g:17097:7: '.'
        {
        match(input,108,FOLLOW_76); if (state.failed) return ;

        }


        }

        // InternalKim.g:17100:5: ( ( RULE_INT ) )
        // InternalKim.g:17101:6: ( RULE_INT )
        {
        // InternalKim.g:17101:6: ( RULE_INT )
        // InternalKim.g:17102:7: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred654_InternalKim

    // $ANTLR start synpred658_InternalKim
    public final void synpred658_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:17143:4: ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )
        // InternalKim.g:17143:5: ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) )
        {
        // InternalKim.g:17143:5: ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) )
        // InternalKim.g:17144:5: ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) )
        {
        // InternalKim.g:17144:5: ( ( ( 'e' | 'E' ) ) )
        // InternalKim.g:17145:6: ( ( 'e' | 'E' ) )
        {
        // InternalKim.g:17145:6: ( ( 'e' | 'E' ) )
        // InternalKim.g:17146:7: ( 'e' | 'E' )
        {
        if ( (input.LA(1)>=249 && input.LA(1)<=250) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }

        // InternalKim.g:17153:5: ( '+' | ( ( '-' ) ) )?
        int alt607=3;
        int LA607_0 = input.LA(1);

        if ( (LA607_0==246) ) {
            alt607=1;
        }
        else if ( (LA607_0==247) ) {
            alt607=2;
        }
        switch (alt607) {
            case 1 :
                // InternalKim.g:17154:6: '+'
                {
                match(input,246,FOLLOW_76); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:17156:6: ( ( '-' ) )
                {
                // InternalKim.g:17156:6: ( ( '-' ) )
                // InternalKim.g:17157:7: ( '-' )
                {
                // InternalKim.g:17157:7: ( '-' )
                // InternalKim.g:17158:8: '-'
                {
                match(input,247,FOLLOW_76); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:17162:5: ( ( RULE_INT ) )
        // InternalKim.g:17163:6: ( RULE_INT )
        {
        // InternalKim.g:17163:6: ( RULE_INT )
        // InternalKim.g:17164:7: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred658_InternalKim

    // $ANTLR start synpred680_InternalKim
    public final void synpred680_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken this_PathName_0 = null;


        // InternalKim.g:17739:4: (this_PathName_0= rulePathName )
        // InternalKim.g:17739:4: this_PathName_0= rulePathName
        {
        if ( state.backtracking==0 ) {

          				newCompositeNode(grammarAccess.getPropertyIdAccess().getPathNameParserRuleCall_0_0());
          			
        }
        pushFollow(FOLLOW_2);
        this_PathName_0=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred680_InternalKim

    // $ANTLR start synpred686_InternalKim
    public final void synpred686_InternalKim_fragment() throws RecognitionException {   
        Token this_LOWERCASE_ID_6=null;

        // InternalKim.g:17850:4: (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID )
        // InternalKim.g:17850:4: this_LOWERCASE_ID_6= RULE_LOWERCASE_ID
        {
        this_LOWERCASE_ID_6=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred686_InternalKim

    // Delegated rules

    public final boolean synpred23_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred508_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred508_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred507_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred507_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred160_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred160_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred310_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred310_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred395_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred395_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred397_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred397_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred623_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred623_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred396_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred396_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred624_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred624_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred626_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred626_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred542_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred542_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred279_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred279_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred629_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred629_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred435_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred435_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred541_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred541_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred277_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred277_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred540_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred540_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred243_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred243_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred275_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred275_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred285_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred285_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred427_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred427_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred428_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred428_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred201_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred201_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred276_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred276_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred272_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred272_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred284_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred284_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred429_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred429_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred115_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred115_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred169_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred169_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred654_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred654_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred621_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred621_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred653_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred653_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred282_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred282_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred610_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred610_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred547_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred547_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred199_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred199_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred280_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred280_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred270_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred270_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred652_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred652_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred302_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred302_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred304_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred304_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred153_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred153_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred192_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred192_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred196_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred196_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred366_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred366_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred301_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred301_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred305_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred305_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred363_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred363_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred385_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred385_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred611_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred611_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred300_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred300_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred306_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred306_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred308_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred308_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred613_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred613_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred381_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred381_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred383_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred383_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred658_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred658_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred309_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred309_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred247_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred247_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred618_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred618_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred403_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred403_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred245_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred245_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred191_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred191_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred288_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred288_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred425_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred425_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred616_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred616_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred617_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred617_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred267_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred267_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred447_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred447_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred204_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred204_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred466_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred466_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred487_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred487_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred423_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred423_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred619_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred619_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred401_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred401_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred444_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred444_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred249_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred249_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred464_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred464_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred465_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred465_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred206_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred206_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred209_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred209_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred440_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred440_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred463_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred463_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred208_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred208_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred461_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred461_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred303_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred303_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred529_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred529_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred528_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred528_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred600_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred600_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred645_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred645_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred680_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred680_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred604_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred604_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred149_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred149_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred605_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred605_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred603_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred603_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred372_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred372_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred520_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred520_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred521_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred521_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred258_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred258_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred214_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred214_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred257_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred257_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred606_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred606_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred80_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred80_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred299_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred299_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred458_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred458_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred256_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred256_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred212_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred212_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred253_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred253_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred266_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred266_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred294_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred294_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred297_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred297_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred261_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred261_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred265_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred265_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred449_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred449_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred251_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred251_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred419_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred419_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred295_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred295_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred263_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred263_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred534_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred534_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred535_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred535_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred632_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred632_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred686_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred686_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred250_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred250_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred292_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred292_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred536_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred536_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred538_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred538_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred260_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred260_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred631_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred631_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred630_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred630_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred75_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred75_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred533_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred533_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred554_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred554_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred532_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred532_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred550_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred550_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred530_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred530_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred551_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred551_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred215_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred215_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred456_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred456_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred608_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred608_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred412_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred412_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred433_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred433_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred216_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred216_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred455_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred455_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred432_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred432_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred430_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred430_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred431_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred431_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred451_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred451_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA4 dfa4 = new DFA4(this);
    protected DFA16 dfa16 = new DFA16(this);
    protected DFA15 dfa15 = new DFA15(this);
    protected DFA42 dfa42 = new DFA42(this);
    protected DFA47 dfa47 = new DFA47(this);
    protected DFA46 dfa46 = new DFA46(this);
    protected DFA50 dfa50 = new DFA50(this);
    protected DFA59 dfa59 = new DFA59(this);
    protected DFA63 dfa63 = new DFA63(this);
    protected DFA84 dfa84 = new DFA84(this);
    protected DFA91 dfa91 = new DFA91(this);
    protected DFA95 dfa95 = new DFA95(this);
    protected DFA97 dfa97 = new DFA97(this);
    protected DFA115 dfa115 = new DFA115(this);
    protected DFA123 dfa123 = new DFA123(this);
    protected DFA124 dfa124 = new DFA124(this);
    protected DFA144 dfa144 = new DFA144(this);
    protected DFA135 dfa135 = new DFA135(this);
    protected DFA143 dfa143 = new DFA143(this);
    protected DFA145 dfa145 = new DFA145(this);
    protected DFA152 dfa152 = new DFA152(this);
    protected DFA149 dfa149 = new DFA149(this);
    protected DFA154 dfa154 = new DFA154(this);
    protected DFA157 dfa157 = new DFA157(this);
    protected DFA164 dfa164 = new DFA164(this);
    protected DFA161 dfa161 = new DFA161(this);
    protected DFA172 dfa172 = new DFA172(this);
    protected DFA167 dfa167 = new DFA167(this);
    protected DFA166 dfa166 = new DFA166(this);
    protected DFA173 dfa173 = new DFA173(this);
    protected DFA178 dfa178 = new DFA178(this);
    protected DFA177 dfa177 = new DFA177(this);
    protected DFA212 dfa212 = new DFA212(this);
    protected DFA217 dfa217 = new DFA217(this);
    protected DFA218 dfa218 = new DFA218(this);
    protected DFA224 dfa224 = new DFA224(this);
    protected DFA260 dfa260 = new DFA260(this);
    protected DFA259 dfa259 = new DFA259(this);
    protected DFA275 dfa275 = new DFA275(this);
    protected DFA278 dfa278 = new DFA278(this);
    protected DFA282 dfa282 = new DFA282(this);
    protected DFA283 dfa283 = new DFA283(this);
    protected DFA294 dfa294 = new DFA294(this);
    protected DFA296 dfa296 = new DFA296(this);
    protected DFA299 dfa299 = new DFA299(this);
    protected DFA301 dfa301 = new DFA301(this);
    protected DFA315 dfa315 = new DFA315(this);
    protected DFA312 dfa312 = new DFA312(this);
    protected DFA316 dfa316 = new DFA316(this);
    protected DFA323 dfa323 = new DFA323(this);
    protected DFA320 dfa320 = new DFA320(this);
    protected DFA324 dfa324 = new DFA324(this);
    protected DFA329 dfa329 = new DFA329(this);
    protected DFA328 dfa328 = new DFA328(this);
    protected DFA335 dfa335 = new DFA335(this);
    protected DFA372 dfa372 = new DFA372(this);
    protected DFA459 dfa459 = new DFA459(this);
    protected DFA484 dfa484 = new DFA484(this);
    protected DFA483 dfa483 = new DFA483(this);
    protected DFA494 dfa494 = new DFA494(this);
    static final String dfa_1s = "\100\uffff";
    static final String dfa_2s = "\1\10\77\uffff";
    static final String dfa_3s = "\1\17\4\0\73\uffff";
    static final String dfa_4s = "\1\u00f4\4\0\73\uffff";
    static final String dfa_5s = "\5\uffff\1\1\2\uffff\1\2\67\uffff";
    static final String dfa_6s = "\1\uffff\1\0\1\1\1\2\1\3\73\uffff}>";
    static final String[] dfa_7s = {
            "\1\1\5\uffff\1\4\1\2\1\3\1\10\55\uffff\6\10\15\uffff\3\5\3\uffff\1\10\15\uffff\1\10\56\uffff\1\10\3\uffff\11\10\21\uffff\1\10\23\uffff\3\10\4\uffff\40\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "109:4: ( (lv_namespace_1_0= ruleNamespace ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA1_1 = input.LA(1);

                         
                        int index1_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index1_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA1_2 = input.LA(1);

                         
                        int index1_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index1_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA1_3 = input.LA(1);

                         
                        int index1_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index1_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA1_4 = input.LA(1);

                         
                        int index1_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index1_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 1, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\75\uffff";
    static final String dfa_9s = "\1\17\1\0\62\uffff\1\0\10\uffff";
    static final String dfa_10s = "\1\u00f4\1\0\62\uffff\1\0\10\uffff";
    static final String dfa_11s = "\2\uffff\1\1\56\uffff\1\2\10\uffff\1\4\1\5\1\3";
    static final String dfa_12s = "\1\uffff\1\0\62\uffff\1\1\10\uffff}>";
    static final String[] dfa_13s = {
            "\1\1\5\uffff\3\61\1\72\55\uffff\1\64\5\61\23\uffff\1\2\15\uffff\1\73\56\uffff\1\2\3\uffff\11\2\21\uffff\1\2\23\uffff\3\2\4\uffff\40\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA4_1 = input.LA(1);

                         
                        int index4_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalKim()) ) {s = 2;}

                        else if ( (synpred5_InternalKim()) ) {s = 49;}

                        else if ( (synpred7_InternalKim()) ) {s = 58;}

                        else if ( (true) ) {s = 59;}

                         
                        input.seek(index4_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA4_52 = input.LA(1);

                         
                        int index4_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalKim()) ) {s = 49;}

                        else if ( (synpred6_InternalKim()) ) {s = 60;}

                         
                        input.seek(index4_52);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 4, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\52\uffff";
    static final String dfa_15s = "\1\4\1\uffff\40\0\10\uffff";
    static final String dfa_16s = "\1\u00f7\1\uffff\40\0\10\uffff";
    static final String dfa_17s = "\1\uffff\1\1\40\uffff\1\2\7\uffff";
    static final String dfa_18s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\10\uffff}>";
    static final String[] dfa_19s = {
            "\1\3\1\2\1\5\1\uffff\1\42\1\6\1\11\1\4\1\42\2\uffff\1\42\13\uffff\1\42\1\12\1\13\10\uffff\1\41\12\uffff\2\42\65\uffff\1\1\7\uffff\1\42\17\uffff\1\16\1\17\7\uffff\1\14\1\15\1\uffff\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\64\uffff\1\42\44\uffff\1\7\1\10",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA16 extends DFA {

        public DFA16(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 16;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "657:3: ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA16_2 = input.LA(1);

                         
                        int index16_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA16_3 = input.LA(1);

                         
                        int index16_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA16_4 = input.LA(1);

                         
                        int index16_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA16_5 = input.LA(1);

                         
                        int index16_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA16_6 = input.LA(1);

                         
                        int index16_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA16_7 = input.LA(1);

                         
                        int index16_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA16_8 = input.LA(1);

                         
                        int index16_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA16_9 = input.LA(1);

                         
                        int index16_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA16_10 = input.LA(1);

                         
                        int index16_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA16_11 = input.LA(1);

                         
                        int index16_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA16_12 = input.LA(1);

                         
                        int index16_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA16_13 = input.LA(1);

                         
                        int index16_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA16_14 = input.LA(1);

                         
                        int index16_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA16_15 = input.LA(1);

                         
                        int index16_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA16_16 = input.LA(1);

                         
                        int index16_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA16_17 = input.LA(1);

                         
                        int index16_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA16_18 = input.LA(1);

                         
                        int index16_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA16_19 = input.LA(1);

                         
                        int index16_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA16_20 = input.LA(1);

                         
                        int index16_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA16_21 = input.LA(1);

                         
                        int index16_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA16_22 = input.LA(1);

                         
                        int index16_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA16_23 = input.LA(1);

                         
                        int index16_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA16_24 = input.LA(1);

                         
                        int index16_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_24);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA16_25 = input.LA(1);

                         
                        int index16_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_25);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA16_26 = input.LA(1);

                         
                        int index16_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_26);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA16_27 = input.LA(1);

                         
                        int index16_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA16_28 = input.LA(1);

                         
                        int index16_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_28);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA16_29 = input.LA(1);

                         
                        int index16_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_29);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA16_30 = input.LA(1);

                         
                        int index16_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_30);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA16_31 = input.LA(1);

                         
                        int index16_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_31);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA16_32 = input.LA(1);

                         
                        int index16_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_32);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA16_33 = input.LA(1);

                         
                        int index16_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index16_33);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 16, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_20s = "\21\uffff";
    static final String dfa_21s = "\1\4\1\uffff\1\31\1\46\1\31\1\0\3\uffff\1\4\1\uffff\2\4\1\31\3\46";
    static final String dfa_22s = "\1\u00f7\1\uffff\3\154\1\0\3\uffff\1\13\1\uffff\2\13\4\154";
    static final String dfa_23s = "\1\uffff\1\1\4\uffff\1\3\1\4\1\5\1\uffff\1\2\6\uffff";
    static final String dfa_24s = "\5\uffff\1\0\13\uffff}>";
    static final String[] dfa_25s = {
            "\1\3\1\2\1\1\2\uffff\1\5\1\6\1\4\20\uffff\2\7\10\uffff\1\10\101\uffff\1\1\27\uffff\2\10\7\uffff\2\10\1\uffff\21\10\131\uffff\2\6",
            "",
            "\1\1\1\uffff\1\1\12\uffff\1\12\16\uffff\1\1\63\uffff\1\13\1\uffff\1\1\1\11",
            "\1\12\102\uffff\1\13\2\uffff\1\14",
            "\1\1\1\uffff\1\1\12\uffff\1\12\16\uffff\1\1\63\uffff\1\13\1\uffff\1\1\1\11",
            "\1\uffff",
            "",
            "",
            "",
            "\1\16\1\15\5\uffff\1\17",
            "",
            "\2\1\3\uffff\1\10\1\uffff\1\1",
            "\1\16\1\20\5\uffff\1\17",
            "\1\1\1\uffff\1\1\12\uffff\1\12\16\uffff\1\1\63\uffff\1\13\2\uffff\1\14",
            "\1\12\102\uffff\1\13\2\uffff\1\14",
            "\1\12\102\uffff\1\13\2\uffff\1\14",
            "\1\12\102\uffff\1\13\2\uffff\1\14"
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA15 extends DFA {

        public DFA15(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 15;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "658:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA15_5 = input.LA(1);

                         
                        int index15_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index15_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 15, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_26s = "\55\uffff";
    static final String dfa_27s = "\1\4\2\uffff\3\0\33\uffff\1\0\13\uffff";
    static final String dfa_28s = "\1\u00f7\2\uffff\3\0\33\uffff\1\0\13\uffff";
    static final String dfa_29s = "\1\uffff\1\1\4\uffff\1\4\1\5\1\6\31\uffff\1\10\5\uffff\1\11\1\12\1\2\1\3\1\7";
    static final String dfa_30s = "\3\uffff\1\0\1\1\1\2\33\uffff\1\3\13\uffff}>";
    static final String[] dfa_31s = {
            "\2\10\1\7\2\uffff\1\10\1\5\1\10\20\uffff\2\1\10\uffff\1\41\1\uffff\1\51\7\uffff\1\6\1\50\32\uffff\4\42\2\uffff\1\42\1\uffff\1\42\53\uffff\2\10\7\uffff\2\10\1\uffff\21\10\131\uffff\1\3\1\4",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA42 extends DFA {

        public DFA42(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 42;
            this.eot = dfa_26;
            this.eof = dfa_26;
            this.min = dfa_27;
            this.max = dfa_28;
            this.accept = dfa_29;
            this.special = dfa_30;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "1439:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA42_3 = input.LA(1);

                         
                        int index42_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalKim()) ) {s = 42;}

                        else if ( (synpred58_InternalKim()) ) {s = 43;}

                         
                        input.seek(index42_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA42_4 = input.LA(1);

                         
                        int index42_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalKim()) ) {s = 42;}

                        else if ( (synpred58_InternalKim()) ) {s = 43;}

                         
                        input.seek(index42_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA42_5 = input.LA(1);

                         
                        int index42_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalKim()) ) {s = 42;}

                        else if ( (synpred58_InternalKim()) ) {s = 43;}

                         
                        input.seek(index42_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA42_33 = input.LA(1);

                         
                        int index42_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalKim()) ) {s = 8;}

                        else if ( (synpred64_InternalKim()) ) {s = 44;}

                         
                        input.seek(index42_33);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 42, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_32s = "\1\4\2\uffff\3\0\5\uffff\3\0\37\uffff";
    static final String dfa_33s = "\1\u00f7\2\uffff\3\0\5\uffff\3\0\37\uffff";
    static final String dfa_34s = "\3\uffff\1\0\1\1\1\2\5\uffff\1\3\1\4\1\5\37\uffff}>";
    static final String[] dfa_35s = {
            "\1\14\1\13\1\7\2\uffff\1\10\1\5\1\15\20\uffff\2\1\10\uffff\1\10\1\uffff\1\51\7\uffff\1\6\1\50\32\uffff\4\42\2\uffff\1\42\1\uffff\1\42\53\uffff\2\10\7\uffff\2\10\1\uffff\21\10\131\uffff\1\3\1\4",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final char[] dfa_33 = DFA.unpackEncodedStringToUnsignedChars(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[][] dfa_35 = unpackEncodedStringArray(dfa_35s);

    class DFA47 extends DFA {

        public DFA47(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 47;
            this.eot = dfa_26;
            this.eof = dfa_26;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_29;
            this.special = dfa_34;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "1797:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA47_3 = input.LA(1);

                         
                        int index47_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalKim()) ) {s = 42;}

                        else if ( (synpred76_InternalKim()) ) {s = 43;}

                         
                        input.seek(index47_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA47_4 = input.LA(1);

                         
                        int index47_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalKim()) ) {s = 42;}

                        else if ( (synpred76_InternalKim()) ) {s = 43;}

                         
                        input.seek(index47_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA47_5 = input.LA(1);

                         
                        int index47_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalKim()) ) {s = 42;}

                        else if ( (synpred76_InternalKim()) ) {s = 43;}

                         
                        input.seek(index47_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA47_11 = input.LA(1);

                         
                        int index47_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalKim()) ) {s = 8;}

                        else if ( (synpred81_InternalKim()) ) {s = 44;}

                         
                        input.seek(index47_11);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA47_12 = input.LA(1);

                         
                        int index47_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalKim()) ) {s = 8;}

                        else if ( (synpred81_InternalKim()) ) {s = 44;}

                         
                        input.seek(index47_12);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA47_13 = input.LA(1);

                         
                        int index47_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalKim()) ) {s = 8;}

                        else if ( (synpred81_InternalKim()) ) {s = 44;}

                         
                        input.seek(index47_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 47, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_36s = "\13\uffff";
    static final String dfa_37s = "\1\uffff\1\4\3\uffff\2\7\1\11\3\uffff";
    static final String dfa_38s = "\1\4\1\151\1\uffff\1\4\1\uffff\2\33\1\0\1\4\1\uffff\1\0";
    static final String dfa_39s = "\1\13\1\154\1\uffff\1\u00f7\1\uffff\2\u0088\1\0\1\u00f7\1\uffff\1\0";
    static final String dfa_40s = "\2\uffff\1\2\1\uffff\1\1\4\uffff\1\1\1\uffff";
    static final String dfa_41s = "\12\uffff\1\0}>";
    static final String[] dfa_42s = {
            "\1\2\1\1\5\uffff\1\2",
            "\1\3\2\uffff\1\2",
            "",
            "\1\4\1\5\1\4\1\uffff\3\4\1\6\2\uffff\1\2\15\uffff\2\4\10\uffff\1\4\12\uffff\2\4\115\uffff\2\4\7\uffff\2\4\1\uffff\21\4\64\uffff\1\4\44\uffff\2\4",
            "",
            "\1\4\12\uffff\1\4\102\uffff\1\10\2\uffff\1\4\33\uffff\1\4",
            "\1\4\12\uffff\1\4\102\uffff\1\10\2\uffff\1\4\33\uffff\1\4",
            "\1\uffff",
            "\3\2\1\uffff\1\2\1\12\2\2\20\uffff\2\2\10\uffff\1\2\12\uffff\2\2\115\uffff\2\2\7\uffff\2\2\1\uffff\21\2\64\uffff\1\2\44\uffff\2\2",
            "",
            "\1\uffff"
    };

    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final char[] dfa_38 = DFA.unpackEncodedStringToUnsignedChars(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[][] dfa_42 = unpackEncodedStringArray(dfa_42s);

    class DFA46 extends DFA {

        public DFA46(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 46;
            this.eot = dfa_36;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "2011:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA46_10 = input.LA(1);

                         
                        int index46_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalKim()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index46_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 46, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_43s = "\10\uffff";
    static final String dfa_44s = "\2\uffff\1\3\4\uffff\1\3";
    static final String dfa_45s = "\1\4\2\7\2\uffff\1\4\2\7";
    static final String dfa_46s = "\1\u00f7\1\154\1\103\2\uffff\1\u00f7\1\154\1\103";
    static final String dfa_47s = "\3\uffff\1\2\1\1\3\uffff";
    static final String dfa_48s = "\10\uffff}>";
    static final String[] dfa_49s = {
            "\1\3\1\1\1\2\1\uffff\4\3\20\uffff\2\3\10\uffff\1\3\1\uffff\1\3\7\uffff\2\3\3\uffff\1\3\26\uffff\4\3\2\uffff\1\3\1\uffff\1\3\53\uffff\2\3\7\uffff\2\3\1\uffff\21\3\131\uffff\2\3",
            "\1\4\54\uffff\1\4\64\uffff\1\3\2\uffff\1\3",
            "\1\4\14\uffff\1\3\6\uffff\1\3\16\uffff\1\3\10\uffff\1\3\1\5\1\uffff\3\3\5\uffff\6\3",
            "",
            "",
            "\1\3\1\6\1\7\1\uffff\4\3\20\uffff\2\3\10\uffff\1\3\1\uffff\1\3\7\uffff\2\3\3\uffff\1\3\26\uffff\4\3\2\uffff\1\3\1\uffff\1\3\53\uffff\2\3\7\uffff\2\3\1\uffff\21\3\131\uffff\2\3",
            "\1\4\54\uffff\1\4\64\uffff\1\3\2\uffff\1\3",
            "\1\4\14\uffff\1\3\6\uffff\1\3\16\uffff\1\3\10\uffff\1\3\1\5\1\uffff\3\3\5\uffff\6\3"
    };

    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final char[] dfa_45 = DFA.unpackEncodedStringToUnsignedChars(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[][] dfa_49 = unpackEncodedStringArray(dfa_49s);

    class DFA50 extends DFA {

        public DFA50(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 50;
            this.eot = dfa_43;
            this.eof = dfa_44;
            this.min = dfa_45;
            this.max = dfa_46;
            this.accept = dfa_47;
            this.special = dfa_48;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "2260:3: ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )?";
        }
    }
    static final String dfa_50s = "\27\uffff";
    static final String dfa_51s = "\4\uffff\1\21\10\uffff\1\21\5\uffff\1\21\2\uffff\1\21";
    static final String dfa_52s = "\1\4\1\uffff\2\12\1\24\10\uffff\1\24\3\12\2\uffff\1\24\2\12\1\24";
    static final String dfa_53s = "\1\u00f7\1\uffff\2\12\1\u00fa\10\uffff\1\u00fa\1\12\2\u00f7\2\uffff\1\u00fa\2\12\1\103";
    static final String dfa_54s = "\1\uffff\1\1\3\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\4\uffff\1\3\1\2\4\uffff";
    static final String dfa_55s = "\27\uffff}>";
    static final String[] dfa_56s = {
            "\2\7\1\6\1\uffff\1\11\1\7\1\4\1\7\20\uffff\2\1\10\uffff\1\7\1\uffff\1\13\7\uffff\1\5\1\12\3\uffff\1\14\26\uffff\4\10\2\uffff\1\10\1\uffff\1\10\53\uffff\2\7\7\uffff\2\7\1\uffff\21\7\131\uffff\1\2\1\3",
            "",
            "\1\4",
            "\1\4",
            "\1\21\6\uffff\1\21\10\uffff\1\22\5\uffff\1\21\3\uffff\2\22\3\uffff\2\21\1\uffff\3\21\5\uffff\6\21\50\uffff\1\16\u008b\uffff\1\15\1\17\1\20",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\21\6\uffff\1\21\10\uffff\1\22\5\uffff\1\21\3\uffff\2\22\3\uffff\2\21\1\uffff\3\21\5\uffff\6\21\50\uffff\1\16\u008c\uffff\1\17\1\20",
            "\1\23",
            "\1\26\u00eb\uffff\1\24\1\25",
            "\1\26\u00eb\uffff\1\24\1\25",
            "",
            "",
            "\1\21\6\uffff\1\21\10\uffff\1\22\5\uffff\1\21\3\uffff\2\22\3\uffff\2\21\1\uffff\3\21\5\uffff\6\21\u00b5\uffff\1\17\1\20",
            "\1\26",
            "\1\26",
            "\1\21\6\uffff\1\21\10\uffff\1\22\5\uffff\1\21\3\uffff\2\22\3\uffff\2\21\1\uffff\3\21\5\uffff\6\21"
    };

    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final char[] dfa_52 = DFA.unpackEncodedStringToUnsignedChars(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[][] dfa_56 = unpackEncodedStringArray(dfa_56s);

    class DFA59 extends DFA {

        public DFA59(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 59;
            this.eot = dfa_50;
            this.eof = dfa_51;
            this.min = dfa_52;
            this.max = dfa_53;
            this.accept = dfa_54;
            this.special = dfa_55;
            this.transition = dfa_56;
        }
        public String getDescription() {
            return "2505:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_expr_16_0= RULE_EXPR ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) | ( (lv_anything_19_0= '#' ) ) )";
        }
    }
    static final String dfa_57s = "\54\uffff";
    static final String dfa_58s = "\1\7\53\uffff";
    static final String dfa_59s = "\1\4\6\0\45\uffff";
    static final String dfa_60s = "\1\u009c\6\0\45\uffff";
    static final String dfa_61s = "\7\uffff\1\2\43\uffff\1\1";
    static final String dfa_62s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\45\uffff}>";
    static final String[] dfa_63s = {
            "\3\7\2\uffff\1\7\1\uffff\1\7\10\uffff\1\7\12\uffff\1\7\6\uffff\1\7\2\uffff\2\7\13\uffff\3\7\5\uffff\1\1\1\2\1\3\1\4\1\5\1\6\44\uffff\1\7\27\uffff\2\7\7\uffff\2\7\1\uffff\21\7",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[][] dfa_63 = unpackEncodedStringArray(dfa_63s);

    class DFA63 extends DFA {

        public DFA63(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 63;
            this.eot = dfa_57;
            this.eof = dfa_58;
            this.min = dfa_59;
            this.max = dfa_60;
            this.accept = dfa_61;
            this.special = dfa_62;
            this.transition = dfa_63;
        }
        public String getDescription() {
            return "2916:4: ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA63_1 = input.LA(1);

                         
                        int index63_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalKim()) ) {s = 43;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index63_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA63_2 = input.LA(1);

                         
                        int index63_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalKim()) ) {s = 43;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index63_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA63_3 = input.LA(1);

                         
                        int index63_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalKim()) ) {s = 43;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index63_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA63_4 = input.LA(1);

                         
                        int index63_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalKim()) ) {s = 43;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index63_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA63_5 = input.LA(1);

                         
                        int index63_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalKim()) ) {s = 43;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index63_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA63_6 = input.LA(1);

                         
                        int index63_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalKim()) ) {s = 43;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index63_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 63, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_64s = "\66\uffff";
    static final String dfa_65s = "\1\22\65\uffff";
    static final String dfa_66s = "\1\4\3\uffff\1\0\3\uffff\4\0\1\uffff\2\0\47\uffff";
    static final String dfa_67s = "\1\u00f7\3\uffff\1\0\3\uffff\4\0\1\uffff\2\0\47\uffff";
    static final String dfa_68s = "\1\uffff\3\1\1\uffff\3\1\4\uffff\1\1\2\uffff\3\1\1\2\43\uffff";
    static final String dfa_69s = "\1\0\3\uffff\1\1\3\uffff\1\2\1\3\1\4\1\5\1\uffff\1\6\1\7\47\uffff}>";
    static final String[] dfa_70s = {
            "\1\12\1\11\1\4\1\uffff\1\14\1\15\1\3\1\13\1\7\7\uffff\1\22\6\uffff\1\10\1\5\1\6\1\uffff\1\22\6\uffff\1\16\2\uffff\2\22\6\uffff\1\21\1\17\3\uffff\3\22\5\uffff\6\22\44\uffff\1\22\27\uffff\2\22\7\uffff\2\22\1\uffff\21\22\64\uffff\1\20\44\uffff\1\1\1\2",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[][] dfa_70 = unpackEncodedStringArray(dfa_70s);

    class DFA84 extends DFA {

        public DFA84(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 84;
            this.eot = dfa_64;
            this.eof = dfa_65;
            this.min = dfa_66;
            this.max = dfa_67;
            this.accept = dfa_68;
            this.special = dfa_69;
            this.transition = dfa_70;
        }
        public String getDescription() {
            return "3689:4: ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA84_0 = input.LA(1);

                         
                        int index84_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA84_0==246) && (synpred149_InternalKim())) {s = 1;}

                        else if ( (LA84_0==247) && (synpred149_InternalKim())) {s = 2;}

                        else if ( (LA84_0==RULE_INT) && (synpred149_InternalKim())) {s = 3;}

                        else if ( (LA84_0==RULE_STRING) ) {s = 4;}

                        else if ( (LA84_0==28) && (synpred149_InternalKim())) {s = 5;}

                        else if ( (LA84_0==29) && (synpred149_InternalKim())) {s = 6;}

                        else if ( (LA84_0==RULE_ID) && (synpred149_InternalKim())) {s = 7;}

                        else if ( (LA84_0==27) ) {s = 8;}

                        else if ( (LA84_0==RULE_LOWERCASE_ID) ) {s = 9;}

                        else if ( (LA84_0==RULE_UPPERCASE_ID) ) {s = 10;}

                        else if ( (LA84_0==RULE_LOWERCASE_DASHID) ) {s = 11;}

                        else if ( (LA84_0==RULE_EXPR) && (synpred149_InternalKim())) {s = 12;}

                        else if ( (LA84_0==RULE_CAMELCASE_ID) ) {s = 13;}

                        else if ( (LA84_0==38) ) {s = 14;}

                        else if ( (LA84_0==50) && (synpred149_InternalKim())) {s = 15;}

                        else if ( (LA84_0==209) && (synpred149_InternalKim())) {s = 16;}

                        else if ( (LA84_0==49) && (synpred149_InternalKim())) {s = 17;}

                        else if ( (LA84_0==EOF||LA84_0==20||LA84_0==31||(LA84_0>=41 && LA84_0<=42)||(LA84_0>=54 && LA84_0<=56)||(LA84_0>=62 && LA84_0<=67)||LA84_0==104||(LA84_0>=128 && LA84_0<=129)||(LA84_0>=137 && LA84_0<=138)||(LA84_0>=140 && LA84_0<=156)) ) {s = 18;}

                         
                        input.seek(index84_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA84_4 = input.LA(1);

                         
                        int index84_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index84_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA84_8 = input.LA(1);

                         
                        int index84_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index84_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA84_9 = input.LA(1);

                         
                        int index84_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index84_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA84_10 = input.LA(1);

                         
                        int index84_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index84_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA84_11 = input.LA(1);

                         
                        int index84_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index84_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA84_13 = input.LA(1);

                         
                        int index84_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index84_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA84_14 = input.LA(1);

                         
                        int index84_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index84_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 84, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_71s = "\20\uffff";
    static final String dfa_72s = "\1\4\10\uffff\2\0\5\uffff";
    static final String dfa_73s = "\1\u00f7\10\uffff\2\0\5\uffff";
    static final String dfa_74s = "\1\uffff\1\1\11\uffff\1\2\1\3\1\4\1\5\1\6";
    static final String dfa_75s = "\11\uffff\1\0\1\1\5\uffff}>";
    static final String[] dfa_76s = {
            "\1\12\1\11\1\1\1\uffff\1\14\1\15\1\1\1\13\1\1\16\uffff\3\1\10\uffff\1\16\12\uffff\1\17\u00c4\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final char[] dfa_72 = DFA.unpackEncodedStringToUnsignedChars(dfa_72s);
    static final char[] dfa_73 = DFA.unpackEncodedStringToUnsignedChars(dfa_73s);
    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final short[] dfa_75 = DFA.unpackEncodedString(dfa_75s);
    static final short[][] dfa_76 = unpackEncodedStringArray(dfa_76s);

    class DFA91 extends DFA {

        public DFA91(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 91;
            this.eot = dfa_71;
            this.eof = dfa_71;
            this.min = dfa_72;
            this.max = dfa_73;
            this.accept = dfa_74;
            this.special = dfa_75;
            this.transition = dfa_76;
        }
        public String getDescription() {
            return "3793:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA91_9 = input.LA(1);

                         
                        int index91_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalKim()) ) {s = 11;}

                        else if ( (synpred160_InternalKim()) ) {s = 13;}

                         
                        input.seek(index91_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA91_10 = input.LA(1);

                         
                        int index91_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalKim()) ) {s = 11;}

                        else if ( (synpred160_InternalKim()) ) {s = 13;}

                         
                        input.seek(index91_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 91, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_77s = "\1\4\3\46\2\uffff\1\4\1\uffff\3\46";
    static final String dfa_78s = "\1\150\3\154\2\uffff\1\13\1\uffff\3\154";
    static final String dfa_79s = "\4\uffff\1\2\1\3\1\uffff\1\1\3\uffff";
    static final String dfa_80s = "\13\uffff}>";
    static final String[] dfa_81s = {
            "\1\2\1\1\2\uffff\1\4\2\uffff\1\3\134\uffff\1\5",
            "\1\7\102\uffff\1\5\2\uffff\1\6",
            "\1\7\102\uffff\1\5\2\uffff\1\6",
            "\1\7\102\uffff\1\5\2\uffff\1\6",
            "",
            "",
            "\1\11\1\10\5\uffff\1\12",
            "",
            "\1\7\102\uffff\1\5\2\uffff\1\6",
            "\1\7\102\uffff\1\5\2\uffff\1\6",
            "\1\7\102\uffff\1\5\2\uffff\1\6"
    };
    static final char[] dfa_77 = DFA.unpackEncodedStringToUnsignedChars(dfa_77s);
    static final char[] dfa_78 = DFA.unpackEncodedStringToUnsignedChars(dfa_78s);
    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[][] dfa_81 = unpackEncodedStringArray(dfa_81s);

    class DFA95 extends DFA {

        public DFA95(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 95;
            this.eot = dfa_36;
            this.eof = dfa_36;
            this.min = dfa_77;
            this.max = dfa_78;
            this.accept = dfa_79;
            this.special = dfa_80;
            this.transition = dfa_81;
        }
        public String getDescription() {
            return "4077:3: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) )";
        }
    }
    static final String dfa_82s = "\63\uffff";
    static final String dfa_83s = "\1\3\62\uffff";
    static final String dfa_84s = "\1\4\2\0\60\uffff";
    static final String dfa_85s = "\1\u009c\2\0\60\uffff";
    static final String dfa_86s = "\3\uffff\1\2\56\uffff\1\1";
    static final String dfa_87s = "\1\uffff\1\0\1\1\60\uffff}>";
    static final String[] dfa_88s = {
            "\3\3\2\uffff\1\3\1\uffff\1\3\10\uffff\1\3\6\uffff\1\3\3\uffff\3\3\3\uffff\2\3\2\uffff\2\3\1\uffff\1\1\1\2\10\uffff\3\3\5\uffff\6\3\1\uffff\1\3\42\uffff\1\3\27\uffff\2\3\7\uffff\2\3\1\uffff\21\3",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final char[] dfa_84 = DFA.unpackEncodedStringToUnsignedChars(dfa_84s);
    static final char[] dfa_85 = DFA.unpackEncodedStringToUnsignedChars(dfa_85s);
    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final short[][] dfa_88 = unpackEncodedStringArray(dfa_88s);

    class DFA97 extends DFA {

        public DFA97(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 97;
            this.eot = dfa_82;
            this.eof = dfa_83;
            this.min = dfa_84;
            this.max = dfa_85;
            this.accept = dfa_86;
            this.special = dfa_87;
            this.transition = dfa_88;
        }
        public String getDescription() {
            return "4195:3: ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA97_1 = input.LA(1);

                         
                        int index97_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred169_InternalKim()) ) {s = 50;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index97_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA97_2 = input.LA(1);

                         
                        int index97_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred169_InternalKim()) ) {s = 50;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index97_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 97, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_89s = "\1\24\1\uffff\1\4\16\uffff";
    static final String dfa_90s = "\1\147\1\uffff\1\u00d1\16\uffff";
    static final String dfa_91s = "\1\uffff\1\11\1\uffff\1\3\1\4\1\5\1\6\1\7\3\10\5\2\1\1";
    static final String dfa_92s = "\1\1\1\uffff\1\0\16\uffff}>";
    static final String[] dfa_93s = {
            "\1\1\12\uffff\1\2\12\uffff\1\1\5\uffff\1\5\54\uffff\1\3\1\4\2\uffff\1\6\1\uffff\1\7\1\10\1\uffff\1\11\1\1",
            "",
            "\1\16\1\15\5\uffff\1\17\32\uffff\1\13\1\uffff\1\14\63\uffff\1\20\164\uffff\1\12",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_89 = DFA.unpackEncodedStringToUnsignedChars(dfa_89s);
    static final char[] dfa_90 = DFA.unpackEncodedStringToUnsignedChars(dfa_90s);
    static final short[] dfa_91 = DFA.unpackEncodedString(dfa_91s);
    static final short[] dfa_92 = DFA.unpackEncodedString(dfa_92s);
    static final short[][] dfa_93 = unpackEncodedStringArray(dfa_93s);

    class DFA115 extends DFA {

        public DFA115(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 115;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_89;
            this.max = dfa_90;
            this.accept = dfa_91;
            this.special = dfa_92;
            this.transition = dfa_93;
        }
        public String getDescription() {
            return "()* loopback of 4621:6: ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA115_2 = input.LA(1);

                         
                        int index115_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA115_2 == 209 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {s = 10;}

                        else if ( LA115_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 11;}

                        else if ( LA115_2 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 12;}

                        else if ( LA115_2 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 13;}

                        else if ( LA115_2 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 14;}

                        else if ( LA115_2 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 15;}

                        else if ( LA115_2 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {s = 16;}

                         
                        input.seek(index115_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA115_0 = input.LA(1);

                         
                        int index115_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA115_0==20||LA115_0==42||LA115_0==103) ) {s = 1;}

                        else if ( (LA115_0==31) ) {s = 2;}

                        else if ( LA115_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {s = 3;}

                        else if ( LA115_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {s = 4;}

                        else if ( LA115_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {s = 5;}

                        else if ( LA115_0 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {s = 6;}

                        else if ( LA115_0 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {s = 7;}

                        else if ( LA115_0 == 100 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {s = 8;}

                        else if ( LA115_0 == 102 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {s = 9;}

                         
                        input.seek(index115_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 115, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_94s = "\12\uffff";
    static final String dfa_95s = "\1\uffff\3\5\3\uffff\3\5";
    static final String dfa_96s = "\5\4\2\uffff\3\4";
    static final String dfa_97s = "\1\13\3\u009c\1\13\2\uffff\3\u009c";
    static final String dfa_98s = "\5\uffff\1\1\1\2\3\uffff";
    static final String dfa_99s = "\12\uffff}>";
    static final String[] dfa_100s = {
            "\1\2\1\1\5\uffff\1\3",
            "\3\5\2\uffff\1\5\1\uffff\1\5\10\uffff\1\5\4\uffff\1\5\1\uffff\1\5\3\uffff\3\5\3\uffff\2\5\2\uffff\2\5\1\uffff\2\5\10\uffff\3\5\5\uffff\6\5\1\uffff\1\5\14\uffff\1\6\25\uffff\1\5\1\uffff\2\5\1\4\23\uffff\2\5\7\uffff\2\5\1\uffff\21\5",
            "\3\5\2\uffff\1\5\1\uffff\1\5\10\uffff\1\5\4\uffff\1\5\1\uffff\1\5\3\uffff\3\5\3\uffff\2\5\2\uffff\2\5\1\uffff\2\5\10\uffff\3\5\5\uffff\6\5\1\uffff\1\5\14\uffff\1\6\25\uffff\1\5\1\uffff\2\5\1\4\23\uffff\2\5\7\uffff\2\5\1\uffff\21\5",
            "\3\5\2\uffff\1\5\1\uffff\1\5\10\uffff\1\5\4\uffff\1\5\1\uffff\1\5\3\uffff\3\5\3\uffff\2\5\2\uffff\2\5\1\uffff\2\5\10\uffff\3\5\5\uffff\6\5\1\uffff\1\5\14\uffff\1\6\25\uffff\1\5\1\uffff\2\5\1\4\23\uffff\2\5\7\uffff\2\5\1\uffff\21\5",
            "\1\10\1\7\5\uffff\1\11",
            "",
            "",
            "\3\5\2\uffff\1\5\1\uffff\1\5\10\uffff\1\5\4\uffff\1\5\1\uffff\1\5\3\uffff\3\5\3\uffff\2\5\2\uffff\2\5\1\uffff\2\5\10\uffff\3\5\5\uffff\6\5\1\uffff\1\5\14\uffff\1\6\25\uffff\1\5\1\uffff\2\5\1\4\23\uffff\2\5\7\uffff\2\5\1\uffff\21\5",
            "\3\5\2\uffff\1\5\1\uffff\1\5\10\uffff\1\5\4\uffff\1\5\1\uffff\1\5\3\uffff\3\5\3\uffff\2\5\2\uffff\2\5\1\uffff\2\5\10\uffff\3\5\5\uffff\6\5\1\uffff\1\5\14\uffff\1\6\25\uffff\1\5\1\uffff\2\5\1\4\23\uffff\2\5\7\uffff\2\5\1\uffff\21\5",
            "\3\5\2\uffff\1\5\1\uffff\1\5\10\uffff\1\5\4\uffff\1\5\1\uffff\1\5\3\uffff\3\5\3\uffff\2\5\2\uffff\2\5\1\uffff\2\5\10\uffff\3\5\5\uffff\6\5\1\uffff\1\5\14\uffff\1\6\25\uffff\1\5\1\uffff\2\5\1\4\23\uffff\2\5\7\uffff\2\5\1\uffff\21\5"
    };

    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final short[] dfa_95 = DFA.unpackEncodedString(dfa_95s);
    static final char[] dfa_96 = DFA.unpackEncodedStringToUnsignedChars(dfa_96s);
    static final char[] dfa_97 = DFA.unpackEncodedStringToUnsignedChars(dfa_97s);
    static final short[] dfa_98 = DFA.unpackEncodedString(dfa_98s);
    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final short[][] dfa_100 = unpackEncodedStringArray(dfa_100s);

    class DFA123 extends DFA {

        public DFA123(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 123;
            this.eot = dfa_94;
            this.eof = dfa_95;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "5445:4: (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp )";
        }
    }

    class DFA124 extends DFA {

        public DFA124(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 124;
            this.eot = dfa_94;
            this.eof = dfa_95;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "5474:5: (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp )";
        }
    }
    static final String dfa_101s = "\40\uffff";
    static final String dfa_102s = "\1\1\37\uffff";
    static final String dfa_103s = "\1\4\37\uffff";
    static final String dfa_104s = "\1\u009c\37\uffff";
    static final String dfa_105s = "\1\uffff\1\4\34\1\1\2\1\3";
    static final String dfa_106s = "\1\0\37\uffff}>";
    static final String[] dfa_107s = {
            "\1\4\1\3\1\6\2\uffff\1\7\1\uffff\1\5\10\uffff\1\1\12\uffff\1\36\6\uffff\1\35\2\uffff\1\1\1\37\75\uffff\1\2\27\uffff\1\12\1\13\7\uffff\1\10\1\11\1\uffff\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_101 = DFA.unpackEncodedString(dfa_101s);
    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final char[] dfa_103 = DFA.unpackEncodedStringToUnsignedChars(dfa_103s);
    static final char[] dfa_104 = DFA.unpackEncodedStringToUnsignedChars(dfa_104s);
    static final short[] dfa_105 = DFA.unpackEncodedString(dfa_105s);
    static final short[] dfa_106 = DFA.unpackEncodedString(dfa_106s);
    static final short[][] dfa_107 = unpackEncodedStringArray(dfa_107s);

    class DFA144 extends DFA {

        public DFA144(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 144;
            this.eot = dfa_101;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_106;
            this.transition = dfa_107;
        }
        public String getDescription() {
            return "()+ loopback of 5775:5: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA144_0 = input.LA(1);

                         
                        int index144_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA144_0==EOF||LA144_0==20||LA144_0==41) ) {s = 1;}

                        else if ( LA144_0 == 104 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 2;}

                        else if ( LA144_0 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 3;}

                        else if ( LA144_0 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 4;}

                        else if ( LA144_0 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 5;}

                        else if ( LA144_0 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 6;}

                        else if ( LA144_0 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 7;}

                        else if ( LA144_0 == 137 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 8;}

                        else if ( LA144_0 == 138 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 9;}

                        else if ( LA144_0 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 10;}

                        else if ( LA144_0 == 129 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 11;}

                        else if ( LA144_0 == 140 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 12;}

                        else if ( LA144_0 == 141 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 13;}

                        else if ( LA144_0 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 14;}

                        else if ( LA144_0 == 143 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 15;}

                        else if ( LA144_0 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 16;}

                        else if ( LA144_0 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 17;}

                        else if ( LA144_0 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 18;}

                        else if ( LA144_0 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 19;}

                        else if ( LA144_0 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 20;}

                        else if ( LA144_0 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 21;}

                        else if ( LA144_0 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 22;}

                        else if ( LA144_0 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 23;}

                        else if ( LA144_0 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 24;}

                        else if ( LA144_0 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 25;}

                        else if ( LA144_0 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 26;}

                        else if ( LA144_0 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 27;}

                        else if ( LA144_0 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 28;}

                        else if ( LA144_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( LA144_0 == 31 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 30;}

                        else if ( LA144_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2) ) {s = 31;}

                         
                        input.seek(index144_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 144, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_108s = "\16\uffff";
    static final String dfa_109s = "\1\4\1\uffff\1\31\1\151\1\31\1\4\1\uffff\3\4\1\31\3\151";
    static final String dfa_110s = "\1\u009c\1\uffff\3\154\1\u009c\1\uffff\3\13\4\154";
    static final String dfa_111s = "\1\uffff\1\1\4\uffff\1\2\7\uffff";
    static final String dfa_112s = "\16\uffff}>";
    static final String[] dfa_113s = {
            "\1\3\1\2\1\1\2\uffff\1\5\1\uffff\1\4\32\uffff\1\6\101\uffff\1\1\27\uffff\2\6\7\uffff\2\6\1\uffff\21\6",
            "",
            "\1\1\33\uffff\1\1\63\uffff\1\10\1\uffff\1\1\1\7",
            "\1\10\2\uffff\1\11",
            "\1\1\33\uffff\1\1\63\uffff\1\10\1\uffff\1\1\1\7",
            "\2\6\3\uffff\1\6\1\uffff\1\6\15\uffff\1\1\14\uffff\1\6\16\uffff\1\1\17\uffff\1\6\34\uffff\1\6\10\uffff\2\1\7\uffff\1\6\2\uffff\13\6\7\uffff\24\6",
            "",
            "\1\13\1\12\5\uffff\1\14",
            "\2\1\3\uffff\1\6\1\uffff\1\1",
            "\1\13\1\15\5\uffff\1\14",
            "\1\1\33\uffff\1\1\63\uffff\1\10\2\uffff\1\11",
            "\1\10\2\uffff\1\11",
            "\1\10\2\uffff\1\11",
            "\1\10\2\uffff\1\11"
    };

    static final short[] dfa_108 = DFA.unpackEncodedString(dfa_108s);
    static final char[] dfa_109 = DFA.unpackEncodedStringToUnsignedChars(dfa_109s);
    static final char[] dfa_110 = DFA.unpackEncodedStringToUnsignedChars(dfa_110s);
    static final short[] dfa_111 = DFA.unpackEncodedString(dfa_111s);
    static final short[] dfa_112 = DFA.unpackEncodedString(dfa_112s);
    static final short[][] dfa_113 = unpackEncodedStringArray(dfa_113s);

    class DFA135 extends DFA {

        public DFA135(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 135;
            this.eot = dfa_108;
            this.eof = dfa_108;
            this.min = dfa_109;
            this.max = dfa_110;
            this.accept = dfa_111;
            this.special = dfa_112;
            this.transition = dfa_113;
        }
        public String getDescription() {
            return "5781:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?";
        }
    }
    static final String dfa_114s = "\14\uffff";
    static final String dfa_115s = "\1\4\13\uffff";
    static final String dfa_116s = "\1\4\1\31\1\46\1\31\1\uffff\1\4\1\uffff\1\4\1\31\3\46";
    static final String dfa_117s = "\1\u009c\3\154\1\uffff\1\13\1\uffff\1\13\4\154";
    static final String dfa_118s = "\4\uffff\1\2\1\uffff\1\1\5\uffff";
    static final String dfa_119s = "\14\uffff}>";
    static final String[] dfa_120s = {
            "\1\2\1\1\1\4\2\uffff\1\4\1\uffff\1\3\10\uffff\1\4\12\uffff\1\4\6\uffff\1\4\2\uffff\2\4\75\uffff\1\4\27\uffff\2\4\7\uffff\2\4\1\uffff\21\4",
            "\1\4\14\uffff\1\6\16\uffff\1\4\63\uffff\1\4\1\uffff\1\4\1\5",
            "\1\6\102\uffff\1\4\2\uffff\1\7",
            "\1\4\14\uffff\1\6\16\uffff\1\4\63\uffff\1\4\1\uffff\1\4\1\5",
            "",
            "\1\11\1\10\5\uffff\1\12",
            "",
            "\1\11\1\13\5\uffff\1\12",
            "\1\4\14\uffff\1\6\16\uffff\1\4\63\uffff\1\4\2\uffff\1\7",
            "\1\6\102\uffff\1\4\2\uffff\1\7",
            "\1\6\102\uffff\1\4\2\uffff\1\7",
            "\1\6\102\uffff\1\4\2\uffff\1\7"
    };

    static final short[] dfa_114 = DFA.unpackEncodedString(dfa_114s);
    static final short[] dfa_115 = DFA.unpackEncodedString(dfa_115s);
    static final char[] dfa_116 = DFA.unpackEncodedStringToUnsignedChars(dfa_116s);
    static final char[] dfa_117 = DFA.unpackEncodedStringToUnsignedChars(dfa_117s);
    static final short[] dfa_118 = DFA.unpackEncodedString(dfa_118s);
    static final short[] dfa_119 = DFA.unpackEncodedString(dfa_119s);
    static final short[][] dfa_120 = unpackEncodedStringArray(dfa_120s);

    class DFA143 extends DFA {

        public DFA143(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 143;
            this.eot = dfa_114;
            this.eof = dfa_115;
            this.min = dfa_116;
            this.max = dfa_117;
            this.accept = dfa_118;
            this.special = dfa_119;
            this.transition = dfa_120;
        }
        public String getDescription() {
            return "6077:8: ( (lv_accessor_24_0= ruleFunction ) )?";
        }
    }
    static final String dfa_121s = "\50\uffff";
    static final String dfa_122s = "\1\4\10\uffff\3\0\1\uffff\2\0\31\uffff";
    static final String dfa_123s = "\1\u00f7\10\uffff\3\0\1\uffff\2\0\31\uffff";
    static final String dfa_124s = "\1\uffff\1\1\20\uffff\1\2\25\uffff";
    static final String dfa_125s = "\11\uffff\1\0\1\1\1\2\1\uffff\1\3\1\4\31\uffff}>";
    static final String[] dfa_126s = {
            "\1\12\1\11\1\1\1\uffff\1\1\1\15\1\1\1\13\1\1\16\uffff\3\1\10\uffff\1\16\12\uffff\2\1\75\uffff\1\22\17\uffff\2\22\7\uffff\2\22\1\uffff\21\22\64\uffff\1\1\44\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_121 = DFA.unpackEncodedString(dfa_121s);
    static final char[] dfa_122 = DFA.unpackEncodedStringToUnsignedChars(dfa_122s);
    static final char[] dfa_123 = DFA.unpackEncodedStringToUnsignedChars(dfa_123s);
    static final short[] dfa_124 = DFA.unpackEncodedString(dfa_124s);
    static final short[] dfa_125 = DFA.unpackEncodedString(dfa_125s);
    static final short[][] dfa_126 = unpackEncodedStringArray(dfa_126s);

    class DFA145 extends DFA {

        public DFA145(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 145;
            this.eot = dfa_121;
            this.eof = dfa_121;
            this.min = dfa_122;
            this.max = dfa_123;
            this.accept = dfa_124;
            this.special = dfa_125;
            this.transition = dfa_126;
        }
        public String getDescription() {
            return "6175:3: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA145_9 = input.LA(1);

                         
                        int index145_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred251_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index145_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA145_10 = input.LA(1);

                         
                        int index145_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred251_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index145_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA145_11 = input.LA(1);

                         
                        int index145_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred251_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index145_11);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA145_13 = input.LA(1);

                         
                        int index145_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred251_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index145_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA145_14 = input.LA(1);

                         
                        int index145_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred251_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index145_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 145, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_127s = "\u009f\uffff";
    static final String dfa_128s = "\1\1\40\uffff\1\1\26\uffff\1\74\146\uffff";
    static final String dfa_129s = "\1\4\1\uffff\2\4\35\uffff\1\4\2\46\24\uffff\1\4\1\uffff\1\4\1\11\137\uffff\3\46\1\0";
    static final String dfa_130s = "\1\u00f7\1\uffff\1\u00f7\1\13\35\uffff\1\u009c\2\154\24\uffff\1\u00f7\1\uffff\1\13\1\11\137\uffff\3\154\1\0";
    static final String dfa_131s = "\1\uffff\1\7\2\uffff\1\1\2\2\17\3\2\4\3\5\6\3\3\uffff\24\3\1\uffff\1\6\2\uffff\137\6\4\uffff";
    static final String dfa_132s = "\1\0\1\uffff\1\1\1\4\64\uffff\1\2\145\uffff\1\3}>";
    static final String[] dfa_133s = {
            "\3\1\2\uffff\1\1\1\32\1\1\2\uffff\1\1\5\uffff\1\1\6\uffff\1\1\2\uffff\2\1\3\uffff\1\4\2\uffff\1\1\2\uffff\2\1\5\uffff\1\5\5\uffff\1\1\1\2\1\1\5\uffff\6\1\10\uffff\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\17\uffff\1\1\6\uffff\1\1\1\uffff\1\6\1\26\1\27\1\3\1\24\1\25\11\uffff\2\1\7\uffff\2\1\1\uffff\21\1\14\uffff\2\1\2\uffff\3\1\1\uffff\11\1\2\uffff\13\1\57\uffff\1\30\1\31",
            "",
            "\1\42\1\41\3\uffff\1\40\1\35\1\43\32\uffff\1\67\131\uffff\1\44\1\45\7\uffff\1\36\1\37\1\uffff\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\131\uffff\1\33\1\34",
            "\1\1\1\70\1\71\4\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\3\1\2\uffff\1\1\1\uffff\1\1\10\uffff\1\1\6\uffff\1\1\3\uffff\1\1\6\uffff\1\1\2\uffff\2\1\13\uffff\3\1\5\uffff\6\1\44\uffff\1\1\1\73\2\uffff\1\72\23\uffff\2\1\7\uffff\2\1\1\uffff\21\1",
            "\1\1\102\uffff\1\73\2\uffff\1\72",
            "\1\1\102\uffff\1\73\2\uffff\1\72",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\113\1\112\1\115\2\uffff\1\116\1\u009a\1\114\2\uffff\1\u0082\5\uffff\1\107\6\uffff\1\75\2\uffff\1\147\1\145\3\uffff\1\u0084\2\uffff\1\144\2\uffff\1\110\1\146\5\uffff\1\u0085\5\uffff\1\76\1\77\1\100\5\uffff\1\101\1\102\1\103\1\104\1\105\1\106\10\uffff\1\u0087\1\u0088\1\u0089\1\u008a\1\u008b\1\u008c\1\u008d\1\u008e\1\u008f\1\u0090\1\u0091\1\u0092\1\u0093\17\uffff\1\111\1\1\2\uffff\1\1\2\uffff\1\150\1\uffff\1\u0086\1\u0096\1\u0097\1\151\1\u0094\1\u0095\11\uffff\1\121\1\122\7\uffff\1\117\1\120\1\uffff\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135\1\136\1\137\1\140\1\141\1\142\1\143\14\uffff\1\152\1\153\2\uffff\1\154\1\155\1\156\1\uffff\1\157\1\160\1\161\1\162\1\163\1\164\1\165\1\166\1\167\2\uffff\1\170\1\171\1\172\1\173\1\174\1\175\1\176\1\177\1\u0080\1\u0081\1\u0083\57\uffff\1\u0098\1\u0099",
            "",
            "\1\u009c\1\u009b\5\uffff\1\u009d",
            "\1\u009e",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\1\102\uffff\1\73\2\uffff\1\72",
            "\1\1\102\uffff\1\73\2\uffff\1\72",
            "\1\1\102\uffff\1\73\2\uffff\1\72",
            "\1\uffff"
    };

    static final short[] dfa_127 = DFA.unpackEncodedString(dfa_127s);
    static final short[] dfa_128 = DFA.unpackEncodedString(dfa_128s);
    static final char[] dfa_129 = DFA.unpackEncodedStringToUnsignedChars(dfa_129s);
    static final char[] dfa_130 = DFA.unpackEncodedStringToUnsignedChars(dfa_130s);
    static final short[] dfa_131 = DFA.unpackEncodedString(dfa_131s);
    static final short[] dfa_132 = DFA.unpackEncodedString(dfa_132s);
    static final short[][] dfa_133 = unpackEncodedStringArray(dfa_133s);

    class DFA152 extends DFA {

        public DFA152(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 152;
            this.eot = dfa_127;
            this.eof = dfa_128;
            this.min = dfa_129;
            this.max = dfa_130;
            this.accept = dfa_131;
            this.special = dfa_132;
            this.transition = dfa_133;
        }
        public String getDescription() {
            return "()* loopback of 6239:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA152_0 = input.LA(1);

                         
                        int index152_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA152_0==EOF||(LA152_0>=RULE_UPPERCASE_ID && LA152_0<=RULE_STRING)||LA152_0==RULE_CAMELCASE_ID||LA152_0==RULE_LOWERCASE_DASHID||LA152_0==RULE_BACKCASE_ID||LA152_0==20||LA152_0==27||(LA152_0>=30 && LA152_0<=31)||LA152_0==38||(LA152_0>=41 && LA152_0<=42)||LA152_0==54||LA152_0==56||(LA152_0>=62 && LA152_0<=67)||LA152_0==104||LA152_0==111||(LA152_0>=128 && LA152_0<=129)||(LA152_0>=137 && LA152_0<=138)||(LA152_0>=140 && LA152_0<=156)||(LA152_0>=169 && LA152_0<=170)||(LA152_0>=173 && LA152_0<=175)||(LA152_0>=177 && LA152_0<=185)||(LA152_0>=188 && LA152_0<=198)) ) {s = 1;}

                        else if ( (LA152_0==55) ) {s = 2;}

                        else if ( (LA152_0==116) ) {s = 3;}

                        else if ( LA152_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {s = 4;}

                        else if ( LA152_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 5;}

                        else if ( LA152_0 == 113 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 6;}

                        else if ( LA152_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 7;}

                        else if ( LA152_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 8;}

                        else if ( LA152_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 9;}

                        else if ( LA152_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 10;}

                        else if ( LA152_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 11;}

                        else if ( LA152_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 12;}

                        else if ( LA152_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 13;}

                        else if ( LA152_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 14;}

                        else if ( LA152_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 15;}

                        else if ( LA152_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 16;}

                        else if ( LA152_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 17;}

                        else if ( LA152_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 18;}

                        else if ( LA152_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 19;}

                        else if ( LA152_0 == 117 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 20;}

                        else if ( LA152_0 == 118 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 21;}

                        else if ( LA152_0 == 114 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 22;}

                        else if ( LA152_0 == 115 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 23;}

                        else if ( LA152_0 == 246 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 24;}

                        else if ( LA152_0 == 247 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 25;}

                        else if ( LA152_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 26;}

                         
                        input.seek(index152_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA152_2 = input.LA(1);

                         
                        int index152_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA152_2 == 246 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 27;}

                        else if ( LA152_2 == 247 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 28;}

                        else if ( LA152_2 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 29;}

                        else if ( LA152_2 == 137 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 30;}

                        else if ( LA152_2 == 138 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 31;}

                        else if ( LA152_2 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 32;}

                        else if ( (LA152_2==RULE_LOWERCASE_ID) ) {s = 33;}

                        else if ( (LA152_2==RULE_UPPERCASE_ID) ) {s = 34;}

                        else if ( (LA152_2==RULE_LOWERCASE_DASHID) ) {s = 35;}

                        else if ( LA152_2 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 36;}

                        else if ( LA152_2 == 129 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 37;}

                        else if ( LA152_2 == 140 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 38;}

                        else if ( LA152_2 == 141 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 39;}

                        else if ( LA152_2 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 40;}

                        else if ( LA152_2 == 143 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 41;}

                        else if ( LA152_2 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 42;}

                        else if ( LA152_2 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 43;}

                        else if ( LA152_2 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 44;}

                        else if ( LA152_2 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 45;}

                        else if ( LA152_2 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 46;}

                        else if ( LA152_2 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 47;}

                        else if ( LA152_2 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 48;}

                        else if ( LA152_2 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 49;}

                        else if ( LA152_2 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 50;}

                        else if ( LA152_2 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 51;}

                        else if ( LA152_2 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 52;}

                        else if ( LA152_2 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 53;}

                        else if ( LA152_2 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 54;}

                        else if ( LA152_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 55;}

                         
                        input.seek(index152_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA152_56 = input.LA(1);

                         
                        int index152_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA152_56==105||LA152_56==108) ) {s = 1;}

                        else if ( LA152_56 == EOF && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 60;}

                        else if ( LA152_56 == 27 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 61;}

                        else if ( LA152_56 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 62;}

                        else if ( LA152_56 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 63;}

                        else if ( LA152_56 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 64;}

                        else if ( LA152_56 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 65;}

                        else if ( LA152_56 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 66;}

                        else if ( LA152_56 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 67;}

                        else if ( LA152_56 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 68;}

                        else if ( LA152_56 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 69;}

                        else if ( LA152_56 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 70;}

                        else if ( LA152_56 == 20 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 71;}

                        else if ( LA152_56 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 72;}

                        else if ( LA152_56 == 104 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 73;}

                        else if ( LA152_56 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 74;}

                        else if ( LA152_56 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 75;}

                        else if ( LA152_56 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 76;}

                        else if ( LA152_56 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 77;}

                        else if ( LA152_56 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 78;}

                        else if ( LA152_56 == 137 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 79;}

                        else if ( LA152_56 == 138 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 80;}

                        else if ( LA152_56 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 81;}

                        else if ( LA152_56 == 129 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 82;}

                        else if ( LA152_56 == 140 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 83;}

                        else if ( LA152_56 == 141 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 84;}

                        else if ( LA152_56 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 85;}

                        else if ( LA152_56 == 143 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 86;}

                        else if ( LA152_56 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 87;}

                        else if ( LA152_56 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 88;}

                        else if ( LA152_56 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 89;}

                        else if ( LA152_56 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 90;}

                        else if ( LA152_56 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 91;}

                        else if ( LA152_56 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 92;}

                        else if ( LA152_56 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 93;}

                        else if ( LA152_56 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 94;}

                        else if ( LA152_56 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 95;}

                        else if ( LA152_56 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 96;}

                        else if ( LA152_56 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 97;}

                        else if ( LA152_56 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 98;}

                        else if ( LA152_56 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 99;}

                        else if ( LA152_56 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 100;}

                        else if ( LA152_56 == 31 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 101;}

                        else if ( LA152_56 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 102;}

                        else if ( LA152_56 == 30 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 103;}

                        else if ( LA152_56 == 111 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 104;}

                        else if ( LA152_56 == 116 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 105;}

                        else if ( LA152_56 == 169 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 106;}

                        else if ( LA152_56 == 170 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 107;}

                        else if ( LA152_56 == 173 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 108;}

                        else if ( LA152_56 == 174 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 109;}

                        else if ( LA152_56 == 175 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 110;}

                        else if ( LA152_56 == 177 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 111;}

                        else if ( LA152_56 == 178 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 112;}

                        else if ( LA152_56 == 179 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 113;}

                        else if ( LA152_56 == 180 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 114;}

                        else if ( LA152_56 == 181 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 115;}

                        else if ( LA152_56 == 182 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 116;}

                        else if ( LA152_56 == 183 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 117;}

                        else if ( LA152_56 == 184 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 118;}

                        else if ( LA152_56 == 185 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 119;}

                        else if ( LA152_56 == 188 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 120;}

                        else if ( LA152_56 == 189 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 121;}

                        else if ( LA152_56 == 190 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 122;}

                        else if ( LA152_56 == 191 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 123;}

                        else if ( LA152_56 == 192 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 124;}

                        else if ( LA152_56 == 193 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 125;}

                        else if ( LA152_56 == 194 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 126;}

                        else if ( LA152_56 == 195 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 127;}

                        else if ( LA152_56 == 196 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 128;}

                        else if ( LA152_56 == 197 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 129;}

                        else if ( LA152_56 == RULE_BACKCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 130;}

                        else if ( LA152_56 == 198 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 131;}

                        else if ( LA152_56 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 132;}

                        else if ( LA152_56 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 133;}

                        else if ( LA152_56 == 113 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 134;}

                        else if ( LA152_56 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 135;}

                        else if ( LA152_56 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 136;}

                        else if ( LA152_56 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 137;}

                        else if ( LA152_56 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 138;}

                        else if ( LA152_56 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 139;}

                        else if ( LA152_56 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 140;}

                        else if ( LA152_56 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 141;}

                        else if ( LA152_56 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 142;}

                        else if ( LA152_56 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 143;}

                        else if ( LA152_56 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 144;}

                        else if ( LA152_56 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 145;}

                        else if ( LA152_56 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 146;}

                        else if ( LA152_56 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 147;}

                        else if ( LA152_56 == 117 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 148;}

                        else if ( LA152_56 == 118 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 149;}

                        else if ( LA152_56 == 114 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 150;}

                        else if ( LA152_56 == 115 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 151;}

                        else if ( LA152_56 == 246 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 152;}

                        else if ( LA152_56 == 247 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 153;}

                        else if ( LA152_56 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 154;}

                         
                        input.seek(index152_56);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA152_158 = input.LA(1);

                         
                        int index152_158 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred258_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index152_158);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA152_3 = input.LA(1);

                         
                        int index152_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA152_3==RULE_LOWERCASE_ID) ) {s = 56;}

                        else if ( LA152_3 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 57;}

                        else if ( (LA152_3==RULE_UPPERCASE_ID||LA152_3==RULE_LOWERCASE_DASHID) ) {s = 1;}

                         
                        input.seek(index152_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 152, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_134s = "\141\uffff";
    static final String dfa_135s = "\1\1\140\uffff";
    static final String dfa_136s = "\1\4\3\uffff\1\0\107\uffff\17\0\6\uffff";
    static final String dfa_137s = "\1\u00f7\3\uffff\1\0\107\uffff\17\0\6\uffff";
    static final String dfa_138s = "\1\uffff\1\2\136\uffff\1\1";
    static final String dfa_139s = "\4\uffff\1\0\107\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\6\uffff}>";
    static final String[] dfa_140s = {
            "\3\1\2\uffff\3\1\2\uffff\1\1\5\uffff\1\1\6\uffff\1\1\2\uffff\2\1\3\uffff\1\1\2\uffff\1\1\2\uffff\2\1\5\uffff\1\1\5\uffff\1\1\1\4\1\1\5\uffff\6\1\10\uffff\1\114\1\115\1\116\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\17\uffff\1\1\6\uffff\1\1\1\uffff\4\1\1\131\1\132\11\uffff\2\1\7\uffff\2\1\1\uffff\21\1\14\uffff\2\1\2\uffff\3\1\1\uffff\11\1\2\uffff\13\1\57\uffff\2\1",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_134 = DFA.unpackEncodedString(dfa_134s);
    static final short[] dfa_135 = DFA.unpackEncodedString(dfa_135s);
    static final char[] dfa_136 = DFA.unpackEncodedStringToUnsignedChars(dfa_136s);
    static final char[] dfa_137 = DFA.unpackEncodedStringToUnsignedChars(dfa_137s);
    static final short[] dfa_138 = DFA.unpackEncodedString(dfa_138s);
    static final short[] dfa_139 = DFA.unpackEncodedString(dfa_139s);
    static final short[][] dfa_140 = unpackEncodedStringArray(dfa_140s);

    class DFA149 extends DFA {

        public DFA149(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 149;
            this.eot = dfa_134;
            this.eof = dfa_135;
            this.min = dfa_136;
            this.max = dfa_137;
            this.accept = dfa_138;
            this.special = dfa_139;
            this.transition = dfa_140;
        }
        public String getDescription() {
            return "()* loopback of 6386:9: ( (lv_valueOperators_14_0= ruleValueOperator ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA149_4 = input.LA(1);

                         
                        int index149_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred257_InternalKim()) ) {s = 96;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index149_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA149_76 = input.LA(1);

                         
                        int index149_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred257_InternalKim()) ) {s = 96;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index149_76);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA149_77 = input.LA(1);

                         
                        int index149_77 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred257_InternalKim()) ) {s = 96;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index149_77);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA149_78 = input.LA(1);

                         
                        int index149_78 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred257_InternalKim()) ) {s = 96;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index149_78);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA149_79 = input.LA(1);

                         
                        int index149_79 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred257_InternalKim()) ) {s = 96;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index149_79);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA149_80 = input.LA(1);

                         
                        int index149_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred257_InternalKim()) ) {s = 96;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index149_80);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA149_81 = input.LA(1);

                         
                        int index149_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred257_InternalKim()) ) {s = 96;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index149_81);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA149_82 = input.LA(1);

                         
                        int index149_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred257_InternalKim()) ) {s = 96;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index149_82);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA149_83 = input.LA(1);

                         
                        int index149_83 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred257_InternalKim()) ) {s = 96;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index149_83);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA149_84 = input.LA(1);

                         
                        int index149_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred257_InternalKim()) ) {s = 96;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index149_84);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA149_85 = input.LA(1);

                         
                        int index149_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred257_InternalKim()) ) {s = 96;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index149_85);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA149_86 = input.LA(1);

                         
                        int index149_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred257_InternalKim()) ) {s = 96;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index149_86);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA149_87 = input.LA(1);

                         
                        int index149_87 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred257_InternalKim()) ) {s = 96;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index149_87);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA149_88 = input.LA(1);

                         
                        int index149_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred257_InternalKim()) ) {s = 96;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index149_88);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA149_89 = input.LA(1);

                         
                        int index149_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred257_InternalKim()) ) {s = 96;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index149_89);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA149_90 = input.LA(1);

                         
                        int index149_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred257_InternalKim()) ) {s = 96;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index149_90);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 149, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_141s = "\41\uffff";
    static final String dfa_142s = "\1\4\3\0\31\uffff\1\0\3\uffff";
    static final String dfa_143s = "\1\u00f7\3\0\31\uffff\1\0\3\uffff";
    static final String dfa_144s = "\4\uffff\1\3\31\uffff\1\1\1\2\1\4";
    static final String dfa_145s = "\1\uffff\1\0\1\1\1\2\31\uffff\1\3\3\uffff}>";
    static final String[] dfa_146s = {
            "\2\4\3\uffff\1\4\1\3\1\4\32\uffff\1\35\131\uffff\2\4\7\uffff\2\4\1\uffff\21\4\131\uffff\1\1\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_141 = DFA.unpackEncodedString(dfa_141s);
    static final char[] dfa_142 = DFA.unpackEncodedStringToUnsignedChars(dfa_142s);
    static final char[] dfa_143 = DFA.unpackEncodedStringToUnsignedChars(dfa_143s);
    static final short[] dfa_144 = DFA.unpackEncodedString(dfa_144s);
    static final short[] dfa_145 = DFA.unpackEncodedString(dfa_145s);
    static final short[][] dfa_146 = unpackEncodedStringArray(dfa_146s);

    class DFA154 extends DFA {

        public DFA154(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 154;
            this.eot = dfa_141;
            this.eof = dfa_141;
            this.min = dfa_142;
            this.max = dfa_143;
            this.accept = dfa_144;
            this.special = dfa_145;
            this.transition = dfa_146;
        }
        public String getDescription() {
            return "6616:4: ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA154_1 = input.LA(1);

                         
                        int index154_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 30;}

                        else if ( (synpred266_InternalKim()) ) {s = 31;}

                         
                        input.seek(index154_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA154_2 = input.LA(1);

                         
                        int index154_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 30;}

                        else if ( (synpred266_InternalKim()) ) {s = 31;}

                         
                        input.seek(index154_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA154_3 = input.LA(1);

                         
                        int index154_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 30;}

                        else if ( (synpred266_InternalKim()) ) {s = 31;}

                         
                        input.seek(index154_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA154_29 = input.LA(1);

                         
                        int index154_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred267_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index154_29);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 154, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA157 extends DFA {

        public DFA157(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 157;
            this.eot = dfa_121;
            this.eof = dfa_121;
            this.min = dfa_122;
            this.max = dfa_123;
            this.accept = dfa_124;
            this.special = dfa_125;
            this.transition = dfa_126;
        }
        public String getDescription() {
            return "6771:3: ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA157_9 = input.LA(1);

                         
                        int index157_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index157_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA157_10 = input.LA(1);

                         
                        int index157_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index157_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA157_11 = input.LA(1);

                         
                        int index157_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index157_11);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA157_13 = input.LA(1);

                         
                        int index157_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index157_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA157_14 = input.LA(1);

                         
                        int index157_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index157_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 157, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_147s = "\76\uffff";
    static final String dfa_148s = "\1\1\40\uffff\1\1\34\uffff";
    static final String dfa_149s = "\1\6\1\uffff\1\4\36\uffff\1\24\2\46\24\uffff\1\4\1\11\3\46\1\0";
    static final String dfa_150s = "\1\u00f7\1\uffff\1\u00f7\36\uffff\3\154\24\uffff\1\13\1\11\3\154\1\0";
    static final String dfa_151s = "\1\uffff\1\7\1\uffff\1\1\2\2\17\3\2\4\3\5\1\6\6\3\3\uffff\24\3\6\uffff";
    static final String dfa_152s = "\1\2\1\uffff\1\1\72\uffff\1\0}>";
    static final String[] dfa_153s = {
            "\1\1\3\uffff\1\31\11\uffff\1\1\6\uffff\1\1\2\uffff\4\1\1\uffff\1\3\1\uffff\1\1\4\uffff\1\1\5\uffff\1\4\5\uffff\1\1\1\2\1\1\5\uffff\6\1\10\uffff\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\30\uffff\1\5\1\25\1\26\1\32\1\23\1\24\177\uffff\1\27\1\30",
            "",
            "\1\42\1\41\3\uffff\1\40\1\35\1\43\32\uffff\1\67\131\uffff\1\44\1\45\7\uffff\1\36\1\37\1\uffff\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\131\uffff\1\33\1\34",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\1\6\uffff\1\1\12\uffff\1\1\3\uffff\1\1\13\uffff\3\1\5\uffff\6\1\45\uffff\1\71\2\uffff\1\70",
            "\1\1\102\uffff\1\71\2\uffff\1\70",
            "\1\1\102\uffff\1\71\2\uffff\1\70",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\73\1\72\5\uffff\1\74",
            "\1\75",
            "\1\1\102\uffff\1\71\2\uffff\1\70",
            "\1\1\102\uffff\1\71\2\uffff\1\70",
            "\1\1\102\uffff\1\71\2\uffff\1\70",
            "\1\uffff"
    };

    static final short[] dfa_147 = DFA.unpackEncodedString(dfa_147s);
    static final short[] dfa_148 = DFA.unpackEncodedString(dfa_148s);
    static final char[] dfa_149 = DFA.unpackEncodedStringToUnsignedChars(dfa_149s);
    static final char[] dfa_150 = DFA.unpackEncodedStringToUnsignedChars(dfa_150s);
    static final short[] dfa_151 = DFA.unpackEncodedString(dfa_151s);
    static final short[] dfa_152 = DFA.unpackEncodedString(dfa_152s);
    static final short[][] dfa_153 = unpackEncodedStringArray(dfa_153s);

    class DFA164 extends DFA {

        public DFA164(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 164;
            this.eot = dfa_147;
            this.eof = dfa_148;
            this.min = dfa_149;
            this.max = dfa_150;
            this.accept = dfa_151;
            this.special = dfa_152;
            this.transition = dfa_153;
        }
        public String getDescription() {
            return "()* loopback of 6835:6: ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA164_61 = input.LA(1);

                         
                        int index164_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred277_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index164_61);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA164_2 = input.LA(1);

                         
                        int index164_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA164_2 == 246 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 27;}

                        else if ( LA164_2 == 247 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 28;}

                        else if ( LA164_2 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 29;}

                        else if ( LA164_2 == 137 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 30;}

                        else if ( LA164_2 == 138 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 31;}

                        else if ( LA164_2 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 32;}

                        else if ( (LA164_2==RULE_LOWERCASE_ID) ) {s = 33;}

                        else if ( (LA164_2==RULE_UPPERCASE_ID) ) {s = 34;}

                        else if ( (LA164_2==RULE_LOWERCASE_DASHID) ) {s = 35;}

                        else if ( LA164_2 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 36;}

                        else if ( LA164_2 == 129 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 37;}

                        else if ( LA164_2 == 140 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 38;}

                        else if ( LA164_2 == 141 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 39;}

                        else if ( LA164_2 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 40;}

                        else if ( LA164_2 == 143 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 41;}

                        else if ( LA164_2 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 42;}

                        else if ( LA164_2 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 43;}

                        else if ( LA164_2 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 44;}

                        else if ( LA164_2 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 45;}

                        else if ( LA164_2 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 46;}

                        else if ( LA164_2 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 47;}

                        else if ( LA164_2 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 48;}

                        else if ( LA164_2 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 49;}

                        else if ( LA164_2 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 50;}

                        else if ( LA164_2 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 51;}

                        else if ( LA164_2 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 52;}

                        else if ( LA164_2 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 53;}

                        else if ( LA164_2 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 54;}

                        else if ( LA164_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 55;}

                         
                        input.seek(index164_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA164_0 = input.LA(1);

                         
                        int index164_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA164_0==EOF||LA164_0==RULE_STRING||LA164_0==20||LA164_0==27||(LA164_0>=30 && LA164_0<=33)||LA164_0==37||LA164_0==42||LA164_0==54||LA164_0==56||(LA164_0>=62 && LA164_0<=67)) ) {s = 1;}

                        else if ( (LA164_0==55) ) {s = 2;}

                        else if ( LA164_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0) ) {s = 3;}

                        else if ( LA164_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1) ) {s = 4;}

                        else if ( LA164_0 == 113 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1) ) {s = 5;}

                        else if ( LA164_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 6;}

                        else if ( LA164_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 7;}

                        else if ( LA164_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 8;}

                        else if ( LA164_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 9;}

                        else if ( LA164_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 10;}

                        else if ( LA164_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 11;}

                        else if ( LA164_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 12;}

                        else if ( LA164_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 13;}

                        else if ( LA164_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 14;}

                        else if ( LA164_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 15;}

                        else if ( LA164_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 16;}

                        else if ( LA164_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 17;}

                        else if ( LA164_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 18;}

                        else if ( LA164_0 == 117 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 19;}

                        else if ( LA164_0 == 118 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 20;}

                        else if ( LA164_0 == 114 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3) ) {s = 21;}

                        else if ( LA164_0 == 115 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3) ) {s = 22;}

                        else if ( LA164_0 == 246 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4) ) {s = 23;}

                        else if ( LA164_0 == 247 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4) ) {s = 24;}

                        else if ( LA164_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4) ) {s = 25;}

                        else if ( LA164_0 == 116 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5) ) {s = 26;}

                         
                        input.seek(index164_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 164, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_154s = "\1\1\54\uffff";
    static final String dfa_155s = "\1\6\10\uffff\1\0\15\uffff\17\0\7\uffff";
    static final String dfa_156s = "\1\u00f7\10\uffff\1\0\15\uffff\17\0\7\uffff";
    static final String dfa_157s = "\1\uffff\1\2\52\uffff\1\1";
    static final String dfa_158s = "\11\uffff\1\0\15\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\7\uffff}>";
    static final String[] dfa_159s = {
            "\1\1\3\uffff\1\1\11\uffff\1\1\6\uffff\1\1\2\uffff\4\1\1\uffff\1\1\1\uffff\1\1\4\uffff\1\1\5\uffff\1\1\5\uffff\1\1\1\11\1\1\5\uffff\6\1\10\uffff\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\30\uffff\4\1\1\44\1\45\177\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_154 = DFA.unpackEncodedString(dfa_154s);
    static final char[] dfa_155 = DFA.unpackEncodedStringToUnsignedChars(dfa_155s);
    static final char[] dfa_156 = DFA.unpackEncodedStringToUnsignedChars(dfa_156s);
    static final short[] dfa_157 = DFA.unpackEncodedString(dfa_157s);
    static final short[] dfa_158 = DFA.unpackEncodedString(dfa_158s);
    static final short[][] dfa_159 = unpackEncodedStringArray(dfa_159s);

    class DFA161 extends DFA {

        public DFA161(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 161;
            this.eot = dfa_26;
            this.eof = dfa_154;
            this.min = dfa_155;
            this.max = dfa_156;
            this.accept = dfa_157;
            this.special = dfa_158;
            this.transition = dfa_159;
        }
        public String getDescription() {
            return "()* loopback of 6982:9: ( (lv_valueOperators_15_0= ruleValueOperator ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA161_9 = input.LA(1);

                         
                        int index161_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA161_23 = input.LA(1);

                         
                        int index161_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_23);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA161_24 = input.LA(1);

                         
                        int index161_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_24);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA161_25 = input.LA(1);

                         
                        int index161_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_25);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA161_26 = input.LA(1);

                         
                        int index161_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_26);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA161_27 = input.LA(1);

                         
                        int index161_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_27);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA161_28 = input.LA(1);

                         
                        int index161_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_28);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA161_29 = input.LA(1);

                         
                        int index161_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_29);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA161_30 = input.LA(1);

                         
                        int index161_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_30);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA161_31 = input.LA(1);

                         
                        int index161_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_31);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA161_32 = input.LA(1);

                         
                        int index161_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_32);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA161_33 = input.LA(1);

                         
                        int index161_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_33);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA161_34 = input.LA(1);

                         
                        int index161_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_34);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA161_35 = input.LA(1);

                         
                        int index161_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_35);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA161_36 = input.LA(1);

                         
                        int index161_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_36);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA161_37 = input.LA(1);

                         
                        int index161_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_37);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 161, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_160s = "\45\uffff";
    static final String dfa_161s = "\1\4\40\uffff\1\0\3\uffff";
    static final String dfa_162s = "\1\u00f7\40\uffff\1\0\3\uffff";
    static final String dfa_163s = "\1\uffff\1\1\42\uffff\1\2";
    static final String dfa_164s = "\41\uffff\1\0\3\uffff}>";
    static final String[] dfa_165s = {
            "\3\1\1\uffff\4\1\20\uffff\2\1\10\uffff\1\41\101\uffff\1\1\7\uffff\1\1\3\uffff\1\44\13\uffff\2\1\7\uffff\2\1\1\uffff\21\1\131\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_160 = DFA.unpackEncodedString(dfa_160s);
    static final char[] dfa_161 = DFA.unpackEncodedStringToUnsignedChars(dfa_161s);
    static final char[] dfa_162 = DFA.unpackEncodedStringToUnsignedChars(dfa_162s);
    static final short[] dfa_163 = DFA.unpackEncodedString(dfa_163s);
    static final short[] dfa_164 = DFA.unpackEncodedString(dfa_164s);
    static final short[][] dfa_165 = unpackEncodedStringArray(dfa_165s);

    class DFA172 extends DFA {

        public DFA172(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 172;
            this.eot = dfa_160;
            this.eof = dfa_160;
            this.min = dfa_161;
            this.max = dfa_162;
            this.accept = dfa_163;
            this.special = dfa_164;
            this.transition = dfa_165;
        }
        public String getDescription() {
            return "7198:3: ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA172_33 = input.LA(1);

                         
                        int index172_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index172_33);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 172, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_166s = "\1\uffff\3\4\1\uffff\1\4\3\uffff\3\4";
    static final String dfa_167s = "\1\4\3\24\1\uffff\1\24\1\uffff\2\4\3\24";
    static final String dfa_168s = "\1\u00f7\3\154\1\uffff\1\103\1\uffff\2\13\3\154";
    static final String dfa_169s = "\4\uffff\1\1\1\uffff\1\2\5\uffff";
    static final String[] dfa_170s = {
            "\1\2\1\1\1\5\1\uffff\3\6\1\3\20\uffff\2\6\10\uffff\1\6\101\uffff\1\4\7\uffff\1\6\17\uffff\2\6\7\uffff\2\6\1\uffff\21\6\131\uffff\2\6",
            "\1\4\4\uffff\1\6\1\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\3\uffff\1\4\13\uffff\3\4\5\uffff\6\4\45\uffff\1\10\2\uffff\1\7",
            "\1\4\4\uffff\1\6\1\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\3\uffff\1\4\13\uffff\3\4\5\uffff\6\4\45\uffff\1\10\2\uffff\1\7",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\3\uffff\1\4\13\uffff\3\4\5\uffff\6\4\45\uffff\1\10\2\uffff\1\7",
            "",
            "\1\4\4\uffff\1\6\1\uffff\1\4\3\uffff\3\4\3\uffff\1\4\4\uffff\1\4\13\uffff\3\4\5\uffff\6\4",
            "",
            "\1\12\1\11\5\uffff\1\13",
            "\2\4\3\uffff\1\6\1\uffff\1\4",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\3\uffff\1\4\13\uffff\3\4\5\uffff\6\4\45\uffff\1\10\2\uffff\1\7",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\3\uffff\1\4\13\uffff\3\4\5\uffff\6\4\45\uffff\1\10\2\uffff\1\7",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\3\uffff\1\4\13\uffff\3\4\5\uffff\6\4\45\uffff\1\10\2\uffff\1\7"
    };
    static final short[] dfa_166 = DFA.unpackEncodedString(dfa_166s);
    static final char[] dfa_167 = DFA.unpackEncodedStringToUnsignedChars(dfa_167s);
    static final char[] dfa_168 = DFA.unpackEncodedStringToUnsignedChars(dfa_168s);
    static final short[] dfa_169 = DFA.unpackEncodedString(dfa_169s);
    static final short[][] dfa_170 = unpackEncodedStringArray(dfa_170s);

    class DFA167 extends DFA {

        public DFA167(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 167;
            this.eot = dfa_114;
            this.eof = dfa_166;
            this.min = dfa_167;
            this.max = dfa_168;
            this.accept = dfa_169;
            this.special = dfa_119;
            this.transition = dfa_170;
        }
        public String getDescription() {
            return "7199:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) )";
        }
    }
    static final String dfa_171s = "\2\uffff\2\7\5\uffff\3\7";
    static final String dfa_172s = "\1\4\1\151\2\24\4\uffff\1\4\3\24";
    static final String dfa_173s = "\1\150\3\154\4\uffff\1\13\3\154";
    static final String dfa_174s = "\4\uffff\1\3\1\4\1\1\1\2\4\uffff";
    static final String dfa_175s = "\1\uffff\1\0\12\uffff}>";
    static final String[] dfa_176s = {
            "\1\2\1\1\1\5\4\uffff\1\3\134\uffff\1\4",
            "\1\4\2\uffff\1\4",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\4\uffff\1\7\13\uffff\3\7\5\uffff\6\7\45\uffff\1\4\2\uffff\1\10",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\4\uffff\1\7\13\uffff\3\7\5\uffff\6\7\45\uffff\1\4\2\uffff\1\10",
            "",
            "",
            "",
            "",
            "\1\12\1\11\5\uffff\1\13",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\4\uffff\1\7\13\uffff\3\7\5\uffff\6\7\45\uffff\1\4\2\uffff\1\10",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\4\uffff\1\7\13\uffff\3\7\5\uffff\6\7\45\uffff\1\4\2\uffff\1\10",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\4\uffff\1\7\13\uffff\3\7\5\uffff\6\7\45\uffff\1\4\2\uffff\1\10"
    };
    static final short[] dfa_171 = DFA.unpackEncodedString(dfa_171s);
    static final char[] dfa_172 = DFA.unpackEncodedStringToUnsignedChars(dfa_172s);
    static final char[] dfa_173 = DFA.unpackEncodedStringToUnsignedChars(dfa_173s);
    static final short[] dfa_174 = DFA.unpackEncodedString(dfa_174s);
    static final short[] dfa_175 = DFA.unpackEncodedString(dfa_175s);
    static final short[][] dfa_176 = unpackEncodedStringArray(dfa_176s);

    class DFA166 extends DFA {

        public DFA166(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 166;
            this.eot = dfa_114;
            this.eof = dfa_171;
            this.min = dfa_172;
            this.max = dfa_173;
            this.accept = dfa_174;
            this.special = dfa_175;
            this.transition = dfa_176;
        }
        public String getDescription() {
            return "7202:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA166_1 = input.LA(1);

                         
                        int index166_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA166_1==105||LA166_1==108) ) {s = 4;}

                        else if ( (synpred284_InternalKim()) ) {s = 6;}

                        else if ( (synpred285_InternalKim()) ) {s = 7;}

                         
                        input.seek(index166_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 166, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_177s = "\175\uffff";
    static final String dfa_178s = "\1\1\174\uffff";
    static final String dfa_179s = "\1\4\41\uffff\1\0\30\uffff\3\0\1\uffff\26\0\50\uffff";
    static final String dfa_180s = "\1\u00f7\41\uffff\1\0\30\uffff\3\0\1\uffff\26\0\50\uffff";
    static final String dfa_181s = "\1\uffff\1\2\172\uffff\1\1";
    static final String dfa_182s = "\42\uffff\1\0\30\uffff\1\1\1\2\1\3\1\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\50\uffff}>";
    static final String[] dfa_183s = {
            "\1\74\1\73\1\1\2\uffff\1\77\1\1\1\75\2\uffff\1\1\5\uffff\1\1\4\uffff\1\1\1\uffff\1\1\2\uffff\4\1\1\uffff\3\1\1\42\2\uffff\5\1\2\uffff\1\1\2\uffff\2\1\1\uffff\3\1\5\uffff\6\1\1\uffff\1\1\6\uffff\15\1\11\uffff\1\1\5\uffff\2\1\5\uffff\1\1\1\uffff\17\1\1\102\1\103\6\uffff\1\1\1\100\1\101\1\uffff\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\121\1\122\1\123\1\124\3\1\11\uffff\2\1\2\uffff\3\1\1\uffff\11\1\1\uffff\14\1\6\uffff\1\1\50\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_177 = DFA.unpackEncodedString(dfa_177s);
    static final short[] dfa_178 = DFA.unpackEncodedString(dfa_178s);
    static final char[] dfa_179 = DFA.unpackEncodedStringToUnsignedChars(dfa_179s);
    static final char[] dfa_180 = DFA.unpackEncodedStringToUnsignedChars(dfa_180s);
    static final short[] dfa_181 = DFA.unpackEncodedString(dfa_181s);
    static final short[] dfa_182 = DFA.unpackEncodedString(dfa_182s);
    static final short[][] dfa_183 = unpackEncodedStringArray(dfa_183s);

    class DFA173 extends DFA {

        public DFA173(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 173;
            this.eot = dfa_177;
            this.eof = dfa_178;
            this.min = dfa_179;
            this.max = dfa_180;
            this.accept = dfa_181;
            this.special = dfa_182;
            this.transition = dfa_183;
        }
        public String getDescription() {
            return "()+ loopback of 7471:3: ( (lv_main_0_0= ruleConcept ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA173_34 = input.LA(1);

                         
                        int index173_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_34);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA173_59 = input.LA(1);

                         
                        int index173_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_59);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA173_60 = input.LA(1);

                         
                        int index173_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_60);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA173_61 = input.LA(1);

                         
                        int index173_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_61);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA173_63 = input.LA(1);

                         
                        int index173_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_63);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA173_64 = input.LA(1);

                         
                        int index173_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_64);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA173_65 = input.LA(1);

                         
                        int index173_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_65);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA173_66 = input.LA(1);

                         
                        int index173_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_66);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA173_67 = input.LA(1);

                         
                        int index173_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_67);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA173_68 = input.LA(1);

                         
                        int index173_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_68);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA173_69 = input.LA(1);

                         
                        int index173_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_69);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA173_70 = input.LA(1);

                         
                        int index173_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_70);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA173_71 = input.LA(1);

                         
                        int index173_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_71);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA173_72 = input.LA(1);

                         
                        int index173_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_72);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA173_73 = input.LA(1);

                         
                        int index173_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_73);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA173_74 = input.LA(1);

                         
                        int index173_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_74);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA173_75 = input.LA(1);

                         
                        int index173_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_75);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA173_76 = input.LA(1);

                         
                        int index173_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_76);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA173_77 = input.LA(1);

                         
                        int index173_77 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_77);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA173_78 = input.LA(1);

                         
                        int index173_78 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_78);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA173_79 = input.LA(1);

                         
                        int index173_79 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_79);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA173_80 = input.LA(1);

                         
                        int index173_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_80);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA173_81 = input.LA(1);

                         
                        int index173_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_81);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA173_82 = input.LA(1);

                         
                        int index173_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_82);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA173_83 = input.LA(1);

                         
                        int index173_83 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_83);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA173_84 = input.LA(1);

                         
                        int index173_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 124;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index173_84);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 173, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_184s = "\1\34\174\uffff";
    static final String dfa_185s = "\1\4\13\uffff\160\0\1\uffff";
    static final String dfa_186s = "\1\u00f7\13\uffff\160\0\1\uffff";
    static final String dfa_187s = "\1\uffff\1\1\172\uffff\1\2";
    static final String dfa_188s = "\14\uffffuffff}>";
    static final String[] dfa_189s = {
            "\1\74\1\73\1\76\2\uffff\1\77\1\70\1\75\2\uffff\1\160\5\uffff\1\33\4\uffff\1\164\1\uffff\1\17\2\uffff\1\126\1\125\1\162\1\163\1\uffff\1\43\1\171\1\20\1\42\2\uffff\1\35\1\32\1\14\1\15\1\16\2\uffff\1\41\2\uffff\1\40\1\37\1\uffff\1\21\1\22\1\23\5\uffff\1\24\1\25\1\26\1\27\1\30\1\31\1\uffff\1\1\6\uffff\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\11\uffff\1\1\5\uffff\1\72\1\36\5\uffff\1\127\1\uffff\1\44\1\64\1\65\1\71\1\62\1\63\11\1\1\102\1\103\6\uffff\1\173\1\100\1\101\1\uffff\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\121\1\122\1\123\1\124\1\167\1\165\1\166\11\uffff\1\130\1\131\2\uffff\1\132\1\133\1\134\1\uffff\1\135\1\136\1\137\1\140\1\141\1\142\1\143\1\144\1\145\1\uffff\1\170\1\146\1\147\1\150\1\151\1\152\1\153\1\154\1\155\1\156\1\157\1\161\6\uffff\1\172\50\uffff\1\66\1\67",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final short[] dfa_184 = DFA.unpackEncodedString(dfa_184s);
    static final char[] dfa_185 = DFA.unpackEncodedStringToUnsignedChars(dfa_185s);
    static final char[] dfa_186 = DFA.unpackEncodedStringToUnsignedChars(dfa_186s);
    static final short[] dfa_187 = DFA.unpackEncodedString(dfa_187s);
    static final short[] dfa_188 = DFA.unpackEncodedString(dfa_188s);
    static final short[][] dfa_189 = unpackEncodedStringArray(dfa_189s);

    class DFA178 extends DFA {

        public DFA178(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 178;
            this.eot = dfa_177;
            this.eof = dfa_184;
            this.min = dfa_185;
            this.max = dfa_186;
            this.accept = dfa_187;
            this.special = dfa_188;
            this.transition = dfa_189;
        }
        public String getDescription() {
            return "7490:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA178_12 = input.LA(1);

                         
                        int index178_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA178_13 = input.LA(1);

                         
                        int index178_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_13);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA178_14 = input.LA(1);

                         
                        int index178_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_14);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA178_15 = input.LA(1);

                         
                        int index178_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_15);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA178_16 = input.LA(1);

                         
                        int index178_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_16);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA178_17 = input.LA(1);

                         
                        int index178_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_17);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA178_18 = input.LA(1);

                         
                        int index178_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_18);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA178_19 = input.LA(1);

                         
                        int index178_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_19);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA178_20 = input.LA(1);

                         
                        int index178_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_20);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA178_21 = input.LA(1);

                         
                        int index178_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_21);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA178_22 = input.LA(1);

                         
                        int index178_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_22);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA178_23 = input.LA(1);

                         
                        int index178_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_23);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA178_24 = input.LA(1);

                         
                        int index178_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_24);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA178_25 = input.LA(1);

                         
                        int index178_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_25);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA178_26 = input.LA(1);

                         
                        int index178_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_26);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA178_27 = input.LA(1);

                         
                        int index178_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_27);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA178_28 = input.LA(1);

                         
                        int index178_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_28);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA178_29 = input.LA(1);

                         
                        int index178_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_29);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA178_30 = input.LA(1);

                         
                        int index178_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_30);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA178_31 = input.LA(1);

                         
                        int index178_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_31);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA178_32 = input.LA(1);

                         
                        int index178_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_32);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA178_33 = input.LA(1);

                         
                        int index178_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_33);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA178_34 = input.LA(1);

                         
                        int index178_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_34);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA178_35 = input.LA(1);

                         
                        int index178_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_35);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA178_36 = input.LA(1);

                         
                        int index178_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_36);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA178_37 = input.LA(1);

                         
                        int index178_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_37);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA178_38 = input.LA(1);

                         
                        int index178_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_38);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA178_39 = input.LA(1);

                         
                        int index178_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_39);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA178_40 = input.LA(1);

                         
                        int index178_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_40);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA178_41 = input.LA(1);

                         
                        int index178_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_41);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA178_42 = input.LA(1);

                         
                        int index178_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_42);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA178_43 = input.LA(1);

                         
                        int index178_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_43);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA178_44 = input.LA(1);

                         
                        int index178_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_44);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA178_45 = input.LA(1);

                         
                        int index178_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_45);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA178_46 = input.LA(1);

                         
                        int index178_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_46);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA178_47 = input.LA(1);

                         
                        int index178_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_47);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA178_48 = input.LA(1);

                         
                        int index178_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_48);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA178_49 = input.LA(1);

                         
                        int index178_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_49);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA178_50 = input.LA(1);

                         
                        int index178_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_50);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA178_51 = input.LA(1);

                         
                        int index178_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_51);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA178_52 = input.LA(1);

                         
                        int index178_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_52);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA178_53 = input.LA(1);

                         
                        int index178_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_53);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA178_54 = input.LA(1);

                         
                        int index178_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_54);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA178_55 = input.LA(1);

                         
                        int index178_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_55);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA178_56 = input.LA(1);

                         
                        int index178_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_56);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA178_57 = input.LA(1);

                         
                        int index178_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_57);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA178_58 = input.LA(1);

                         
                        int index178_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_58);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA178_59 = input.LA(1);

                         
                        int index178_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_59);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA178_60 = input.LA(1);

                         
                        int index178_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_60);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA178_61 = input.LA(1);

                         
                        int index178_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_61);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA178_62 = input.LA(1);

                         
                        int index178_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_62);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA178_63 = input.LA(1);

                         
                        int index178_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_63);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA178_64 = input.LA(1);

                         
                        int index178_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_64);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA178_65 = input.LA(1);

                         
                        int index178_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_65);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA178_66 = input.LA(1);

                         
                        int index178_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_66);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA178_67 = input.LA(1);

                         
                        int index178_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_67);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA178_68 = input.LA(1);

                         
                        int index178_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_68);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA178_69 = input.LA(1);

                         
                        int index178_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_69);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA178_70 = input.LA(1);

                         
                        int index178_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_70);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA178_71 = input.LA(1);

                         
                        int index178_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_71);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA178_72 = input.LA(1);

                         
                        int index178_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_72);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA178_73 = input.LA(1);

                         
                        int index178_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_73);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA178_74 = input.LA(1);

                         
                        int index178_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_74);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA178_75 = input.LA(1);

                         
                        int index178_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_75);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA178_76 = input.LA(1);

                         
                        int index178_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_76);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA178_77 = input.LA(1);

                         
                        int index178_77 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_77);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA178_78 = input.LA(1);

                         
                        int index178_78 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_78);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA178_79 = input.LA(1);

                         
                        int index178_79 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_79);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA178_80 = input.LA(1);

                         
                        int index178_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_80);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA178_81 = input.LA(1);

                         
                        int index178_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_81);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA178_82 = input.LA(1);

                         
                        int index178_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_82);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA178_83 = input.LA(1);

                         
                        int index178_83 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_83);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA178_84 = input.LA(1);

                         
                        int index178_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_84);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA178_85 = input.LA(1);

                         
                        int index178_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_85);
                        if ( s>=0 ) return s;
                        break;
                    case 74 : 
                        int LA178_86 = input.LA(1);

                         
                        int index178_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_86);
                        if ( s>=0 ) return s;
                        break;
                    case 75 : 
                        int LA178_87 = input.LA(1);

                         
                        int index178_87 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_87);
                        if ( s>=0 ) return s;
                        break;
                    case 76 : 
                        int LA178_88 = input.LA(1);

                         
                        int index178_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_88);
                        if ( s>=0 ) return s;
                        break;
                    case 77 : 
                        int LA178_89 = input.LA(1);

                         
                        int index178_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_89);
                        if ( s>=0 ) return s;
                        break;
                    case 78 : 
                        int LA178_90 = input.LA(1);

                         
                        int index178_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_90);
                        if ( s>=0 ) return s;
                        break;
                    case 79 : 
                        int LA178_91 = input.LA(1);

                         
                        int index178_91 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_91);
                        if ( s>=0 ) return s;
                        break;
                    case 80 : 
                        int LA178_92 = input.LA(1);

                         
                        int index178_92 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_92);
                        if ( s>=0 ) return s;
                        break;
                    case 81 : 
                        int LA178_93 = input.LA(1);

                         
                        int index178_93 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_93);
                        if ( s>=0 ) return s;
                        break;
                    case 82 : 
                        int LA178_94 = input.LA(1);

                         
                        int index178_94 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_94);
                        if ( s>=0 ) return s;
                        break;
                    case 83 : 
                        int LA178_95 = input.LA(1);

                         
                        int index178_95 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_95);
                        if ( s>=0 ) return s;
                        break;
                    case 84 : 
                        int LA178_96 = input.LA(1);

                         
                        int index178_96 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_96);
                        if ( s>=0 ) return s;
                        break;
                    case 85 : 
                        int LA178_97 = input.LA(1);

                         
                        int index178_97 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_97);
                        if ( s>=0 ) return s;
                        break;
                    case 86 : 
                        int LA178_98 = input.LA(1);

                         
                        int index178_98 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_98);
                        if ( s>=0 ) return s;
                        break;
                    case 87 : 
                        int LA178_99 = input.LA(1);

                         
                        int index178_99 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_99);
                        if ( s>=0 ) return s;
                        break;
                    case 88 : 
                        int LA178_100 = input.LA(1);

                         
                        int index178_100 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_100);
                        if ( s>=0 ) return s;
                        break;
                    case 89 : 
                        int LA178_101 = input.LA(1);

                         
                        int index178_101 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_101);
                        if ( s>=0 ) return s;
                        break;
                    case 90 : 
                        int LA178_102 = input.LA(1);

                         
                        int index178_102 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_102);
                        if ( s>=0 ) return s;
                        break;
                    case 91 : 
                        int LA178_103 = input.LA(1);

                         
                        int index178_103 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_103);
                        if ( s>=0 ) return s;
                        break;
                    case 92 : 
                        int LA178_104 = input.LA(1);

                         
                        int index178_104 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_104);
                        if ( s>=0 ) return s;
                        break;
                    case 93 : 
                        int LA178_105 = input.LA(1);

                         
                        int index178_105 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_105);
                        if ( s>=0 ) return s;
                        break;
                    case 94 : 
                        int LA178_106 = input.LA(1);

                         
                        int index178_106 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_106);
                        if ( s>=0 ) return s;
                        break;
                    case 95 : 
                        int LA178_107 = input.LA(1);

                         
                        int index178_107 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_107);
                        if ( s>=0 ) return s;
                        break;
                    case 96 : 
                        int LA178_108 = input.LA(1);

                         
                        int index178_108 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_108);
                        if ( s>=0 ) return s;
                        break;
                    case 97 : 
                        int LA178_109 = input.LA(1);

                         
                        int index178_109 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_109);
                        if ( s>=0 ) return s;
                        break;
                    case 98 : 
                        int LA178_110 = input.LA(1);

                         
                        int index178_110 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_110);
                        if ( s>=0 ) return s;
                        break;
                    case 99 : 
                        int LA178_111 = input.LA(1);

                         
                        int index178_111 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_111);
                        if ( s>=0 ) return s;
                        break;
                    case 100 : 
                        int LA178_112 = input.LA(1);

                         
                        int index178_112 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_112);
                        if ( s>=0 ) return s;
                        break;
                    case 101 : 
                        int LA178_113 = input.LA(1);

                         
                        int index178_113 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_113);
                        if ( s>=0 ) return s;
                        break;
                    case 102 : 
                        int LA178_114 = input.LA(1);

                         
                        int index178_114 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_114);
                        if ( s>=0 ) return s;
                        break;
                    case 103 : 
                        int LA178_115 = input.LA(1);

                         
                        int index178_115 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_115);
                        if ( s>=0 ) return s;
                        break;
                    case 104 : 
                        int LA178_116 = input.LA(1);

                         
                        int index178_116 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_116);
                        if ( s>=0 ) return s;
                        break;
                    case 105 : 
                        int LA178_117 = input.LA(1);

                         
                        int index178_117 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_117);
                        if ( s>=0 ) return s;
                        break;
                    case 106 : 
                        int LA178_118 = input.LA(1);

                         
                        int index178_118 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_118);
                        if ( s>=0 ) return s;
                        break;
                    case 107 : 
                        int LA178_119 = input.LA(1);

                         
                        int index178_119 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_119);
                        if ( s>=0 ) return s;
                        break;
                    case 108 : 
                        int LA178_120 = input.LA(1);

                         
                        int index178_120 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_120);
                        if ( s>=0 ) return s;
                        break;
                    case 109 : 
                        int LA178_121 = input.LA(1);

                         
                        int index178_121 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_121);
                        if ( s>=0 ) return s;
                        break;
                    case 110 : 
                        int LA178_122 = input.LA(1);

                         
                        int index178_122 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_122);
                        if ( s>=0 ) return s;
                        break;
                    case 111 : 
                        int LA178_123 = input.LA(1);

                         
                        int index178_123 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 124;}

                         
                        input.seek(index178_123);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 178, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_190s = "\15\uffff";
    static final String dfa_191s = "\1\1\14\uffff";
    static final String dfa_192s = "\1\4\14\uffff";
    static final String dfa_193s = "\1\u00f7\14\uffff";
    static final String dfa_194s = "\1\uffff\1\14\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13";
    static final String dfa_195s = "\1\0\14\uffff}>";
    static final String[] dfa_196s = {
            "\3\1\2\uffff\3\1\2\uffff\1\1\5\uffff\1\1\4\uffff\1\1\1\uffff\1\1\2\uffff\4\1\1\uffff\4\1\2\uffff\5\1\2\uffff\1\1\2\uffff\2\1\1\uffff\3\1\5\uffff\6\1\1\uffff\1\3\6\uffff\15\1\11\uffff\1\4\5\uffff\2\1\5\uffff\1\1\1\uffff\6\1\1\2\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\2\1\6\uffff\3\1\1\uffff\24\1\11\uffff\2\1\2\uffff\3\1\1\uffff\11\1\1\uffff\14\1\6\uffff\1\1\50\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_190 = DFA.unpackEncodedString(dfa_190s);
    static final short[] dfa_191 = DFA.unpackEncodedString(dfa_191s);
    static final char[] dfa_192 = DFA.unpackEncodedStringToUnsignedChars(dfa_192s);
    static final char[] dfa_193 = DFA.unpackEncodedStringToUnsignedChars(dfa_193s);
    static final short[] dfa_194 = DFA.unpackEncodedString(dfa_194s);
    static final short[] dfa_195 = DFA.unpackEncodedString(dfa_195s);
    static final short[][] dfa_196 = unpackEncodedStringArray(dfa_196s);

    class DFA177 extends DFA {

        public DFA177(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 177;
            this.eot = dfa_190;
            this.eof = dfa_191;
            this.min = dfa_192;
            this.max = dfa_193;
            this.accept = dfa_194;
            this.special = dfa_195;
            this.transition = dfa_196;
        }
        public String getDescription() {
            return "()* loopback of 7496:6: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA177_0 = input.LA(1);

                         
                        int index177_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA177_0==EOF||(LA177_0>=RULE_UPPERCASE_ID && LA177_0<=RULE_STRING)||(LA177_0>=RULE_CAMELCASE_ID && LA177_0<=RULE_LOWERCASE_DASHID)||LA177_0==RULE_BACKCASE_ID||LA177_0==20||LA177_0==25||LA177_0==27||(LA177_0>=30 && LA177_0<=33)||(LA177_0>=35 && LA177_0<=38)||(LA177_0>=41 && LA177_0<=45)||LA177_0==48||(LA177_0>=51 && LA177_0<=52)||(LA177_0>=54 && LA177_0<=56)||(LA177_0>=62 && LA177_0<=67)||(LA177_0>=76 && LA177_0<=88)||(LA177_0>=104 && LA177_0<=105)||LA177_0==111||(LA177_0>=113 && LA177_0<=118)||(LA177_0>=128 && LA177_0<=129)||(LA177_0>=136 && LA177_0<=138)||(LA177_0>=140 && LA177_0<=159)||(LA177_0>=169 && LA177_0<=170)||(LA177_0>=173 && LA177_0<=175)||(LA177_0>=177 && LA177_0<=185)||(LA177_0>=187 && LA177_0<=198)||LA177_0==205||(LA177_0>=246 && LA177_0<=247)) ) {s = 1;}

                        else if ( LA177_0 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA177_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA177_0 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA177_0 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA177_0 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA177_0 == 122 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA177_0 == 123 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA177_0 == 124 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                        else if ( LA177_0 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {s = 10;}

                        else if ( LA177_0 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {s = 11;}

                        else if ( LA177_0 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {s = 12;}

                         
                        input.seek(index177_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 177, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_197s = "\35\uffff";
    static final String dfa_198s = "\1\1\34\uffff";
    static final String dfa_199s = "\1\4\1\uffff\32\0\1\uffff";
    static final String dfa_200s = "\1\u00f7\1\uffff\32\0\1\uffff";
    static final String dfa_201s = "\1\uffff\1\2\32\uffff\1\1";
    static final String dfa_202s = "\2\uffff\1\1\1\0\1\10\1\30\1\27\1\11\1\13\1\16\1\26\1\31\1\14\1\12\1\3\1\20\1\4\1\21\1\5\1\22\1\6\1\23\1\2\1\15\1\17\1\7\1\25\1\24\1\uffff}>";
    static final String[] dfa_203s = {
            "\1\4\1\3\1\1\2\uffff\1\6\1\1\1\5\2\uffff\1\1\5\uffff\1\1\4\uffff\1\1\1\uffff\1\1\2\uffff\4\1\1\uffff\3\1\1\2\2\uffff\5\1\2\uffff\1\1\2\uffff\2\1\1\uffff\3\1\5\uffff\6\1\1\uffff\1\1\6\uffff\15\1\4\uffff\2\1\2\uffff\4\1\1\uffff\4\1\5\uffff\1\1\1\uffff\17\1\1\11\1\12\6\uffff\1\1\1\7\1\10\1\uffff\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\3\1\11\uffff\2\1\2\uffff\3\1\1\uffff\11\1\1\uffff\14\1\6\uffff\1\1\50\uffff\2\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_197 = DFA.unpackEncodedString(dfa_197s);
    static final short[] dfa_198 = DFA.unpackEncodedString(dfa_198s);
    static final char[] dfa_199 = DFA.unpackEncodedStringToUnsignedChars(dfa_199s);
    static final char[] dfa_200 = DFA.unpackEncodedStringToUnsignedChars(dfa_200s);
    static final short[] dfa_201 = DFA.unpackEncodedString(dfa_201s);
    static final short[] dfa_202 = DFA.unpackEncodedString(dfa_202s);
    static final short[][] dfa_203 = unpackEncodedStringArray(dfa_203s);

    class DFA212 extends DFA {

        public DFA212(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 212;
            this.eot = dfa_197;
            this.eof = dfa_198;
            this.min = dfa_199;
            this.max = dfa_200;
            this.accept = dfa_201;
            this.special = dfa_202;
            this.transition = dfa_203;
        }
        public String getDescription() {
            return "()+ loopback of 10107:3: ( (lv_main_1_0= ruleConcept ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA212_3 = input.LA(1);

                         
                        int index212_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA212_2 = input.LA(1);

                         
                        int index212_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA212_22 = input.LA(1);

                         
                        int index212_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_22);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA212_14 = input.LA(1);

                         
                        int index212_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_14);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA212_16 = input.LA(1);

                         
                        int index212_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_16);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA212_18 = input.LA(1);

                         
                        int index212_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_18);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA212_20 = input.LA(1);

                         
                        int index212_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_20);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA212_25 = input.LA(1);

                         
                        int index212_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_25);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA212_4 = input.LA(1);

                         
                        int index212_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_4);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA212_7 = input.LA(1);

                         
                        int index212_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_7);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA212_13 = input.LA(1);

                         
                        int index212_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_13);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA212_8 = input.LA(1);

                         
                        int index212_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_8);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA212_12 = input.LA(1);

                         
                        int index212_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA212_23 = input.LA(1);

                         
                        int index212_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_23);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA212_9 = input.LA(1);

                         
                        int index212_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_9);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA212_24 = input.LA(1);

                         
                        int index212_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_24);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA212_15 = input.LA(1);

                         
                        int index212_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_15);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA212_17 = input.LA(1);

                         
                        int index212_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_17);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA212_19 = input.LA(1);

                         
                        int index212_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA212_21 = input.LA(1);

                         
                        int index212_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA212_27 = input.LA(1);

                         
                        int index212_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_27);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA212_26 = input.LA(1);

                         
                        int index212_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_26);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA212_10 = input.LA(1);

                         
                        int index212_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_10);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA212_6 = input.LA(1);

                         
                        int index212_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_6);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA212_5 = input.LA(1);

                         
                        int index212_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_5);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA212_11 = input.LA(1);

                         
                        int index212_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred385_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index212_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 212, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_204s = "\1\4\3\151\1\4\1\5\3\151\2\uffff";
    static final String dfa_205s = "\1\13\3\154\1\13\1\16\3\154\2\uffff";
    static final String dfa_206s = "\11\uffff\1\2\1\1";
    static final String[] dfa_207s = {
            "\1\2\1\1\5\uffff\1\3",
            "\1\5\2\uffff\1\4",
            "\1\5\2\uffff\1\4",
            "\1\5\2\uffff\1\4",
            "\1\7\1\6\5\uffff\1\10",
            "\1\11\3\uffff\1\12\1\uffff\1\11\2\uffff\1\11",
            "\1\5\2\uffff\1\4",
            "\1\5\2\uffff\1\4",
            "\1\5\2\uffff\1\4",
            "",
            ""
    };
    static final char[] dfa_204 = DFA.unpackEncodedStringToUnsignedChars(dfa_204s);
    static final char[] dfa_205 = DFA.unpackEncodedStringToUnsignedChars(dfa_205s);
    static final short[] dfa_206 = DFA.unpackEncodedString(dfa_206s);
    static final short[][] dfa_207 = unpackEncodedStringArray(dfa_207s);

    class DFA217 extends DFA {

        public DFA217(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 217;
            this.eot = dfa_36;
            this.eof = dfa_36;
            this.min = dfa_204;
            this.max = dfa_205;
            this.accept = dfa_206;
            this.special = dfa_80;
            this.transition = dfa_207;
        }
        public String getDescription() {
            return "10268:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )";
        }
    }
    static final String dfa_208s = "\1\4\3\151\1\5\1\4\2\uffff\3\151";
    static final String dfa_209s = "\1\13\3\154\1\16\1\13\2\uffff\3\154";
    static final String dfa_210s = "\6\uffff\1\2\1\1\3\uffff";
    static final String[] dfa_211s = {
            "\1\2\1\1\5\uffff\1\3",
            "\1\4\2\uffff\1\5",
            "\1\4\2\uffff\1\5",
            "\1\4\2\uffff\1\5",
            "\1\7\3\uffff\1\6\1\uffff\1\7\2\uffff\1\7",
            "\1\11\1\10\5\uffff\1\12",
            "",
            "",
            "\1\4\2\uffff\1\5",
            "\1\4\2\uffff\1\5",
            "\1\4\2\uffff\1\5"
    };
    static final char[] dfa_208 = DFA.unpackEncodedStringToUnsignedChars(dfa_208s);
    static final char[] dfa_209 = DFA.unpackEncodedStringToUnsignedChars(dfa_209s);
    static final short[] dfa_210 = DFA.unpackEncodedString(dfa_210s);
    static final short[][] dfa_211 = unpackEncodedStringArray(dfa_211s);

    class DFA218 extends DFA {

        public DFA218(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 218;
            this.eot = dfa_36;
            this.eof = dfa_36;
            this.min = dfa_208;
            this.max = dfa_209;
            this.accept = dfa_210;
            this.special = dfa_80;
            this.transition = dfa_211;
        }
        public String getDescription() {
            return "10331:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )";
        }
    }
    static final String dfa_212s = "\1\137\12\uffff";
    static final String dfa_213s = "\1\u00f4\12\uffff";
    static final String dfa_214s = "\1\uffff\1\5\1\1\1\2\1\3\6\4";
    static final String dfa_215s = "\1\0\12\uffff}>";
    static final String[] dfa_216s = {
            "\1\1\74\uffff\1\1\3\uffff\1\5\1\6\1\7\2\1\1\2\1\3\1\4\1\12\21\uffff\1\1\23\uffff\3\1\4\uffff\36\1\1\10\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_212 = DFA.unpackEncodedStringToUnsignedChars(dfa_212s);
    static final char[] dfa_213 = DFA.unpackEncodedStringToUnsignedChars(dfa_213s);
    static final short[] dfa_214 = DFA.unpackEncodedString(dfa_214s);
    static final short[] dfa_215 = DFA.unpackEncodedString(dfa_215s);
    static final short[][] dfa_216 = unpackEncodedStringArray(dfa_216s);

    class DFA224 extends DFA {

        public DFA224(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 224;
            this.eot = dfa_36;
            this.eof = dfa_36;
            this.min = dfa_212;
            this.max = dfa_213;
            this.accept = dfa_214;
            this.special = dfa_215;
            this.transition = dfa_216;
        }
        public String getDescription() {
            return "()* loopback of 10422:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA224_0 = input.LA(1);

                         
                        int index224_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA224_0==95||LA224_0==156||(LA224_0>=163 && LA224_0<=164)||LA224_0==186||(LA224_0>=206 && LA224_0<=208)||(LA224_0>=213 && LA224_0<=242)) ) {s = 1;}

                        else if ( LA224_0 == 165 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA224_0 == 166 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA224_0 == 167 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA224_0 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA224_0 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 6;}

                        else if ( LA224_0 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( LA224_0 == 243 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 8;}

                        else if ( LA224_0 == 244 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 9;}

                        else if ( LA224_0 == 168 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 10;}

                         
                        input.seek(index224_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 224, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_217s = "\104\uffff";
    static final String dfa_218s = "\1\1\103\uffff";
    static final String dfa_219s = "\1\4\17\uffff\1\4\11\uffff\1\4\51\uffff";
    static final String dfa_220s = "\1\u00c6\17\uffff\1\u00c9\11\uffff\1\u00c9\51\uffff";
    static final String dfa_221s = "\1\uffff\1\31\1\1\2\2\2\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\uffff\1\16\3\17\1\20\1\21\1\22\1\23\1\24\1\uffff\1\27\44\30\1\15\2\25\1\26";
    static final String dfa_222s = "\1\0\17\uffff\1\1\11\uffff\1\2\51\uffff}>";
    static final String[] dfa_223s = {
            "\1\35\1\34\1\2\4\uffff\1\36\2\uffff\1\37\5\uffff\1\1\24\uffff\1\1\1\33\111\uffff\1\1\64\uffff\1\3\1\4\2\uffff\1\5\1\6\1\7\1\uffff\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\2\uffff\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\40",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\52\1\51\1\45\2\uffff\1\50\1\44\1\53\32\uffff\1\77\72\uffff\1\101\15\uffff\1\102\20\uffff\1\54\1\55\7\uffff\1\46\1\47\1\uffff\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\35\uffff\1\100\14\uffff\1\41\1\42\1\43",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\52\1\51\1\45\2\uffff\1\50\1\44\1\53\32\uffff\1\77\131\uffff\1\54\1\55\7\uffff\1\46\1\47\1\uffff\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\23\uffff\1\103\26\uffff\1\41\1\42\1\43",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_217 = DFA.unpackEncodedString(dfa_217s);
    static final short[] dfa_218 = DFA.unpackEncodedString(dfa_218s);
    static final char[] dfa_219 = DFA.unpackEncodedStringToUnsignedChars(dfa_219s);
    static final char[] dfa_220 = DFA.unpackEncodedStringToUnsignedChars(dfa_220s);
    static final short[] dfa_221 = DFA.unpackEncodedString(dfa_221s);
    static final short[] dfa_222 = DFA.unpackEncodedString(dfa_222s);
    static final short[][] dfa_223 = unpackEncodedStringArray(dfa_223s);

    class DFA260 extends DFA {

        public DFA260(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 260;
            this.eot = dfa_217;
            this.eof = dfa_218;
            this.min = dfa_219;
            this.max = dfa_220;
            this.accept = dfa_221;
            this.special = dfa_222;
            this.transition = dfa_223;
        }
        public String getDescription() {
            return "()* loopback of 10880:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'uses' otherlv_110= 'authority' ( ( (lv_authorities_111_1= RULE_UPPERCASE_ID | lv_authorities_111_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_112= 'metadata' ( (lv_metadata_113_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+ ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA260_0 = input.LA(1);

                         
                        int index260_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA260_0==EOF||LA260_0==20||LA260_0==41||LA260_0==116) ) {s = 1;}

                        else if ( LA260_0 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {s = 2;}

                        else if ( LA260_0 == 169 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {s = 3;}

                        else if ( LA260_0 == 170 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA260_0 == 173 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {s = 5;}

                        else if ( LA260_0 == 174 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {s = 6;}

                        else if ( LA260_0 == 175 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {s = 7;}

                        else if ( LA260_0 == 177 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {s = 8;}

                        else if ( LA260_0 == 178 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {s = 9;}

                        else if ( LA260_0 == 179 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {s = 10;}

                        else if ( LA260_0 == 180 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {s = 11;}

                        else if ( LA260_0 == 181 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {s = 12;}

                        else if ( LA260_0 == 182 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {s = 13;}

                        else if ( LA260_0 == 183 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {s = 14;}

                        else if ( LA260_0 == 184 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {s = 15;}

                        else if ( (LA260_0==185) ) {s = 16;}

                        else if ( LA260_0 == 188 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {s = 17;}

                        else if ( LA260_0 == 189 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {s = 18;}

                        else if ( LA260_0 == 190 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {s = 19;}

                        else if ( LA260_0 == 191 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {s = 20;}

                        else if ( LA260_0 == 192 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {s = 21;}

                        else if ( LA260_0 == 193 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {s = 22;}

                        else if ( LA260_0 == 194 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {s = 23;}

                        else if ( LA260_0 == 195 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {s = 24;}

                        else if ( LA260_0 == 196 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {s = 25;}

                        else if ( (LA260_0==197) ) {s = 26;}

                        else if ( LA260_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 27;}

                        else if ( LA260_0 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 28;}

                        else if ( LA260_0 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 29;}

                        else if ( LA260_0 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 30;}

                        else if ( LA260_0 == RULE_BACKCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 31;}

                        else if ( LA260_0 == 198 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 32;}

                         
                        input.seek(index260_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA260_16 = input.LA(1);

                         
                        int index260_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA260_16 == 199 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 33;}

                        else if ( LA260_16 == 200 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 34;}

                        else if ( LA260_16 == 201 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 35;}

                        else if ( LA260_16 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 36;}

                        else if ( LA260_16 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 37;}

                        else if ( LA260_16 == 137 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 38;}

                        else if ( LA260_16 == 138 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 39;}

                        else if ( LA260_16 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 40;}

                        else if ( LA260_16 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 41;}

                        else if ( LA260_16 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 42;}

                        else if ( LA260_16 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 43;}

                        else if ( LA260_16 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 44;}

                        else if ( LA260_16 == 129 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 45;}

                        else if ( LA260_16 == 140 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 46;}

                        else if ( LA260_16 == 141 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 47;}

                        else if ( LA260_16 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 48;}

                        else if ( LA260_16 == 143 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 49;}

                        else if ( LA260_16 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 50;}

                        else if ( LA260_16 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 51;}

                        else if ( LA260_16 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 52;}

                        else if ( LA260_16 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 53;}

                        else if ( LA260_16 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 54;}

                        else if ( LA260_16 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 55;}

                        else if ( LA260_16 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 56;}

                        else if ( LA260_16 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 57;}

                        else if ( LA260_16 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 58;}

                        else if ( LA260_16 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 59;}

                        else if ( LA260_16 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 60;}

                        else if ( LA260_16 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 61;}

                        else if ( LA260_16 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 62;}

                        else if ( LA260_16 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 63;}

                        else if ( LA260_16 == 186 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {s = 64;}

                        else if ( LA260_16 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {s = 65;}

                        else if ( LA260_16 == 111 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {s = 66;}

                         
                        input.seek(index260_16);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA260_26 = input.LA(1);

                         
                        int index260_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA260_26 == 199 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 33;}

                        else if ( LA260_26 == 200 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 34;}

                        else if ( LA260_26 == 201 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 35;}

                        else if ( LA260_26 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 36;}

                        else if ( LA260_26 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 37;}

                        else if ( LA260_26 == 137 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 38;}

                        else if ( LA260_26 == 138 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 39;}

                        else if ( LA260_26 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 40;}

                        else if ( LA260_26 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 41;}

                        else if ( LA260_26 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 42;}

                        else if ( LA260_26 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 43;}

                        else if ( LA260_26 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 44;}

                        else if ( LA260_26 == 129 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 45;}

                        else if ( LA260_26 == 140 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 46;}

                        else if ( LA260_26 == 141 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 47;}

                        else if ( LA260_26 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 48;}

                        else if ( LA260_26 == 143 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 49;}

                        else if ( LA260_26 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 50;}

                        else if ( LA260_26 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 51;}

                        else if ( LA260_26 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 52;}

                        else if ( LA260_26 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 53;}

                        else if ( LA260_26 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 54;}

                        else if ( LA260_26 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 55;}

                        else if ( LA260_26 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 56;}

                        else if ( LA260_26 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 57;}

                        else if ( LA260_26 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 58;}

                        else if ( LA260_26 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 59;}

                        else if ( LA260_26 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 60;}

                        else if ( LA260_26 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 61;}

                        else if ( LA260_26 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 62;}

                        else if ( LA260_26 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 63;}

                        else if ( LA260_26 == 176 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 67;}

                         
                        input.seek(index260_26);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 260, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_224s = "\1\1\11\uffff";
    static final String dfa_225s = "\1\4\1\uffff\7\0\1\uffff";
    static final String dfa_226s = "\1\u00c6\1\uffff\7\0\1\uffff";
    static final String dfa_227s = "\1\uffff\1\2\7\uffff\1\1";
    static final String dfa_228s = "\2\uffff\1\2\1\1\1\0\1\5\1\3\1\4\1\6\1\uffff}>";
    static final String[] dfa_229s = {
            "\1\5\1\4\1\1\4\uffff\1\6\2\uffff\1\7\5\uffff\1\1\24\uffff\2\1\111\uffff\1\1\64\uffff\2\1\2\uffff\3\1\1\uffff\10\1\1\2\2\uffff\11\1\1\3\1\10",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final short[] dfa_224 = DFA.unpackEncodedString(dfa_224s);
    static final char[] dfa_225 = DFA.unpackEncodedStringToUnsignedChars(dfa_225s);
    static final char[] dfa_226 = DFA.unpackEncodedStringToUnsignedChars(dfa_226s);
    static final short[] dfa_227 = DFA.unpackEncodedString(dfa_227s);
    static final short[] dfa_228 = DFA.unpackEncodedString(dfa_228s);
    static final short[][] dfa_229 = unpackEncodedStringArray(dfa_229s);

    class DFA259 extends DFA {

        public DFA259(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 259;
            this.eot = dfa_94;
            this.eof = dfa_224;
            this.min = dfa_225;
            this.max = dfa_226;
            this.accept = dfa_227;
            this.special = dfa_228;
            this.transition = dfa_229;
        }
        public String getDescription() {
            return "()+ loopback of 12418:9: ({...}? => ( (lv_properties_114_0= rulePropertyStatement ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA259_4 = input.LA(1);

                         
                        int index259_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred465_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index259_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA259_3 = input.LA(1);

                         
                        int index259_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred465_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index259_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA259_2 = input.LA(1);

                         
                        int index259_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred465_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index259_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA259_6 = input.LA(1);

                         
                        int index259_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred465_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index259_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA259_7 = input.LA(1);

                         
                        int index259_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred465_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index259_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA259_5 = input.LA(1);

                         
                        int index259_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred465_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index259_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA259_8 = input.LA(1);

                         
                        int index259_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred465_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index259_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 259, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_230s = "\152\uffff";
    static final String dfa_231s = "\1\2\151\uffff";
    static final String dfa_232s = "\1\4\1\0\150\uffff";
    static final String dfa_233s = "\1\u00f7\1\0\150\uffff";
    static final String dfa_234s = "\2\uffff\1\2\146\uffff\1\1";
    static final String dfa_235s = "\1\uffff\1\0\150\uffff}>";
    static final String[] dfa_236s = {
            "\3\2\1\uffff\5\2\2\uffff\1\2\5\uffff\4\2\2\uffff\3\2\10\uffff\1\1\12\uffff\2\2\23\uffff\6\2\15\uffff\3\2\3\uffff\2\2\7\uffff\1\2\4\uffff\1\2\2\uffff\1\2\3\uffff\1\2\13\uffff\2\2\7\uffff\2\2\1\uffff\21\2\3\uffff\11\2\21\uffff\1\2\23\uffff\4\2\3\uffff\40\2\1\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_230 = DFA.unpackEncodedString(dfa_230s);
    static final short[] dfa_231 = DFA.unpackEncodedString(dfa_231s);
    static final char[] dfa_232 = DFA.unpackEncodedStringToUnsignedChars(dfa_232s);
    static final char[] dfa_233 = DFA.unpackEncodedStringToUnsignedChars(dfa_233s);
    static final short[] dfa_234 = DFA.unpackEncodedString(dfa_234s);
    static final short[] dfa_235 = DFA.unpackEncodedString(dfa_235s);
    static final short[][] dfa_236 = unpackEncodedStringArray(dfa_236s);

    class DFA275 extends DFA {

        public DFA275(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 275;
            this.eot = dfa_230;
            this.eof = dfa_231;
            this.min = dfa_232;
            this.max = dfa_233;
            this.accept = dfa_234;
            this.special = dfa_235;
            this.transition = dfa_236;
        }
        public String getDescription() {
            return "13009:3: (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA275_1 = input.LA(1);

                         
                        int index275_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred487_InternalKim()) ) {s = 105;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index275_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 275, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_237s = "\3\uffff\1\12\2\uffff\1\12\5\uffff\1\12\2\uffff\1\12";
    static final String dfa_238s = "\1\6\2\12\1\31\2\uffff\1\31\3\12\2\uffff\1\31\2\12\1\31";
    static final String dfa_239s = "\1\u00f7\2\12\1\u00fa\2\uffff\1\u00fa\1\12\2\u00f7\2\uffff\1\u00fa\2\12\1\u0088";
    static final String dfa_240s = "\4\uffff\1\3\1\4\4\uffff\1\2\1\1\4\uffff";
    static final String dfa_241s = "\20\uffff}>";
    static final String[] dfa_242s = {
            "\1\4\3\uffff\1\3\21\uffff\2\5\u00d8\uffff\1\1\1\2",
            "\1\3",
            "\1\3",
            "\1\12\1\uffff\1\12\10\uffff\1\13\4\uffff\1\12\102\uffff\1\7\33\uffff\1\12\157\uffff\1\6\1\10\1\11",
            "",
            "",
            "\1\12\1\uffff\1\12\10\uffff\1\13\4\uffff\1\12\102\uffff\1\7\33\uffff\1\12\160\uffff\1\10\1\11",
            "\1\14",
            "\1\17\u00eb\uffff\1\15\1\16",
            "\1\17\u00eb\uffff\1\15\1\16",
            "",
            "",
            "\1\12\1\uffff\1\12\10\uffff\1\13\4\uffff\1\12\136\uffff\1\12\160\uffff\1\10\1\11",
            "\1\17",
            "\1\17",
            "\1\12\1\uffff\1\12\10\uffff\1\13\4\uffff\1\12\136\uffff\1\12"
    };
    static final short[] dfa_237 = DFA.unpackEncodedString(dfa_237s);
    static final char[] dfa_238 = DFA.unpackEncodedStringToUnsignedChars(dfa_238s);
    static final char[] dfa_239 = DFA.unpackEncodedStringToUnsignedChars(dfa_239s);
    static final short[] dfa_240 = DFA.unpackEncodedString(dfa_240s);
    static final short[] dfa_241 = DFA.unpackEncodedString(dfa_241s);
    static final short[][] dfa_242 = unpackEncodedStringArray(dfa_242s);

    class DFA278 extends DFA {

        public DFA278(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 278;
            this.eot = dfa_71;
            this.eof = dfa_237;
            this.min = dfa_238;
            this.max = dfa_239;
            this.accept = dfa_240;
            this.special = dfa_241;
            this.transition = dfa_242;
        }
        public String getDescription() {
            return "13112:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )";
        }
    }
    static final String dfa_243s = "\22\uffff";
    static final String dfa_244s = "\3\uffff\1\14\4\uffff\1\14\5\uffff\1\14\2\uffff\1\14";
    static final String dfa_245s = "\1\6\2\12\1\4\4\uffff\1\4\3\12\2\uffff\1\4\2\12\1\4";
    static final String dfa_246s = "\1\u00f7\2\12\1\u00fa\4\uffff\1\u00fa\1\12\2\u00f7\2\uffff\1\u00fa\2\12\1\u00f7";
    static final String dfa_247s = "\4\uffff\1\3\1\4\1\5\1\6\4\uffff\1\2\1\1\4\uffff";
    static final String dfa_248s = "\22\uffff}>";
    static final String[] dfa_249s = {
            "\1\4\3\uffff\1\3\1\uffff\1\6\16\uffff\1\7\2\5\u00d8\uffff\1\1\1\2",
            "\1\3",
            "\1\3",
            "\3\14\1\uffff\5\14\7\uffff\1\14\4\uffff\1\14\1\uffff\3\14\1\uffff\3\14\2\uffff\1\15\2\14\2\uffff\2\14\1\uffff\2\14\3\uffff\2\14\3\uffff\3\14\5\uffff\6\14\1\uffff\1\14\42\uffff\1\14\3\uffff\1\11\23\uffff\2\14\7\uffff\2\14\1\uffff\21\14\64\uffff\1\14\44\uffff\2\14\1\10\1\12\1\13",
            "",
            "",
            "",
            "",
            "\3\14\1\uffff\5\14\7\uffff\1\14\4\uffff\1\14\1\uffff\3\14\1\uffff\3\14\2\uffff\1\15\2\14\2\uffff\2\14\1\uffff\2\14\3\uffff\2\14\3\uffff\3\14\5\uffff\6\14\1\uffff\1\14\42\uffff\1\14\3\uffff\1\11\23\uffff\2\14\7\uffff\2\14\1\uffff\21\14\64\uffff\1\14\44\uffff\2\14\1\uffff\1\12\1\13",
            "\1\16",
            "\1\21\u00eb\uffff\1\17\1\20",
            "\1\21\u00eb\uffff\1\17\1\20",
            "",
            "",
            "\3\14\1\uffff\5\14\7\uffff\1\14\4\uffff\1\14\1\uffff\3\14\1\uffff\3\14\2\uffff\1\15\2\14\2\uffff\2\14\1\uffff\2\14\3\uffff\2\14\3\uffff\3\14\5\uffff\6\14\1\uffff\1\14\42\uffff\1\14\27\uffff\2\14\7\uffff\2\14\1\uffff\21\14\64\uffff\1\14\44\uffff\2\14\1\uffff\1\12\1\13",
            "\1\21",
            "\1\21",
            "\3\14\1\uffff\5\14\7\uffff\1\14\4\uffff\1\14\1\uffff\3\14\1\uffff\3\14\2\uffff\1\15\2\14\2\uffff\2\14\1\uffff\2\14\3\uffff\2\14\3\uffff\3\14\5\uffff\6\14\1\uffff\1\14\42\uffff\1\14\27\uffff\2\14\7\uffff\2\14\1\uffff\21\14\64\uffff\1\14\44\uffff\2\14"
    };

    static final short[] dfa_243 = DFA.unpackEncodedString(dfa_243s);
    static final short[] dfa_244 = DFA.unpackEncodedString(dfa_244s);
    static final char[] dfa_245 = DFA.unpackEncodedStringToUnsignedChars(dfa_245s);
    static final char[] dfa_246 = DFA.unpackEncodedStringToUnsignedChars(dfa_246s);
    static final short[] dfa_247 = DFA.unpackEncodedString(dfa_247s);
    static final short[] dfa_248 = DFA.unpackEncodedString(dfa_248s);
    static final short[][] dfa_249 = unpackEncodedStringArray(dfa_249s);

    class DFA282 extends DFA {

        public DFA282(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 282;
            this.eot = dfa_243;
            this.eof = dfa_244;
            this.min = dfa_245;
            this.max = dfa_246;
            this.accept = dfa_247;
            this.special = dfa_248;
            this.transition = dfa_249;
        }
        public String getDescription() {
            return "13353:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )";
        }
    }
    static final String dfa_250s = "\1\4\1\151\2\6\4\uffff\1\4\3\6";
    static final String dfa_251s = "\1\13\1\154\2\u00f7\4\uffff\1\13\3\u00f7";
    static final String dfa_252s = "\4\uffff\1\4\1\3\1\1\1\2\4\uffff";
    static final String[] dfa_253s = {
            "\1\2\1\1\1\4\4\uffff\1\3",
            "\1\5\2\uffff\1\5",
            "\1\6\3\uffff\1\6\1\uffff\1\6\17\uffff\2\6\10\uffff\1\6\102\uffff\1\5\2\uffff\1\10\144\uffff\1\6\44\uffff\2\6",
            "\1\6\3\uffff\1\6\1\uffff\1\6\17\uffff\2\6\10\uffff\1\6\102\uffff\1\5\2\uffff\1\10\144\uffff\1\6\44\uffff\2\6",
            "",
            "",
            "",
            "",
            "\1\12\1\11\5\uffff\1\13",
            "\1\6\3\uffff\1\6\1\uffff\1\6\17\uffff\2\6\10\uffff\1\6\102\uffff\1\5\2\uffff\1\10\144\uffff\1\6\44\uffff\2\6",
            "\1\6\3\uffff\1\6\1\uffff\1\6\17\uffff\2\6\10\uffff\1\6\102\uffff\1\5\2\uffff\1\10\144\uffff\1\6\44\uffff\2\6",
            "\1\6\3\uffff\1\6\1\uffff\1\6\17\uffff\2\6\10\uffff\1\6\102\uffff\1\5\2\uffff\1\10\144\uffff\1\6\44\uffff\2\6"
    };
    static final char[] dfa_250 = DFA.unpackEncodedStringToUnsignedChars(dfa_250s);
    static final char[] dfa_251 = DFA.unpackEncodedStringToUnsignedChars(dfa_251s);
    static final short[] dfa_252 = DFA.unpackEncodedString(dfa_252s);
    static final short[][] dfa_253 = unpackEncodedStringArray(dfa_253s);

    class DFA283 extends DFA {

        public DFA283(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 283;
            this.eot = dfa_114;
            this.eof = dfa_114;
            this.min = dfa_250;
            this.max = dfa_251;
            this.accept = dfa_252;
            this.special = dfa_175;
            this.transition = dfa_253;
        }
        public String getDescription() {
            return "13542:6: (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA283_1 = input.LA(1);

                         
                        int index283_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA283_1==105||LA283_1==108) ) {s = 5;}

                        else if ( (synpred507_InternalKim()) ) {s = 6;}

                        else if ( (synpred508_InternalKim()) ) {s = 7;}

                         
                        input.seek(index283_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 283, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_254s = "\1\uffff\3\5\4\uffff\3\5";
    static final String dfa_255s = "\1\4\3\33\1\122\2\uffff\1\4\3\33";
    static final String dfa_256s = "\1\u00f7\4\u00d4\2\uffff\1\13\3\u00d4";
    static final String dfa_257s = "\5\uffff\1\2\1\1\4\uffff";
    static final String[] dfa_258s = {
            "\1\2\1\1\1\5\1\uffff\3\5\1\3\20\uffff\2\5\10\uffff\1\5\12\uffff\2\5\115\uffff\2\5\7\uffff\2\5\1\uffff\16\5\1\4\2\5\64\uffff\1\5\44\uffff\2\5",
            "\1\5\12\uffff\1\5\2\uffff\1\5\50\uffff\1\6\26\uffff\1\5\2\uffff\1\7\147\uffff\1\6",
            "\1\5\12\uffff\1\5\2\uffff\1\5\50\uffff\1\6\26\uffff\1\5\2\uffff\1\7\147\uffff\1\6",
            "\1\5\12\uffff\1\5\2\uffff\1\5\50\uffff\1\6\26\uffff\1\5\2\uffff\1\7\147\uffff\1\6",
            "\1\6\44\uffff\1\5\134\uffff\1\6",
            "",
            "",
            "\1\11\1\10\5\uffff\1\12",
            "\1\5\12\uffff\1\5\2\uffff\1\5\50\uffff\1\6\26\uffff\1\5\2\uffff\1\7\147\uffff\1\6",
            "\1\5\12\uffff\1\5\2\uffff\1\5\50\uffff\1\6\26\uffff\1\5\2\uffff\1\7\147\uffff\1\6",
            "\1\5\12\uffff\1\5\2\uffff\1\5\50\uffff\1\6\26\uffff\1\5\2\uffff\1\7\147\uffff\1\6"
    };
    static final short[] dfa_254 = DFA.unpackEncodedString(dfa_254s);
    static final char[] dfa_255 = DFA.unpackEncodedStringToUnsignedChars(dfa_255s);
    static final char[] dfa_256 = DFA.unpackEncodedStringToUnsignedChars(dfa_256s);
    static final short[] dfa_257 = DFA.unpackEncodedString(dfa_257s);
    static final short[][] dfa_258 = unpackEncodedStringArray(dfa_258s);

    class DFA294 extends DFA {

        public DFA294(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 294;
            this.eot = dfa_36;
            this.eof = dfa_254;
            this.min = dfa_255;
            this.max = dfa_256;
            this.accept = dfa_257;
            this.special = dfa_80;
            this.transition = dfa_258;
        }
        public String getDescription() {
            return "14043:2: ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) )* ) )";
        }
    }
    static final String dfa_259s = "\1\4\2\uffff\4\0\23\uffff\4\0\14\uffff";
    static final String dfa_260s = "\1\u00f7\2\uffff\4\0\23\uffff\4\0\14\uffff";
    static final String dfa_261s = "\1\uffff\1\1\34\uffff\1\3\2\uffff\1\4\1\7\1\11\1\13\1\5\1\2\1\6\1\12\1\10";
    static final String dfa_262s = "\3\uffff\1\0\1\1\1\2\1\3\23\uffff\1\4\1\5\1\6\1\7\14\uffff}>";
    static final String[] dfa_263s = {
            "\1\5\1\4\1\36\1\uffff\1\41\1\3\1\35\1\6\20\uffff\2\36\10\uffff\1\32\12\uffff\1\44\1\42\115\uffff\2\1\7\uffff\2\1\1\uffff\21\1\64\uffff\1\43\44\uffff\1\33\1\34",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_259 = DFA.unpackEncodedStringToUnsignedChars(dfa_259s);
    static final char[] dfa_260 = DFA.unpackEncodedStringToUnsignedChars(dfa_260s);
    static final short[] dfa_261 = DFA.unpackEncodedString(dfa_261s);
    static final short[] dfa_262 = DFA.unpackEncodedString(dfa_262s);
    static final short[][] dfa_263 = unpackEncodedStringArray(dfa_263s);

    class DFA296 extends DFA {

        public DFA296(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 296;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_259;
            this.max = dfa_260;
            this.accept = dfa_261;
            this.special = dfa_262;
            this.transition = dfa_263;
        }
        public String getDescription() {
            return "14161:2: ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_date_7_0= ruleDate ) ) | ( (lv_map_8_0= ruleMap ) ) | ( (lv_quantity_9_0= ruleQuantity ) ) | ( (lv_null_10_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA296_3 = input.LA(1);

                         
                        int index296_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred528_InternalKim()) ) {s = 1;}

                        else if ( (synpred535_InternalKim()) ) {s = 37;}

                         
                        input.seek(index296_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA296_4 = input.LA(1);

                         
                        int index296_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred528_InternalKim()) ) {s = 1;}

                        else if ( (synpred529_InternalKim()) ) {s = 38;}

                        else if ( (synpred535_InternalKim()) ) {s = 37;}

                         
                        input.seek(index296_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA296_5 = input.LA(1);

                         
                        int index296_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred528_InternalKim()) ) {s = 1;}

                        else if ( (synpred529_InternalKim()) ) {s = 38;}

                        else if ( (synpred535_InternalKim()) ) {s = 37;}

                         
                        input.seek(index296_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA296_6 = input.LA(1);

                         
                        int index296_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred528_InternalKim()) ) {s = 1;}

                        else if ( (synpred529_InternalKim()) ) {s = 38;}

                        else if ( (synpred535_InternalKim()) ) {s = 37;}

                         
                        input.seek(index296_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA296_26 = input.LA(1);

                         
                        int index296_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred528_InternalKim()) ) {s = 1;}

                        else if ( (synpred536_InternalKim()) ) {s = 39;}

                         
                        input.seek(index296_26);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA296_27 = input.LA(1);

                         
                        int index296_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 30;}

                        else if ( (synpred540_InternalKim()) ) {s = 40;}

                         
                        input.seek(index296_27);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA296_28 = input.LA(1);

                         
                        int index296_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 30;}

                        else if ( (synpred540_InternalKim()) ) {s = 40;}

                         
                        input.seek(index296_28);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA296_29 = input.LA(1);

                         
                        int index296_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 30;}

                        else if ( (synpred538_InternalKim()) ) {s = 41;}

                        else if ( (synpred540_InternalKim()) ) {s = 40;}

                         
                        input.seek(index296_29);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 296, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_264s = "\24\uffff";
    static final String dfa_265s = "\1\4\3\0\5\uffff\2\0\11\uffff";
    static final String dfa_266s = "\1\u00f7\3\0\5\uffff\2\0\11\uffff";
    static final String dfa_267s = "\4\uffff\1\1\6\uffff\1\2\1\3\1\4\1\5\1\6\1\11\1\12\1\7\1\10";
    static final String dfa_268s = "\1\uffff\1\0\1\1\1\2\5\uffff\1\3\1\4\11\uffff}>";
    static final String[] dfa_269s = {
            "\1\12\1\11\1\4\1\uffff\1\14\1\15\1\3\1\13\1\4\16\uffff\3\4\10\uffff\1\16\12\uffff\1\21\1\17\u009e\uffff\1\20\44\uffff\1\1\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_264 = DFA.unpackEncodedString(dfa_264s);
    static final char[] dfa_265 = DFA.unpackEncodedStringToUnsignedChars(dfa_265s);
    static final char[] dfa_266 = DFA.unpackEncodedStringToUnsignedChars(dfa_266s);
    static final short[] dfa_267 = DFA.unpackEncodedString(dfa_267s);
    static final short[] dfa_268 = DFA.unpackEncodedString(dfa_268s);
    static final short[][] dfa_269 = unpackEncodedStringArray(dfa_269s);

    class DFA299 extends DFA {

        public DFA299(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 299;
            this.eot = dfa_264;
            this.eof = dfa_264;
            this.min = dfa_265;
            this.max = dfa_266;
            this.accept = dfa_267;
            this.special = dfa_268;
            this.transition = dfa_269;
        }
        public String getDescription() {
            return "14440:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA299_1 = input.LA(1);

                         
                        int index299_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred541_InternalKim()) ) {s = 4;}

                        else if ( (synpred550_InternalKim()) ) {s = 18;}

                         
                        input.seek(index299_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA299_2 = input.LA(1);

                         
                        int index299_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred541_InternalKim()) ) {s = 4;}

                        else if ( (synpred550_InternalKim()) ) {s = 18;}

                         
                        input.seek(index299_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA299_3 = input.LA(1);

                         
                        int index299_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred541_InternalKim()) ) {s = 4;}

                        else if ( (synpred550_InternalKim()) ) {s = 18;}

                        else if ( (synpred551_InternalKim()) ) {s = 19;}

                         
                        input.seek(index299_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA299_9 = input.LA(1);

                         
                        int index299_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred542_InternalKim()) ) {s = 11;}

                        else if ( (synpred547_InternalKim()) ) {s = 13;}

                         
                        input.seek(index299_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA299_10 = input.LA(1);

                         
                        int index299_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred542_InternalKim()) ) {s = 11;}

                        else if ( (synpred547_InternalKim()) ) {s = 13;}

                         
                        input.seek(index299_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 299, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_270s = "\34\uffff";
    static final String dfa_271s = "\3\uffff\1\4\3\uffff\2\21\2\uffff\2\4\1\25\6\uffff\1\4\3\uffff\1\4\3\uffff";
    static final String dfa_272s = "\1\4\2\12\1\31\2\uffff\1\0\2\31\1\46\1\uffff\2\31\1\4\2\12\2\uffff\1\4\1\uffff\1\31\1\uffff\2\12\1\31\3\46";
    static final String dfa_273s = "\1\u00f7\2\12\1\u00fd\2\uffff\1\0\3\154\1\uffff\2\u00fa\1\u00fe\2\u00f7\2\uffff\1\13\1\uffff\1\u00fa\1\uffff\2\12\4\154";
    static final String dfa_274s = "\4\uffff\1\1\1\2\4\uffff\1\4\5\uffff\1\6\1\7\1\uffff\1\3\1\uffff\1\5\6\uffff";
    static final String dfa_275s = "\6\uffff\1\0\25\uffff}>";
    static final String[] dfa_276s = {
            "\1\10\1\7\1\4\1\uffff\1\12\1\6\1\3\1\11\20\uffff\2\4\10\uffff\1\5\131\uffff\2\5\7\uffff\2\5\1\uffff\21\5\131\uffff\1\1\1\2",
            "\1\13",
            "\1\13",
            "\1\4\12\uffff\1\4\107\uffff\1\15\u008a\uffff\1\20\1\14\1\16\1\17\3\20",
            "",
            "",
            "\1\uffff",
            "\1\21\14\uffff\1\23\102\uffff\1\5\2\uffff\1\22",
            "\1\21\14\uffff\1\23\102\uffff\1\5\2\uffff\1\22",
            "\1\23\102\uffff\1\5\2\uffff\1\22",
            "",
            "\1\4\12\uffff\1\4\107\uffff\1\15\u008b\uffff\1\14\1\16\1\17",
            "\1\4\12\uffff\1\4\107\uffff\1\15\u008c\uffff\1\16\1\17",
            "\2\25\3\uffff\1\25\1\24\3\uffff\1\25\12\uffff\1\25\14\uffff\1\25\1\uffff\1\25\102\uffff\1\25\u0092\uffff\1\25",
            "\1\30\u00eb\uffff\1\26\1\27",
            "\1\30\u00eb\uffff\1\26\1\27",
            "",
            "",
            "\1\32\1\31\5\uffff\1\33",
            "",
            "\1\4\12\uffff\1\4\107\uffff\1\25\u008c\uffff\1\16\1\17",
            "",
            "\1\30",
            "\1\30",
            "\1\4\12\uffff\1\4\107\uffff\1\25",
            "\1\23\102\uffff\1\5\2\uffff\1\22",
            "\1\23\102\uffff\1\5\2\uffff\1\22",
            "\1\23\102\uffff\1\5\2\uffff\1\22"
    };

    static final short[] dfa_270 = DFA.unpackEncodedString(dfa_270s);
    static final short[] dfa_271 = DFA.unpackEncodedString(dfa_271s);
    static final char[] dfa_272 = DFA.unpackEncodedStringToUnsignedChars(dfa_272s);
    static final char[] dfa_273 = DFA.unpackEncodedStringToUnsignedChars(dfa_273s);
    static final short[] dfa_274 = DFA.unpackEncodedString(dfa_274s);
    static final short[] dfa_275 = DFA.unpackEncodedString(dfa_275s);
    static final short[][] dfa_276 = unpackEncodedStringArray(dfa_276s);

    class DFA301 extends DFA {

        public DFA301(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 301;
            this.eot = dfa_270;
            this.eof = dfa_271;
            this.min = dfa_272;
            this.max = dfa_273;
            this.accept = dfa_274;
            this.special = dfa_275;
            this.transition = dfa_276;
        }
        public String getDescription() {
            return "14709:2: ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA301_6 = input.LA(1);

                         
                        int index301_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred554_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index301_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 301, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_277s = "\33\uffff";
    static final String dfa_278s = "\1\1\32\uffff";
    static final String dfa_279s = "\1\12\32\uffff";
    static final String dfa_280s = "\1\u00f7\32\uffff";
    static final String dfa_281s = "\1\uffff\1\7\1\1\2\2\3\3\20\4\2\5\1\6";
    static final String dfa_282s = "\1\0\32\uffff}>";
    static final String[] dfa_283s = {
            "\1\7\16\uffff\1\1\11\uffff\1\2\14\uffff\1\3\6\uffff\1\24\24\uffff\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\25\30\uffff\1\4\1\30\1\31\1\32\1\26\1\27\177\uffff\1\5\1\6",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_277 = DFA.unpackEncodedString(dfa_277s);
    static final short[] dfa_278 = DFA.unpackEncodedString(dfa_278s);
    static final char[] dfa_279 = DFA.unpackEncodedStringToUnsignedChars(dfa_279s);
    static final char[] dfa_280 = DFA.unpackEncodedStringToUnsignedChars(dfa_280s);
    static final short[] dfa_281 = DFA.unpackEncodedString(dfa_281s);
    static final short[] dfa_282 = DFA.unpackEncodedString(dfa_282s);
    static final short[][] dfa_283 = unpackEncodedStringArray(dfa_283s);

    class DFA315 extends DFA {

        public DFA315(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 315;
            this.eot = dfa_277;
            this.eof = dfa_278;
            this.min = dfa_279;
            this.max = dfa_280;
            this.accept = dfa_281;
            this.special = dfa_282;
            this.transition = dfa_283;
        }
        public String getDescription() {
            return "()* loopback of 15419:6: ( ({...}? => ( ({...}? => (otherlv_2= 'according' otherlv_3= 'to' ( (lv_accordingTo_4_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_5= 'in' ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) | (otherlv_8= 'per' ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_10_0= ruleNumber ) ) otherlv_11= 'to' ( (lv_to_12_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'named' ( ( (lv_name_18_1= RULE_LOWERCASE_ID | lv_name_18_2= RULE_STRING ) ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA315_0 = input.LA(1);

                         
                        int index315_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA315_0==EOF||LA315_0==25) ) {s = 1;}

                        else if ( LA315_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA315_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA315_0 == 113 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1) ) {s = 4;}

                        else if ( LA315_0 == 246 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2) ) {s = 5;}

                        else if ( LA315_0 == 247 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2) ) {s = 6;}

                        else if ( LA315_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2) ) {s = 7;}

                        else if ( LA315_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {s = 8;}

                        else if ( LA315_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {s = 9;}

                        else if ( LA315_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {s = 10;}

                        else if ( LA315_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {s = 11;}

                        else if ( LA315_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {s = 12;}

                        else if ( LA315_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {s = 13;}

                        else if ( LA315_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {s = 14;}

                        else if ( LA315_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {s = 15;}

                        else if ( LA315_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {s = 16;}

                        else if ( LA315_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {s = 17;}

                        else if ( LA315_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {s = 18;}

                        else if ( LA315_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {s = 19;}

                        else if ( LA315_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {s = 20;}

                        else if ( LA315_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {s = 21;}

                        else if ( LA315_0 == 117 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {s = 22;}

                        else if ( LA315_0 == 118 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {s = 23;}

                        else if ( LA315_0 == 114 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4) ) {s = 24;}

                        else if ( LA315_0 == 115 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4) ) {s = 25;}

                        else if ( LA315_0 == 116 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5) ) {s = 26;}

                         
                        input.seek(index315_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 315, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_284s = "\1\12\10\uffff\20\0\4\uffff";
    static final String dfa_285s = "\1\u00f7\10\uffff\20\0\4\uffff";
    static final String dfa_286s = "\11\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\4\uffff}>";
    static final String[] dfa_287s = {
            "\1\1\16\uffff\1\1\11\uffff\1\1\14\uffff\1\1\6\uffff\1\25\24\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\26\30\uffff\4\1\1\27\1\30\177\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_284 = DFA.unpackEncodedStringToUnsignedChars(dfa_284s);
    static final char[] dfa_285 = DFA.unpackEncodedStringToUnsignedChars(dfa_285s);
    static final short[] dfa_286 = DFA.unpackEncodedString(dfa_286s);
    static final short[][] dfa_287 = unpackEncodedStringArray(dfa_287s);

    class DFA312 extends DFA {

        public DFA312(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 312;
            this.eot = dfa_197;
            this.eof = dfa_198;
            this.min = dfa_284;
            this.max = dfa_285;
            this.accept = dfa_201;
            this.special = dfa_286;
            this.transition = dfa_287;
        }
        public String getDescription() {
            return "()* loopback of 15619:9: ( (lv_valueOperators_14_0= ruleValueOperator ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA312_9 = input.LA(1);

                         
                        int index312_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred605_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index312_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA312_10 = input.LA(1);

                         
                        int index312_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred605_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index312_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA312_11 = input.LA(1);

                         
                        int index312_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred605_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index312_11);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA312_12 = input.LA(1);

                         
                        int index312_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred605_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index312_12);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA312_13 = input.LA(1);

                         
                        int index312_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred605_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index312_13);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA312_14 = input.LA(1);

                         
                        int index312_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred605_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index312_14);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA312_15 = input.LA(1);

                         
                        int index312_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred605_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index312_15);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA312_16 = input.LA(1);

                         
                        int index312_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred605_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index312_16);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA312_17 = input.LA(1);

                         
                        int index312_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred605_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index312_17);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA312_18 = input.LA(1);

                         
                        int index312_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred605_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index312_18);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA312_19 = input.LA(1);

                         
                        int index312_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred605_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index312_19);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA312_20 = input.LA(1);

                         
                        int index312_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred605_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index312_20);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA312_21 = input.LA(1);

                         
                        int index312_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred605_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index312_21);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA312_22 = input.LA(1);

                         
                        int index312_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred605_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index312_22);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA312_23 = input.LA(1);

                         
                        int index312_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred605_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index312_23);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA312_24 = input.LA(1);

                         
                        int index312_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred605_InternalKim()) ) {s = 28;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index312_24);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 312, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_288s = "\43\uffff";
    static final String dfa_289s = "\1\4\6\uffff\32\0\2\uffff";
    static final String dfa_290s = "\1\u00f7\6\uffff\32\0\2\uffff";
    static final String dfa_291s = "\1\uffff\1\1\40\uffff\1\2";
    static final String dfa_292s = "\7\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\2\uffff}>";
    static final String[] dfa_293s = {
            "\1\13\1\12\1\1\1\uffff\1\1\1\11\1\1\1\14\20\uffff\2\1\10\uffff\1\40\111\uffff\1\42\17\uffff\1\15\1\16\7\uffff\1\7\1\10\1\uffff\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\131\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_288 = DFA.unpackEncodedString(dfa_288s);
    static final char[] dfa_289 = DFA.unpackEncodedStringToUnsignedChars(dfa_289s);
    static final char[] dfa_290 = DFA.unpackEncodedStringToUnsignedChars(dfa_290s);
    static final short[] dfa_291 = DFA.unpackEncodedString(dfa_291s);
    static final short[] dfa_292 = DFA.unpackEncodedString(dfa_292s);
    static final short[][] dfa_293 = unpackEncodedStringArray(dfa_293s);

    class DFA316 extends DFA {

        public DFA316(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 316;
            this.eot = dfa_288;
            this.eof = dfa_288;
            this.min = dfa_289;
            this.max = dfa_290;
            this.accept = dfa_291;
            this.special = dfa_292;
            this.transition = dfa_293;
        }
        public String getDescription() {
            return "15763:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA316_7 = input.LA(1);

                         
                        int index316_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA316_8 = input.LA(1);

                         
                        int index316_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA316_9 = input.LA(1);

                         
                        int index316_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_9);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA316_10 = input.LA(1);

                         
                        int index316_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA316_11 = input.LA(1);

                         
                        int index316_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA316_12 = input.LA(1);

                         
                        int index316_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA316_13 = input.LA(1);

                         
                        int index316_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA316_14 = input.LA(1);

                         
                        int index316_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_14);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA316_15 = input.LA(1);

                         
                        int index316_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_15);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA316_16 = input.LA(1);

                         
                        int index316_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_16);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA316_17 = input.LA(1);

                         
                        int index316_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_17);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA316_18 = input.LA(1);

                         
                        int index316_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_18);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA316_19 = input.LA(1);

                         
                        int index316_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_19);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA316_20 = input.LA(1);

                         
                        int index316_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_20);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA316_21 = input.LA(1);

                         
                        int index316_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_21);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA316_22 = input.LA(1);

                         
                        int index316_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_22);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA316_23 = input.LA(1);

                         
                        int index316_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_23);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA316_24 = input.LA(1);

                         
                        int index316_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_24);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA316_25 = input.LA(1);

                         
                        int index316_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_25);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA316_26 = input.LA(1);

                         
                        int index316_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_26);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA316_27 = input.LA(1);

                         
                        int index316_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_27);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA316_28 = input.LA(1);

                         
                        int index316_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_28);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA316_29 = input.LA(1);

                         
                        int index316_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_29);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA316_30 = input.LA(1);

                         
                        int index316_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_30);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA316_31 = input.LA(1);

                         
                        int index316_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_31);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA316_32 = input.LA(1);

                         
                        int index316_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred611_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index316_32);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 316, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_294s = "\1\12\1\uffff\1\4\36\uffff\1\24\2\46\24\uffff\1\4\1\11\3\46\1\0";
    static final String dfa_295s = "\1\uffff\1\7\1\uffff\1\1\2\2\3\3\17\4\2\5\1\6\6\4\3\uffff\24\4\6\uffff";
    static final String dfa_296s = "\1\1\1\uffff\1\2\72\uffff\1\0}>";
    static final String[] dfa_297s = {
            "\1\10\11\uffff\1\1\6\uffff\1\1\3\uffff\3\1\1\uffff\1\3\1\uffff\1\1\4\uffff\1\1\5\uffff\1\4\5\uffff\1\1\1\2\1\1\5\uffff\6\1\10\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\30\uffff\1\5\1\30\1\31\1\32\1\26\1\27\177\uffff\1\6\1\7",
            "",
            "\1\42\1\41\3\uffff\1\40\1\35\1\43\32\uffff\1\67\131\uffff\1\44\1\45\7\uffff\1\36\1\37\1\uffff\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\131\uffff\1\33\1\34",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\1\6\uffff\1\1\12\uffff\1\1\3\uffff\1\1\13\uffff\3\1\5\uffff\6\1\45\uffff\1\71\2\uffff\1\70",
            "\1\1\102\uffff\1\71\2\uffff\1\70",
            "\1\1\102\uffff\1\71\2\uffff\1\70",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\73\1\72\5\uffff\1\74",
            "\1\75",
            "\1\1\102\uffff\1\71\2\uffff\1\70",
            "\1\1\102\uffff\1\71\2\uffff\1\70",
            "\1\1\102\uffff\1\71\2\uffff\1\70",
            "\1\uffff"
    };
    static final char[] dfa_294 = DFA.unpackEncodedStringToUnsignedChars(dfa_294s);
    static final short[] dfa_295 = DFA.unpackEncodedString(dfa_295s);
    static final short[] dfa_296 = DFA.unpackEncodedString(dfa_296s);
    static final short[][] dfa_297 = unpackEncodedStringArray(dfa_297s);

    class DFA323 extends DFA {

        public DFA323(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 323;
            this.eot = dfa_147;
            this.eof = dfa_148;
            this.min = dfa_294;
            this.max = dfa_150;
            this.accept = dfa_295;
            this.special = dfa_296;
            this.transition = dfa_297;
        }
        public String getDescription() {
            return "()* loopback of 15827:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA323_61 = input.LA(1);

                         
                        int index323_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred619_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index323_61);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA323_0 = input.LA(1);

                         
                        int index323_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA323_0==EOF||LA323_0==20||LA323_0==27||(LA323_0>=31 && LA323_0<=33)||LA323_0==37||LA323_0==42||LA323_0==54||LA323_0==56||(LA323_0>=62 && LA323_0<=67)) ) {s = 1;}

                        else if ( (LA323_0==55) ) {s = 2;}

                        else if ( LA323_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {s = 3;}

                        else if ( LA323_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA323_0 == 113 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 5;}

                        else if ( LA323_0 == 246 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 6;}

                        else if ( LA323_0 == 247 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 7;}

                        else if ( LA323_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 8;}

                        else if ( LA323_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 9;}

                        else if ( LA323_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 10;}

                        else if ( LA323_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 11;}

                        else if ( LA323_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 12;}

                        else if ( LA323_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 13;}

                        else if ( LA323_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 14;}

                        else if ( LA323_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 15;}

                        else if ( LA323_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 16;}

                        else if ( LA323_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 17;}

                        else if ( LA323_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 18;}

                        else if ( LA323_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 19;}

                        else if ( LA323_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 20;}

                        else if ( LA323_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 21;}

                        else if ( LA323_0 == 117 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 22;}

                        else if ( LA323_0 == 118 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 23;}

                        else if ( LA323_0 == 114 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 24;}

                        else if ( LA323_0 == 115 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 25;}

                        else if ( LA323_0 == 116 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 26;}

                         
                        input.seek(index323_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA323_2 = input.LA(1);

                         
                        int index323_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA323_2 == 246 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 27;}

                        else if ( LA323_2 == 247 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 28;}

                        else if ( LA323_2 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 29;}

                        else if ( LA323_2 == 137 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 30;}

                        else if ( LA323_2 == 138 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 31;}

                        else if ( LA323_2 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 32;}

                        else if ( (LA323_2==RULE_LOWERCASE_ID) ) {s = 33;}

                        else if ( (LA323_2==RULE_UPPERCASE_ID) ) {s = 34;}

                        else if ( (LA323_2==RULE_LOWERCASE_DASHID) ) {s = 35;}

                        else if ( LA323_2 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 36;}

                        else if ( LA323_2 == 129 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 37;}

                        else if ( LA323_2 == 140 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 38;}

                        else if ( LA323_2 == 141 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 39;}

                        else if ( LA323_2 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 40;}

                        else if ( LA323_2 == 143 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 41;}

                        else if ( LA323_2 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 42;}

                        else if ( LA323_2 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 43;}

                        else if ( LA323_2 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 44;}

                        else if ( LA323_2 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 45;}

                        else if ( LA323_2 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 46;}

                        else if ( LA323_2 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 47;}

                        else if ( LA323_2 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 48;}

                        else if ( LA323_2 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 49;}

                        else if ( LA323_2 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 50;}

                        else if ( LA323_2 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 51;}

                        else if ( LA323_2 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 52;}

                        else if ( LA323_2 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 53;}

                        else if ( LA323_2 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 54;}

                        else if ( LA323_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 55;}

                         
                        input.seek(index323_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 323, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_298s = "\53\uffff";
    static final String dfa_299s = "\1\1\52\uffff";
    static final String dfa_300s = "\1\12\6\uffff\1\0\20\uffff\17\0\4\uffff";
    static final String dfa_301s = "\1\u00f7\6\uffff\1\0\20\uffff\17\0\4\uffff";
    static final String dfa_302s = "\1\uffff\1\2\50\uffff\1\1";
    static final String dfa_303s = "\7\uffff\1\0\20\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\4\uffff}>";
    static final String[] dfa_304s = {
            "\1\1\11\uffff\1\1\6\uffff\1\1\3\uffff\3\1\1\uffff\1\1\1\uffff\1\1\4\uffff\1\1\5\uffff\1\1\5\uffff\1\1\1\7\1\1\5\uffff\6\1\10\uffff\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\30\uffff\4\1\1\45\1\46\177\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_298 = DFA.unpackEncodedString(dfa_298s);
    static final short[] dfa_299 = DFA.unpackEncodedString(dfa_299s);
    static final char[] dfa_300 = DFA.unpackEncodedStringToUnsignedChars(dfa_300s);
    static final char[] dfa_301 = DFA.unpackEncodedStringToUnsignedChars(dfa_301s);
    static final short[] dfa_302 = DFA.unpackEncodedString(dfa_302s);
    static final short[] dfa_303 = DFA.unpackEncodedString(dfa_303s);
    static final short[][] dfa_304 = unpackEncodedStringArray(dfa_304s);

    class DFA320 extends DFA {

        public DFA320(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 320;
            this.eot = dfa_298;
            this.eof = dfa_299;
            this.min = dfa_300;
            this.max = dfa_301;
            this.accept = dfa_302;
            this.special = dfa_303;
            this.transition = dfa_304;
        }
        public String getDescription() {
            return "()* loopback of 16027:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA320_7 = input.LA(1);

                         
                        int index320_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred618_InternalKim()) ) {s = 42;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index320_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA320_24 = input.LA(1);

                         
                        int index320_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred618_InternalKim()) ) {s = 42;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index320_24);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA320_25 = input.LA(1);

                         
                        int index320_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred618_InternalKim()) ) {s = 42;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index320_25);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA320_26 = input.LA(1);

                         
                        int index320_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred618_InternalKim()) ) {s = 42;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index320_26);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA320_27 = input.LA(1);

                         
                        int index320_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred618_InternalKim()) ) {s = 42;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index320_27);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA320_28 = input.LA(1);

                         
                        int index320_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred618_InternalKim()) ) {s = 42;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index320_28);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA320_29 = input.LA(1);

                         
                        int index320_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred618_InternalKim()) ) {s = 42;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index320_29);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA320_30 = input.LA(1);

                         
                        int index320_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred618_InternalKim()) ) {s = 42;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index320_30);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA320_31 = input.LA(1);

                         
                        int index320_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred618_InternalKim()) ) {s = 42;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index320_31);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA320_32 = input.LA(1);

                         
                        int index320_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred618_InternalKim()) ) {s = 42;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index320_32);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA320_33 = input.LA(1);

                         
                        int index320_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred618_InternalKim()) ) {s = 42;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index320_33);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA320_34 = input.LA(1);

                         
                        int index320_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred618_InternalKim()) ) {s = 42;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index320_34);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA320_35 = input.LA(1);

                         
                        int index320_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred618_InternalKim()) ) {s = 42;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index320_35);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA320_36 = input.LA(1);

                         
                        int index320_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred618_InternalKim()) ) {s = 42;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index320_36);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA320_37 = input.LA(1);

                         
                        int index320_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred618_InternalKim()) ) {s = 42;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index320_37);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA320_38 = input.LA(1);

                         
                        int index320_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred618_InternalKim()) ) {s = 42;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index320_38);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 320, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA324 extends DFA {

        public DFA324(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 324;
            this.eot = dfa_288;
            this.eof = dfa_288;
            this.min = dfa_289;
            this.max = dfa_290;
            this.accept = dfa_291;
            this.special = dfa_292;
            this.transition = dfa_293;
        }
        public String getDescription() {
            return "16171:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA324_7 = input.LA(1);

                         
                        int index324_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA324_8 = input.LA(1);

                         
                        int index324_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA324_9 = input.LA(1);

                         
                        int index324_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_9);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA324_10 = input.LA(1);

                         
                        int index324_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA324_11 = input.LA(1);

                         
                        int index324_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA324_12 = input.LA(1);

                         
                        int index324_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA324_13 = input.LA(1);

                         
                        int index324_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA324_14 = input.LA(1);

                         
                        int index324_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_14);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA324_15 = input.LA(1);

                         
                        int index324_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_15);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA324_16 = input.LA(1);

                         
                        int index324_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_16);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA324_17 = input.LA(1);

                         
                        int index324_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_17);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA324_18 = input.LA(1);

                         
                        int index324_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_18);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA324_19 = input.LA(1);

                         
                        int index324_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_19);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA324_20 = input.LA(1);

                         
                        int index324_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_20);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA324_21 = input.LA(1);

                         
                        int index324_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_21);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA324_22 = input.LA(1);

                         
                        int index324_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_22);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA324_23 = input.LA(1);

                         
                        int index324_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_23);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA324_24 = input.LA(1);

                         
                        int index324_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_24);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA324_25 = input.LA(1);

                         
                        int index324_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_25);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA324_26 = input.LA(1);

                         
                        int index324_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_26);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA324_27 = input.LA(1);

                         
                        int index324_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_27);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA324_28 = input.LA(1);

                         
                        int index324_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_28);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA324_29 = input.LA(1);

                         
                        int index324_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_29);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA324_30 = input.LA(1);

                         
                        int index324_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_30);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA324_31 = input.LA(1);

                         
                        int index324_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_31);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA324_32 = input.LA(1);

                         
                        int index324_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred624_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index324_32);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 324, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_305s = "\30\uffff";
    static final String dfa_306s = "\1\1\27\uffff";
    static final String dfa_307s = "\1\12\27\uffff";
    static final String dfa_308s = "\1\u00f7\27\uffff";
    static final String dfa_309s = "\1\uffff\1\5\1\1\2\2\3\3\20\4";
    static final String dfa_310s = "\1\0\27\uffff}>";
    static final String[] dfa_311s = {
            "\1\7\20\uffff\1\1\7\uffff\1\2\5\uffff\1\1\2\uffff\1\1\3\uffff\1\3\6\uffff\1\24\24\uffff\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\25\30\uffff\1\4\3\uffff\1\26\1\27\177\uffff\1\5\1\6",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_305 = DFA.unpackEncodedString(dfa_305s);
    static final short[] dfa_306 = DFA.unpackEncodedString(dfa_306s);
    static final char[] dfa_307 = DFA.unpackEncodedStringToUnsignedChars(dfa_307s);
    static final char[] dfa_308 = DFA.unpackEncodedStringToUnsignedChars(dfa_308s);
    static final short[] dfa_309 = DFA.unpackEncodedString(dfa_309s);
    static final short[] dfa_310 = DFA.unpackEncodedString(dfa_310s);
    static final short[][] dfa_311 = unpackEncodedStringArray(dfa_311s);

    class DFA329 extends DFA {

        public DFA329(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 329;
            this.eot = dfa_305;
            this.eof = dfa_306;
            this.min = dfa_307;
            this.max = dfa_308;
            this.accept = dfa_309;
            this.special = dfa_310;
            this.transition = dfa_311;
        }
        public String getDescription() {
            return "()* loopback of 16235:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA329_0 = input.LA(1);

                         
                        int index329_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA329_0==EOF||LA329_0==27||LA329_0==41||LA329_0==44) ) {s = 1;}

                        else if ( LA329_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {s = 2;}

                        else if ( LA329_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 3;}

                        else if ( LA329_0 == 113 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA329_0 == 246 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 5;}

                        else if ( LA329_0 == 247 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 6;}

                        else if ( LA329_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 7;}

                        else if ( LA329_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 8;}

                        else if ( LA329_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 9;}

                        else if ( LA329_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 10;}

                        else if ( LA329_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 11;}

                        else if ( LA329_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 12;}

                        else if ( LA329_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 13;}

                        else if ( LA329_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 14;}

                        else if ( LA329_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 15;}

                        else if ( LA329_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 16;}

                        else if ( LA329_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 17;}

                        else if ( LA329_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 18;}

                        else if ( LA329_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 19;}

                        else if ( LA329_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 20;}

                        else if ( LA329_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 21;}

                        else if ( LA329_0 == 117 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 22;}

                        else if ( LA329_0 == 118 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 23;}

                         
                        input.seek(index329_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 329, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_312s = "\1\1\33\uffff";
    static final String dfa_313s = "\1\12\12\uffff\20\0\1\uffff";
    static final String dfa_314s = "\1\u00f7\12\uffff\20\0\1\uffff";
    static final String dfa_315s = "\1\uffff\1\2\31\uffff\1\1";
    static final String dfa_316s = "\13\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\uffff}>";
    static final String[] dfa_317s = {
            "\1\1\20\uffff\1\1\7\uffff\1\1\5\uffff\1\1\2\uffff\1\1\3\uffff\1\1\6\uffff\1\27\24\uffff\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\30\30\uffff\1\1\3\uffff\1\31\1\32\177\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final short[] dfa_312 = DFA.unpackEncodedString(dfa_312s);
    static final char[] dfa_313 = DFA.unpackEncodedStringToUnsignedChars(dfa_313s);
    static final char[] dfa_314 = DFA.unpackEncodedStringToUnsignedChars(dfa_314s);
    static final short[] dfa_315 = DFA.unpackEncodedString(dfa_315s);
    static final short[] dfa_316 = DFA.unpackEncodedString(dfa_316s);
    static final short[][] dfa_317 = unpackEncodedStringArray(dfa_317s);

    class DFA328 extends DFA {

        public DFA328(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 328;
            this.eot = dfa_270;
            this.eof = dfa_312;
            this.min = dfa_313;
            this.max = dfa_314;
            this.accept = dfa_315;
            this.special = dfa_316;
            this.transition = dfa_317;
        }
        public String getDescription() {
            return "()* loopback of 16435:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA328_11 = input.LA(1);

                         
                        int index328_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred631_InternalKim()) ) {s = 27;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index328_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA328_12 = input.LA(1);

                         
                        int index328_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred631_InternalKim()) ) {s = 27;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index328_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA328_13 = input.LA(1);

                         
                        int index328_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred631_InternalKim()) ) {s = 27;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index328_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA328_14 = input.LA(1);

                         
                        int index328_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred631_InternalKim()) ) {s = 27;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index328_14);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA328_15 = input.LA(1);

                         
                        int index328_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred631_InternalKim()) ) {s = 27;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index328_15);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA328_16 = input.LA(1);

                         
                        int index328_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred631_InternalKim()) ) {s = 27;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index328_16);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA328_17 = input.LA(1);

                         
                        int index328_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred631_InternalKim()) ) {s = 27;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index328_17);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA328_18 = input.LA(1);

                         
                        int index328_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred631_InternalKim()) ) {s = 27;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index328_18);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA328_19 = input.LA(1);

                         
                        int index328_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred631_InternalKim()) ) {s = 27;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index328_19);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA328_20 = input.LA(1);

                         
                        int index328_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred631_InternalKim()) ) {s = 27;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index328_20);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA328_21 = input.LA(1);

                         
                        int index328_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred631_InternalKim()) ) {s = 27;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index328_21);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA328_22 = input.LA(1);

                         
                        int index328_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred631_InternalKim()) ) {s = 27;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index328_22);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA328_23 = input.LA(1);

                         
                        int index328_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred631_InternalKim()) ) {s = 27;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index328_23);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA328_24 = input.LA(1);

                         
                        int index328_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred631_InternalKim()) ) {s = 27;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index328_24);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA328_25 = input.LA(1);

                         
                        int index328_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred631_InternalKim()) ) {s = 27;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index328_25);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA328_26 = input.LA(1);

                         
                        int index328_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred631_InternalKim()) ) {s = 27;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index328_26);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 328, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_318s = "\163\uffff";
    static final String dfa_319s = "\1\6\162\uffff";
    static final String dfa_320s = "\1\4\5\0\155\uffff";
    static final String dfa_321s = "\1\u00fe\5\0\155\uffff";
    static final String dfa_322s = "\6\uffff\1\2\153\uffff\1\1";
    static final String dfa_323s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\155\uffff}>";
    static final String[] dfa_324s = {
            "\1\3\1\2\1\6\1\uffff\1\6\1\1\3\6\1\uffff\1\4\5\uffff\1\6\4\uffff\1\6\1\uffff\7\6\1\uffff\1\6\1\uffff\1\6\1\5\1\uffff\3\6\1\uffff\2\6\2\uffff\3\6\3\uffff\3\6\5\uffff\6\6\1\uffff\1\6\6\uffff\15\6\17\uffff\1\6\2\uffff\1\6\3\uffff\1\6\1\uffff\6\6\11\uffff\2\6\6\uffff\3\6\1\uffff\21\6\14\uffff\2\6\2\uffff\3\6\1\uffff\11\6\2\uffff\13\6\12\uffff\1\6\44\uffff\2\6\6\uffff\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_318 = DFA.unpackEncodedString(dfa_318s);
    static final short[] dfa_319 = DFA.unpackEncodedString(dfa_319s);
    static final char[] dfa_320 = DFA.unpackEncodedStringToUnsignedChars(dfa_320s);
    static final char[] dfa_321 = DFA.unpackEncodedStringToUnsignedChars(dfa_321s);
    static final short[] dfa_322 = DFA.unpackEncodedString(dfa_322s);
    static final short[] dfa_323 = DFA.unpackEncodedString(dfa_323s);
    static final short[][] dfa_324 = unpackEncodedStringArray(dfa_324s);

    class DFA335 extends DFA {

        public DFA335(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 335;
            this.eot = dfa_318;
            this.eof = dfa_319;
            this.min = dfa_320;
            this.max = dfa_321;
            this.accept = dfa_322;
            this.special = dfa_323;
            this.transition = dfa_324;
        }
        public String getDescription() {
            return "16837:3: ( (lv_root_1_0= ruleUnitElement ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA335_1 = input.LA(1);

                         
                        int index335_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 114;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index335_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA335_2 = input.LA(1);

                         
                        int index335_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 114;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index335_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA335_3 = input.LA(1);

                         
                        int index335_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 114;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index335_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA335_4 = input.LA(1);

                         
                        int index335_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 114;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index335_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA335_5 = input.LA(1);

                         
                        int index335_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 114;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index335_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 335, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA372 extends DFA {

        public DFA372(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 372;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "658:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA372_5 = input.LA(1);

                         
                        int index372_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index372_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 372, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA459 extends DFA {

        public DFA459(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 459;
            this.eot = dfa_108;
            this.eof = dfa_108;
            this.min = dfa_109;
            this.max = dfa_110;
            this.accept = dfa_111;
            this.special = dfa_112;
            this.transition = dfa_113;
        }
        public String getDescription() {
            return "5781:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?";
        }
    }
    static final String dfa_325s = "\1\4\2\31\1\46\1\uffff\1\31\1\uffff\2\4\3\46";
    static final String dfa_326s = "\1\u00f7\3\154\1\uffff\1\31\1\uffff\2\13\3\154";
    static final String[] dfa_327s = {
            "\1\2\1\1\1\5\1\uffff\3\6\1\3\20\uffff\2\6\10\uffff\1\6\101\uffff\1\4\7\uffff\1\6\17\uffff\2\6\7\uffff\2\6\1\uffff\21\6\131\uffff\2\6",
            "\1\6\14\uffff\1\6\102\uffff\1\10\2\uffff\1\7",
            "\1\6\14\uffff\1\6\102\uffff\1\10\2\uffff\1\7",
            "\1\6\102\uffff\1\10\2\uffff\1\7",
            "",
            "\1\6",
            "",
            "\1\12\1\11\5\uffff\1\13",
            "\2\4\3\uffff\1\6\1\uffff\1\4",
            "\1\6\102\uffff\1\10\2\uffff\1\7",
            "\1\6\102\uffff\1\10\2\uffff\1\7",
            "\1\6\102\uffff\1\10\2\uffff\1\7"
    };
    static final char[] dfa_325 = DFA.unpackEncodedStringToUnsignedChars(dfa_325s);
    static final char[] dfa_326 = DFA.unpackEncodedStringToUnsignedChars(dfa_326s);
    static final short[][] dfa_327 = unpackEncodedStringArray(dfa_327s);

    class DFA484 extends DFA {

        public DFA484(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 484;
            this.eot = dfa_114;
            this.eof = dfa_166;
            this.min = dfa_325;
            this.max = dfa_326;
            this.accept = dfa_169;
            this.special = dfa_119;
            this.transition = dfa_327;
        }
        public String getDescription() {
            return "7199:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) )";
        }
    }
    static final String dfa_328s = "\1\4\3\151\4\uffff\1\4\3\151";
    static final String[] dfa_329s = {
            "\1\2\1\1\1\5\4\uffff\1\3\134\uffff\1\4",
            "\1\4\2\uffff\1\4",
            "\1\4\2\uffff\1\10",
            "\1\4\2\uffff\1\10",
            "",
            "",
            "",
            "",
            "\1\12\1\11\5\uffff\1\13",
            "\1\4\2\uffff\1\10",
            "\1\4\2\uffff\1\10",
            "\1\4\2\uffff\1\10"
    };
    static final char[] dfa_328 = DFA.unpackEncodedStringToUnsignedChars(dfa_328s);
    static final short[][] dfa_329 = unpackEncodedStringArray(dfa_329s);

    class DFA483 extends DFA {

        public DFA483(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 483;
            this.eot = dfa_114;
            this.eof = dfa_171;
            this.min = dfa_328;
            this.max = dfa_173;
            this.accept = dfa_174;
            this.special = dfa_175;
            this.transition = dfa_329;
        }
        public String getDescription() {
            return "7202:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA483_1 = input.LA(1);

                         
                        int index483_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA483_1==105||LA483_1==108) ) {s = 4;}

                        else if ( (synpred284_InternalKim()) ) {s = 6;}

                        else if ( (synpred285_InternalKim()) ) {s = 7;}

                         
                        input.seek(index483_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 483, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_330s = "\1\105\14\uffff";
    static final String dfa_331s = "\1\177\14\uffff";
    static final String[] dfa_332s = {
            "\1\3\34\uffff\1\4\24\uffff\1\2\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_330 = DFA.unpackEncodedStringToUnsignedChars(dfa_330s);
    static final char[] dfa_331 = DFA.unpackEncodedStringToUnsignedChars(dfa_331s);
    static final short[][] dfa_332 = unpackEncodedStringArray(dfa_332s);

    class DFA494 extends DFA {

        public DFA494(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 494;
            this.eot = dfa_190;
            this.eof = dfa_191;
            this.min = dfa_330;
            this.max = dfa_331;
            this.accept = dfa_194;
            this.special = dfa_195;
            this.transition = dfa_332;
        }
        public String getDescription() {
            return "()* loopback of 7496:6: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA494_0 = input.LA(1);

                         
                        int index494_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA494_0==EOF) ) {s = 1;}

                        else if ( LA494_0 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA494_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA494_0 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA494_0 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA494_0 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA494_0 == 122 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA494_0 == 123 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA494_0 == 124 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                        else if ( LA494_0 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {s = 10;}

                        else if ( LA494_0 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {s = 11;}

                        else if ( LA494_0 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {s = 12;}

                         
                        input.seek(index494_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 494, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000001E08002L,0x0000200080000FC0L,0x040001FF10000000L,0x001FFFFFFFE1C000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000E08000L,0x0000000000000FC0L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000E00000L,0x0000000000000FC0L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x000600403C009F70L,0x0001010000000000L,0x000000001FFFF603L,0x00C0000000020000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000001008000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0006004038001F70L,0x0000010000000000L,0x0000000000000000L,0x00C0000000020000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x000000000A000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000A70L,0x0000010000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0xC1C00423C0000042L,0x000000000000000FL});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0xC1C00423C8000042L,0x000000000000000FL});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0xC1C00423C0000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000004030008F70L,0x0011010000000000L,0x000000001FFFF603L,0x00C0000000000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0xC1C0042388000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000930L,0x0000010000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0xC1C0042308000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000C00000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000004030000E70L,0x0000010000000000L,0x000000001FFFF603L,0x00C0000000000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0xC1C0042000000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000830L,0x0000010000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000004400000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000018000000020L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000020008000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0023014030000F70L,0x000001000014F000L,0x000000001FFFF603L,0x00C0000000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0xC1C0040000000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000380000000002L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0003014030000E70L,0x000001000014F000L,0x000000001FFFF603L,0x00C0000000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000C01000000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x00C0000000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000C00000000002L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x002B014030000F70L,0x000001000014F000L,0x000000001FFFF603L,0x00C0000000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0010000000000002L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000060L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0xC1C0000008000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0xC1C0000000000000L,0x000000000000000FL});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0E00004030000E70L,0x0000010000000000L,0x000000001FFFF603L,0x00C0000000000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0xC1C0004000000000L,0x000000000000000FL});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0xC1C1004000000000L,0x000000000000000FL});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x3000000000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0002005038001F70L,0x0000010000000000L,0x0000000000000000L,0x00C0000000000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000300008000002L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0006004038001F70L,0x0000010000000010L,0x0000000000000000L,0x00C0000000020000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0006004038001F72L,0x0000010000000000L,0x0000000000000000L,0x00C0000000020000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0001000000000002L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000230L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000300000000002L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0001300000000002L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000E08000L,0x000000000E000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000E00000L,0x000000000E000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0001040080100040L,0x000000DA60000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0001040080100000L,0x000000DA60000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000014000000830L,0x0000010000000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0001040088100000L,0x000000DA60000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000004030000E70L,0x0000010100000000L,0x000000001FFFF603L,0x00C0000000000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0001040080100830L,0x000001DA60000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0001040080100000L,0x000000FA60000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000040000100000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000C30L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0020000000000002L,0x0000020000000000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0020000000000002L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0020000000000002L,0x0000180000000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000A20L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000008000L,0x0000200000000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x00000440B0000E70L,0x0000010000000000L,0x000000001FFFF603L,0x00C0000000000000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0xC1C00440F0000E72L,0x0000C1000000000FL,0x000000001FFFF603L,0x00C0000000000000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0xC1C00440F8000E72L,0x000081000000000FL,0x000000001FFFF603L,0x00C0000000000000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0006004038001F70L,0x0001010000000000L,0x000000001FFFF603L,0x00C0000000020000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0xC1C00440B0000E72L,0x000001000000000FL,0x000000001FFFF603L,0x00C0000000000000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x00000440B0000E72L,0x0000010000000000L,0x000000001FFFF603L,0x00C0000000000000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000004030000E70L,0x0001010000000000L,0x000000001FFFF603L,0x00C0000000000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0081000800000402L,0x007E000001FFF000L,0x0000000000000000L,0x00C0000000000000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0081014800004630L,0x007E080001FFF000L,0x0000000000000000L,0x40C0000000000000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0006004038009F70L,0x0001010000000000L,0x000000001FFFF603L,0x00C0000000020000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000004030000F70L,0x0001010000000000L,0x000000001FFFF603L,0x00C0000000000000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000004000000002L,0x001C000000000000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000004000000002L,0x0010000000000000L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000004030000E72L,0xFF80010400000020L,0x000000001FFFF603L,0x00C0000000000000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000004034000E70L,0x0000010000000000L,0x000000001FFFF603L,0x00C0000000000000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000002L,0xFF80000400000020L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x1000000000000000L,0x0700000000000000L,0x00000000000000FCL});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000008000L,0x0000400080000000L,0x040001FF10000000L,0x001FFFFFFFE1C000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000A30L,0x0000010000000000L,0x0000000000000603L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000001650L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000002010L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000001000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0080000000000002L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x00000000C0000000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000004030000E72L,0x0000010000000000L,0x000000001FFFF603L,0x00C0000000000000L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x1000000080000000L,0x0700000000000000L,0x00000007000000FCL,0x0018000000000000L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0018000000000000L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000000008000L,0x0000000080000000L,0x040001FF10000000L,0x001FFFFFFFE1C000L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000008200L,0x0000000100000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000002L,0x0010000000000000L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000200L,0x0000000100000000L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000040000004872L,0x0000010000000000L,0xF3FEE60000000000L,0x000000000000007FL});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000040000004872L,0x0000010000000000L,0xF3FEE60000000800L,0x000000000000007FL});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000001440L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000004030000E70L,0x0000010000000000L,0x000018001FFFF603L,0x00C0000000000000L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000004030000E70L,0x0000010000000000L,0x000010001FFFF603L,0x00C0000000000000L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000040008004872L,0x0000010000000000L,0xF3FEE60060000000L,0x000000000000007FL});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000040008004872L,0x0000010000000000L,0xF3FEE60000000000L,0x000000000000007FL});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000004030000E70L,0x0000010000000000L,0x000100001FFFF603L,0x00C0000000000000L});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0001000010000000L,0x000000000001C000L});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x0001000008000000L,0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0001000008000000L});
    public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x0000041008004872L,0x0000010000000000L,0xF3FEE60000000000L,0x000000000000007FL});
    public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0000000000000000L,0x0000800200000000L});
    public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0000004000000200L,0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000004034000E70L,0x0000010000000000L,0x000000001FFFF603L,0x00C0000000000380L});
    public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000C00L});
    public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x0000004034000E70L,0x0000010000000000L,0x000000003FFFF603L,0x00C0000000000000L});
    public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x0006024030000F70L,0x0000010000000000L,0x000000001FFFF603L,0x00C0000000020000L});
    public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x0006024038001F70L,0x0000010000000000L,0x0000000000000000L,0x00C0000000020000L});
    public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x0000000000000870L,0x0000010000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x0000004030001440L,0x0000000000000000L,0x0000000000000000L,0x00C0000000020000L});
    public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x0003014030000E70L,0x000001000014F000L,0x000000001FFFF703L,0x00C0000000000000L});
    public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x0000000008000000L,0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x0006004030000F70L,0x0000010000000000L,0x000000001FFFF603L,0x00C0000000020000L});
    public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x0A00000000000000L,0x0000000000000000L,0x0000000000000000L,0x00000000000C0000L});
    public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x0000000000000830L,0x0000010000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x0081100800000402L,0x0062000001FFF000L,0x0000000000000000L,0x00C0000000000000L});
    public static final BitSet FOLLOW_167 = new BitSet(new long[]{0x0081114800004630L,0x007E080001FFF000L,0x0000000000000000L,0x40C0000000000000L});
    public static final BitSet FOLLOW_168 = new BitSet(new long[]{0x0081114800004630L,0x0062080001FFF000L,0x0000000000000000L,0x40C0000000000000L});
    public static final BitSet FOLLOW_169 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_170 = new BitSet(new long[]{0x0000000000000000L,0x0010000000000000L});
    public static final BitSet FOLLOW_171 = new BitSet(new long[]{0x0000000000000860L});
    public static final BitSet FOLLOW_172 = new BitSet(new long[]{0x0000034000004230L,0x0000080000000000L,0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_173 = new BitSet(new long[]{0x0000010000000002L,0x0000080000000000L,0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_174 = new BitSet(new long[]{0x0000004000004230L});
    public static final BitSet FOLLOW_175 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_176 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L,0x0000000000000000L,0x0700000000000000L});
    public static final BitSet FOLLOW_177 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L,0x0000000000000000L,0x0600000000000000L});
    public static final BitSet FOLLOW_178 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0600000000000000L});
    public static final BitSet FOLLOW_179 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_180 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x3880000000000000L});
    public static final BitSet FOLLOW_181 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_182 = new BitSet(new long[]{0x0000000000000402L});
    public static final BitSet FOLLOW_183 = new BitSet(new long[]{0x0000000000000002L,0x0000020000000000L});
    public static final BitSet FOLLOW_184 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L});
    public static final BitSet FOLLOW_185 = new BitSet(new long[]{0x0000000000000830L});
    public static final BitSet FOLLOW_186 = new BitSet(new long[]{0x0000000000000002L,0x0000180000000000L});
    public static final BitSet FOLLOW_187 = new BitSet(new long[]{0x0000000000004820L});
    public static final BitSet FOLLOW_188 = new BitSet(new long[]{0x0000000000000032L,0x0000100000000000L,0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_189 = new BitSet(new long[]{0x0000000000000032L,0x0000000000000000L,0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_190 = new BitSet(new long[]{0x0000000000000032L});
    public static final BitSet FOLLOW_191 = new BitSet(new long[]{0x0000000000E00002L});
    public static final BitSet FOLLOW_192 = new BitSet(new long[]{0x0000000000000832L,0x0000010000000000L});
    public static final BitSet FOLLOW_193 = new BitSet(new long[]{0x0000000000000002L,0x0000002000000000L});
    public static final BitSet FOLLOW_194 = new BitSet(new long[]{0x0000000080000002L,0x0000007000000000L});
    public static final BitSet FOLLOW_195 = new BitSet(new long[]{0x0000000080000832L,0x0000015000000000L});
    public static final BitSet FOLLOW_196 = new BitSet(new long[]{0x0000000080000002L,0x0000005000000000L});
    public static final BitSet FOLLOW_197 = new BitSet(new long[]{0xC1C0000040000042L,0x0000C0000000000FL});
    public static final BitSet FOLLOW_198 = new BitSet(new long[]{0xC1C0000040000002L,0x0000C0000000000FL});
    public static final BitSet FOLLOW_199 = new BitSet(new long[]{0xC1C0000048000002L,0x000080000000000FL});
    public static final BitSet FOLLOW_200 = new BitSet(new long[]{0xC1C0000000000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_201 = new BitSet(new long[]{0x0000014000004230L,0x0000080000000000L,0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_202 = new BitSet(new long[]{0x0080000000000002L,0x0060000001FFF000L});
    public static final BitSet FOLLOW_203 = new BitSet(new long[]{0x0000000000000002L,0x000C000000000000L});
    public static final BitSet FOLLOW_204 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0018000000000000L});
    public static final BitSet FOLLOW_205 = new BitSet(new long[]{0x0000000008000002L,0x0000000000000000L,0x0000000060000000L});
    public static final BitSet FOLLOW_206 = new BitSet(new long[]{0x0000001008000002L});

}
